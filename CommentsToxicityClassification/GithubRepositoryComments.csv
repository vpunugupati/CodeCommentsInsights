Id,Number,Category,Comment,Readability&Maintainability,Functionality,Design,Questions,Responses,NotUseful
655030369,2220,Issue,release_notes: Updated documentation to refer to `main` branch,,,,,,
645328258,2214,Issue,"This needs to exist in the GitHub API to be supported in Octokit, but I don't see it documented here: please bump this issue when you see the API is available",,,,,,
643395373,2212,Issue,closed here as i need for rest apis,,,,,,
643235967,2211,Issue,You need to specify a User-Agent header to interact with the GitHub API:,,,,,,
644067151,2211,Issue,"Hi It is Working with adding User-Agent.client.Headers.Add(""User-Agent"", ""Awesome-Octocat-App"");Thank you very much.",,,,,,
642926604,2208,Issue,"is there a public repository you can share that illustrates the problem? (or was showing the issue?)The first thing that comes to mind here is caching, with three potential ways to get this number: - `watchers_count` on the repository returned via the API could be cached for a period of time because of all the different places in the GitHub API where `repository` is used - enumerating the [List Watchers] API would require getting the latest details about each watcher, and thus is more likely to be correct (but slower) - but if the website is showing a different watchers count it could be computing this in a different way to the API",,,,,,
642930612,2208,Issue,"would work (if you provide a key/orgName in settings, and disable the auth). I'll try to get a simpler repro. The current state of that PR has both data points showing side by side in the details page for a given repository. I'll try to do a PR off of my PR so that you can just provide a key & orgName and not muck around with other stuff.I think I've ruled out caching as a consideration on my end because this is happening on startup of the app on first view (we retrieve the list of repositories and there's another ""detail"" page where I provide the results of getting watchers via the activity API). The summary page is returning Watcher.I'd expect GitHub caching wouldn't be relevant here. This is a tool to archive old repos, and some of these watchers haven't changed for years so I imagine would be showing up.Although...maybe it's *because* the repos in question are old that the WatcherCount property is smaller than I'd expect?",,,,,,
642932664,2208,Issue,"repro branch here: Requires you to input AccessToken and OrganizationName in appSettings or user secrets.In my case, the steps are:* Click  ""Sunsetting"" in the menu* A list of repos will load* Choose a repository to go to its details page* Note the item under the eye icon (from the Repository object) and the Watchers (from the activity API) are different. ![image]I can't understand if there's anything in particular about a given repo that causes this to be the returned number.One thought -- is there a difference between people who are subscribed vs auto-subscribed because they watch repositories by default in an org? If the default folks wouldn't count toward WatcherCount, we may be on to something.",,,,,,
642934512,2208,Issue,"What's wild about your repo is that the field we're supposed to be deprecating is correct when looking at it directly from the API ``:I was under the impression that we were standardizing on one value here, but the [example repo] in our docs makes me wonder if they're actually different underneath, and this is just some confusion between the API and the website itself.Also, the [List Watchers API] is actually described as `GET /repos/:owner/:repo/subscribers` and in your situation `` returns the 3 entities. So maybe `watchers_count` is actually the value that we're supposed to obsolete? I need to investigate some more because it's all rather fuzzy right now...",,,,,,
642935391,2208,Issue,So maybe watchers_count is actually the value that we're supposed to obsolete?I think you're on to something there. Mostly I'm relieved that it's at least stumped you temporarily too. üòÜ,,,,,,
642936063,2208,Issue,"What's wild about your repo is that the field we're supposed to be deprecating is correct when looking at it directly from the API Ah, to be clear, this repo isn't the one with the incorrect count. It's the one with the project that is utilizing Octokit. May be worth confirming [the repro steps against the branch I linked earlier]. (This is not urgent by the way. I appreciate you jumping on it so quickly but if you need to return to it later I understand.)",,,,,,
643010764,2208,Issue,"One other theory I'm going to follow up on but dropping here:This org is a private org and some people have since moved on. I wonder if it's possible that the watchers list contains people who no longer have access, and so the effective Watcher count is therefore smaller.",,,,,,
642600364,2207,Issue,"that stack trace doesn't seem to mention Octokit, and it looks like it's related to NLog trying to format a GUID found in some payload. We don't use NLog inside Octokit, so I'm not sure how to reproduce this or what the root cause is.",,,,,,
642609218,2207,Issue,"Yeah it was due to our logger which hides real exception.  The exception was actually not found. Does release api need to pass credentials?Octokit.NotFoundException: Not Found   at Octokit.Connection.HandleErrors(IResponse response) in /Users/shiftkey/src/octokit.net/Octokit/Http/Connection.cs:line 663   at Octokit.Connection.RunRequest(IRequest request, CancellationToken cancellationToken) in /Users/shiftkey/src/octokit.net/Octokit/Http/Connection.cs:line 642   at Octokit.Connection.Run[T](IRequest request, CancellationToken cancellationToken) in /Users/shiftkey/src/octokit.net/Octokit/Http/Connection.cs:line 626   at Octokit.ApiConnection.Post[T](Uri uri, Object data, String accepts, String contentType) in /Users/shiftkey/src/octokit.net/Octokit/Http/ApiConnection.cs:line 273",,,,,,
642611291,2207,Issue,"yes, releases need the `client.Credentials` to be set as [the documentation] indicates: Users with push access to the repository can create a release.",,,,,,
642612700,2207,Issue,Yeah it is working now. Thx a lot for helping me!,,,,,,
642292186,2205,Issue,"I don't see it listed on the [Issues API page], or as a [Preview API], so I think we're stuck for the moment.",,,,,,
642922550,2205,Issue,Thanks for providing those reference points üëç Feel free to close or label accordingly.,,,,,,
642923797,2205,Issue,"For the moment I'm going to close this out, but if this does appear as a preview API we can reopen it.",,,,,,
641600688,2203,Issue,Done:,,,,,,
640315031,2202,Issue,release_notes: Removed unused helper class `ConcurrentCache` previously marked as obsolete,,,,,,
639761082,2199,Issue,"This is not supported via the GitHub API, likely due to the potential for abuse.",,,,,,
640283449,2198,Issue,release_notes: Updated `xunit.runner.visualstudio` to latest version,,,,,,
639230264,2197,Issue,what is the process to get this reviewed?,,,,,,
639455442,2197,Issue,a bit of patience - aiming to throw some spare time on the weekend towards these side projects as Life‚Ñ¢ and Work‚Ñ¢ have been hectic this past week.,,,,,,
639879870,2197,Issue,Thbaks,,,,,,
640283506,2197,Issue,release_notes: Deserialize `requested_action` field on `check_run` events,,,,,,
637080623,2196,Issue,"thanks for the contribution. Given the detailed context behind it, it's gonna take me a few days to properly understand what we're trying to achieve here - I hope that's not a problem!",,,,,,
640283702,2196,Issue,release_notes: Add server time difference to `ApiInfo` API,,,,,,
636869502,2195,Issue,Is this just a missing feature (PR accepted?) or is it not there for a reason?Likely an oversight. I can't think of a reason for excluding it.,,,,,,
637448434,2195,Issue,No worries. Submitted a PR to add it in!,,,,,,
636482576,2194,Issue,this is a great spot - thanks for adding in that convention test. Gonna have a read over the changes and see if I have any suggestions to improve it.,,,,,,
640283623,2194,Issue,release_notes: `ChecksClient` constructor should take interface arguments,,,,,,
631539914,2190,Issue,does the API work as expected if you pass the owner and name for the private repository?,,,,,,
631540518,2190,Issue,"Unfortunately not, I have to say that the owner is an organization, don't know if it makes any difference",,,,,,
631541907,2190,Issue,There's this caveat about [this API] documented on GitHub: Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.Could that be relevant to what you're seeing?,,,,,,
631542544,2190,Issue,"Also note that tags may be listed in the Releases page for the repository, but they are not considered a release (and would be returned from the Releases API).",,,,,,
631544235,2190,Issue,"Well I can see that I have releases in the github page by using the same user, I will try with the tags api instead...",,,,,,
631545716,2190,Issue,"OPs, a separate tags api apparently does not exist in octokit, am I wrong?",,,,,,
631546154,2190,Issue,yes I'm wrong :),,,,,,
631547870,2190,Issue,"I can confirm, Tags works, ( and it is a good workaround for me ) for releases, I dont't really know if the problem is the caveat, should not because I can see on the page the releases, but I don't understand really.",,,,,,
631550837,2190,Issue,"For reference: I dont't really know if the problem is the caveat, should not because I can see on the page the releases, but I don't understand really.I believe this is a historical thing on the website because of this workflow: - someone pushes a tag to the repository, and now wants to create the corresponding release - they go to the releases tab, and see the new tag alongside the current release - they click the tag, fill in the additional details for the release, and publish  - the new release is now listed on the releases page, which links to the tag chosen by the userIt saved having to go somewhere else to do this, but does introduce the ""is a tag a release?"" source of confusion in the UI.Anyway, closing this out as resolved.",,,,,,
631559528,2190,Issue,Thanks!,,,,,,
627539634,2189,Issue,‚ô•Ô∏è,,,,,,
640283800,2189,Issue,release_notes: Publish to NuGet using GitHub Actions when tag pushed,,,,,,
640298335,2189,Issue,Yessss,,,,,,
632924713,2188,Issue,"Or if we should open an issue in the dotnet project (I really don't know why AllowRedirect is not supported by Blazor wasm) let's start from there, as I don't have much control over `HttpClientHandler` and how it can be used from Blazor.The relevant code is here:",,,,,,
639726077,2188,Issue,Exactly same bug here :-(,,,,,,
639736848,2188,Issue,It works on .net coreBut .net standard doesn't have SslProtocolsPlease help!,,,,,,
639752586,2188,Issue,I need more information to understand the problem you're seeing,,,,,,
639756536,2188,Issue,"When you try to authenticate Octokit in blazor, which runs on .net standard framework, you get the above error This page gives an answer It seems aws are also getting the same problem",,,,,,
639795225,2188,Issue,the only area I'm aware of where we enable these in the library is here:This is only enabled for `net46`:This shouldn't be enabled for .NET Standard as we don't include that `ifdef`.,,,,,,
640013074,2188,Issue,"I was playing with this error for few hours.Things I saw,- Create .net standard 2.0 project, refer octokit.net nuget and consume it -> WORKS  - Create .net standard 2.1 project (like Blazor wasm), refer octokit.net nuget, consume it with a .net core 3.1 app -> WORKS  - Create .net standard 2.1 project (like Blazor wasm), refer octokit.net nuget, consume it -> ERROR  - Clone this repo, Remove `AllowAutoRedirect = false` from HttpMessageHandlerFactory.cs, Consume it with a .net standard 2.1 project (like Blazor wasm)  -> Above error is gone, But It does not really Authenticate GitHubClient on             `Client = new GitHubClient(new ProductHeaderValue(""Product Name""))            {                Credentials = new Credentials(username, password)            };`So I get It's framework issues, I'm very thankful for helping us on these :-)",,,,,,
640019490,2188,Issue,It looks like Blazor Web Assembly doesn't have AllowAutoRedirect property because HttpClientHandler is implemented via JavaScript APIs. There is an issue with `SecurityProtocolType.Tls12`This guy has [Modified octokit.net to use with blazor]He changed `_http = new HttpClient(new RedirectHandler { InnerHandler = getHandler() });`toof `Http/HttpClientAdapter.cs`When I do that it still says `Octokit.AuthorizationException: Bad Credentials at Octokit.Connection.HandleErrors`Exactly same code runs well on .net core,,,,,,
640057674,2188,Issue,", I agree with your observation on why `AutoRedirect` does not work in Blazor. Also see [#16955]. Though this is marked as closed, you can see that there are still open comments about it. To workaround this, the best way is to remove the `AutoRedirect` property in the `HttpMessageHandlerFactory.cs` file and not setting it to True. For whatever reason, Blazor does not like we setting the value (even if it is the default value) to this property. Also, you can remove the default handler completely when creating HttpClient instance but this prevents additional code in the default handler which might work. I assume there must be a reason why Octokit prevents `AutoRedirect` in the implementation. It is better if someone can explain that so that you are not creating any other issue down the line by enabling it.As with the auth issue, I suppose it is because [Basic Auth is deprecated]. I have tried with my Personal Access Token and it is working for me. I used below syntax It might be worth retrying with a PAT after 2FA is enabled just to see if it is an issue with Basic Auth.",,,,,,
640059171,2188,Issue,"I assume there must be a reason why Octokit prevents `AutoRedirect` in the implementation. It is better if someone can explain that so that you are not creating any other issue down the line by enabling it. from memory this is still kept around due to behaviour around edge cases that have built up over the years:The [blame for this file] has more context and links to the relevant commits, and I think there were cases around us having to explicitly handle things better than the defaults on Windows (where this library originated) that may no longer be necessary.",,,,,,
640094036,2188,Issue,"### Everyone, thank you very much - Issue is fixed!Just like  said **I removed the line ` AllowAutoRedirect = false `** from HttpMessageHandlerFactory.cs  Then octokit didn't authenticated because, HTTPClient get redirected and doesn't return the correct result back when using **password** authentication.  But just like  said, **this doesn't occur in Personal Token Based Auth**. So using token instead of password allowed me to Authenticate without any error.   _p.s. I'll make this repo public as soon as our 'Account servers' are ready. So anyone could cope with this_  Again thanks for quick help!",,,,,,
621528814,2185,Issue,"When the new integration test is run locally it fails on this line when attempting to retrieve the master branch from the newly created repository:The error is: Octokit.ApiException : Git Repository is empty.In debugging I confirmed the repository is created. When I run `PullRequestsClientTests.CanCreate` it passes, so I am convinced I have done something wrong writing this new test. Any ideas?",,,,,,
627611683,2185,Issue,"I figured out what I was doing wrong.The tests for cards did not require auto-init, now they do.I also had to update the `NewProjectCard` object to use a `long` instead of `int` for the `ContentId` property, since PullRequest Id's are a `long` and not an `int` like Issues.Additionally, the helper method I was using was incorrect, since it only supported creating Issue cards, so another helper was introduced to keep the test styles consistent with the other tests.I have squashed my commits and pushed.",,,,,,
635395867,2185,Issue,!!!!! I just came here to make this change!!!! ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è,,,,,,
640283854,2185,Issue,release_notes: Add support for creating project cards from pull requests,,,,,,
621406309,2184,Issue,-BugBot can you share a full snippet of what you're trying to achieve?,,,,,,
621407427,2184,Issue,Is there some other permission they need to be able to do this? From [the docs]: Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._Same permission is required for assignees. Maybe your account needs that permission?,,,,,,
640283893,2183,Issue,release_notes: Update `Microsoft.NET.Test.Sdk` to latest version,,,,,,
619958823,2182,Issue,thanks for opening this up!Can we mark `SubscribersCount` as obsolete while we're making this change?,,,,,,
640284018,2182,Issue,release_notes: Add WatchersCount to Repository response model,,,,,,
619580834,2181,Issue,can you provide more information: - which repository are you testing? - what value did you expect to get?,,,,,,
619583668,2181,Issue,"I've used RepositoryClient from GitHubClient to get all repositories of a provided user (tested with ""unclebob"") and every result had subscribers count = 0. And if I'm not mistaken, subscribers count is basically a watchers count? If not, is it possible to get watchers count in Repository object? What I'm trying to accomplish is to get all the data about user repositories within one request and everything is there, except watchers count.",,,,,,
619591193,2181,Issue,"looking at an example from that user I no longer see `subscribers_count` in the underlying JSON:There was some API churn ages ago which lead to this duplication between ""subscribers"" (which we didn't have an equivalent in the UI) and ""watchers"" (which was there in the UI), but I suspect it's been cleaned up recently. I think you want `WatchersCount` in C# but I'll leave this open to verify and properly deprecate the fields if they're no longer sent by GitHub.",,,,,,
619591727,2181,Issue,"Yeah, exactly. But apart from marking SubscribersCount as deprecated, is there a chance to get WatchersCount property in the near future?",,,,,,
619622073,2181,Issue,I'd take a PR to add the property to [`Octokit/Models/Response/Repository.cs`] in the meantime.,,,,,,
619631770,2181,Issue,Done #2182,,,,,,
648264447,2180,Issue,Any update on this?,,,,,,
618396649,2179,Issue,"I don't believe this is currently available through the GitHub API.Generally these sorts of features are exposed as a [preview API] first, so until that is available there's not much we can do from the Octokit side.",,,,,,
613578856,2176,Issue,"Thanks for the feedback! I've adjusted accordingly. I also named it `CodesOfConductClient` instead of `CodeOfConductClient` (Code is singular instead of plural), since that's how GitHub officially refers it to:",,,,,,
614861119,2176,Issue,"I'm currently working on adding tests now, I'll submit once I have them all passing locally. üëç",,,,,,
612641615,2175,Issue,release_notes: fixed parsing of response headers in `GitHubClient.GetLastApiInfo()`,,,,,,
611097589,2173,Issue,"no, it's just under development: #2150Also, we had an earlier issue for this #1915",,,,,,
612540734,2171,Issue,thanks for opening this PR. We also have #2155 so I need to figure out how to reconcile both PRs.,,,,,,
612641323,2170,Issue,release_notes: Added `ReleaseEvent` payload,,,,,,
612641420,2169,Issue,release_notes: Updated GitHub Apps documentation to render emoji correctly,,,,,,
612641240,2168,Issue,release_notes: Updated `System.Reactive` dependency to `4.4.1`,,,,,,
612641177,2164,Issue,release_notes: replace `Task.Factory.StartNew` usage in tests with `Task.FromResult` to simplify test setup,,,,,,
605505629,2161,Issue,"thanks for the report. I've isolated this to how headers are returned when an unauthenticated request is made.This tests shows how the headers for rate-limiting information differ:Note the `Ratelimit` returned from the first command - the lower-case `l` here is why we are unable to parse the numbers from the header.As a workaround, I recommend setting the `Credentials` property on your `GitHubClient` to perform an authenticated request. This will also give you a larger number of API calls to work with - unauthenticated requests are limited to 60 requests per hour.I need to investigate the root cause of this on our end, and will close this out when it's been resolved.",,,,,,
605508673,2161,Issue,Ok. This seems like a bug in the API from GitHub...I currently use octokit library in This is currently just using the free unauthenticated API.Is it a good idea to include an authenticated call in an public application which is used by multiple people at the same time?How is the rate limit calculated? Is this 5000 per system/user or 5000 in total?An another request: if possible retarget .net framework 4.5.2 in octokit because this is missing from the latest?,,,,,,
605515188,2161,Issue,"How is the rate limit calculated? Is this 5000 per system/user or 5000 in total?Essentially 5000 per user, but [the documentation has more information about the specifics]. Is it a good idea to include an authenticated call in an public application which is used by multiple people at the same time?Yes. 60 requests/hour may not allow much usage before rate-limiting is enforced.I see you have a documented `--token` parameter for private repositories - if users are seeing themselves get rate-limited then they can add this to get the increased API request count (for public or private repositories). An another request: if possible retarget .net framework 4.5.2 in octokit because this is missing from the latest?This deprecation was flagged back in [`0.35`] in October last year because upstream dependencies had dropped these versions: As part of keeping up with current target frameworks in .NET, we will be deprecating `net45` and `netstandard1.1` targets in a future release. This update adds `net46` and `netstandard2.0` outputs which will become the new baseline, so please test them out in your projects and report any issues you encounter.In February (so 5ish months later) [`v0.41`] dropped the older versions: Octokit and Octokit.Reactive now have a minimum target of `net46` and `netstandard2.0` to keep up with the minimum supported versions of Reactive Extensions for .NET. `v0.40.0` is the last version that targets `net45` or `netstandard1.0`, but you will need to upgrade your projects to continue to get further updates and fixes.To continue to receive updates you will need to retarget `net46`. I'm not sure if there's a specific dependency that is blocking you from doing this upgrade, but I'd been falling behind keeping up with `System.Reactive` which forced me to plan for this deprecation.",,,,,,
601797802,2159,Issue,are you referring to [this announced feature]?Unless there is a [documented API] or a [preview API] underway then we are unable to supported it in the client API.,,,,,,
601887566,2159,Issue,"Thanks, I hope that feature comes early. :)",,,,,,
604152123,2158,Issue,release_notes: Tidy up route metadata attributes based on schema information,,,,,,
604151577,2157,Issue,release_notes: Tidy up route metadata attributes based on schema information.,,,,,,
600073123,2156,Issue,are either of you able to verify this PR fixes the problem for you? I'd love to be able to confirm this is good before publishing an update to everyone...,,,,,,
600171333,2156,Issue,"You'd also need access to our GitHub Enterprise server which might be difficult :)I added a comment about none vs null, I'm a bit slammed with meetings today (under Bay Area shelter in place order) so I'll try and check this as soon as I can.",,,,,,
600173762,2156,Issue,"aha yes, that's also helpful context because you might be working against an older version of the GitHub API depending on your version of GHE",,,,,,
600175728,2156,Issue,We keep it up to date specifically to avoid those kinds of problems.Fortunately (?) my next meeting just got cancelled so I've got an hour to play around with this.,,,,,,
600176872,2156,Issue,do you know which version of GHE you are working against? This will help me to confirm where it was introduced and whether it's been fixed since.,,,,,,
600178980,2156,Issue,"2.20.2 as of the middle of last week, previously we were on 2.19.5. I don't know if the upgrade caused this issue, or someone shuffling some teams around and suddenly making them nested was what surfaced it. The original bug report is from December.",,,,,,
600180491,2156,Issue,I can confirm that we no longer see the error from repos with nested teams. I appreciate the hustle!Do you have an ETA on when this might be available as a new version? I can just re-publish the beta package to our internal feed as a temporary workaround if it's not today or tomorrow.,,,,,,
600219951,2156,Issue,"Thanks for confirming .  The original bug report is from December.Yeah, I suspect that one was also from GitHub Enterprise but I forgot to ask at the time. Do you have an ETA on when this might be available as a new version? Aiming for tonight once I've cleared out some other work.",,,,,,
600220771,2156,Issue,release_notes: Fix for deserializing issue when parent team has `null` set for `Permission` in some GitHub Enterprise environments.,,,,,,
600224248,2156,Issue,the fix has been released  and is being indexed on NuGet as we speak...,,,,,,
600226916,2156,Issue,I just updated my local copy to 0.45.0 and can confirm it is still good. Rolling it out to our internal services now. I really appreciate the quick turnaround on this once we had it isolated üëç,,,,,,
600310894,2155,Issue,"Hello , thanks for the suggestions.",,,,,,
604151864,2154,Issue,release_notes: Clean up preview accept headers which are no longer documented or have graduated to production.,,,,,,
604153740,2154,Issue,"advisories: This release stops sending preview accept headers which are no longer mentioned in the developer documentation. These features should be working as expected if the service no longer looks for the preview header, but if you spot a situation where the code is not returning the expected response as it was in previous releases please open an issue so we can investigate.",,,,,,
599218441,2153,Issue,Thank you üëç,,,,,,
599228268,2153,Issue,release_notes: updated `client.PullRequest.ReviewRequest` to reflect what is currently supported,,,,,,
599230198,2153,Issue,"advisories: due to the Review Request API graduating from preview there are some breaking changes that will impact callers: - `client.PullRequest.ReviewRequest.GetAll()` has been removed in favour of `client.PullRequest.ReviewRequest.Get()` as there is no pagination support for the API - `client.PullRequest.ReviewRequest.Get()` now returns a `RequestedReviews` object that contains users and teams - `PullRequestReviewRequest` now accepts teams, and helper functions are added to make it clear whether a request review is for users or teamsExample code:",,,,,,
599228108,2152,Issue,release_notes: mark `ReleasesClientTests.TheCreateReleasesMethod` tests as integration,,,,,,
608015790,2151,Issue,I just rebased onto master. Do you think you'll get some time to review this pull request sooner or later?,,,,,,
612641764,2151,Issue,release_notes: added `GetRawContent` and `GetRawContentByRef` APIs to Repository Contents client for cases where performance is desirable,,,,,,
612666894,2151,Issue,Thanks for merging and releasing version 0.47.0! üéâ,,,,,,
597340062,2150,Issue,Where are tests for ObservableUsersClient ? Cant' seem to find them :(,,,,,,
597598379,2150,Issue,Where are tests for ObservableUsersClient ? Cant' seem to find them :( it may be that this file doesn't exist - feel free to take a shot at creating it using the others as a reference.,,,,,,
597898623,2150,Issue,"I created ObservableUsersClientTests.cs but Test Explorer or CI Build doesn't seem to ""see"" it.Please advise. What am i missing?",,,,,,
598092750,2150,Issue,"I created ObservableUsersClientTests.cs but Test Explorer or CI Build doesn't seem to ""see"" it. Please advise. What am i missing?Hmm, maybe the reference is missing in project file. I will check in the evening.",,,,,,
598386883,2150,Issue,"As none of project files has file list, this doesn't seems to be the case.So i have no clue. Please help.",,,,,,
600562808,2150,Issue,Now what happens ? :),,,,,,
612543241,2150,Issue,"Now what happens ? :)I need to find time to review, which I'm trying to carve out this long weekend...",,,,,,
651943162,2149,Issue,"Hi, I have pushed PR #2217 which implements this functionality. Please let me know if you have any feedback.Thank you",,,,,,
600258674,2138,Issue,This is no longer a preview feature,,,,,,
611766234,2135,Issue,"Hi, I'd be happy in working on adding Code of Conduct support. üòÑ",,,,,,
609470062,2132,Issue,Didn't realize that  was working on this.  I just completed this task.,,,,,,
599228036,2131,Issue,release_notes: move `GitHubAppInstallationsClient` into root namespace,,,,,,
599227938,2130,Issue,release_notes: removed obsolete code for `CheckSuitesClient`,,,,,,
596095265,2128,Issue,release_notes: Added preview header for OAuth Applications API changes that were overlooked in #2116  in readiness for eventual deprecation,,,,,,
599227264,2124,Issue,release_notes: add metadata to each client to assist with auditing API coverage,,,,,,
599227445,2123,Issue,release_notes: added `RequestedTeams` property to `PullRequest` response model,,,,,,
594422242,2122,Issue,1,,,,,,
594428903,2122,Issue,1,,,,,,
594438045,2122,Issue,1,,,,,,
594444039,2122,Issue,1,,,,,,
594461771,2122,Issue,1,,,,,,
594481888,2122,Issue,1,,,,,,
594981451,2122,Issue,"Also, Review Requests entity contains similar teams property but Octokit.IPullRequestReviewRequestsClient gets the list of requested users only without teamsI think this the APIs as currently implemented are not designed to match the response returned from the GitHub API:I'm going to drop the `up-for-grabs` here as there's a bit we need to do here: - confirm the current client doesn't deserialize correctly - add unit and integration tests for the correct API - figure out the right implementation for receiving users and teams - figure out how to gracefully deprecate the current API",,,,,,
593951782,2121,Issue,"advisories: The `UnixTimestampExtensions.ToUnixTime` methods are marked obsolete because there are equivalent APIs available in .NET Framework 4.6. As these are also intended for internal usage in .NET and should not be imported into the library code, these will be removed in a later update.",,,,,,
593954980,2121,Issue,release_notes: Replaced old `UnixTimestampExtensions.ToUnixTime` extension methods with inbuild equivalents now that we target .NET Framework 4.6,,,,,,
593892044,2120,Issue,"Installing the .net core 3.1 SDK fixed this, but your code that attempts to install dotnet under octokit won't work without setting DOTNET_ROOT. In PowerShell you probably also need to update $env:DOTNET_ROOT as environment variables are only loaded on new powershell session",,,,,,
594488041,2120,Issue,thanks for the heads up.I'm not too familiar with how to properly configure PowerShell for working with .NET Core but I'm going to leave this open to remind myself to look at how setup docs and see if we can improve them at all.,,,,,,
593897452,2119,Issue,duplicate of #1979 This is now appears to be resolved.  Thanks!!!,,,,,,
593673161,2118,Issue,release_notes: Improvement to AuthorizationClient tests around internal behaviour,,,,,,
593664162,2117,Issue,Is there a documented API for Issue Transfers? I don't see it mentioned in  or as a preview API  ?,,,,,,
593720848,2117,Issue,I haven't been able to find it either. Which I guess explains why it doesn't exist in the library itself.,,,,,,
593903020,2117,Issue,"For the moment I'm going to close this out as we're limited by what the GitHub API can suport.If this does appear as a preview API in the future, we can revisit it then.",,,,,,
593562780,2116,Issue,Thanks for this !Feel free to open other issues or PRs if you wanted to improve this area.,,,,,,
593672928,2116,Issue,release_notes: In preparation for the [Deprecating OAuth Application API] brownout and eventual removal on July 1 2020 we have updated the client internals to ensure we are calling the supported endpoint well in advance,,,,,,
591204373,2114,Issue,"thanks for opening this up - we've got decent coverage here already but I added a commit to update a test to use one of the new enums, just to be sure. All working good here!",,,,,,
591205003,2114,Issue,release_notes: Added :rocket: and :eyes: emoji to `Reaction` type,,,,,,
591000202,2112,Issue,"Currently there are three areas where timeouts can be changed: - `GitHubClient.SetRequestTimeout` to set the timeout globally  - `IRequest.Timeout` is set per-request, and the constructor for `Request` sets a default timeout of 100 seconds.  - `ReleaseAssetUpload.Timeout` has a nullable `Timespan?` property that can be used to set a higher time.One of the known issues here is where a global and per-request timeout are specified, **the lower value is the winner**. This is likely a source of confusion for users who set a higher value globally but can't access the inner default 100s on `Request`.",,,,,,
591051071,2112,Issue,"Lets double check the purpose of every timeout field we have:1) `HttpClient.Timeout` in the field `HttpClientAdapter._http`- Scope: per-request timeout- In use by: `HttpClient` internaly- How can be changed by library user: via `SetRequestTimeout()` method- How can be read for diagnostics: not implemented2) `IRequest.Timeout` (100 seconds)- Scope: global timeout- In use by: `HttpClientAdapter.GetCancellationTokenForRequest()` method only- How can be changed by library user: not implemented- But: Implemented for a few methods like `GetArchive(..., timeout)`- How can be read for diagnostics: not implemented",,,,,,
591053018,2112,Issue,isn't 1) the global timeout and 2) the per-request timeout?,,,,,,
591055948,2112,Issue,To get a right answer we have to define what the global timeout is. Is pagination included in global scope?,,,,,,
591059000,2112,Issue,"According to docs.microsoft.com both are per-request. The difference is that the first will be applied to all requests and the send one to individual request. But the Octokit passes individual 100s timeout to all requests, so the Timeout property one does not matter, still not less than 100s.I confused the definition of ""global"". It means system-wide, I thought operation-wide",,,,,,
591062488,2112,Issue,"To get a right answer we have to define what the global timeout is.I don't quite understand, but I want to focus on what Octokit **should** be doing, rather than what it's currently doing.I'm considering `HttpClient.Timeout` to be a global setting based on this sentence from [the docs] (emphasis mine). _The same timeout will apply for **all requests** using this HttpClient instance._ Is pagination included in global scope?We can talk about pagination, but I think it's just a different ""per-request"" situation. A request gets completed, it tries to follow the pagination headers, and if they are found it'll create a new request.",,,,,,
591068520,2112,Issue,"I see, so the picture is that we have no general approach to influence individual per-request timeout which is defined in the field of internal class `Request.Timeout`. There are a few exposed API method overloads which includes ""timeout"" parameter (like `GetArchive`), but that's all we have for now.",,,,,,
591071283,2112,Issue,"correct - at the time we didn't want to make users really think about that, which is why we provided those specific overloads as well as the global `GitHubClient.SetRequestTimeout`.",,,,,,
591087117,2112,Issue,"share some code samples where timeouts matterConsider this scenario: We handle transient errors using a custom `HttpClientHandler`. In that case ""individual per-request"" timeout includes retry attempts. It is  In order to keep a tight control over timeouts we have to distinguish actual per-request timeout and `CancellationToken `timeout that is passed to `HttpClient.SendAsync()` which is span across all retries. But the scenario is impossible to implement still the `CancellationToken` timeout is predefined and always 100 seconds.",,,,,,
621166020,2112,Issue,"`ReleaseAssetUpload.Timeout` has a nullable `Timespan?` property that can be used to set a higher time.Though I think this is implied, just for clarity (as it surprised me): if you leave this as `null` then the default of 100 seconds is applied. I think I expected no per-request timeout to be set in this case, and that it would just be ended by the 'global' timeout set on `HttpClient`. As it is, you need to remember to set a larger timeout globally *and* on `ReleaseAssetUpload.Timeout`.",,,,,,
638756315,2112,Issue,I'm getting 100s timeouts on downloading large assets using Connection.GetGitHubClient.SetRequestTimeout is set at 600 seconds.  I've tried passing a CancellationToken with a larger timeout too.,,,,,,
591420863,2110,Issue,release_notes: Added support for handling fully qualified references in `Git.References` endpoints,,,,,,
591208950,2109,Issue,release_notes: Moved `dotnet-format` out to tool manifest file,,,,,,
590575316,2105,Issue,release_notes:  `RepositoryContentsClient.GetAllContentsByRef` handles special case where you want `/` as well as a different branch.,,,,,,
587473376,2103,Issue,-rcocks can you share the relevant JSON you are receiving from curl? Maybe we're not deserializing correctly due to some change from the API response?,,,,,,
587495641,2103,Issue,"My earlier description was not fully accurate, I was comparing octokit with an api request to the individual PR endpoint. However, the `/pulls` list endpoint does not list changed files at all.I'm running the following linqpad script to reproduce this issue:(With octokit added through nuget and namespaced in the linqpad properties).When queried as a batch, the ChangedFiles is zero, but the individual request matches the HTTP api which I was using to check against earlier.",,,,,,
587501646,2103,Issue,"-rcocks this is a limitation of how we deserialize responses - we use the same type for `GetAllForRepository` and `Get`, but `GetAllForRepository` doesn't receive the same information as `Get`.The fix for this would be to use a different response type, but I'd like to figure out how to do this across the entire codebase, rather than spot fixes like this.",,,,,,
587507480,2103,Issue,"Thank you for the quick response, I now understand the cause and limitation.",,,,,,
588098629,2102,Issue,", could you please take a look at this PR?I have noticed that some test coverage checks failed due to new model that I have introduced for the project cards. Since it is just API models I am not sure what tests we need here so we should be okay with these changes.If there is anything that should be improved, please let me know",,,,,,
588257150,2102,Issue,"I have noticed that some test coverage checks failed due to new model that I have introduced for the project cards. Since it is just API models I am not sure what tests we need here so we should be okay with these changes.This is fine. I think I need to tweak the Codecov settings to focus on certain namespaces over others. I am not sure why some methods in `IssueClient` used `IssueEvent` but some methods used `EventInfo`. Based on API, all methods in `IssueClient` should use `IssueEvent`.I am not sure about this either, and need to check the history to understand why these are different.",,,,,,
588641420,2102,Issue,"I am not sure about this either, and need to check the history to understand why these are different. ,Unfortunately, nothing is in history. It was [introduced] with the first commit when `IssueEventClient` was implemented.I believe that my change is safe enough because:1) `EventInfo` model:2) `IssueEvent` model:As you can see, `IssueEvent` contains all fields that `EventInfo` has.But, also, it contains the following additional fields (which exist only for events that come with issues) :1) `public string CommitUrl { get; protected set; }`2) `public Issue Issue { get; protected set; }`So we just extend model.I have changed `EventInfo`-> `IssueEvent` for the method `GetAllForIssue`. [Based on GitHub API], this method should return `Issue` field so we should use `IssueEvent` model here.",,,,,,
590526828,2102,Issue,release_notes: added `ProjectCard` property to `IssueEvent` response model,,,,,,
590526477,2101,Issue,release_notes:  Added new states to the `EventInfoState` enum,,,,,,
591476057,2101,Issue,"loading of events for some issues fail because of unrecognized eventsIs there something that needs to be done to make sure this doesn't happen in the future, or does [`StringEnum`] already solve this, but wasn't used properly?",,,,,,
591479576,2101,Issue,"or does [`StringEnum`] already solve this, but wasn't used properly? I suspect it was this, but -lobanov can provide more context",,,,,,
591480695,2101,Issue,"Yeah, since the doc even [calls out `EventInfoState`] explicitly as a good candidate for using `TryParse`, I think so as well.It's great to keep enum values up-to-date though üòÅüëç",,,,,,
591487672,2101,Issue,",  The API response is parsed correctly to `StringEnum` even for unknown states and I believe that TryParse is not needed here.But StringEnum has the following properties:1) `StringValue` if we use this field, we can work even with unknown states and we will just compare them as strings (that is not very convenient)2) `Value` that returns `TEnum` value. So if we try to get value from `StringEnum.Value` and `StringEnum` contains unknown value, exception will be raised.Ideally, we should keep `EventInfoState` enum up-to-date with all new values but, actually, GitHub API docs are very outdated and it doesn't contain description of those fields that I have added in this PR. I have found these values by practice way - just run parsing events for all issues in my repo but, of course, it could be not full list.",,,,,,
591504960,2101,Issue,"I know the properties, [I designed the type] üòâ  I believe that TryParse is not needed here.You basically have three options for consuming a `StringEnum`:1. Use `StringValue` which is always safe, but as you noted, it's inconvenient.1. Use `Value` which is unsafe (throws) for unknown values.1. Use `TryParse(out EventInfoState state)`, which gives you back an enum value for known values, but still allows you to handle unknown values gracefully.Personally, and especially for `EventInfoState`, I would always use `TryParse` to make sure my code doesn't start blowing up just because GitHub added a new event type üòÑ  GitHub API docs are very outdated and it doesn't contain description of those fields that I have added in this PR. I have found these values by practice way - just run parsing events for all issues in my repo but, of course, it could be not full list.Exactly, that's why `StringEnum.TryParse` exist in the first place. From [the docs]: Since new functionality introduced on GitHub.com frequently leads to additional event types being received, Octokit was constantly playing catchup with these Enum values. Now, with `StringEnum` we have a solution to keep your code functioning, without needing to wait for a new Octokit release!",,,,,,
589006853,2100,Issue,"thanks for your interest!Currently my bandwidth for addressing changes to the APIs is limited, so I can't commit to a specific timeline, but I'm also happy to make time for reviewing contributions to keep things moving.Can you refresh my memory on the sample that you would like to work? That'll help me write up what changes need to be made to support this event.",,,,,,
589183647,2100,Issue,"Thanks for your reply!I forked the repo and am in the middle of adding some logic for this, by changing `IRepositoriesClient`, `RepositoriesClient`, `IApiConnection` and `ApiConnection`. Once I complete my first draft, I'll send a PR for review.",,,,,,
590009790,2099,Issue,"Hey ,You need to interrogate the events for the issue in question looking for `Labeled` events. I've put together a small LINQPad script below:I hope that helps!",,,,,,
590304823,2099,Issue,excellent!,,,,,,
586342141,2098,Issue,"thanks for the report. I can't spot anything obvious about how to fix this with Octokit so I have some initial questions to help isolate where the problem lies. Through much experimentation we have found that uninstalling the GitHub App and reinstalling it does temporarily make the private repos visible; but again, only temporarily.This makes me wonder if there's a bug in GHES about GitHub Apps and repository visibility, but the fact that it works initially and then stops working is fascinating. Your version `2.19.6` is only from last month, so I don't think an upgrade here will fix it. I checked the release notes for [`2.19.7`] and [`2.20.0`] and couldn't see anything obvious to indicate that this has been resolved. This might require your administrators who manage the GHES installation to contact [GitHub Enterprise Support] and work with them to properly investigate the problem.What happens if you use a personal access token instead - does that work as expected?",,,,,,
586354224,2098,Issue,"Thanks for your quick reply  .  Given that the GitHub app works as expected initially, it will take some time to build experimental code using a personal access token and collect the results after a reasonable amount of time (>20 hr) has lapsed.  We will build such an experiment and report back after we know.",,,,,,
586501886,2098,Issue,"Seems a personal access token configured for repo read doesn't list private repos.  [Here's the simplified example] created to experiment with the requested test.Note that the ""GitHub_app"" branch of that repo is a stripped down version of what our production app is doing.",,,,,,
586593781,2098,Issue,"Seems a personal access token configured for repo read doesn't list private repos.I don't understand what ""repo read"" means here. I should have been clearer with what scopes the token needed - have you set the `repo` scope based on [these docs]?",,,,,,
586740490,2098,Issue,"Giving full repo access to a personal token does, indeed, give visibility to my private GHE repo.  I'll check this again in a few hours, then again tomorrow.Note that our use case is for our users to give our GitHub app read-only access.  It may be against policy to require them to provide a personal access token with full access.",,,,,,
586755329,2098,Issue,Note that our use case is for our users to give our GitHub app read-only access. It may be against policy to require them to provide a personal access token with full access.Totally fine - just wanted to confirm this visibility issue is isolated to GitHub Apps.,,,,,,
586974305,2098,Issue,"Update:  private repos are still included when searching with the personal access token. In most observations, the private repos would have been skipped by now when authenticating as the GitHub app.  I will continue to monitor this as we've not yet reached the maximum failure duration.",,,,,,
587041692,2098,Issue,"Listings still include private repos after 20 hours.  At this point, I think it is safe to conclude that the problem with private repo visibility is isolated to GitHub apps.",,,,,,
587528516,2098,Issue,I have contacted my employer's internal GitHub Enterprise administrative team asking them to open an issue with GitHub Enterprise Support.,,,,,,
590335905,2098,Issue,"I have contacted my employer's internal GitHub Enterprise administrative team asking them to open an issue with GitHub Enterprise Support.Excellent, that's the best option right now. I'm afraid there's not much I can do from the client side to resolve this, so I'm going to close this out as an Enterprise-specific issue to bring the issue tracker under control.Feel free to update us with any additional information if it'll help.",,,,,,
585769166,2097,Issue,"this is something outside of Octokit itself, but you need to configure your app to trust a self-signed certificate when it encounters it by adding this code: This is not recommended for production usage, but should help with your testing.",,,,,,
585770150,2097,Issue,Most client apis support such configuration on their level. Also many organizations use untrusted certificates in their production. You should consider supporting this configuration.,,,,,,
585770858,2097,Issue,"Certificate verification is not controlled by Octokit, and I don't see the value of duplicating APIs that exist in the .NET Framework and introducing potential confusion when they are both used.",,,,,,
585772962,2097,Issue,I'll just add that trusting a single certificate is very different approach than trusting all.,,,,,,
590525502,2096,Issue,release_notes: Updated Cake.Frosting tooling to `v0.37`,,,,,,
590008874,2095,Issue,"I just downloaded LINQPad6 and it only include Windows binaries by the looks of things... üò¢ And it's built against `Microsoft.WindowsDesktop.App`... The framework 'Microsoft.WindowsDesktop.App', version '3.0.0' was not found.",,,,,,
590080622,2095,Issue,thanks for digging into that. Gonna close this out in that case.,,,,,,
583927578,2092,Issue,release_notes: Change TimelineEventInfo.Id from `int` to `long` to address deserialization issue,,,,,,
583927727,2091,Issue,release_notes: encodes offset part of `DateTimeOffset` when used in Search APIs,,,,,,
583866551,2090,Issue,release_notes: added `IsTemplate` field to `Repository` response model returned from API,,,,,,
583867269,2089,Issue,release_notes: upgraded project tooling to .NET Core 3.1,,,,,,
583858677,2088,Issue,release_notes: updated Codecov to version 1.10.0,,,,,,
582940127,2085,Issue,release_notes: formatting code is now opt-in when running build scripts locally,,,,,,
583858947,2084,Issue,release_notes: Search Issues endpoint to does not handles labels containing spaces correctly,,,,,,
590358705,2082,Issue,"thanks for opening this up, and apologies for the delay in looking it over. Here's some quick thoughts: I haven't spent any time whatsoever on documentation - I'll clean that type of stuff up once I get some confirmation that we're past the ""major changes required"" stage.:+1:  - if you're feeling like this is too much to tackle in one PR, feel free to focus on a subset of this so we can review, land and publish it sooner. Otherwise happy to proceed as-is. There are some tests missing on the Observable side; I'll add those later.:+1:   I haven't really tested this implementation live against the API in anger yet. I see that there are integration tests, but I'm not sure how you'd suggest we approach those.I think initially focusing on tests against the read API (so we're not creating things and potentially triggering abuse mechanisms) would be a good start - this will help confirm we're getting information from the API and it's being deserialized correctly. Then we can expand things.    There are now 3 different types of Token (AccessToken, RunnerRegistrationToken, and RunnerRemoveToken). This doesn't seem great, since they're all the same. I would have created a generic Token class, but I wasn't sure how the project handles changes to existing APIs (AccessToken already existed). Thoughts?I'd be hesitant to merge these unless we're very confident they'll stay the same. Looking at `AccessToken` for example, it's actually much more than just those two values which aren't deserialized from the API:I'd prefer to enhance that with the additional fields in a follow-up PR. With these new `RunnerRegistrationToken` and `RunnerRemoveToken` types, I think it's fine to leave them as-is - who knows how the API might evolve?  I added some missing fields to CheckSuite and updated the tests.:+1: I've skimmed the current code and it all looks good from a code organization perspective (CI is also happy, which is a great sign). Let me know if there's any other questions, otherwise I'm :+1: to proceeding!",,,,,,
590945373,2082,Issue,"Hello!Unfortunately, a series of events in my life have made it unlikely that I will be able to work on this for the foreseeable future. I hate to dump unfinished code in the project's lap like this, but I can't really change the situation. Sorry about that.I'm hoping that this starting point will be enough for someone to get this over the finish line. I can probably respond to some questions here and there, if that is of any use at all. I'm hoping that I'll be able to contribute to the project again in the future, once my situation again allows for it.",,,,,,
590973834,2082,Issue,"no problem, and totally understandable.Gonna close this out as we have the original issue #2078 to discuss it further if anyone else is interested.",,,,,,
581957776,2081,Issue,"I know what this is, and it's not something related to this commit.Need to investigate, repro, and put it in front of the right contributors.",,,,,,
581685821,2080,Issue,"The client-side logic should reflect this in some way so that new states don't break integrators systems.Yep, for states that we don't know they'll fallback to `null` until we add them.",,,,,,
581686215,2080,Issue,"Yep, for states that we don't know they'll fallback to `null` until we add them.Good to know! Apologies for my wrong assumption, I am not accustomed to the codebase üòÖ",,,,,,
581686460,2080,Issue,no problem - totally understandable!,,,,,,
581686877,2080,Issue,release_notes: Add `CheckConclusion.Stale` value to `Conclusion` property for `CheckSuite` and `CheckRun`,,,,,,
580052202,2078,Issue,"anyone already working on adding this API?Not that I'm aware of. Am I misguided in thinking that developing this on a mac would be straightforward? My main concern would be that I would get 90% of the way through the implementation and then not be able to debug some test failure that I couldn't run, and the effort would stall out.We're on .NET Core these days and I've been able to to work with the solution in VSCode on Linux (I'll drop to the command line mostly to run tests) but there's a bunch of patterns and conventions with how things are organized that means it should be easy to follow/borrow/steal from existing components in the library. Would anyone be able to provide feedback during the implementation process if I have questions, etc.?I'm more than happy to help with reviewing.",,,,,,
580418951,2078,Issue,I'll take a pass at it and see how it goes. Thanks!,,,,,,
582212626,2078,Issue,"Okay I have a first pass at the entire API. I am *definitely* going to need a lot of feedback, both because I am an F# programmer and this is my first *real* C# development, and also because I don't really know the preferred idioms for this project (although I have copied a ton!).I'm going to try to clean things up a little and submit a WIP PR to provide an opportunity for directional feedback. Gonna try for tomorrow. ü§ûüèª",,,,,,
593141257,2078,Issue,"Hello,is it still possible to implement this ? Or is anybody already working on this?If i understand correctly , it is necessary to implement all of those 6 endpoints ?",,,,,,
579413696,2077,Issue,"Thanks for the contribution! Additionally, do you have any plans to release another version soon? In addition to this issue, I would love to have access to the organization membership methods that were added two commits after v0.36.0. Thanks!This is on my list to do sometime in the next couple weeks - I just need a reliable working environment to publish releases and get the release notes written.",,,,,,
581614945,2077,Issue,release_notes: add `CheckConclusion.Skipped` value to `Conclusion` property for `CheckSuite` and `CheckRun`,,,,,,
581615307,2074,Issue,release_notes: Switch over to `Microsoft.SourceLink.GitHub` for embeddeding GitHub URLs into assemblies,,,,,,
581615488,2073,Issue,release_notes: cleanup Travis features of build scripts,,,,,,
581615646,2072,Issue,release_notes: cleanup `CoreOnly` usage in project files,,,,,,
583407181,2069,Issue,"This isn't a Windows-specific issue, and I've isolated it to a combination of .NET Core 3.1 and Sourcelink not working together.Repo: Writeup and discussion: Closing this out for now because it's not worth also tracking here.",,,,,,
581616209,2067,Issue,release_notes: drop Travis CI for building pull requests,,,,,,
581616352,2066,Issue,release_notes: enable GitHub Actions for building and testing pull requests,,,,,,
581616604,2065,Issue,release_notes: upgraded SourceLink and GitVersion tools,,,,,,
581616953,2064,Issue,release_notes: add `Microsoft.NETFramework.ReferenceAssemblies` to allow building projects properly on platforms that only have .NET Core installed,,,,,,
581617263,2063,Issue,release_notes: address NuGet warning about deprecated `PackageIconUrl` value,,,,,,
577803713,2062,Issue,thanks for the speedy PR! We've enabled Dependabot on this repository which runs weekly and should upgrade these dependencies anyway. If a future update gets stuck for something I'm happy to be the first to check at it.If there's a path forward for us that might make your life easier let me know and I can revisit how we co-ordinate all the tasks that this project needs.,,,,,,
577811316,2062,Issue,"Cool,  0.37.0 isn't that far away,  then we'll check if that one gets auto updated.",,,,,,
581627312,2062,Issue,release_notes: update build scripts to Cake 0.36,,,,,,
583407924,2062,Issue,I found the problem with why these weren't updating - Dependabot config was only looking at the main projects - and now this is configured and updating the `build/build.csproj` dependencies automatically - #2086 #2087 #2088,,,,,,
583442817,2062,Issue,"cool, we'll release Cake.Frosting 0.37.0 hopefully this weekend, so then we'll see if it gets picked up.",,,,,,
584136538,2062,Issue,[Cake.Frosting/0.37.0] is now on NuGet so hopefully that gets detected.,,,,,,
576054020,2061,Issue,"the ""Not Found"" error is being returned because the GitHub API returned a 404, which generally occurs when it can't find a repository.There's some extra things that you should check that might be responsible for the failure: - repository - ensure that the repository exists and the user has permissions to access it - authentication - issue creation requires the client to have a token set, but it's not clear from the example that you are doing that - token scope - if you are assigning a token to the `GitHubClient`, ensure that it has the right permissions (`public_repo` scope is needed if the repository is public, `repo` if it's a private repo)",,,,,,
576054135,2061,Issue,Oh didn't see that with the authentication and token scope.Let me try that and report back the results.,,,,,,
576055622,2061,Issue,And it works! Thank you!Closing,,,,,,
572142921,2060,Issue,"(the code coverage reduction is a little disconcerting, given that this was all 1:1 type/name changes)",,,,,,
576056659,2060,Issue,"(the code coverage reduction is a little disconcerting, given that this was all 1:1 type/name changes)Yeah, I had a poke at the places it say were regressed but I can't spot anything I should be worried about ü§∑‚Äç‚ôÇ",,,,,,
581628523,2060,Issue,release_notes: changed `IssueEvent.Id` from `int` to `long` to address deserialization issue,,,,,,
572772115,2059,Issue,"Octokit is just a wrapper of the GitHub API, to use the GitHub API you need to provide your own tokens, so that would be the case for octokit, you could make another application that does get the configuration locally.",,,,,,
576056244,2059,Issue,"I would like to leverage the existing private/public key that developers have set up for git auth to use with octokit, and I would like to avoid having to ask every single user to create a personal access token for accessing _GitHub_ (explaining the difference between git vs. GitHub to several hundred users is not something I have any desire to do).SSH authentication is not supported in Octokit because we are limited by what the GitHub API supports for authentication. The only supported methods are Basic Authentication (discouraged for security reasons, and some APIs will reject basic authentication), and Tokens (either Personal Access Token or OAuth apps).If you're wanting to make API calls on behalf of a user, I'd recommend creating an OAuth app for your organization as it avoids the need for the user to create a PAT, defers authenticating the user to GitHub, and users can see and revoke the permission in the future.But it sounds like you want this to work on the user's local machine, which is a different workflow that doesn't work best with OAuth.",,,,,,
581628798,2057,Issue,release_notes: update `GitHubJwt` to version `0.0.4`,,,,,,
576057269,2056,Issue,this sounds like we should be either encoding hereOr more likely inside `DateRange` itself:Marking this one as Up for Grabs because I think once we confirm the encoding change this is an easy fix to verify.,,,,,,
576057442,2055,Issue,rebase,,,,,,
577817912,2055,Issue,rebase,,,,,,
590525318,2055,Issue,"advisories: Octokit now targets `net46` and `netstandard2.0` to keep up with the minimum supported versions of Reactive Extensions for .NET. `v0.40.0` is the last version that supports `net45` or `netstandard1.0`, but you will need to upgrade your projects to continue to get further updates and fixes.",,,,,,
590526209,2055,Issue,release_notes: Upgraded Octokit.Reactive to target `System.Reactive` `v4.3.2`,,,,,,
578389033,2054,Issue,Hi  !Any updates on this?Looks like I'm having the same issue.,,,,,,
590383565,2054,Issue,"I can't take this PR in in it's current form because it's not clear to me what we're trying to achieve here.  * The request timeout is hard-coded inside Request class constructor (TimeSpan.FromSeconds(100))This was chosen as it matches the default value for [`HttpClient.Timeout`]. * GitHubClient.SetRequestTimeout() method does not change the request timeout as expected: hard-coded Request.Timeout is applied instead.This is the bit I'd like to understand more about. Inside Octokit we use the request timeout to create a cancellation token (or combine it with an existing cancellation token):This is the recommended approach to differentiate between global and per-request timeouts mentioned in the documentation link above: You may also set different timeouts for individual requests using a `CancellationTokenSource` on a task. **Note that only the shorter of the two timeouts will apply**.What are we trying to do here? I don't believe plumbing a new property all the way through the internals is the best approach here, and will potentially confuse callers. * GitHubClient does not provide an ability to get/read an effective request timeoutIt's not clear to me the value of this, and as mentioned in the previous point ""effective"" here requires a better understanding about what the goals or issues are.",,,,,,
590952428,2054,Issue,", The mentioned statement ""Note that only the shorter of the two timeouts will apply."" is true. In the sample below the shorter is hardcoded in the Request class constructor.The code looks like the timeout is 3 minutes. But the timeout is 100 seconds instead. It is a bug.Plus, if the library provides ""SetRequestTimeout"" method, I would expect it to provide ""GetRequestTimeout"" as well. Currently there is no API to get an effective timeout, even if you want to get it it for diagnostic purposes.Eliminating hardcoded timeout - is a bug-fix actually.New property - is a feature request to make an API clean. We may avoid it for sure, just let me know. if you need a working sample to demonstrate the buggy behavior, let me know as well.",,,,,,
590996396,2054,Issue,"Let's step back and figure out the problem we're facing and how things should work in Octokit, before diving into the code changes. I've opened #2112 to discuss this further - please comment there.",,,,,,
576056483,2053,Issue,"Sadly this is not supported by the GitHub API, so we can't address this in Octokit.",,,,,,
565514765,2052,Issue,just a heads up that those screenshots contain the token you used. Please ensure it gets revoked or renewed before someone decides to borrow it.,,,,,,
565528536,2052,Issue,"oops, my bad. revoked it. thanks a ton!",,,,,,
598968621,2052,Issue,I presume there isn't an update for this? We started getting bit by this in the last few days.,,,,,,
598992173,2052,Issue,I've simply commented out the parent field in the Team object for testing and the null exception went away. I have to stop for now. I suspect it's related to the parent team having (null) for the permission field but wasn't able to confirm yet.,,,,,,
599801766,2052,Issue,"Okay so this definitely seems related to attempting to set a StringEnum to null. Line 1495 in SimpleJson.cs stopped in the debugger is showing that it's deserializes the null value as.. null, and is attempting to use the compiled setter to set the value on line 2074. The compiled setter doesn't handle that case for the StringEnum apparently.So the next question is what is it _supposed_ to do with a null value for a StringEnum? Can I add a value to a StringEnum to have it handle null properly?",,,,,,
599841002,2052,Issue,"As a temporary workaround I've added this to line 193 of SimpleJsonSerializer.cs:And this to the Permission.cs enum:This feels pretty hacky but I don't really have a better solution at the moment. I'd say it sounds like an API bug on GitHub's end but it doesn't, as lack of permissions to a repository feels alright to be a 'null' value coming from the API.",,,,,,
600049657,2052,Issue,"apologies for missing your messages. It might be that we only need to make that change in `Octokit/Models/Response/PermissionLevel.cs` (we shouldn't be using `Permission.cs` as that's for the request itself).I've opened  which will make a beta package available to help with your testing, as I need to be a member of your organization to query for teams in the way that you are.",,,,,,
558598671,2048,Issue,"You're on the right track, but there's some limits to what you can see from `CheckMember` around seeing non-public membership: - you can only see your non-public membership if you have the `read:org` scope set on the token and are checking your membership - you can only see the non-public membership of others if you are an admin of that organization and have set the `read:org` scope on the org",,,,,,
558603081,2048,Issue,Solved adding read:org to scope and setting some permission about the organization. Thank you,,,,,,
555996576,2047,Issue,the field you're looking for seems to be `is_template`:If someone was to add a new boolean field named `IsTemplate` to [`Octokit/Models/Response/Repository.cs`] as well as a constructor parameter then I think this should all just work.Marking as `up-for-grabs` as I think this is ideal for a quick external contribution.,,,,,,
555206681,2046,Issue,thanks for the quick feedback! I appreciate it. Totally agree with /understand your assessment and missed the get team by name API. Happy to re-work this around that.Thanks again for jumping in before I got too far. üëç,,,,,,
555207578,2046,Issue,no problem - let me know if there's any questions you have as you rework it!,,,,,,
640267766,2046,Issue,i'm looking at my backlog of PRs and I see this one has stalled - anything I can do to help unblock it?,,,,,,
640268690,2046,Issue,"Hey , thanks for the memory jog! Totally on me. I'm actually going to close this out for now because it was in very early stages and some priorities shifted. I may have cause to revisit soon in which case I'll open up a new PR.",,,,,,
555087826,2045,Issue,"does it seem to be failing due to the timeout being hit (i.e. takes an hour to throw the error) or does it error fairly quickly (which might be a different issue at play)? I can upload this through the browser no problem.It's not clear to me what you're using to run the code or upload the files - .NET Framework, .NET Core, Chrome,  Firefox, whatever. Can you elaborate a bit more here?",,,,,,
555091462,2045,Issue,"Using .NET Core 3.0. When testing manual upload through browser, I'm using chrome.It seems to vary, it doesn't take an hour, seems to never go over 90 seconds, and high-level exception is operation is canceled - I did internal step through to get to inner one. Having said that my pipe is really fast - when uploading through browser, 30mb zip goes in like 5 seconds, while code takes MUCH longer to timeout. I've had it succeed sometimes, but only like 5% of the times I try it.",,,,,,
555112919,2045,Issue,Using Octokit 0.36,,,,,,
555827294,2045,Issue,"Seems like uploading interactively through the browser uses AWS for asset upload  whereas using Octokit uses API endpoint such as {?name,label}This potentially explains the difference in behavior and upload speed.",,,,,,
552866465,2044,Issue,thanks for the report. I believe this is the area of code that needs to be updated:And I think making changes here will require updating this test (and perhaps adding a new one for this case as well):Marking this one as `up-for-grabs` as I think it's ideal for a new contributor to pick up.,,,,,,
571528758,2044,Issue,"Hello, may I take this issue if no one is working on it?",,,,,,
576056538,2044,Issue,go for it!,,,,,,
553559671,2043,Issue,I'm feeling pretty good with how this looks. Anything you're waiting on?,,,,,,
553630751,2043,Issue,"Anything you're waiting on?I was going to write some tests for it, just got side tracked with life-stuff :) I'll try to get those last little things in tonight and mark the PR ready for review once done üëç",,,,,,
553885604,2043,Issue,![],,,,,,
554258203,2043,Issue,![],,,,,,
581632262,2043,Issue,release_notes: add support for filtering repository collaborators by their affiliation,,,,,,
553580636,2042,Issue,"I'm puzzling about this one because a plain `dotnet test` triggers the issue, but proceeds to run the test anyway:I'm not clear where `testhost.dll` comes into it - I found some issues suggesting that `Microsoft.NET.Test.Sdk` needs to be `PackageReference`, but this PR is updating `Microsoft.NET.Test.Sdk` so ü§∑‚Äç‚ôÇü§∑‚Äç‚ôÇü§∑‚Äç‚ôÇ. And the test runner itself just calls off to Cake:This isn't urgent to land, but I'm also very unfamiliar with the test execution environment these days so I'm not really keen to go poking at things without understanding why this is now broken for us...",,,,,,
576057451,2042,Issue,rebase,,,,,,
547130227,2041,Issue,"I gather we're talking about  ? Or are you referring to the `permission` hash returned on  ?I thought there might have been a preview API support for this, but it doesn't seem to be documented.GraphQL supports this fine, FWIW:",,,,,,
547146590,2041,Issue,"I gather we're talking about  ?Yes, and `GitHubClient.Organization.Team.GetAllRepositories()`. I've updated the description.",,,,,,
554564538,2041,Issue,Just so I don't go down the wrong üêá üï≥ I'm assuming that it's this class [RepositoryPermissions] where these additional permissions would be added?,,,,,,
554593379,2041,Issue,"That's the only type I'm using, so I think this looks good.",,,,,,
554597236,2041,Issue,"~Cool üëç PR incoming sometime this weekend üòÅ~...or not...doesn't look like those fields are returned from the REST APIAccording to  this was released as a Public Beta at Satellite so maybe it hasn't made it's way into the REST API yet as preview (I checked  but can't find anything there either)...~maybe  can shed some light?~ and as  mentioned I thought there might have been a preview API support for this, but it doesn't seem to be documented.",,,,,,
583859173,2041,Issue,Closing this out as it's not currently available as a preview API.If this does make an appearance on  then we can revisit it.,,,,,,
604311880,2041,Issue,"for what its worth, it looks like the REST API correctly shows triage and maintain permissions now (if you use ""Accept: application/vnd.github.v3.repository+json"" in the header: [](url)and although the documentation only mentions being able to set pull/push/admin as permissions, triage and maintain does indeed work.",,,,,,
604375078,2041,Issue,"-cnb that sounds like its close, but I'm going to wait for this to appear as a documented preview API",,,,,,
604513313,2041,Issue,"Seems a bit odd to close, rather than using it as a way to be periodically reminded to check the docs. FWIW, I‚Äôve moved to graph APIs for these queries because they are much faster and expose that data already. But that also means that I‚Äôm unlikely to check back on this issue.",,,,,,
610632363,2041,Issue,Looks like this one just went live:  (check the JSON response),,,,,,
634605219,2041,Issue,Any plans to add this to the library soon? Or does it still need to appear as a documented preview API first?,,,,,,
634608936,2041,Issue,"I believe this is just an additive change to the response, so I've marked it as `up-for-grabs` if someone wants to take a shot at adding it in.",,,,,,
581633261,2040,Issue,release_notes: addressed typos in XML documentation,,,,,,
548090211,2039,Issue,thanks again!,,,,,,
581633394,2039,Issue,release_notes: upgrade project tooling to Cake 0.35,,,,,,
548329543,2038,Issue,I think the only thing that's missing from this PR is a test that verifies we send through the space in the correct way (I don't think we need to encode it as `%20` at this stage). Would you be able to add that in?,,,,,,
548444313,2038,Issue,"ok, will look into that.",,,,,,
548653527,2038,Issue,updated :D,,,,,,
581634403,2038,Issue,release_notes: address encoding of spaces when using Search API,,,,,,
546056892,2037,Issue,#NAME?,,,,,,
546074008,2037,Issue,Four instances of: Unless I missed something at Dev startup - but directly from master - the four of those fail.Also there are some integration tests that fail - but I assumed that there are some environment variables I don't have.,,,,,,
546108715,2037,Issue,"Unless I missed something at Dev startup - but directly from master - the four of those fail.It's weird because both [master] and [this PR] don't seem to have issues with those tests.These are the usages as I understand it, and I can't spot how the changes relate to your PR:",,,,,,
546109215,2037,Issue,Also there are some integration tests that fail - but I assumed that there are some environment variables I don't have.There's some setup required -  -  but I'm not worried about them for this PR.,,,,,,
546130802,2037,Issue,"Yeah it is those four, they do break for me on master as well - without any changes. Any idea what to try?I get this:",,,,,,
546131452,2037,Issue,Seems to be happening in:I wonder if it is dotnet core 3 related...,,,,,,
546135895,2037,Issue,please open a new issue with details about it - we run the tests for `netcoreapp2.0` and `net452` so I'm curious which is failing for you.,,,,,,
547105926,2037,Issue,"Hey man, sorry for the delay.I have resigned to running the tests in the command line - and that does not fail for those tests.Leads me to believe that it must be something IDE related in relation the `NO_SERIALIZABLE` if clause.",,,,,,
576069433,2037,Issue,"Thanks for taking a shot at this !I received #2060 which was the minimal fix so this can be closed out, but I hope that you can find time in the future for another contribution.",,,,,,
546059409,2036,Issue,"Yes, I'm very much interested in that. I wrote a [quick & dirty tool] to audit the GitHub permissions in our org. As you can imagine, we have several hundred repos spread over various orgs. Clicking through the UI isn't going to cut it. Also, we want to apply some filters (like age of the repo and whether it's public/private) to limit the noise. Here is the kind of report I came up with. Basically, I want to dump all teams and users that have given explicit access on the repo (rather than getting access through a team).",,,,,,
546069106,2036,Issue,I think adding overloads for this new enum parameter here is the quickest way to get what you need supported (nested teams aren't dependent on that):,,,,,,
547125160,2036,Issue,"This might also significantly improve performance. Because when transitive members are included, the API basically returns several thousand users per repo (at least on our end where the `dotnet` org has 5k people. In the `microsoft` org it's even worse).",,,,,,
552096702,2036,Issue,I think adding overloads for this new enum parameter here is the quickest way to get what you need supportedExisting conventions use a `Request` class that extends the `RequestParameters` class (to give an easy way to convert it to a parameters dictionary). Should we deviate from this convention here? _I've assumed that we should follow the existing convention as I've been spelunking on adding this._,,,,,,
545585849,2035,Issue,I had not updated the tests. Will do so now.,,,,,,
545893442,2035,Issue,no need to close and restart the pull request while you're working on getting those tests updated -  just add a [task list] to the PR description so we can follow along.,,,,,,
544743589,2032,Issue,If there is need to add more languages let me know and i could get working on that :)For now I'm going leave #2030 open so I can think about the bigger picture of how to solve this.,,,,,,
544743872,2032,Issue,"release_notes: Added ""Jupyter Notebook"" to Search Repositories API",,,,,,
543667379,2031,Issue,"This is the problem property:And much like we did in #1940, changing it to a `long` should fix the issue.",,,,,,
544850259,2031,Issue,"I'd like to contribute, forked.",,,,,,
545588870,2031,Issue,"Hi , I've got a question.When we change that model from `int` to `long` for the `Id`, some tests break:This does then also break those interfaces it calls.Shall I follow the chain down and change the interfaces and implementations to accept longs etc.?Let me know - I'll create a PR by following the chain all the way for the longs.",,,,,,
545640458,2031,Issue,"Shall I follow the chain down and change the interfaces and implementations to accept longs etc.?Yeah, we're gonna have to break those cases too.",,,,,,
565634469,2031,Issue,"I'm running into this issue as well, is there an ETA for a fix?",,,,,,
583859325,2031,Issue,Closing this out as I believe this has been fixed in #2060 and is now available on NuGet.,,,,,,
555023812,2030,Issue,"I have an idea for keeping this in sync, but it requires some work to be more than a band-aid solution here: - add linguist as a submodule - write a script to check the list against the `Languages` enum, and identify any values that should be added or removed - write an Action to periodically   - update the submodule    - run the script that verifies the list   - open a PR with the result and what a reviewer needs to do to manually address the issue I think there's some extra work here (it'd be great for CI to also verify this) but for now I think this is a decent first step.",,,,,,
540492358,2028,Issue,Probably won't be reviewed this year üòú,,,,,,
540534883,2028,Issue,oh that's definitely odd. I've only touched two files. I must have updated my fork incorrectly before starting. I'll fix that first. Thanks for the catch.,,,,,,
541467230,2028,Issue,Closing this so I can rebase it properly.,,,,,,
544924526,2027,Issue,"apologies for the delay in following up. I think this all makes sense: Is this something you'd be interested in seeing added to the library?Yes! Is there a preferred syntax from a library standpoint for what users should call to get this information?We've got a number of conventions baked into the library that ensure things are consistent, and aside from that the syntax you've provided seems reasonable. Happy to revisit this as part of a PR review.",,,,,,
539258318,2026,Issue,"thanks for the feedback Consider throwing Octokit.NotFoundException here so that there would be no need to check the message of the ApiValidationException to understand whether the commit is valid or not.These exceptions are thrown based on the status code that the GitHub API raises: - `NotFoundException` -> HTTP 404 Not Found - `ApiValidationException` -> HTTP 422 Unprocessable EntityI believe this is occurring because it's falling back to trying to using string as a SHA, which is failing because it's not the expected format:The client itself is just parsing the response we get and converting it to an exception based on the status code, so I'd recommend either handling this error or using the `RepositoryBranchesClient` that can resolve a branch (or error) for you:This will 404 when it can't find the branch, and the error aligns better with what the API expected:",,,,,,
539712254,2026,Issue,Thanks for the details and suggestion. I would rather catch the `ApiValidationException` and handle accordingly than going with a different API.,,,,,,
538584455,2025,Issue,I can add this in my PR for adding the `transferred` event type. is there an up-to-date list of these event types anywhere? This [list] seems to be a bit out-of-date as neither of these two event types are listed...,,,,,,
538363046,2024,Issue,thanks for opening this up! are you able to verify this version fixes the issue for you?,,,,,,
538598289,2024,Issue,"I can do this tomorrow b/c I'll have to wait until my API rate limit is back. Unfortunately, I also talk to YouTube and that doesn't resent in one hour, it's a 24 hour rate :-(",,,,,,
539260445,2024,Issue,release_notes: added new event payload fields for `head_ref_force_pushed` and `transferred`,,,,,,
538117317,2023,Issue,"probably not going to be able to look at this until the weekend, but if you can get a reproducible failure I can run myself it'll save me a lot of time to verify the fix.",,,,,,
538118028,2023,Issue,This is the type that probably needs a new `transferred` state,,,,,,
538124482,2023,Issue,"to nerd-snipe you into helping me out a bit, if you wanted to open a PR with that new field it'll generate a new NuGet package on [the beta feed] which you can then install and verify the fix on your end.",,,,,,
538159118,2023,Issue,"If no one gets to this, I can get a PR together tonight. **Side note:** the [Events] docs doesn't include a `transferred` event type...",,,,,,
538286298,2021,Issue,"As the `-` syntax works for all **string** based search qualifiers, should we add them all at the same time?",,,,,,
538365077,2021,Issue,"Before going too deep on this, I want to call out two things: - the work required to generate each search URL is already complex, and adding support for negation will potentially double the internals required e.g.  - What should the user-facing API for this look like? We want to avoid breaking existing callers, if at all possible, but if breaking API changes are unavoidable I'd love to instead make this a new client API that we can experiment to then bake and figure out migration",,,,,,
538377970,2021,Issue,"My initial (though quite brief) thoughts were to just add additional properties for qualifiers to exclude, e.g. `ExcludedExtensions` but after thinking about it a bit more **and** seeing the first of your thoughts I agree that it would add unnecessary complexity to an already complex implementation.",,,,,,
537021235,2020,Issue,"You can see the commits on `master` that aren't in `v0.34.0` here: The PR with the draft PR changes #2009 hasn't been published to NuGet yet, but it it is available on our pre-release NuGet feed which is documented [here] if you wanted to start using it.Gonna leave this open until I've published a new release to the main NuGet feed (later this week).",,,,,,
537024684,2020,Issue,many thanks üëç,,,,,,
538322120,2020,Issue,Draft PRs is now live and available in [v0.35],,,,,,
537028963,2019,Issue,Question: Is there an open issue to support the negation of qualifiers (`-extension:{0}`)? I couldn't find one. not that I'm aware of. Please open one if this is something you'd like to see it supported.,,,,,,
537044010,2019,Issue,thanks for opening this up. I also know there's a docs example in `docs/search.md` that will need to be updated to support this change:,,,,,,
537105491,2019,Issue,", thanks for the quick response. I updated the documentation. Sorry I missed it.I also changed the `Extensions` property from an `IList` to an `IEnumerable`. It matches the conventions already in place. And since `SearchCodeRequest` is an object that has to be manually create, users won't need `IList.Add()` when they can just statically initialize the property.",,,,,,
537707704,2019,Issue,", any idea what I should do about this [Travis CI error].",,,,,,
537907946,2019,Issue,"it's unrelated to the PR, so I've just re-run it to see if it'll pass",,,,,,
537908291,2019,Issue,release_notes: `SearchCodeRequest.Extension` has been renamed to `SearchCodeRequest.Extensions` to support multiple file extensions,,,,,,
536971953,2018,Issue,"Hey , thanks for reporting this issue. I've tried replicating this issue on a few different repositories but I've not been able to get the same error response as you've posted. If this is reproducible on a public repository that you could provide us, that'll greatly help to speed up reproducing this issue.Cheers,Henrik",,,,,,
537137028,2018,Issue,Sure.,,,,,,
538316389,2018,Issue,"I wrote a test (same as sample above) to replicate this issue. First run it failed with the same `Server Error` response, so I ran it again in debug mode to see if I get some more details about why it failed **but** the test passed... üòï",,,,,,
538329485,2018,Issue,"I'm still having the issue, so I'm not sure what to do.",,,,,,
538342695,2018,Issue,Ha! Reproduced the error after rebooting my machine üôÑIt doesn't really give any more details though... üò¢,,,,,,
554972522,2018,Issue,"what's interesting about the response is that it appears to have a valid `X-GitHub-Request-Id`, meaning it did reach the GitHub infrastructure, but it also has a status code of `502 Bad Gateway`. Not quite clear what it means, but the docs just suggest here that an ""invalid response"" was received from the GitHub infrastructure: The HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.As this feels like something that we can't address in the client library, I'm inclined to close it if we provide enough details in the error that someone can provide the information to GitHub Support to help resolve their problem.",,,,,,
554973852,2018,Issue,"Aye, it's an odd one...I'd be happy to do a PR to provide some better error handling for this scenario",,,,,,
554974632,2018,Issue,I'd be happy to do a PR to provide some better error handling for this scenarioI'd love to review any improvements or ideas you have here,,,,,,
555363440,2018,Issue,"Oddly enough, hitting [this URL] (which is the resulting URI in `octokit.net`, *but* without any `accept` headers) sometimes returns the same `Server error` response but other times it successfully returns the actual results... üòï",,,,,,
555495033,2018,Issue,"I had an idea about how we could improve how we get error messages that we return for known error responses from the GitHub API _but_ it might be **over-engineering** things so I'll mention it here first before going any further.In another product (that shall remain unnamed üòÉ) I'm involved in, we have an `ExceptionKnowledgeBase` that contains a list of ""rules"" that match different type of exceptions and accompanying summary/help text and links to docs.and then you use it likeWe'd obviously need to tweak the functionality slightly for `octokit.net` to work in the same way as we currently handle known error responses from the GitHub API, e.g. Otherwise, we can just use another entry to the `_httpExceptionMap` in a similar way as we do for `HttpStatusCode.Forbidden` that calls the `GetExceptionForForbidden` and checks the body of the response for certain key phrases.",,,,,,
555501652,2018,Issue,"if you can get me a recent `X-GitHub-Request-Id` I can dig into why these might be failing intermittently.As for the proposed changes, I'm not 100% clear on what the resolution would be in this situation. I think, if we had problems that could be addressed in a self-service way, this format might help. But given the unclear and intermittent nature of this, for now I think we should provide more context or a more relevant exception type for `BadGateway`.",,,,,,
555509281,2018,Issue,"Yea, it certainly feels like following the same format as we do for other `HttpStatusCode`s is a better solution for now.I just re-ran my test that fails consistently and here is the `X-GitHub-Request-Id` that was returned in the response `D2F8:43F5:F2E02:119B8E:5DD3EE56`And here is one that failed in the browser `D31E:1DDE:106BF8:12DD33:5DD3EFB4` and then succeeded in the browser `D31E:1DDE:106F65:12E1CA:5DD3EFD8`",,,,,,
537913151,2016,Issue,release_notes: migrated from custom formatter to using `dotnet-format`,,,,,,
581634663,2014,Issue,release_notes: add support for organization memberships API,,,,,,
533904291,2010,Issue,release_notes: added Management Console API to view and edit maintenance mode,,,,,,
533897239,2009,Issue,release_notes: add support for retrieving and creating draft pull requests,,,,,,
533810550,2008,Issue,release_notes: added `since` parameter to `Issue.Comments.GetAllForIssue()`,,,,,,
533810193,2007,Issue,Not sure if I should add/update any tests to check for the existence of the `ID` property?I'm not worried about it,,,,,,
537913518,2007,Issue,release_notes: added `Id` property to `Milestone` response,,,,,,
533568859,2006,Issue,release_notes: added .NET Standard 2.0 output for NuGet packages,,,,,,
533531032,2005,Issue,"There's an ongoing Appveyor error here because one file (a different one each run) isn't able to be validated:Gonna keep an eye on this, but I've seen it occur outside this PR so I think I'm fine with it for now.",,,,,,
533511173,2003,Issue,ignore this minor version,,,,,,
532010782,1995,Issue,release_notes: Update xunit to 2.4.1,,,,,,
531778039,1994,Issue,rebase,,,,,,
531979922,1994,Issue,rebase,,,,,,
531986363,1994,Issue,"Looks like we need to upgrade the project to `net46` to then upgrade to the latest version of `System.Reactive`, which we touched on in #1817",,,,,,
531778018,1993,Issue,rebase,,,,,,
532011170,1993,Issue,release_notes: Updates NSubstitute to 4.2.1,,,,,,
532010595,1992,Issue,release_notes: Updates SourceLink.Create.GitHub to 2.8.3,,,,,,
531777982,1991,Issue,rebase,,,,,,
531861025,1991,Issue,rebase,,,,,,
532011019,1991,Issue,release_notes: Updates GitHubJwT to 0.0.3,,,,,,
531536625,1990,Issue,"Hi , will return only repositories that are **owned** by the current user so this would not return repositories where the current user is a collaborator. _Also, if the user has many, many repos the call to `client.Search.SearchCode` **could** throw an exception as the `Uri` would be too long._From what I can see, there is no _easy_ way to find repos that the current user doesn't own but where they are a collaborator.I've modified the code sample you have to search all repos **owned** by the current user (so you don't have to get all the users repos and iterate over them and possibly hit the max length for the `Uri` string) below:I've explicitly included `path:/` so it only searches for files in the root folder (I couldn't find any docs mentioning if it'll search **everywhere** if `path` is not specified).I hope that helps.Cheers,Henrik",,,,,,
531597895,1990,Issue,"I definitely get repos from other users when running For example, my bashamer login gets back the  repo that is used for testing. I don't know why bashamer does not show up as a contributor but does show up in the checkin history :/usingother weirdness that makes me nervous; it returns the `possumlab.md` file from that repo above. even if there is some regex magic happen the leading dot should still have prevented this :/Adding the path did clean up some other matches, I appreciate the help w/ that.",,,,,,
531599203,1990,Issue,"For example, my bashamer login gets back the  repo that is used for testing. This is probably because you were invited to be a collaborator on that repository in the past, which grants you access to this repository. I don't know why bashamer does not show up as a contributor but does show up in the checkin history :/This API is for what the current user has access to, and doesn't consider contributions. If you don't care about being able to make changes to this repository, you can remove yourself from it by visiting , finding it in the list, and clicking ""Leave""EDIT: I'll also add to this that there's something off about your Git settings which means your commits aren't associated with a valid email address. Here's the commit I checked using the GitHub API:This suggests the `user.email` setting you defined in Git isn't a valid email address. Once you fix that, and use an email address associated with your GitHub account, you should be back to a good place.",,,,,,
531599933,1990,Issue,"This is probably because you were invited to be a collaborator on that repository in the past, which grants you access to this repository.D'Oh, I was reading the code for that method [here] which states that the method returns repos the user **owns**. But, the GitHub [docs] clearly state that it's any repo that the user has `read`, `write`, `admin` permissions too.Sorry for the misinformation...",,,,,,
531600456,1990,Issue,no problem - one of the perks of spending _so much_ time with the GitHub API is that you can hear a behaviour and immediately be able to trace that back to what it's actually doing.,,,,,,
531600540,1990,Issue,"one of the perks of spending _so much_ time with the GitHub API is that you can hear a behaviour and immediately be able to trace that back to what it's actually doing.yea, I've been out of the game for too long üò¢ üòÉ",,,,,,
531608283,1990,Issue,"oooh thank for the commit bug, yeah I'm not surprised that I mucked something up there and those are all done w/ code..Also the relation between PossumLab and BasHamer is intended, this is the test data that I'm working with. I'm happy that the behavior is as expected.",,,,,,
531768926,1988,Issue,release_notes: fix bug where `DateTimeOffset` is used to filter search results by date,,,,,,
529915834,1986,Issue,"thanks for the feedback! This library is cool, but it is out of date.It's been [about a year] since our last release to NuGet, and [there's plenty of work sitting on `master`] that hasn't been published, so I'll put this on my to-do list for the weekend or next week. When are you going to implement draft-pull-requests for example?We track support for new API changes as issues, and  is the discussion about this. It did have some interest in submitting a contribution but that seemed to have trailed off. Maybe it's worth checking in with that discussion to see if it can be moved along? Is GitHub responsible for this library at all or it is completely up to enthusiasts to maintain it and keep it up to date?I helped spin this out of an internal product years ago so the community could use it, and  (who is not staff) has been a great maintainer of it in recent times, but due to our available bandwidth these days we do rely on external contributions if users want to see specific features supported.We're happy to answer questions and make time for reviews, but there's a non-trivial amount of overhead dealing with new issues and reviewing contributions these days.",,,,,,
530387747,1986,Issue,"OK, got it, thanks for your reply!",,,,,,
531013864,1985,Issue,release_notes: updated typo in GitHub Apps documentation,,,,,,
522043970,1984,Issue,"To be precise, it seems like a review can be created without a user (`PullRequestReview.User` is `null` or `PullRequestReview.User.Login` is null).I've not stumbled upon this case, but if you've got some known cases that are causing issues I'd reach out to [GitHub Support] as they'll be able to escalate it to the team that looks after this area.",,,,,,
522070316,1984,Issue,"Hello,All the telemetry I get back is 100% anonymous so I don't have a repro for this (and I've never experienced it myself so might never have).Just wanted to check with someone at Github and ask if this is something that can be expected by the GitHub API (since it's not mentioned in the documentation), but I'll reach out to the support as you suggest and see if they can answer it. :+1:",,,,,,
522091964,1984,Issue,"depending on what exactly you are doing, I might have seen something ""similar"".When attempting to find all the people who have worked on a release of Cake, we have found that the `Author` of a commit can be null.  This has been traced back to the scenario where the email address associated with a commit (i.e. the local email address configured in the users git client), isn't a verified email address of a User on GitHub.  In this scenario (when a user is likely using an internal email address, and used it by mistake when contributing to an open source project), we have had to handle the fact that Author can be null, and instead, revert to using the raw `Name` attribute of the commit, rather than the GitHub user.It would be nice in this scenario if there were a property which said `VerifiedUser` or similar.Could be that this is a similar problem to what you are seeing.",,,,,,
522097562,1984,Issue,That makes absolutely sense. I wonder if this could happen for reviews if the user deleted their account or something similar? Afaik you cannot create a review without being logged in to GitHub? Or maybe my assumptions are incorrect here...,,,,,,
529917622,1983,Issue,"I don't have a specific solution here, but some thoughts based on my experience: - the issues API supports a `since` parameter that will return issues only updated since a certain time - that's helpful to exclude issues that haven't changed - the `number` field returned on an issue is the value shown to users and in URLs, and I'd use that to track each record - so if issue number `20` was updated I'd use that and overwrite whatever you have cached locally that's also issue number `20`Hope that helps, and good luck!",,,,,,
521213170,1982,Issue,__,,,,,,
520802014,1981,Issue,"not sure I understand this change. `client.Credentials` is there to simplify things, and you're correct that it's wrapping `Connection.Credentials`, but I don't understand the benefits to updating this sample:",,,,,,
520803493,1981,Issue,Since I've used IGithubClient with the DI I didn't have access to `Credentials` and accidentally assumed it doesn't exist.,,,,,,
520381514,1980,Issue,"no, [`GetArchive`] is associated with a certain ref (or the default branch if not specified), and obtaining only a subset of the files is not currently supported.If you only want to obtain a specific file or specific folder of files, [`GetContent`] might satisfy the requirements.",,,,,,
518850935,1979,Issue,It could be another field that needs to change from `int` to `long`Are you able to post a code snippet that reproduces it on a public repository?,,,,,,
518850955,1979,Issue,It could be another field that needs to change from `int` to `long`Are you able to post a code snippet that reproduces it on a public repository?,,,,,,
518863955,1979,Issue,"I was just creating a github client in powershell and trying to query all events for a repo. As for the code, I didnt change it. I built directly from the cloned repo.I'll admit maybe I did something wrong, but I really can't guess what.",,,,,,
519077675,1979,Issue,I was just creating a github client in powershell and trying to query all events for a repo. if you can reproduce this against a public repository and can share that with us  it'll help us to reproduce the issue on our end and identify what field returned from the API now overflows `int`.,,,,,,
519114346,1979,Issue,"I fixed it locally by changing IssueEvent ID to a long as well.  I still hit an issue though with pagination.Exception              : System.AggregateException: One or more errors occurred. ---> Octokit.ApiValidationException: In order to                         keep the API fast for everyone, pagination is limited for this resource. Check the rel=last link relation                         in the Link response header to see how far back you can traverse.                            at Octokit.Connection.HandleErrors(IResponse response)",,,,,,
519128254,1979,Issue,some sample code would still be handy so we can understand how you're encountering issues,,,,,,
519150936,1979,Issue,"$inmem = new-object OctoKit.Internal.InMemoryCredentialStore -ArgumentList ($cred)$header = New-Object octokit.productheadervalue -ArgumentList ""azure-function""New-Variable -Name gitHubClient -Scope Global -Option AllScope -Force -Value $(new-object octokit.githubclient -ArgumentList $header, $inmem)$options = New-Object octokit.apioptions$options.pagesize = 100$events = $gitHubClient.Issue.Events.GetAllForRepository("""","""", $options)",,,,,,
529920088,1979,Issue,apologies for the delay. I see that this last line doesn't have the owner and repo values:If this is reproducible on a public repository that'll greatly help to speed up reproducing this issue.,,,,,,
531105669,1979,Issue,"If this is reproducible on a public repository that'll greatly help to speed up reproducing this issue.This ~will~ _should_ do it `$events = $gitHubClient.Issue.Events.GetAllForRepository(""OctopusDeploy"", ""Issues"", $options)`",,,,,,
550168957,1979,Issue,[This ]fails for me with the following exception:NOTE: I guess mine is a different issue...,,,,,,
554970290,1979,Issue,"This feels very similar to #2031, and while we have a PR started in #2037 this appears to have stalled. Gonna leave these both open for now and re-test the fix to confirm both issues are resolved.",,,,,,
565634177,1979,Issue,"This feels very similar to #2031, and while we have a PR started in #2037 this appears to have stalled. Gonna leave these both open for now and re-test the fix to confirm both issues are resolved.Any update on this? It looks like the PR still hasn't gone through.",,,,,,
583926416,1979,Issue,"it turns out that #2060 doesn't fix this, but #2092 will",,,,,,
516839894,1978,Issue,I'll push a new commit shortly to address the GitVersion issue.,,,,,,
516856216,1978,Issue,"Fixed GitVersion issue by upgrading to version 5.0.0, also switched to using the GitVersion.Tool so version can be asserted in .NET Core only environments too.",,,,,,
516867141,1978,Issue,Thanks so much  for this update (and maintenance work!),,,,,,
531013308,1978,Issue,release_notes: Updated Cake.Frosting tooling to latest version,,,,,,
515424541,1977,Issue,can you show a code example of what you were trying to achieve? Using a public repository to test would also help us to reproduce what you're seeing.,,,,,,
515479910,1977,Issue,"Sure, here's a very small C# console app demonstrating this:I'm getting the following output:",,,,,,
515486783,1977,Issue,"Alright, I'm digging through the docs and I think I got it wrong on my end. I think what I expected was the *short* SHA of a commit. Guess that's what I get for working at 3am, and now I feel like a bit of an Idiot.Trying to take that as a learning experience at least, I'm guessing GetSha1() is to do the opposite of what I'm trying to do? Send the short SHA and get the full one back, and I can just Substring(0, 7) to get the short? If that's the case can I suggest possibly clarifying a bit the XML comment on GetSha1? The `reference` parameter should probably be renamed `shortSha` along with it.",,,,,,
515486891,1977,Issue,"cool, so I think this is the part that need clarifying: Thought this meant I had to supply ""refs/head/branch"". Tried that, get an API error out saying I supplied an invalid SHA.The GitHub API sometimes expects the fully-qualified ref (e.g. `refs/heads/master`), and sometimes the short ref is fine (e.g. `master`). Your sample works fine because you're passing in the commit ID, but if you want to find the branch name then I think tweaking the example like this is all you need to do:I thought this would fail, but it's working fine:The other thing that is missing from the example script is that credentials are not provided. That could matter if you're trying to access a private repository.",,,,,,
515487674,1977,Issue,"this function is a wrapper on top of [this GitHub API].It's intended to be a quick way to resolve a **ref** to the **commit id**, for situations where you don't have a copy of the repository locally.",,,,,,
515489402,1977,Issue,"yeah, that's the doc I was just looking at. I think I got this all wrong, apologies. I also tried using ""refs/heads/branch"", but I think I might've made a typo and that's why it crashed, tried again just now and had no issue. To clarify, I'm authenticated on my main app with a personal access token and full repo access, so credentials weren't the issue, it's really just me.I think it's fine to close this. Mostly as big misunderstanding on my part. Looks like passing the first 7 characters of the sha works as I'm able to use it to grab the commit info again and create a tag.",,,,,,
515500391,1977,Issue,"yeah, if you're passing in untrusted input here (or it might not be a ref that no longer exists) I'd recommend ensuring you catch and handle any `NotFoundException` that comes from the GitHub API (it won't return `null`).Good luck!",,,,,,
513580365,1976,Issue,"are you referring to GitHub Apps? If so, there are some outstanding issues that are up-for-grabs:  #1826 #1827 #1828",,,,,,
529921225,1976,Issue,"We had a request for supporting the Checks API in #1973, and that's something that's only available to GitHub Apps.",,,,,,
513361605,1975,Issue,"I didn‚Äôt dig into the issues of the GitHub desktop not long ago, and I saw that there was such a problem. After reading it, I realized that in octokit.net such a function is not implemented, but it can be achieved by adding some parameters to the headers. I will not close this problem, if someone realizes the opportunity to choose where to send the confirmation code. ‚ò∫",,,,,,
513580661,1975,Issue,"I saw that in the API there are headers working with this, but where is it in octokit.net api?The headers are sent as part of the response when the authentication fails because of a 2FA challenge, and are detailed here:  `X-GitHub-OTP: required; SMS` or `X-GitHub-OTP: required; app`There is no way in the GitHub API to control which method is chosen, you simply need to get the code from the user to perform 2FA. If you are implementing authentication in an app you need to prompt the user, based on what method is being asked by GitHub.",,,,,,
511144936,1974,Issue,"Please answer the problem from any of the contributors, because the creator of the repository on vacation.",,,,,,
511156629,1974,Issue,"When I looked at the sources of `octokit.net` I found a way to work with `2FA`, and I did it.---When I tried to log in with login and password I got the exception `TwoFactorRequiredException`, after that I‚Äôve displayed in my `UI` the input field `verify code`.When I clicked on the `Verify` button, I called the `Authorization.Create` method with the necessary arguments (`verifyCode` it `verify code` of the user):If the `verify code` is correct, then the `ApplicationAuthorization` instance returns to us with the `Token` property we need.Then I just re-log in with the authorization type `AccessToken` passing that `Token` to the constructor `Credentials`.Done, now I am authorized in the system! Please be kind  and other contributors, add any of this to the documentation in the 2FA section. Thank.I hope this helps someone.",,,,,,
511517732,1974,Issue,"After working with this, I realized that Note should be unique, it confused me, many github clients who log in through 2FA, they somehow work differently with this.In my account in the ""security"" tab I noticed this: `oauth_authorization.create  ‚Äì Personal access token (MagicianHub(Mairw:2019-07-15T21:24:11))` I use the date and user name as unique data for Note.I want to hear advice, can it be made easier and whether I am doing true authorization through 2FA?",,,,,,
513580946,1974,Issue,"Marking this one as `docs-and-samples` because this is a gap in the current documentation, and a decent sample for handling 2FA is necessary.",,,,,,
524204821,1974,Issue,I put together a quick LINQPad script to show how to handle 2FA login which might be helpful I pulled that code (and refactored it to suit LINQPad) from a demo WPF app I wrote years ago  to show how to support logging in with 2FA enabled.,,,,,,
531117545,1974,Issue,"I'd be happy to tackle this one as I have the code ready, would be ü§ò to get some more üëÄ on the code I posted above to make sure it's a suitable sample... üòÅ",,,,,,
531210526,1974,Issue,happy to help üëç,,,,,,
509684057,1973,Issue,"From checking, the Mergeable is ""true"", MergeableState is ""Block"" whatever all checks are passed or pendingÔºÅ",,,,,,
509684544,1973,Issue,", could you please help? Thank you!!!",,,,,,
512859872,1973,Issue,"Ping, thanks!",,,,,,
529920736,1973,Issue,the [Checks API] is only available to GitHub Apps. I'm going to cross-reference this in #1976 because we don't really have a better place to track it currently.,,,,,,
529921061,1973,Issue,"From checking, the Mergeable is ""true"", MergeableState is ""Block"" whatever all checks are passed or pendingÔºÅ please open a separate issue with a reproducible bug report if you'd like us to look at this problem.",,,,,,
521809889,1972,Issue,Hi  is this causing incorrect results?,,,,,,
523641614,1972,Issue,Hi  just checking if you got my last message?,,,,,,
607404061,1972,Issue,"Hello! I am so sorry I missed your comments, I encountered this bug at my work and I just checked in on this- so happy to see it fixed! Thanks so much :D",,,,,,
509034251,1971,Issue,Anything waiting on me for this?  Seems more like an issue with CI.,,,,,,
531014039,1971,Issue,release_notes: fixed typo in developer documentation,,,,,,
503288310,1970,Issue,"what did you need `Id` for? I believe that's an internal identifier for it, and `Number` is the public-facing ID that you should use when querying, based on",,,,,,
503292868,1970,Issue,"I use it as an external identifier in a GitHub client i'm building.What is the practice when it comes to expose the id field? A lot of other entities in the Octokit API exposes it (label, issue, pullrequest) and it's part of the public API.I would gladly submit a PR for this.",,,,,,
503296524,1970,Issue,"What is the practice when it comes to expose the id field?Some entities can be queried for using the `id`, but the only entity I can think of where this is explicitly support is for repositories and users - because they can renamed or transferred, integrators can query for that as it's considered more ""stable"". You'll also see these URLs in the pagination response to indicate there are more results, but it's not used much these days.But for repository-specific entities (issues, labels, milestones, etc) I don't believe the same lookup was ever implemented. I would gladly submit a PR for this.I'm not opposed to this, but I just wanted to indicate that the field is not what is used in the API itself.cc  just in case.",,,,,,
503332118,1970,Issue,If it's in the public API response payload I don't mind having it implemented here for completeness,,,,,,
533452821,1970,Issue,"would you still like to submit a PR for this? Otherwise, I'll be happy to tackle it over the weekend.",,,,,,
502487153,1969,Issue,"I actually ran into this myself a few weeks ago and added it, forgot to merge though :blush: - #1964",,,,,,
501844237,1968,Issue,I did not find any thing about pull request in( )Thank you!,,,,,,
564890800,1968,Issue,"Following repository / file has a one example that creates a PR, or updates an old one with new commit. It might have some bugs, I'm currently investigating a possible memory leak issue which just surfaced.See method `Fix`",,,,,,
494639190,1964,Issue,release_notes: Implement `SubmittedAt` field on `PullRequestReview` response model,,,,,,
494814706,1964,Issue,Nice spot - will see if I can raise this with the right team internally to update the docs,,,,,,
495506352,1964,Issue,Any chance this will be merged soon?,,,,,,
487654344,1963,Issue,"UPDATE:I checked the function of UpdateFile and it gets content of the live branch  _var updateUrl = ApiUrls.RepositoryContent(owner, name, path);_",,,,,,
487764628,1963,Issue,"One question:   It is possible to add a commit to a forked repo? I've tried all ways and only i get is ""Not Found"" :/",,,,,,
487765971,1963,Issue,My idea is send commits automatically to a pull request made from a public forked repo,,,,,,
487794246,1963,Issue,"I think you might have found a bug, but it's hard to say without a bit more context.In theory the `request` payload should be converted to JSON, and if that branch name is set it should be on the payload here:This is where we set `branch` in the library:Are you able to use a tool like Fiddler to inspect the HTTP traffic and see that we're sending the correct payload? There might be extra clues in the response to understand why it's returning `Not Found` (sometimes this occurs if the private repository is not accessible by the current user, but it seems like you're working from a fork which should be public by convention).",,,,,,
487795913,1963,Issue,"Hi  ,    thanks for your answer. I have checked trying to send http via curl the headers to Github API and it returns the same error ""Not Found"".Basically, i have a repo **R** which there are a pull request coming from a public forked repo **R_f** in the branch **B**. The owner of **R_f** is other person **P**. Soshould send a commit in the public forked repo. Moreover, i can make a commit in that repo in the Github front-end. But v√≠a API it throws me ""Not Found"".I have to investigate in that way",,,,,,
486673717,1962,Issue,Any thoughts on what might be wrong?The `/` could be encoded in the URL incorrectly? I'd look at a [Fiddler] session when invoking Octokit and see what URL it's requesting...,,,,,,
486675457,1962,Issue,Nevermind! Sorry it was my mistake. I was accidentally doing a ToLower on the branch name and the only one that had uppercase also had a slash.,,,,,,
486147555,1961,Issue,"Agree that the naming is a bit confusing, however Im not sure if the suggested renaming makes things much better?!The `GetAllForOrganization` gets an organization's events whereas the `GetAllForAnOrganization` gets a user's events for an organization.   List events for an organization This is the user's organization dashboard. You must be authenticated as the user to view this.",,,,,,
486164091,1961,Issue,"Ok, let's rename `GetAllForAnOrganization` into `GetUserEventsForAnOrganization`?",,,,,,
486170673,1961,Issue,"To keep with convention we should use `GetAll`...Some of the other methods in this class are like `GetAllUserPerformed()` so potentially this could be `GetAllUserPerformedForOrganization()` ?I think part of the problem here is that the API doc isnt clear on exactly what events this call DOES return!  It says ""the users organization dashboard"" - what is this?  Is this only events performed by this user in the specified organization or does it include other events in the organization (eg if an issue was opened or whatever)?",,,,,,
486173005,1961,Issue,"Poking the API I see comments made by you and me, things created/deleted in other repositories in this organization etc.  So its deifnitely not events ""performed"" by the user but more so events ""for"" the user, and scoped to the organization in question.So how about we go with the name `GetAllForUserInOrganization()` and we update the metadata XmlDoc summary wording to ""Gets all the events shown on a user's organization dashboard""?",,,,,,
486186087,1961,Issue,"So how about we go with the name GetAllForUserInOrganization() and we update the metadata XmlDoc summary wording to ""Gets all the events shown on a user's organization dashboard""?Agree. That's much clearer name. Thanks!",,,,,,
482941334,1960,Issue,Thanks for flagging this ! Would be great if you wanted to send a PR to add it!,,,,,,
485758055,1959,Issue,"Ok, github support said, that I need to used another method which is not implemented in Octokit.net.It has OrganizationMembersClient.Delete, which corresponds to [Remove a member] API medhod.I need [Remove organization membership] instead.",,,,,,
533857409,1959,Issue,"I'll grab this one, and at the same time add support for:- [Get organization membership] (as I couldn't find we support this endpoint)- [Add or update organization membership] (there's an open issue for tracking this [here])",,,,,,
481504354,1958,Issue,"Sorry for the confusion, we are a wrapper/client for the official GitHub API and because this endpoint can return multiple results, our convention is to name it `GetAllxxx`. If you specify the file you want in the `path` argument, you will get the contents of that particular file only. See the official docs for this endpoint here:",,,,,,
481507754,1958,Issue,"alrighty, all good, I will use it and verify, thanks mate!",,,,,,
480243379,1957,Issue,"I think that second request to `Commit.Get` is unnecessary, because `Commit.GetAll` will contain the details. But aside from that I can't get this down to fewer than 2 requests (because of how the data is organized).Here's my tweaked sample, which also supports finding the file on a specific branch (without this, the default branch on the repository is used, which might be fine in your case):",,,,,,
480246109,1957,Issue,"I didn't think about branches, thanks for the tip üôÇNot sure about the internals, but ideally there could be a method to get the last commit for a specific file, something like so:orCurrently this isn't available, but it would be usefull (idea is to query GitHub in such way that it would return only last commit data, not to filter data on client)",,,,,,
480247582,1957,Issue,"Not sure about the internals, but ideally there could be a method to get the last commit for a specific file, something like so:This library is just a wrapper around the [GitHub API v3] and we've avoided implementing convenience methods that don't exist in the underlying API to keep things simple.To make this a bit more performant most `GetAll` APIs support pagination using an `ApiOptions` parameter, so you can control how much data you get back. By default `GetAll` will follow pagination if there is more data to get, so this is a way to ignore data you don't need and save on network requests and downloads.It won't change the API result (still an array of commits), but it becomes a bit easier to understand what data you are looking for:",,,,,,
480249400,1957,Issue,this was exactly what I needed!I've checked in Fiddler and the amount of data that is returned is much smaller.I have a file that has almost 100 commits. With `ApiOptions` only data for the last commit is returned.,,,,,,
529918647,1957,Issue,"I believe this has been resolved, so I'm going to close it out",,,,,,
529928797,1957,Issue,"yes, the problem is solved. There isn't a direct method but suggested workaround works perfect üôÇ",,,,,,
478193358,1956,Issue,"I'm on mobile at the moment but I think there is another overload that doesn't take a path, which you can use when you want the root",,,,,,
481366553,1956,Issue,"yep and i am already using that workaround. although it makes for some ugly code for anyone hitting this        static Task GetAllContents(IRepositoryContentsClient content, string owner, string repo, string path, string branch)        {            if (branch == null)            {                if (path != null)                {                    return content.GetAllContents(owner, repo, path);                }                return content.GetAllContents(owner, repo);            }            if (path != null)            {                return content.GetAllContentsByRef(owner, repo, path, reference: branch);            }            return content.GetAllContentsByRef(owner, repo, reference: branch);        }but ignoring that workaround. i think it is still a bug that you query for a branch and get results from master",,,,,,
590572534,1956,Issue,Moving this to #2105 as the fork has been removed,,,,,,
477569361,1955,Issue,Do the examples here help anything?It does not really explain why the first call hangs though,,,,,,
477835133,1955,Issue,"Hi -Zuber I had read through that doco but I don't understand why _call 1_ hangs.Also, the doco isn't overly clear how PageCount is handled. The return value for GetAllForRepository is List of Labels but it's not paged. So does octokit retrieve x number of pages (where x =  PageCount ) via the GitHub API and then merge these pages into a single list of Labels which is returned?In most APIs PageCount refers to the number of pages that is returned. Usually there is a page object which contains a number of values (in this case it would be Labels).",,,,,,
477867990,1955,Issue,"yeah, the way Octokit works is that the actually returned result is concatenated into a single list of results. I do not see anything in the git history that discuss why though.I started writing a test for this case, but the second call hangs for me as well. Is the repository open source?",,,,,,
478182734,1955,Issue,"The GitHub API itself only supports `start_page` and `page_size` settings for pagination, but the way we implemented pagination support in Octokit.net is that we also have a `PageCount` property where the library will fetch that many pages for you, and yes the results are always concatenated into a single list.  Also note if you provide no `ApiOptions` then the library will fetch ALL pages for you.  The reason for the results being a list and not actually exposing pagination in the responses is due to a combination of factors such as ""history"", trying to remain backwards compatible (pagination was implemented after the library was well established) and trying to be idiomatic to typical usage/expectations of .NET/c# which was (at the time) deemed to be returning `List` types and having consumers use `Linq` to manipulate the lists.  Eg if you wanted the first 100 then use `.Take(100)` rather than exposing ""pages"" to the consumer.Personally Im pretty happy about not having to deal with ""pages"" of results if you dont want to - if you do want to then you can use `PageCount=1` and loop through results... but if you don't want to you can do say `PageSize=100`, `PageCount=5` and know you will get up to 500 results without any mucking around with loops etc.That said, hindsight is wonderful and I do think our implementation could have been better if it was some sort of wrapped response class as that would have allowed us to expose things that are in response headers, such as the first and last page numbers... eg something like `OctokitResponse`But in terms of the actual problem raised in this issue, it totally SHOULD work in that case, so we need to look at how/why that call is hanging!",,,,,,
480264543,1955,Issue,"I put together this test to see the behaviour for myself:I also put Fiddler in the middle to see for myself what was happening, and this looks like why it is deadlocking - it continually re-requests the same URL:; rel=""last""`But the client doesn't seem to use this updated `repositories/179678946/labels?per_page=11&page=2` - that's the part I'm still trying to investigate here.",,,,,,
486164781,1955,Issue,"I spent some time debugging this and what is happening is inside the pagination loop. we are taking the ""next"" Url from the link header `` and passing it into our extension method `Uri.ApplyParameters(nextUrl, parameters)` to ""re-apply"" any relevant parameters from the original request, to our subsequent page request (not sure if this is even necessary as wouldnt the link header from the upstream API echo back any required query parameters in the link header???).  So what we end up with is `nextUri` contains `per_page=11&page=2` and  the original `parameters` we are re-applying has `per_page=11&page=1` and the result of the `ApplyParameters` is our desired `page=2` gets trumped by the original `page=1`.It seems most likely to have been introduced as a side effect by another pagination fix in #1649 (yes, almost 2 years ago!)This is a bit of a brain twister ü§î but I think we haven't run into this in all this time is that I believe this will only happen if you specified a `StartPage` value.  If you don't specify `StartPage` then the original Uri has no `page=x` parameter that will then clobber the desired page number for subsequent calls.  I can only conclude that most people retrieving multiple pages are probably not specifying a start page as they are happy with the default (being page 1) but arent explicitly setting it?",,,,,,
486924301,1955,Issue,Good find . It looks like that is the case. I was also just using the default until recently. Will be nice getting a fix for this one.,,,,,,
519119775,1955,Issue,"I am trying to retrieve all Issue events for a repository.  I worked around another bug with Int32 MaxValues, but I get back 40000 results now.  I'm suspicious of round numbers when there are 22,383 issues (open and closed). So you are saying that pagination is handled internally without me having to do anything? I did notice that my first call hit some type of pagination limitxception : System.AggregateException: One or more errors occurred. ---> Octokit.ApiValidationException: In order tokeep the API fast for everyone, pagination is limited for this resource. Check the rel=last link relationin the Link response header to see how far back you can traverse.at Octokit.Connection.HandleErrors(IResponse response)When I specified ApiOption.PageSize of 100 the command completed successfully.  Is there anything I need to do to get any additional results, if there are any?",,,,,,
474311296,1954,Issue,"Unless I'm totally wrong on this, I thought the `` that does?I'm also wondering whether we should embed the full text from GitHub here (what if the text changes in the future?) or whether we could just have a simpler note like `""Note that the GitHub API uses caching on these endpoints, see  for futther details""`",,,,,,
531044424,1954,Issue,release_notes: Add comment about caching when calling the repository statistics endpoint,,,,,,
471271303,1953,Issue,:+1:,,,,,,
474320553,1952,Issue,I also noticed while reviewing that there is another API preview involving a new field `members_allowed_repository_creation_type` on Get/Update Organisation endpoints.  Should we include that field also or worry about it on another PR?  (Note that it's possible to specify multiple preview headers using the `AcceptHeaders.Concat()` helper method),,,,,,
471273642,1951,Issue,"Hi  Did you have any more background or context on this change?It seems github docs have changed and I cant actually find the list of language codes that are supported.  And many of our tests are using values of Csharp or Ruby which have the same name and value haha.But even looking at your C++ example Im find that when doing searches with `C++` it is actualy returning results for repo's with language of just C.  Meanwhile using `cpp` does only find C++ language type repos.  So perhaps our parameter value for the `CPlusPlus` entry should be `cpp` and not `C++` anyway???I cant seem to find the list of languages in docs anywhere anymore... (clearly wrong, there are all sorts of repos returned) (this still seems incorrect as you get `C` results) (this is now returning `C++` results)",,,,,,
471279004,1951,Issue,I think I found the list of languages,,,,,,
471372533,1951,Issue,"I initially ran into this when I was attempting to write a tool to download a bunch of C/C++ repos, but most of my results ended up being Java instead. That's a good catch though about C++ not actually returning C++ results. I had only played with the [web search], which does correctly handle `c++` as a language. Looking back at my results, it looks like I only ended up with C repositories in my dataset.",,,,,,
471374625,1951,Issue,I pushed another commit to fix the C++ case.,,,,,,
478426578,1951,Issue,"we probably have other language codes that need aligning but i think in the context of this PR, the changes you've made plus fixing up the obvious c++ language code issue, should be good enough :+1:",,,,,,
478426821,1951,Issue,release_notes: Fix `SearchRepositoriesRequest` `Language` filter option to use the parameter value rather than enum member name,,,,,,
466992764,1950,Issue,#NAME?,,,,,,
467220499,1950,Issue,"Thanks  for your reply.I'm afraid that downloading the whole repo wouldn't be too efficient in my case.I just used a workaround for now, which is to load zipped folders in my repo. This means folders become files that can normally be downloaded through the `DownloadUrl` property and then, as soon as they get downloaded I'm able to unzip them and delete the original zipped folder.Side benefit is also that it takes less space and less time to commit/push.",,,,,,
467221005,1950,Issue,"-Tas we're limited by what the GitHub API supports, so I'm going to close this out now that we've outlined the options available.",,,,,,
466766334,1949,Issue,release_notes: Added pagination support to `MigrationsClient`,,,,,,
466766551,1949,Issue,This looks :+1: to me,,,,,,
466767065,1949,Issue,![],,,,,,
466620039,1948,Issue,Welcome back !I'll have a :eyes: when I can,,,,,,
466620823,1948,Issue,"Thanks , no rush üòÉ",,,,,,
466766277,1948,Issue,"release_notes: Added pagination support to `CommitCommentReactionsClient`, `IssueCommentReactionsClient`, `IssueReactionsClient` and `PullRequestReviewCommentReactionsClient`",,,,,,
467827374,1948,Issue,![],,,,,,
466075640,1947,Issue,If I recall correctly the ctors are used during deserialization.,,,,,,
466077639,1947,Issue,Here are the related tests that I found if it helps any:,,,,,,
466078881,1947,Issue,I see that there already is a PR for this (#1946) so I'm closing this one.,,,,,,
466765419,1946,Issue,Thanks  :+1:,,,,,,
466765439,1946,Issue,release_notes: Add `Id` field to `Label` response model,,,,,,
465761446,1945,Issue,"Hi  it would be great to support this new feature, would you be keen to work on a PR to add it?",,,,,,
468050046,1945,Issue,"Yes, I think I can try to do it ;)",,,,,,
501843882,1945,Issue,any update for this issue? Thanks!,,,,,,
501852415,1945,Issue,Is it possible to use `ApiConnection.Get(...);`,,,,,,
501867895,1945,Issue,Thanks Guilherme! will try!,,,,,,
517737021,1945,Issue,"Hi all,   any updates on this? Last version 0.32 in Nugget doesn't support Draft boolean and i want to use this.Thanks",,,,,,
517742258,1945,Issue,"On the other hand,, is there a way to build a filter instance of a class against Github API with this property?At the moment i'm filtering issues and then i look up the pull request with the same id and check the Mergeable State",,,,,,
466765535,1944,Issue,Thanks,,,,,,
466765569,1944,Issue,release_notes: Added sample covering how to create a PR from a fork,,,,,,
465408740,1943,Issue,"my best guess is that you're not using the right value for the `head` parameter. If it's coming from a fork, the `head` parameter needs to be of the format `username:branch`.",,,,,,
465433125,1943,Issue,"I was able to get more details, now I get thisAnd so far I have tried the format for base asorganizationName:masterorganizationName/repositoryName:masterRepositoryName:masternothing seems to work.So what would be good to know is, if I had to create a pull request from my fork against octokit master branch, what are the values I should be using for head and baseis itHead ==> `shahabhijeet:branchName`Base ==> `octokit:master` or `octokit/octokit.net:master` or `octokit.net:master`",,,,,,
465441007,1943,Issue,is creating a PullRequest from user fork supported?If yes would be great to get a sample on how to create a PR. Appreciate your help.,,,,,,
465443567,1943,Issue,Got it working the following worked for meIf I am creating a PR from my fork (shahabhijeet) and branch (bugFix) against octokit.net  master branch,,,,,,
471162508,1943,Issue,Should this issue be closed as the sample for the docs has been added?,,,,,,
471274052,1943,Issue,"Good catch, thanks!",,,,,,
465340556,1942,Issue,There's no need...,,,,,,
465340783,1942,Issue,"Oooh, that's a nice surprise! Thanks  üòÑ",,,,,,
465981050,1941,Issue,For reference:  seems legit - please open a PR for it,,,,,,
465090418,1940,Issue,Thanks -richardson ![LGTM],,,,,,
465092230,1940,Issue,Thanks for the quick response. Whats your thoughts around when this could make it into a release?,,,,,,
465093595,1940,Issue,I've been meaning to push a release already however there wasn't anything that was urgent/pressing. This PR changes that though so I'll try to do it in the next few days. In the meantime you can pull the package built from merging this PR from our appveyor nuget feed if you need to get back up and running üëç,,,,,,
478200717,1940,Issue,release_notes: Update `EventInfo.Id` field from `int` to `long` to prevent overflow exceptions,,,,,,
479799976,1940,Issue,Any update on getting this released? We're currently blocked on this over at,,,,,,
479841448,1940,Issue,you could use the beta package That's how we unblocked ourselves while waiting for the next release.But that might not be an option or the ideal solution...,,,,,,
479857710,1940,Issue,"in our case, we're using LINQPad scripts, and unfortunately we can't bake a package source into the script definitions.",,,,,,
495815635,1940,Issue,I just hit this as well with some events with IDs greater than int.MaxValue. Would love to see a public release that has this fix!,,,,,,
542944553,1940,Issue,I just ran into this issue too.Using octokit 0.36.0,,,,,,
543154953,1940,Issue,please open a new issue as I suspect that requires a different fix to what was addressed in this PR.,,,,,,
465088914,1939,Issue,Yeah we use `long` for id fields on new response classes but something older ones could potentially do with an update. I was actually trying to get info from github internally about which id's were 32bit and which were 64bit but this discussion reminds me I never did get the list ü§£,,,,,,
460254916,1938,Issue,"Hi  I assume you mean without making an additional ""per repo"" call?  I'm not aware of anything additional to the old conversation you've linked...You could contact github support and see if they have anything else to suggest?The graphQL API would also be an option to retrieve repos with commits/files/branches/refs provides some similar entity that helps determine if they're empty or not, without making multiple calls. You could check out  in that case...",,,,,,
460262261,1938,Issue,"Hi  ,Thank you for the quick reply. Yes, I was more interested in avoiding other requests. I assume that when you wrote ""without making and additional call"" you had the `contents` endpoint in mind, correct?In any case this is just for an internal statistics tool, nothing that needs to run in production, and having empty repositories is an exception, so for now just checking the size should be  fine. I'll keep in mind that the graphQL API as an alternative, thanks for the suggestion.",,,,,,
460263405,1938,Issue,"I didn't have anything specific in mind but if you already had other reasons to make individual calls per repo then presumably getting commits, files refs or similar things would reveal the repo was emptyI'll close out this issue but do let us know if you have any further thoughts or findings",,,,,,
460254838,1937,Issue,"if you want to optimize for large data sets being returns, using a `PageSize` of 100 means that fewer requests are needed to enumerate all the records that satisfy the criteria (the API uses pagination underneath). But in fact request should return about 11 records.Are you referring to 11 commits or 11 pages of commits here?",,,,,,
460257478,1937,Issue,", by 11 records I meant 11 commits. And from my point of view it's not a case of big data querying.",,,,,,
459310594,1936,Issue,release_notes: Prevent previous Tls1.2 fix for earlier frameworks from interfering with .NET 4.7+ `SecurityProtocolType.SystemDefault` configuration,,,,,,
459293871,1935,Issue,"Hi -Tas   enabling the user to login through his/her GitHub credentials (email and password), improving the experience.Im not sure if this is an improved experience, considering that with a token the user has at least some ability to limit your application to certain scopes/functionality, whereas by providing you with their username and password they are open to your application being able to do ANYTHING they can do themselves!With that comment aside though, what you are running into is perhaps a case of unfortunately named parameters.  A GitHub user has a login (their handle - in my case `ryangribble`) and an email address.  You can log in to GitHub with either of those (try it on the login screen yourself!).Meanwhile the GitHub API requires the actual `login` field (not the email address) as that is directly used in the URI's to API routes that are called.Not to worry though, you can get information about the ""current"" user (ie the one you are authenticating as) using:You can then use the `user.Login` parameter in the other API calls you need to make.Hope that helps!",,,,,,
459360853,1935,Issue,"One thing I'll add to this is that some API functions are associated with the authenticated user, and you could just use this to get repositories after you have credentials configured:I forget the defaults for this API call, but if you know [what you want] you can pass in additional parameters to get the sorts of repositories you need:",,,,,,
459223213,1934,Issue,Any reason why you've removed the `.dotsettings` resharper settings file   ?,,,,,,
459224413,1934,Issue,"I'm ok with this change - I agree it is robust and handles both the ""existing"" behaviour where `refs/` wasnt specified in the argument, plus works with ""new"" behaviour where you quite rightly point out, a ref received from another endpoint should be able to be passed straight into the delete method and work.It actually stems from the [GitHub Api documentation](Console.WriteLine(user.Login);) itself, where it indicates the URI for patch and delete calls is `/repos/:owner/:repo/git/refs/:ref` (ie `:ref` should not include prefix of `refs/`) yet on the create call requires the ""fully qualified ref"" to be specified: ref | string | Required. The name of the fully qualified reference (ie:¬†refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.Nevertheless I think this change makes things less surprising and better for users so I'm cool with it... I would ask 2 things though:- if we no longer require the ref to be formatted in a particular way, could we remove that XmlComment in the code, that tells users not to pass in `refs/` ?- Since the Update (patch) endpoint has the same behaviour, can we ensure this is also updated/tested in octokit with similar changes?  (i am on mobile so haven't checked if it uses the same ApiUrl overload and/or has the same comment guidance about not passing `refs/` in)",,,,,,
590460423,1934,Issue,I accidentally closed this out because I could rewrite the branch to update the history and drop the tooling commit. I've opened #2104 to restart the process and see if we can land the fix.,,,,,,
459036579,1933,Issue,please note that the `reference` parameter has some caveats about what you can pass in:,,,,,,
459039285,1933,Issue,"Well, golly gee wilikers!  But the docs at [here] clearly show the lineThe third parameter above is called  and the relevant parameter of  is also called  which is misleading.  I think it does not matter what summary comments are in place, but there are no docs on  for this method and I am using the fact that parameters named the same should take the same data.  Or at least the value of a (from above)  property; that would seem to make intuitive sense.  Here,  property would have the value .  When I glibly throw it in to  then the URI is formatted improperly.I am going to submit a pull request with some more fault-tolerant code.",,,,,,
459041520,1933,Issue,", thanks for pointing that out, and you're correct.  This code works:However, the extra  call just seems so superfluous.",,,,,,
459067643,1933,Issue,"Created pull request #1934 to fix this, by adding code to the ApiUrls.Reference method's second overload to remove occurrences of the string  from the value of the  parameter before formatting the URI.",,,,,,
459076445,1933,Issue,"I think we did this because we envisioned the typical use case would provide just the local ref name, rather than the fully-qualified namespace for the ref. But we can re-evaluate that decision in #1934 and see if it's worth a breaking change.",,,,,,
459080219,1933,Issue,The change I propose _is_ pretty fault-tolerant.,,,,,,
496027421,1933,Issue,You've help me so much with your comments above. Thank you.,,,,,,
458904606,1932,Issue,"Hi , thanks for this!  It looks good although one thing I noticed when checking the docs is that the create event payload has  `master_branch` and `description` fields as well, so it would seem a good idea to add them to the response model in this PR.  What do you think?",,,,,,
458952785,1932,Issue,"Hi , thanks for this! It looks good although one thing I noticed when checking the docs is that the create event payload has `master_branch` and `description` fields as well, so it would seem a good idea to add them to the response model in this PR. What do you think? Hello, yes, it mentions those 2 properties, however, the doc mentions that webhooks do not receive repository creation events : Note: webhooks will not receive this event for created repositories. Additionally, webhooks will not receive this event for tags if more than three tags are pushed at once.And when I see the explaination of those 2 fields : master_branch | string | The name of the repository's default branch (usually¬†master). description | string | The repository's current description.as well as the content of the events sent by github for the creation of a branch which does not contain them, I've decided to omit these here since, from my understanding, they will never be part of the payload we receive",,,,,,
459181801,1932,Issue,"> as well as the content of the events sent by github for the creation of a branch which does not contain them, I've decided to omit these here since, from my understanding, they will never be part of the payload we receiveOctokit.net uses these payload response classes for the results from ""Activity Event"" Api, which does include repository events and thus does include these fields.The response classes can also be used to deserialise webhook payloads, although we dont natively have support for webhooks, so users doing this would be having to call the SipleJsonSerializer themselves currently.So I think the extra fields should be included, since the current main supported use case in Octokit (the events API) would use them.  They would then just be `null` for anyone using them from a webhook perspective.When we implement native webhook support we can consider whether to re-use these payload classes or have new ones specifically for the webhook payloads",,,,,,
459276834,1932,Issue,"OK, I'll be adding them then :)",,,,,,
459284518,1932,Issue,And done :),,,,,,
459296470,1932,Issue,"release_notes: Support `CreateEvent` and `DeleteEvent` payloads, using new response models `CreateEventPayload` and `DeleteEventPayload`",,,,,,
459296895,1932,Issue,Thanks !  (we have quite a few payload events that aren't implemented - it would be great if you wanted to add more!)![LGTM],,,,,,
459300003,1932,Issue,"Thanks ! (we have quite a few payload events that aren't implemented - it would be great if you wanted to add more!)  ![LGTM]Hi, I might take a look into that a bit later but I really needed those ones and I have to first take care of the code that depends on them üòÑ",,,,,,
456061331,1931,Issue,"Sorry, I didn't mean to target upstream. üòäClosing...",,,,,,
456036701,1930,Issue,"Hey , this is cool for building locally on a mac/Linux but the only thing is that on travisCI Mac and Linux builds we actually DO build the full framework as the build agent is setup with mono So maybe rather than hardcoding noframework=true in build.sh this should be passed in so we can set false in travis? Also I think the tool install step of the build might still be a problem on Mac/Linux if you don't have mono as it uses nuget (from mono) to pull down gitversion doesn't it ?",,,,,,
456050364,1930,Issue,"Also I think the tool install step of the build might still be a problem on Mac/Linux if you don't have mono as it uses nuget (from mono) to pull down gitversion doesn't it ?Yes, the tool install step requires nuget. GitVersion is then executed through mono (cf. tools/gitversion_wrapper.sh).  So maybe rather than hardcoding noframework=true in build.sh this should be passed in so we can set false in travis?I'm happy to remove the hardcoding there.---Currently I'm building locally by sidestepping the GitVersion invocation and returning a hardcoded JSON because neither mono nor dotnet invoke the downloaded binary without error. (mono segfaults and dotnet is missing a library).I did install `nuget`, which depends on mono to fix the step in the first place. IIUC the tools are required for determining the version (which could possibly be implemented differently in the build project's `GitVersionRunner`?) and to format the code.  If you want, I can try messing around with both these issues.  Do give me a heads up what type of solution you had in mind :)",,,,,,
456132249,1930,Issue,"Sidenote: I'm currently running into issues trying to replace `GitVersion.CommandLine (3.6.2)` as Tool-Dependency with `GitVersionCommon (4.0.0)` as NuGet package. The NativeBinaries from LibGit2Sharp are currently binding to curl & openssl with a version [apparently deprecated for security reasons].LibGit2Sharp is looking at [replacing that native binding], but unfortunately that has not happened yet. As such I am unable to replace the GitVersion related code right now.",,,,,,
456192683,1930,Issue,"I'm thinking if we had ""nofullframework"" mode for local use only, it could skip running gitversion as well as not build the net45 targets you've already implemented",,,,,,
456221797,1930,Issue,were you thinking something along these lines? Happy to make some more adjustments :+1:,,,,,,
456233327,1930,Issue,"Yep that's what i was thinking - love the warning you added by the way :+1:A couple of other thoughts (apologies im on mobile at the moment so I dont have links to affected source code lines etc)- We should skip the ""ToolInstaller"" of Gitversion and CodeFormatter tools when running in this mode (since it will fail if mono/nuget etc arent present)- The code formatter also wouldn't work on linux/mac without mono (it may even not work WITH mono, i havent tried!) so perhaps that build task should log a warning if it is ever executed in NoFramework mode rather than trying to do stuff and blowing up (assuming it does blow up!)- you could change default behaviour of build.sh to run in NoFramework mode by default (so things work for linux/mac local users ""out of the box"".  But then change travis.yml so that it still builds the full framework stuff on tarvis- I wonder if it would be clearer to name the mode ""CoreOnly"" rather than ""NoFramework"" and invert the logic (`!$NoFramework` in the csproj conditions is a bit of a confusing double negative)... thoughts?",,,,,,
456379720,1930,Issue,"We should skip the ""ToolInstaller"" of Gitversion and CodeFormatter tools when running in this mode (since it will fail if mono/nuget etc arent present)Done The code formatter also wouldn't work on linux/mac without mono (it may even not work WITH mono, i havent tried!) so perhaps that build task should log a warning if it is ever executed in NoFramework mode rather than trying to do stuff and blowing up (assuming it does blow up!)The code formatter only runs on windows in the first place, but since we're not downloading the tools for CoreOnly builds, I added an explicit check to the `ShouldRun` implementation of the task. you could change default behaviour of build.sh to run in NoFramework mode by default (so things work for linux/mac local users ""out of the box"". But then change travis.yml so that it still builds the full framework stuff on tarvistravis invokes the buildscript. Changing the buildscript's default would involve creating an explicit switch to turn off the default. My bash is somewhere between bad and gruesome, so I don't want to mess around there I wonder if it would be clearer to name the mode ""CoreOnly"" rather than ""NoFramework"" and invert the logic (!$NoFramework in the csproj conditions is a bit of a confusing double negative)... thoughts?Agreed and done",,,,,,
456387299,1930,Issue,". My bash is somewhere between bad and gruesome, so I don't want to mess around thereI year ya ü§£  how about this though - the cake script could default CoreOnly to be true for Windows and false otherwise. Travis can pass in false which should override the default value.  The bash script should already pass through any parameter provided to it (you should see some already being passed in the travis yml)",,,,,,
456388605,1930,Issue,"The linksources parameter is a good example to follow. Travis passes it in, nothing special for it in the build.sh (it passes all parameters through to cake) and the cake build uses the value provided or uses a default if none specified (here ) We can follow similar approach except default for CoreOnly will be conditional on windows or not My aim here is for a contributor locally on Linux or OSX just runs build.sh and everything just works (without losing anything on the Windows or travis/appveyor side)",,,,,,
456428796,1930,Issue,could you kick travis for me? It seems there has been a timeout in the LinkSources check,,,,,,
456566608,1930,Issue,"There's a section in the build that explicitly logs the value of the parameters, could we add the CoreOnly one to that?This is looking good! I'll do a test on my MacBook today üòÅ",,,,,,
456803978,1930,Issue,"Great stuff!  Tested on my macbook tonight, works perfectly :+1:Is this ready for merging, from your perspective",,,,,,
456881958,1930,Issue,Anytime :),,,,,,
457866451,1930,Issue,poke: what's the latest on this?,,,,,,
457867397,1930,Issue,"Ah sorry  I've been on holidays this week, I'll try to get to it today üò¨",,,,,,
458531349,1930,Issue,"poke: Do tell me when I start to seriously annoy you with this, otherwise I'll keep more or less regularly poking you here :wink:",,,,,,
458901259,1930,Issue,"It's all good... I'm doing some serious juggling at the moment so poking is fine/necessary üòÄ So I was just doing some final testing and found an issue where on Windows in both VS2017 and `dotnet` cmdline, it now is only building the `netstandard1.1` targets instead of `netstandard1.1` and `net45`.  Makes sense I guess since only Cake currently has the logic to set this flag appropriatelyIf I were to propose the ideal result of this PR, it would be:‚úÖ Cake builds on CI (appveyor and travis, all OS'es), build both platforms‚úÖ Cake builds on linux/mac build only netstandard1.1‚úÖ Cake builds on windows build both platforms‚úÖ local ""native"" builds on linux/mac build only netstandard1.1‚ùå  local ""native"" builds on windows build both platformsSo far we have 4 out of 5.  Maybe we need to actually set a default value for `CoreOnly` in MSBuild land, by [detecting if on Windows] or not?",,,,,,
458907622,1930,Issue,"rough quick-patch: Add `<CoreOnly Condition=""$(CoreOnly) == '' and $(OS) == 'Windows NT'"">False` to all property groups involved? Can you verify for me that this fixes the native windows build?Alternatively `<CoreOnly Condition=""$(CoreOnly) == '' and $([MSBuild]::IsOsPlatform('Windows'))"">False` seems to be the preferred solution in the issue you linked.",,,,,,
458912967,1930,Issue,"yeah, sounds like the `IsOsPlatform()` is the recommended option.  I tested on windows adding your 2nd option to the csproj files and it appears to work :+1:",,,,,,
459221649,1930,Issue,"Tested on windows and mac, plus reviewed the travis and appveyor builds and everything is looking great!  5 out of 5!woohoo!  ![LGTM]Thanks for working on this",,,,,,
459221867,1930,Issue,release_notes: Adjust Cake and native build configurations to allow building on OSX/Linux out of the box,,,,,,
453984471,1929,Issue,thanks!,,,,,,
478201772,1929,Issue,release_notes: Spell checked markdown doc files,,,,,,
453506383,1928,Issue,do you have a code snippet I can work with?,,,,,,
456901692,1928,Issue,"FYI this was a recent change, both will work on api.github.com and GHE 2.16. Only the former will work on GHE 2.15 and below",,,,,,
457890079,1928,Issue,"BTW sorry I haven't had a chance to make a full repro. I will try to find time to provide more info. And BTW I was using this with GitHub.com, not GHE. The support person who I reported the general problem to said they couldn't repro it using the documented API call, so I'm not sure what problem I had with that. Could be I was doing something bonkers.",,,,,,
459297618,1928,Issue,"both will work on api.github.com and GHE 2.16. Only the former will work on GHE 2.15 and belowBased on this issue, It sounds like the ""old"" way (ie the raw array, current implementation in this library) is somehow not actually being supported on dotcom...",,,,,,
459300580,1928,Issue,"Actually, I just confirmed the integration tests that use this method are fine, so I think perhaps  you may have been onto something here üòù  Could be I was doing something bonkers.I'll close this issue but please re-open it if you do find something further on this...As a separate concern, we should implement support for the newer API call schema, but it does look like GitHub Api is accepting the old array format (generally they are very good with backward compatibility and gating schema changes behind preview headers etc)",,,,,,
453207270,1927,Issue,OK looks like I can call:To more easily do what I want. But the issue above still seems valid.,,,,,,
453217345,1927,Issue,"Note: Looks like Issue.Labels.AddToIssue() doesn't work due to an Octokit bug , and also due to a GitHub issue anyway.",,,,,,
453261952,1927,Issue,Here's the code I have to do to work around this issue:,,,,,,
453505620,1927,Issue,"thanks for the report and the snippet - I've been able to get this into a integration test and see the behaviour for myself. This is down to the serializing of `IssueUpdate` sending a `null` Milestone rather than omitting the field from the JSON payload if it's not cleared by the user.A cleaner workaround if you have the issue from the API would be to use `issue.ToUpdate()` which gives you the pre-populated milestone and issues ready for you to then augment, so you don't need to manually enumerate things yourself (Assignees are also caught up in this `null` behaviour, in case you're using that in these issues).",,,,,,
455307986,1927,Issue,"BTW I don't see the problem with Assignee: I tested it out by only setting milestone and labels, and the existing assignee(s) on the issue remained.",,,,,,
458905930,1926,Issue,release_notes: Add `Labels` to `PullRequest` response model,,,,,,
458905998,1926,Issue,Thanks  and sorry for the delay!!![LGTM],,,,,,
451009018,1925,Issue,Was this supposed to be a joke?Yes. It was a very old commit in the repository,,,,,,
478201460,1924,Issue,release_notes: Update `releases` sample code to await the async call,,,,,,
449736889,1923,Issue,You need to `await` on the previous line:I've opened #1924 to resolve this,,,,,,
449737557,1922,Issue,"the code that you've linked to was last updated in 2013, so I'm not surprised the docs are a bit out of sync with that. Is there some example code that isn't working as expected? It'd be great to start this discussion around something concrete.",,,,,,
578999195,1922,Issue,Hello world,,,,,,
447328164,1921,Issue,"Don't think the SourceLink eror is Cake related could be that I'm hitting ctaggart/SourceLink#322Travis Mac & Linux seems happy.LTS .NET SDK is 2.1.500, might be worth updating.",,,,,,
447614617,1921,Issue,"yep, re-triggered appveyor and it's green nowThanks",,,,,,
445164581,1920,Issue,"Hi :wave:Which download_url property are you referring to? The ""search code"" API response has various fields, which should all be implemented in the octokit.net response model. There is Url GitUrl and HtmlUrl Also if you want to get the content of files you can use octokit to do this using the `RepositoryContentsClient` client,eg `client.Repository.Content.GetXXX()`",,,,,,
445174539,1920,Issue,"Thanks for your reply  !What I'm looking for is what I underlined in the image below:That in the image is just a test from a public repo, but putting that url (underlined in red in the image) as the _address_ parameter in my `WebClient.DownloadFile` I'm able to download the actual file.If I try to use Url, GitUrl or HtmlUrl I can't download the file.Am I looking at the wrong thing / in the wrong place?(I'm fairly new to programming so sometime I make very basic mistakes)Thanks!",,,,,,
445185294,1920,Issue,"Ah ok, the API response in your screenshot is not from a ""search code"" query, which is what your octokit.net code is doing.To make the request in your screenshot you would use the repository contents API, `client.Repository.Content.GetAlContents()` which returns a list of objects of type `RepositoryContent` which does have the `DownloadUrl` field you are looking for",,,,,,
445189357,1920,Issue,I just tried and I can actually see that I get the object (if I show the message box with the _Count_) but then I can't seem to find the **DownloadUrl** field you're mentioning:What am I doing wrong?Thanks a lot!!,,,,,,
445195441,1920,Issue,"GetAllContents returns a list, so you'd need to access the items in the list using the normal ways you do that in c# (such as iterating the list in a loop, using an index or using c# linq queries like First() Last() Where() etc)",,,,,,
445197072,1920,Issue,It worked!!Thanks so much  !!,,,,,,
445399620,1920,Issue,Nice one!,,,,,,
632402504,1920,Issue,"how do I get it from the url?when I use the above, I get JSON, but I just want the raw file - how do I get the download_url without using JQ?",,,,,,
443553429,1919,Issue,release_notes: Add additional optional fields `Login` and `AllowSignup` to `OauthLoginRequest` request,,,,,,
458906625,1919,Issue,![LGTM]Thanks  sorry for not getting back to this earlier üôè,,,,,,
443478653,1918,Issue,"Hi , some of these older endpoints or requests have had fields added to them over time which we've missed in octokit!It would be awesome if you want to send in a PR. FYI our convention for optional fields is they should be nullable and should be set via object initialisation syntax (ie not via the `ctor`) if that helps! üôè",,,,,,
448235709,1917,Issue,These are all available on the `Repository` API response:,,,,,,
451004137,1916,Issue,"""Validation Failed"" is a generic error that the server sends if it can't resolve the search request. Can you provide the full snippet of code you are running that triggers the failure, so we can try and reproduce it on our end?",,,,,,
529922211,1916,Issue,Closing this out due to lack of repro and inactivity.  if you're able to provide more information we're happy to investigate further.,,,,,,
451008407,1915,Issue,"I know there are millions of users on GitHub and getting a full list in one API call is impossible, but I thing even a direct wrapper for the [original all users API] would help. if you're interested in contributing that endpoint let us know, I'm not sure how we overlooked that.",,,,,,
451009803,1915,Issue,"Also, if you're wanting to work over public GitHub data I'd look at the BigQuery data set that's available:",,,,,,
442222743,1914,Issue,"Hi  Thanks for picking this up! Sorry for the issue - it looks like an unfortunate side effect of the way later frameworks handle the default case, as obviously by ""or"" ing the value onto the existing setting we were attempting to mitigate old frameworks by ADDING TLS1. 2 to the existing settings! Being an app domain wide setting it's not something we did lightly however we did feel it was the best choice considering github moving to TLS1. 2 would have caused alot of octokit uses on earlier frameworks to stop working, and having each user need to discover what the problem is and then add a line of code to their app seemed pretty messy, thus we put something in the library.Your proposed fix looks good, would you like to send it across as a PR?",,,,,,
459310858,1914,Issue,"I've pushed a fix for this, FYI #1936",,,,,,
440661421,1913,Issue,release_notes: Add `Slug` field to `Team` response,,,,,,
440646606,1912,Issue,release_notes: Implement [Require Multiple Approving Reviews for Protected Branches (Preview)],,,,,,
458908816,1912,Issue,breaking_change: `BranchProtectionRequiredReviewsUpdate` requires new `RequiredApprovingReviewCount` to be specified when created,,,,,,
440642182,1911,Issue,![],,,,,,
439255580,1910,Issue,"Offhand I'm not sure how they differ (I thought it'd be creation date but it doesn't look like that).Please get in touch with [GitHub Support] if you'd like a better answer, because Octokit doesn't have control over either list.",,,,,,
439099051,1909,Issue,"the third parameter in `Release.Get` is the release ID, not the tag itself. The [API docs] have more details about it.If you want to get details about a specific tag you should use the [Tag API]:",,,,,,
439097231,1908,Issue,"because there aren't any releases listed in the repository - just the existing tags You want to enumerate the [tags] themselves, which supports pagination options:",,,,,,
437596856,1907,Issue,"There's no unified API for this, and what's in #1906 should support most of the cases: - Merge commits include the Pull Request number and look like this:  - Squashed pull requests also include the Pull Request number, but have a different format:  - Rebased pull requests will likely have their commits rewritten, so identify their source is likely even tricker (and not something I've explored)",,,,,,
437627113,1907,Issue,"You can also identify the merged PR using the issue events API, so the way I've done it in the past is to load all PR's for the equivalent date range, then select only those whose merge event is in the commit list from the comparison APICode example we use for our release notes generation is here:",,,,,,
451003629,1907,Issue,"I'm going to close this out because it's not something currently provided in the GitHub API, and some workarounds have been suggested.",,,,,,
436454478,1906,Issue,"You can use the [Compare two commits] API to get the list of commits between two refs (up to 250 of them).This does not contain the changes in each commit, but you can build up the details programatically:This is what the output looks like for me:Hope this helps!",,,,,,
437543594,1906,Issue,Thanks a lot :) That helped.,,,,,,
435759970,1905,Issue,Hi  build failed but cause does'nt seem to be related to my changes.,,,,,,
435854384,1905,Issue,I restarted the problem build - let's see if it goes green,,,,,,
436029747,1905,Issue,Hi  and  when you get a chance let me know what you think!,,,,,,
436065143,1905,Issue,Hi  all done.,,,,,,
472759389,1905,Issue,"Hi  and ,,Has taken me a while to make changes due to other commitments, however, I have now made the changes advised.Let me know what you think.",,,,,,
472782669,1905,Issue,":wave: Hi  Thanks for picking this back up!  I'm just trying to get back up to speed...  The changes look pretty good now. Just on the `[Obsolete]` messages, I can see previously I suggested that this wording might be more clear... what do you think? In terms of the [Obsolete] messages, can we use these please? ""This ctor does not support the time component or timezone and will be removed in a future release. Please use the DateTimeOffset overload instead"" ""This method does not support the time component or timezone and will be removed in a future release. Please use the DateTimeOffset overload instead""",,,,,,
473056561,1905,Issue,"Hi  changes for [Obsolete] messages have been done. The CI failed, however, it may be an intermittent error as I don't believe the changes could have caused this to fail. I'm not sure how to invoke the CI again without an additional check-in?",,,,,,
473089518,1905,Issue,"As a user you can't rerun them, I've kicked them off again",,,,,,
473749360,1905,Issue,Thanks . You ok for this to be merged now?,,,,,,
474308161,1905,Issue,Yep I think we're good now!  Thanks  :+1: üö¢ ![LGTM],,,,,,
477509178,1905,Issue,Thanks  do you know when this update will be available via nuget?,,,,,,
478200504,1905,Issue,release_notes: Enhanced `DateRange` class used in `SearchClient`  requests to support time and timezone components,,,,,,
486067452,1905,Issue,Hi  just confirming if you do the release notes or do I? Sorry this is my first contribution no am not sure.Am keen to get a new release available via Nuget.,,,,,,
486142452,1905,Issue,"Hi  sorry for the confusion, this is something I do... I'm really sorry I've just been tied up in lots of real life stuff and not cut a new release as yet.  If you add a custom nuget source of our appveyor feed ``, you can get the latest ""beta"" packages from our master branch, but yes I really do need to make a release and push to nuget proper üôè",,,,,,
486587217,1905,Issue,Not a problem  completely understand,,,,,,
435350543,1904,Issue,"Hi  Yes it does look like we ignore the time component at the moment.  I'm not sure if this is because the time support was added to GitHub after octokit had implemented request or whether it was just an oversight.What we could do in order to not affect existing behaviour is keep the existing `ctor`s that accept `DateTime` and mark them `[Obsolete]`, having them continue to only format the query string as YYYYMMDD, then add new `ctor`s that take `DateTimeOffset` types (giving us timezone info as well) and being formatted out to the full ISO8601 timestamp format including time zone info.  Thoughts?  If you are keen to send a PR that would be awesome :+1:",,,,,,
435660965,1904,Issue,Hey  your suggestion solves the issue and is probably the best approach for backwards compatibility. I'll send a PR soon.,,,,,,
530123896,1904,Issue,"Closing this out as we merged #1905, but this hasn't been published to NuGet so we have #1972 open to track that.",,,,,,
434935031,1903,Issue,"Hi ,Since octokit is a client for the github API, we can't add any method that isn't already provided by github API itselfSo yes to get the 2nd most recent release you would need to use the GetAll method then take the 2nd item. However I don't think you'd need to sort them yourself as the API should already return them in reverse chronological order. Furthermore if you use the `ApiOptions` overload you can request only 1 page of results and that will keep things to an efficient single call (our default behaviour is to loop through and call all pages, so you should use the override to control this)See raw API response showing a single page of reverse chronological ordered results:",,,,,,
434938150,1903,Issue,Thanks  using the ApiOptions is a good idea.,,,,,,
433774538,1901,Issue,"Hi  :wave:In GitHub API terms, all pull requests are also issues.  So when it comes to things like assignees, labels, etc you can use the issues API calls to get those details for PR's as well.Just make sure you use the `pullRequest.Number` field, when calling any issue related endpoint.egHope that helps!",,,,,,
433906258,1901,Issue,Hi  Thank to you  I got Label information as a pull request unit.Thank you again.,,,,,,
433659594,1900,Issue,"I have a repository with one pre-release created, if I use the GitHubClient to get the latest release it errors. In this scenario I would expect it to return null rather than an error.In this case we're just mirroring the GitHub API and sending you the response we get. If you think this behaviour could be improved, [this is the code to change].We generally follow this pattern where we need to handle a specific exception and not propagate it to the caller:I've got mixed feelings on returning `null` here, but that's likely because I'm not writing much C# these days. If you think that's fine, have a shot at submitting a change and ensuring the docs reflect this new behaviour.. Also, is it possible to have a get latest release and a get latest pre-release? I'm afraid not. This isn't supported by the GitHub API.",,,,,,
435350892,1900,Issue,"If you think that's fine, have a shot at submitting a change and ensuring the docs reflect this new behaviour..When the GitHub API returns a 404 we throw a `NotFoundException` - I'm not sure we want to start changing this behaviour in only some cases to return null instead?",,,,,,
451005264,1900,Issue,I'm going to second what  said here - `NotFoundException` is something I'd prefer to throw here rather than returning `null`.,,,,,,
435351447,1899,Issue,Hi  This information isnt returned by the underlying API  so it isn't possible for us to do this in Octokit.It might be worth looking into the GraphQL API and seeing whether it has this information,,,,,,
433542716,1898,Issue,"an issue can belong to multiple project boards, so I'm not sure that's a supported case via the API",,,,,,
433543348,1898,Issue,Hi  thanks for the response.Was hoping I could get any it may be related to.,,,,,,
433546255,1898,Issue,"I don't expect this to make into v3, which Octokit.net relies on, but you can use the GraphQL API (v4) and query for it like this:There's a beta C# library for it over here if you'd like to get access to that:",,,,,,
451005396,1898,Issue,Closing this out as I don't expect GitHub's v3 API to add support for this.,,,,,,
435353254,1897,Issue,"Hi  , Im not quite following your question sorry... to do an OAUTH flow you need to redirect the user to interact with GitHub to provide authorization, then GitHub will hit your API back with a code which you can then exchange for an auth token.  Does that help or have I misunderstood your question?",,,,,,
439593036,1897,Issue,"i want to show Product,Product Category, and then Variant in select 2 in option using jquery with MVC 5.can someone help me ? i am new in jquery",,,,,,
439613013,1897,Issue,I don't believe this is related to the GitHub API,,,,,,
431703960,1896,Issue,Hey  :wave:Thanks for working on this! I'm travelling for work at the moment but will take a look this week and give you some feedback,,,,,,
437598446,1896,Issue,I think I implemented all requested changes.,,,,,,
440643722,1896,Issue,release_notes: Implement [TeamDiscussions API (Preview)],,,,,,
440644888,1896,Issue,Great stuff  thank you!!![LGTM],,,,,,
440659808,1896,Issue,"Oops, I just ran the integration tests and had to fix up one failure.  Then I realised there were no integration tests for `Get()` and `GetAll()` so I've implemented those.While doing that though I discovered that we dont have any unit or integration tests here for the `ObservableTeamDiscussionsClient` methods, which we need.Also the `GetAll()` method takes a `sort` parameter if you [look at the docs], so we need to create a `TeamDiscussionRequest` class with `SortDirection SortMethod` property, and update the `GetAll()` methods like this:I've put a couple of tasks in the pull request body, let me know if you're happy to tackle these or if you'd like me to",,,,,,
440814942,1896,Issue,I will look at it. Give me few days.,,,,,,
431704028,1895,Issue,"Hey  sorry I haven't reviewed yet, I'll take a look this week :+1:",,,,,,
591144555,1895,Issue,"I added a new test to leverage the new properties, integration tests are passing locally",,,,,,
591420417,1895,Issue,release_notes: Added support for Deployment Status API improvements,,,,,,
592980463,1895,Issue,Thanks for finishing this ancient thing off guys!,,,,,,
430647137,1894,Issue,Oof I thought this was newer than it was,,,,,,
430585180,1893,Issue,"Hey  ,Yes you can do this using the `IRepositoryContentsClient.GetReadmeHtml()` methodeg Hope that helps!",,,,,,
430055745,1892,Issue,"Can you share some code?Without knowing anything it looks the object is getting converted to a string automatically, and since `ToString` is not overriden, you just get the type name[You can see here for more information on `ToString`]",,,,,,
430057522,1892,Issue,In my ASP.NET Core Controller:In View:,,,,,,
430058188,1892,Issue,Try changing ``,,,,,,
430058759,1892,Issue,Try changing ``Thank you!!! That solved it. üòÉ,,,,,,
429623045,1891,Issue,"please ensure you are authenticating the `GitHubClient` as part of making the API call, and that you do have access to that repository. The examples [here] should help you get started.",,,,,,
429623559,1891,Issue,"I'm using OAuth authentication with active token, and able to get data of the public repositories but not the private. And yes, I can access this repository on browser.I think it's related to the ""visibility"" property which is not exposed in the .net api",,,,,,
429624995,1891,Issue,"This feels like you don't have the `repo` token scope set, which grants access to private repositories. More info about scopes can be found [here].",,,,,,
429625928,1891,Issue,- Thanks a lot! I added control to the token and it did the job üëç,,,,,,
429599302,1890,Issue,"Hi  those are called repository topics. We don't have support in octokit for them just yet, there was an in progress PR but it hasn't been completed. See #1707 and #1721 It would be awesome If you'd like to contribute by helping to complete that PR!",,,,,,
429571919,1889,Issue,"the GitHub API doesn't support searching for multiple languages, so it's not possible to do this search using the Octokit libraries.",,,,,,
429574571,1889,Issue,Can you recommend any other ways to get a multi-language collection of repositories?Using another library?Or filter the search results?,,,,,,
429620835,1889,Issue,"""run multiple searches use the same search term with a different desired language"" is the closest you're going to get to the desired behaviour, but you might also need to do some filtering and merging of results to prevent duplicates.",,,,,,
429303486,1888,Issue,Building up a `DataTable` is outside the scope of the Octokit.net project. I'd recommend using [Stackoverflow] or similar to troubleshoot.,,,,,,
429119538,1887,Issue,The `Page` parameter is the one you want:,,,,,,
429090606,1886,Issue,you can omit the `Language` parameter to search for any language:,,,,,,
427955875,1885,Issue,"Changed the variable ""request"":- was ""var"" - became ""SearchRepositoriesRequest"";- was ""local"" - became ""global"";Changed the method ""SearchReposit (string searchQuery_str, string lang_str)""- added the argument ""bool null_flg"" - became ""SearchReposit (string searchQuery_str, string lang_str, bool null_flg)"";- added check ""bool null_flg"";The code looks like thisWill this be a normal decision or can it be made more competently?",,,,,,
429099845,1885,Issue,"that seems like you're on the right track. I'm not sure how to address this, but feel free to open more specific issues like #1886 if you have further questions.",,,,,,
431704084,1884,Issue,"Sorry for the delay , I'll take a look at reviewing this, this week",,,,,,
543368962,1884,Issue,"It's been approximately 52 weeks, could this be reviewed? I have a strong need for it right now rather than the raw parsing I'm doing.",,,,,,
544522324,1884,Issue,"It's been approximately 52 weeks, could this be reviewed? are you able to provide feedback for the changes? The more eyes we have on this, the quicker it should be when I can make time for it...",,,,,,
544714793,1884,Issue,"are you able to provide feedback for the changes?I lack the internal familiarity to provide more than a ""yep this is C# alright"" overview of the code. If that would be sufficient for you I can gloss over it to look for egregious performance issues. Honestly I don't feel comfortable providing any feedback that would be taken at face value for this project at this time. If reviewers is something you need to get this moving forward I might be able to devote time to it.",,,,,,
544733524,1884,Issue,"If reviewers is something you need to get this moving forward I might be able to devote time to it.This would be a great help. We have a decent suite of automation and tests to catch things, but additional eyes from the ""yep, this code makes sense"" or ""this bit of code looks weird"" perspective would help.You shouldn't need to be deeply familiar with the internals to help out, but feel free to ask questions in here if there's something that doesn't make sense - I'm more than happy to turn these questions and answers into guidance for future reviews.",,,,,,
640283582,1884,Issue,release_notes: Add support for Organization webhooks,,,,,,
426872055,1883,Issue,"Hey  I'm not entirely sure what you're getting at sorry, it doesn't seem to be related to octokit.netYour comment about storing an access token in a cookie/session doesn't sound correct though - if you have human interaction you should use the oauth flow, and if you are a bot type system then you could store an access token in the app settings rather than a session, or better yet use a github app for more granular control on things Have you read the info on the github developer site about authentication options? If you do have an issue related to this library (octokit.net) can you please clarify a bit more? Thanks",,,,,,
426929939,1883,Issue,In the docs OAUTH flow example you save the accessToken in a session and then access it in different actions.This works fine for when I am do this on my own localhost but when I try to do this through my Google Extension for GitHub the cookies are never persisted and so the session is always empty.Is their any other way than using Session to get the credentials for each action?,,,,,,
426943837,1883,Issue,Ah sorry I thought you were referring to a personal access token So it sounds like the fact there's a chrome extension involved is a complicating factor?  I'm still not quite putting everything together here though sorry - are you developing a chrome extension yourself and trying to have it perform the oauth flow (I can't see how that works since you need github to hit a url to perform some of the flow) or are you saying you have a chrome extension installed that is somehow affecting what you're trying to do with an asp.net website that is trying to do oauth flow with github?,,,,,,
426950932,1883,Issue,"Yeah, thanks for the help.Here's the full flow:I am creating a chrome extension for GitHub, similar to ZenHub extension. This chrome extension inject a button on the GitHub page. See screenshot below.![screenshot]This button then calls my /setup route on my server when clicked.I'm using GraphQL for my backend and not rest API but it shouldn't make a difference.I then redirect to that redirectUrl on my client side immediately.In the /setupCallback I do this:And then in different requests I try to set the credentials again but the gitHubToken is always null...So basically the user will be on GitHub.com but hitting my server through my chrome extension.The CSRF session variable is fine and works for some reason but the GitHubToken session variable never does.This is only a problem when trying to do this through my chrome extension.",,,,,,
427179576,1883,Issue,Figured it out. Session wasn't working properly because for CORS you need to set samesite mode for cookies to none.,,,,,,
426867149,1882,Issue,"Hey ,Nested Teams support in github means that this is expected behaviour. If a team has a parent team then that child team does ""own"" all the repos they inherit from the parent. The reason your test curl API call doesn't show this, is that nested teams is still in preview mode and requires a custom header to be passed to enable the preview feature. But once the preview is over, the default API behaviour will change to this anyway so there isn't much to be gained in holding onto the old behaviour. In octokit.net we typically implement the preview features because our users generally want the latest and greatest, and unfortunately it's not possible to opt out (except by using a previous version before we implemented the bested teams stuff). As mentioned, it's a dead end to keep relying on the old behaviour anyway so you'll have to adapt at some point üòÅHttps://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository",,,,,,
426912489,1882,Issue,"Thanks for such a detailed answer!Personally, I'm disappointed, because the new behavior feels counter-intuitive.However, it's not related to Octokit.NET itself, so I'm closing this issue.",,,,,,
426938997,1882,Issue,No worries! I don't personally think it's counter intuitive since it's just an inheritance mechanism - so a child team should have all the permissions/repos/access that it's parent does... But everyone does think about things differently! What's your use case for wanting to not be told about repos that are accessible via inheritance? You should definitely leave your feedback for the github API team on the developer site!,,,,,,
426955461,1882,Issue,"What's your use case for wanting to not be told about repos that are accessible via inheritance?My recent task was to update a set of repos in selected child teams only. I just realized that I updated not only child team repos, but repos from the parent team. Hopefully, that did not brought any side effects, I just spend more time on that.One noticeable thing about repos in inherited teams is that when you use a site to explore nested team repos, you can not distinguish repos in a child team from repos in parent team.Our org structure has some top-level teams with a bunch of repos in it and smaller child teams with repos too.So, when you navigate to a child team you can see more than 100 repos combined in a single list. It's hard to understand the real structure of the teams content.You should definitely leave your feedback for the github API team on the developer site!I already emailed them several times about it and other Teams API bugs.",,,,,,
426811037,1881,Issue,Hi  You should be able to access a repository license information using the `.License` property of a `Repository` class (returned from `client.Repository.Get()`) And you should be able to get the license file contents using `client.Repository.GetLicenseContents()`,,,,,,
427120356,1881,Issue,Could you show a code example.I try to do ... but I can't,,,,,,
429309411,1881,Issue,"it returns a `Task`, so you need to `await` on it to get the result:",,,,,,
426178856,1880,Issue,"Hey , `ApiOptions` is our class that controls pagination, but there should be an overload taking the `CommitRequest` request model, that allows you to provide the filtering details such as path, sha, etc.Give that a go and let us know how it goes!",,,,,,
426237697,1880,Issue,Wow. I don't know how I missed that. Thanks!,,,,,,
426179671,1879,Issue,release_notes: Corrected the issues sample code to use the correct `ItemStateFilter` enumeration,,,,,,
426179856,1879,Issue,Thanks ! :clap:,,,,,,
426812327,1878,Issue,Hi  There is a lot method to get repository contents in zip format but I don't believe the API had anything for unzipped (although you could loop through and download every file individually it would probably be better to just download the zip then extract it),,,,,,
427137546,1878,Issue,Could you show a code example.I try to do ... but I can't,,,,,,
429314253,1878,Issue,"You should be able to just splat the archive bytes to disk:If you want to programatically interact with the archive, there are many APIs out there like [System.IO.Compression] and [SharpZipLib] that will accept the byte array you received from the GitHub API.",,,,,,
426870904,1877,Issue,"Hey  sorry I didn't have a chance to look at this yet... The documentation you linked to is for graphQL API, but this field is also being returned in REST API responses?In the constructors can you remove the `=null` parts as we don't use default/optional parameters anywhere else so I'd like to stay consistent with that",,,,,,
426873290,1877,Issue,"Hey , yeah as you can see from the links, this field is returned in REST api responses.I will remove the optional parameter. I put it in this way to not break existing codes.",,,,,,
426879881,1877,Issue,Oh yes sorry it only looked at the first link and not the others!I understand the attempt to make it non breaking but these are only response classes which nobody would really be creating anyway (except in mocked tests) and just from a consistency point of view we don't do this anywhere else so I'd rather not do it now,,,,,,
427195357,1877,Issue,it's done.,,,,,,
430585921,1877,Issue,"is this field provided in every API response that returns comments?  If not, it should be nullable (so it can be `null` when the API doesnt provide it)",,,,,,
436603923,1877,Issue,"release_notes: Added `AuthorAssociation` field to `IssueComment`, `PullRequestReview` and `PullRequestReviewComment` response models",,,,,,
436604987,1877,Issue,Thanks  !![LGTM],,,,,,
425098793,1876,Issue,"lmao, fastest approval ever",,,,,,
591150196,1875,Issue,Closing this out as unimportant given how .NET Core is cross-platform and the differences between the OSes is so minor these days. As long as _something_ is submitting code coverage stats I'm good.,,,,,,
591153078,1874,Issue,"I had to work around this to convey the values I needed, but a permanent fix would be to store the returned version with the build context.I'm not sure what values are needed here, and things seem to be working fine for now. If something comes up we can revisit this.",,,,,,
583906795,1873,Issue,Closing this out as it looks like the BuildCrossCheck repositories have been archived,,,,,,
478200816,1872,Issue,release_notes: Update samples to use more up to date repository names,,,,,,
423637947,1871,Issue,"please note that [the API docs] indicate this will default to `open` issues.If you're doing queries that you know are going to return a lot of data, you should enable pagination:With this query I see 1827 issues, similar to your case.If I change up the query to pass in a `RepositoryIssueRequest` object, like this:I now get 22333 open and closed issues. I'm not sure why the disparity between the stats on the website and the API, but I'll leave that as an exercise for you to figure out.",,,,,,
423645571,1871,Issue,"Thank you for your help!The preselected filter shows just ~14,000 issues.![github2]When removing the filter, the number of issues founds equals the number of issues returned by to API, which are ~22,000. So this explains the different numbers :)![github]",,,,,,
422050504,1870,Issue,I noticed `Issue.CommentsUrl` does have a value. Perhaps I should be using that URL instead? I couldn't find a way to use it with the client in any of the repository's examples and tests.Sorry for all my .NET noobness :(,,,,,,
422052976,1870,Issue,"thanks for the details - I looked at the JSON payload being sent in [the API docs] and I don't see `repository` being populated, so I suspect this is just a limitation of us using the same class to where the API doesn't return everything.Also, just a heads up: `new ApiOptions { PageSize = int.MaxValue }` will still only return a maximum of 100 items.",,,,,,
422957429,1870,Issue,"Heya !It's a pretty long history behind this, a pretty good description is in  as well as the other PR's and issues referenced thereLong story short - only some API issue responses include the repository attribute but to avoid too much mess on our side we generally just have one response model",,,,,,
424392353,1869,Issue,üëã Hi  I'm going to assume you pushed this by accident.,,,,,,
419680845,1868,Issue,"release_notes: `IssueLabelsClient.RemoveFromIssue()` no longer fails with a HTTP 400 ""Bad Request"" error from the GitHub Api",,,,,,
419473761,1867,Issue,we're limited by what's supported in the HTTP API -,,,,,,
419445813,1866,Issue,So far I'm having issues using `coverlet` to generate coverage. Opened an issue with them:,,,,,,
419553956,1866,Issue,"Hey  this is awesome! I've been wanting to get coverage stuff in place. I'm not sure about coverlet, I was planning on following what John Skeet has on  (using dotcover I believe)",,,,,,
419572938,1866,Issue,"Hey . Yea, I've just been on a code coverage spree lately.I got coverlet and codecov working with  and I'm using OpenCover and codecov for I'm just having trouble with coverlet and this project, so hopefully they can help me out.",,,,,,
419573345,1866,Issue,"Also, wouldn't you have to get a license of dotcover for this?",,,,,,
419576930,1866,Issue,Hmm I had a feeling you could get dotcover for free on open source projects,,,,,,
419599750,1866,Issue,That is quite possible..,,,,,,
419639772,1866,Issue,"That is quite possible..Here, read:",,,,,,
419961932,1866,Issue,"Okay. Well I don't know how to feel about code coverage tools. I can't find a comparison of dotCover vs other similar tools, but I did manage to get coverlet operational thanks to help from some of their users. We can use another tool in it's place as they all support a common output format.Now i'm struggling with codecov.io. I have it integrated but I can't seem to get their report uploader to work correctly.",,,,,,
424724019,1866,Issue,"I logged some issues for remaining work, but I think this is good to merge.",,,,,,
471328780,1866,Issue,Just checking if you're encountering any issues with Coverlet that's preventing this from getting merged,,,,,,
472791852,1866,Issue,"Sadly I let this one drift and I'm struggling to get back up to speed on it üò≥ Apart from the obvious merge conflicts, it seems like some other things could possibly need looking at now due to the passage of time... for example this is using a local implementation that runs coverlet.exe as a cake tool directly, whereas the linked issue indicates this may now be merged into the `Cake.Coverlet` library.Im also wanting to understand the implications of changing pdb type to portable, and can spot a few things (like hardcoded paths to coverlet.exe) that should be tidied up (declare coverlet path in a more central place, etc)",,,,,,
472941139,1866,Issue,"I've also been MIA on this, so it's not just you.I'll update the PR and dependencies used.And yea, we'll have to find out some more information regarding PDB types.",,,,,,
532204992,1866,Issue,great - thanks for following up with that helpful context!,,,,,,
532205903,1866,Issue,release_notes: Added code coverage reporting to CI build,,,,,,
419247239,1865,Issue,"Hi  I haven't had a chance to attempt to repro this myself yet as I've been on mobile only.Given there's been no updates I'd guess this is an upstream github API change - the question is whether it's intentional or not. You said removing existing labels fails but adding labels works. Does adding a label and then trying to remove it, result in the same behaviour? Out of interest, do these labels in question have emojis in them, or the description field set at all?",,,,,,
419258647,1865,Issue,"Adding a label, then removing it results in the exception.  No emojis or descriptions in the labels that have the issue.",,,,,,
419283546,1865,Issue,Stack info in case it's useful,,,,,,
419618044,1865,Issue,"Cool, I found out what the problem is here.  Turns out we were accidentally passing a string preview header into the `Delete()` method as a message body.  This has been the case for sometime and been working OK (I ran these integration tests just a few days ago myself) so something on github.com must have changed where it is validating the body of the DELETE request instead of ignoring it as it must have done previously.I will put a fix in the next build but in the meantime you could probably use the `client.Issue.Update()` method to update your issue and remove the label",,,,,,
419619174,1865,Issue,Using IssueUpdate sidesteps the issue. Thanks!,,,,,,
418871893,1864,Issue,All looks good here! üëç,,,,,,
419681816,1864,Issue,![shipit],,,,,,
418200540,1863,Issue,this is not available from the GitHub Commit API because of how the Git object model works.The closest approximation is looking at the commit timestamp (in most cases they should be the same) for the commit where this file was added to the Git repository:,,,,,,
418184771,1862,Issue,"Yes it is - you need to have write access to the repository to apply the label though. You can use the issues API to set the label on the PR (PR's are also Issues, in API terms)",,,,,,
418287717,1862,Issue,"thanks for the reply. Sorry but I am new to the package so not sure I fully understand you.On the doc, I see I can add a label to a `NewIssue` like I am creating a pull request using There is no `Labels` property on `PullRequest` hence unsure where/how to add the label to a pull request.",,,,,,
418290045,1862,Issue,"In github API terms, a pull request is actually a special type of issue (you may have noticed on github that the issue number and pull request number are shared/unique across issues and PR's! ) So you can actually use most of the issue API calls to do things to pull requests (get comments, set labels, milestones, assignees etc) so once you create the PR you can use the `IssueUpdate` request to update it and set the label",,,,,,
418322339,1862,Issue,"thanks again for the reply. Just to confirm that I understand you correctly. Once I have a PR e.g. `pr`, then I will do something like this:I guess the key is passing `pr.Number` as the issue number in the `Update` method?",,,,,,
418331919,1862,Issue,Yep! Let us know if you have any problems doing thisYou can also see the official mention of this in the github docs here:,,,,,,
416956021,1861,Issue,"Hi  Issues can be raised by anyone, but only users with write access can set labels on issues.Do the credentials you're using have write access to the repository?",,,,,,
417097979,1861,Issue,"Issues can be raised by anyone, but only users with write access can set labels on issues.Yep, this is the issue. If you add `-Issues` as a collaborator to the `gRally/dev` repository this will work fine.",,,,,,
417200740,1861,Issue,thanks! it works,,,,,,
418067069,1860,Issue,release_notes: Adjust GitHub App Installation Access Token route in line with [announced API changes],,,,,,
416789186,1859,Issue,"After some internal advice, it turns out the `/app/installations/...` route has been supported since June 2017 so even for GHE we don't need to keep the old one around.  I'll remove the `CreateInstallationTokenPreview()` method that was added in this PR",,,,,,
416861125,1859,Issue,"Closing this, replaced with #1860",,,,,,
416549517,1857,Issue,I think I've managed to get these changes done to support github.com and also leave the old models/methods intact to continue supporting GHE 2.14  could you cast your üëÄ over this just to double check? üôè,,,,,,
418070723,1857,Issue,"release_notes: Implement new/changed fields on `CheckRunAnnotation` response and `NewCheckRunAnnotation` request models - replace `Filename` with `Path`, `WarningLevel` with `AnnotationLevel` and add `StartColumn` and `EndColumn`",,,,,,
418072297,1857,Issue,"advisories: Due to upstream breaking changes in the CheckRuns API, using check runs against github.com will require using the new/renamed fields on `CheckRunAnnotation` response and `NewCheckRunAnnotation` request models.  However the old fields are maintained in octokit.net (marked as deprecated) to continue supporting GitHub Enterprise 2.14, which will not receive these changes.  Users of GHE 2.14 should use the old fields, whilst users of github.com should update to use the new fields",,,,,,
418073721,1857,Issue,release_notes: Add new method `CheckSuitesClient.Rerequest()` and mark the old `CheckSuitesClient.Request()` method as deprecated (this will no longer function on github.com but will continue to be supported on GitHub Enterprise 2.14),,,,,,
594491414,1855,Issue,"For the moment I can live with the duplication of types like this, and I suspect if I can get this code-generation work integrated into the project there will be more cases like this. The current setup doesn't make it possible use the two classes interchangeably even though they have the same properties (except for `Filename` and `FileName`).I suspect both of these are mapped from the `filename` property in JSON, and a change here to correct this would be a breaking change to clients who use these objects. I'd like to be generating these response types from a source of truth first (because I know there will be other cases like this lurking around) before I start publishing breaking changes on callers.",,,,,,
594492153,1855,Issue,I've tweaked the description of this issue to indicate where my focus is on the near term.,,,,,,
411386453,1854,Issue,:eyes:,,,,,,
411391116,1854,Issue,"I'm still dogfooding these.The documentation on these APIs kind of leave me a bit confused.So yea, I need to actually test them all in order to understand what data they are really getting.",,,,,,
411587010,1854,Issue,I'm noticing a nuanced difference in the way some responses are delivered that is throwing this off..,,,,,,
411588151,1854,Issue,cc:  ‚òùÔ∏è,,,,,,
411592979,1854,Issue,"Nvm, I learned things today...",,,,,,
411729789,1854,Issue,"is this related to the `total_count` field (that feels a response from a search API, but `/apps/installations/` doesn't seem to behave like one) or was there some other questions/curiosities you had?",,,,,,
411836003,1854,Issue,"Yea, I was just mentally unprepared for things to be different between api calls like that.",,,,,,
412644799,1854,Issue,"First off, sorry about my sloppiness, I was rushing so I can go and dogfood this. Thanks for reviewing.1. I'm gonna start up a new pull request that targets this one, and I'll go through all of the GitHub Apps docs and make sure they are correct and link out correctly.1. The `ForCurrent` moniker resonates better with me for some reason. I'll also wait for ‚òùÔ∏è to make sure they are consistent.1. I'll make sure the docs I add have relevant links to the auth pages in the api.1. Are there any other undocumented patters I should be looking for? üòº",,,,,,
412671185,1854,Issue,"I was gonna send the latest changes in a separate pull request, but then i got lazy.",,,,,,
415108204,1854,Issue,Your changes so far get a üëç from me.,,,,,,
415368136,1854,Issue,I think the last thing to do is unit tests for the observable client and ideally integration tests (at least for the things we can easily setup),,,,,,
416940754,1854,Issue,"OK I think im done with adding unit and integration tests for EVERYTHING.  Glad I did this too, as it found a few problems!  üòÄ",,,,,,
417470251,1854,Issue,Hey  these latest changes I already had a separate PR for #1857 and I also did them in a way that keeps the old models working for GHE 2.14 since it won't get these changesI think I did forget to add the start/end column members but we can just add that to the other PR and keep this one focused on the app/installation endpoints,,,,,,
417482208,1854,Issue,"Ah my bad, I was not aware of the nuance.",,,,,,
418067632,1854,Issue,"release_notes: Implement additional endpoints for GitHub Apps to find installations for a given organization, repository or user",,,,,,
418068047,1854,Issue,release_notes: Implement GitHub Apps Installation API to allow listing all repositories a GitHub App Installation or GitHub App authenticated user has access to,,,,,,
418074799,1854,Issue,I think these are good to go!![LGTM],,,,,,
408646062,1853,Issue,Thanks -a-s and sorry for the confusion üôè Your PR actually raises another /facepalm issue which is that the subclient is not named according to our conventions - it should be singular (`client.GitHubApp.XXX` instead of `client.GitHubApps.XXX`) - how did we miss that! ü§£We will need to look at fixing this up although since there is already a release with `GitHubApps` we will need to deprecate the old property name over a couple of releases.Thanks for fixing up the docs!,,,,,,
408646166,1853,Issue,![LGTM],,,,,,
408646209,1853,Issue,release_notes: Fixed code samples in GitHub Apps sample docs to use the correct sub client property name,,,,,,
406893250,1852,Issue,"Hmmm if this field allows nulls then we probably need to fix it in NewCheckRun request, and CheckRun response as well?",,,,,,
406893846,1852,Issue,"It's not allowed to be null in those two iirc. Only when the check run isupdated.On Sun, Jul 22, 2018, 4:10 PM Ryan Gribble",,,,,,
406894604,1852,Issue,"If it's not allowed to be null on creation then that should be marked as a required field for NewCheckRun thenBeing null on the update does make sense though, so as not to overwrite the start time, however it wasn't evident whether an update ""adds"" to the initially created CheckRun or whether it ""replaces"" it with an updated oneI'll need to do some playing around before deciding exactly what this fix needs to cover",,,,,,
407704069,1852,Issue,"release_notes: Adjust `StartedAt` and `Status` fields of `NewCheckRun` and `CheckRunUpdate` requests, to allow `null` values, avoiding resetting these to default values when not specified",,,,,,
407705215,1852,Issue,I tweaked the fields based on checking with GitHub folks on the detailed workings of these requests :+1:Thanks  for spotting this ![],,,,,,
406374662,1851,Issue,"Late to the party, but the CheckRunUpdate constructor requires a name field where it should be optional.",,,,,,
406375587,1851,Issue,we might still be able to get that in - are you able to add in the right fix to `CheckRunUpdate`?,,,,,,
406532612,1851,Issue,"Argh!  Yeah, looks like they [changed the documentation] on the 18th July to say that field is no longer required!I will quickly add another PR before I ship this release",,,,,,
406540354,1851,Issue,Actually I decided to just commit it here on the `release` branch.  Look ok now   ?,,,,,,
406739871,1851,Issue,"OK I think this is good to go, will :shipit: in a few hours",,,,,,
405647221,1850,Issue,"this isn't currently supported and I don't think we have plans for it, but there are existing solutions to interact with the Windows Credential Manager, like this",,,,,,
405650697,1850,Issue,Thanks for the head up. üëç,,,,,,
405232704,1848,Issue,are you able to share a runnable code sample of the issue? It looks like a deserialization issue but having the right steps to trigger it will significantly help with troubleshooting.,,,,,,
405386663,1848,Issue,"Yes a code sample will be useful however I'd say it's probably just that we don't have a payload class implemented for that particular event. Unfortunately this is an area where we have very sparse coverage (and it would be great if you wanted to help out, you could contribute any missing payload classes in a PR!)These are the ones we have currently:",,,,,,
405460677,1848,Issue,"Thanks for checking out. It seems Octokit just doesn't have a payload class for these.I'd like to help out, and if there's anything I can help, I'll make a PR!Thanks for all.",,,,,,
405021425,1847,Issue,let me know what you think,,,,,,
405873148,1847,Issue,release_notes: Implemented Check Runs component of [New Checks Api (Public Beta)],,,,,,
406094295,1847,Issue,![],,,,,,
406371330,1847,Issue,"Read this over in email a few times, forgot to say, looks good",,,,,,
406452568,1847,Issue,Thanks for your help in kick-starting this  üëç,,,,,,
404120309,1846,Issue,do you reckon you could take a look before I hit the button?,,,,,,
404276031,1846,Issue,"For sure, I was playing with the branch a few days ago.Will update today.",,,,,,
404656561,1846,Issue,I also just realized I was playing with `check-runs` which is based on this.I have a few comments there for when you create that pull request.,,,,,,
404658856,1846,Issue,"Yeah check suite's by themself are fairly useless, I'll merge this PR soon and then rebase the check-runs branch and create that PRI just realised I missed some integration tests for the repositoryId versions of all the methods for check suites, so I'll add those first then merge",,,,,,
405012898,1846,Issue,release_notes: Implemented Check Suites component of [New Checks Api (Public Beta)],,,,,,
403805367,1845,Issue,"Thanks  for pointing out we are missing support for `Archived`.I figured it would be even better if we implemented [the full archiving API changes] so that we can archive repositories using octokit, and search for archived/unarchived repositories and issues/PRs too, so Ive pushed those changes up to your branch üòÄ",,,,,,
403806543,1845,Issue,"release_notes: Implement support for [Archiving repositories] including adding `Archived` property to `Repository` response model, adding the ability to archive a repository via `UpdateRepository.Archived` request, and filtering repo/issues searches with `SearchRepositoriesRequest.Archived` and `SearchIssuesRequest.Archived`",,,,,,
405438446,1845,Issue,Thanks  !![LGTM],,,,,,
403792410,1844,Issue,"Unfortunately these changes will break the `PushEventPayload` class when used with the Events APIAs mentioned in your linked issue, the problem is that the GitHub push webhook uses vastly different payload/objects to the push event in the events API.What we need to do here is make ""new"" response models for the webhook side of things, rather than modifying the event side of things.I'd suggest renaming all the ""new"" ones as `PushWebhookXXX`So in other words- Instead of changing the `PushEventPayload` class to have extra/conflicting fields, create a new `PushWebhookPayload` class- Rename `CommitPayload` to `PushWebhookCommit`- Instead of changing the `Commiter` class to have extra/conflicting fields, create a new `PushWebhookCommitter` class",,,,,,
405956507,1844,Issue,"I just tried that, and I don't know when to create a new `PushWebhookPayload` instance.I mean, I do need to deserialize it from a JSON coming from the server, but the name the server sends is the same as of a regular push event.Am I missing something?",,,,,,
408668901,1844,Issue,Any news regarding my question?,,,,,,
408709505,1844,Issue,"im not really sure what you mean sorry.  The `push` event that we already have, is from the events API activity stream calls, whereas the `push` event you want is from a webhook.  We currently dont have any code to directly handle a webhook, however if you create the response class you can still use our deserializer to pass the json payload to, and populate the response model.As a first step can you create the response models and push them up?  Then we can see what the best way is to deserialize the webhook payload",,,,,,
408768748,1844,Issue,"I merged with latest changes on `master` with my changes. Hopefully I did it right.All the new `PushWebhook*` classes are here, but now I need to deserialize them, and I don't know how to distinguish between the `PushWebhookEvent` payload and the `PushEvent` payload in `SimpleJsonSerializer.cs` in the `GetPayloadType(string activityType)` method.Can you review it please and try to help me figure it out?",,,,,,
408857000,1844,Issue,"In terms of the deserializer code, you might be getting hung up on some of the magic that is in there, for the events API endpoints (but that doesn't have any bearing on what you're trying to do with webhooks).  The magic stuff is to handle `Activity` responses, which have a `Payload` property of type `ActivtyPayload` with some special deserializer code that actually deserializes these as the derived classes.  For a basic webhook, you won't use any of that stuff though... you would have your own API/webserver which receives the webhook.  You would check the `X-GitHub-Event` http header, and based on the value you would know what webhook type it is and thus what webhook payload type to use.  Then you would call the octokit deserializer, and provide the actual class you want to deserialize into.  EgThis is the bare bones way to do it... I'm keen to think about how we could add some helpers to the library to make it easier.  The problem is it's not possible to at runtime dynamically deserialize the payload into a specific response type, that the user can know at compile time.  We can do the ugly trick like we do with the event APIs, where the user only gets a base class, which the deserializer has populated with an inheritted/derived class, but the user has to somehow know this, and cast it to the correct type, but I really dont like that.  Another way I was thinking we could do it, is by allowing the user to register their delegate code for the given types they care about, and we could then run that.  This has the advantage of being strongly typed at compile time.  It might look something like this:Now whether this stuff would belong in this core library or in an addon package `Octokit.Webhooks` Im still on the fence about.  I'd actually love to provide some common middle ware type approach that could actually handle the webserver/listening part of things too, so that makes me lean towards a separate library to do this stuffBut in terms of this PR I think we can just get the response models defined, and see if you can confirm that the first code sample I provided (using the Octokit deserializer directly) is working for you.  We also have [heaps more webhook payloads to implement] if you want to add any others while you're here :+1:",,,,,,
460299863,1844,Issue,"Hello,   , I'm actually interested in this PR.May I fork it and make the modifications asked so it can land on `master` ?I don't know exactly what's the etiquette in this kind of situation since there is no news since July 30th ...",,,,,,
460304845,1844,Issue,fine by me üòÉ,,,,,,
460306549,1844,Issue,"Actually, I see that  did make the modifications asked by the code review",,,,,,
460423445,1844,Issue,"Hmmm I must have missed that last commit that says it addresses the review comments, I will take a look at this review again",,,,,,
464865229,1844,Issue,"Hello, any idea of when this could land on master ?And another slightly related question, when do you usually make a new release from master ?Thanks :)",,,,,,
590452789,1844,Issue,"This felt very close to landing, so I rebased the branch on `master` and addressed the last bit of feedback.",,,,,,
590456113,1844,Issue,"thanks for the contribution, and for working through the review with us!",,,,,,
590462980,1844,Issue,"Great, thank you . I will now be able to remove my home-built version üòâ",,,,,,
590525764,1844,Issue,release_notes: Added new types for webhook commit payload,,,,,,
402464779,1843,Issue,Thanks  :+1:,,,,,,
401780294,1842,Issue,"release_notes: Implemented [New API parameters for Project Card archiving (Preview)] including `ProjectCard.Archived`, `ProjectCardUpdate.Archived` and new `ProjectCardRequest` request",,,,,,
401805541,1841,Issue,I think this should be tackled with . It would also make it play nicer with the new ASP.NET Core `HttpClientFactory` üëç,,,,,,
401874714,1841,Issue,"Close this issue if you think #984 will add support for disposing the HTTP client.And you are correct, with the release of `HttpClientFactory` it seems that we now have enough guidance on how to the HTTP client in combination with Octokit .NET.",,,,,,
401838105,1840,Issue,"given the broad API surface already supported, do you have any thoughts on how we'd support this through the internals? I guess we'd need to pass this all the way down to `HttpClient` but it'd be neat to confirm the impact of this on a single API function before moving ahead with this.We have the ability to write convention tests to ensure things are consistent, but we should also figure out a migration path to transition to this before we got and introduce a change like this that will likely affect every API function.",,,,,,
401852713,1840,Issue,"Without knowing the code base by hard, I guess that the implementation would start at the API surface, and the cancellation token would be passed down to the HTTP client where it would be used twice:1. When the request is sent2. When the response is readI agree that a spike of the implementation could be done on a small subset of the API surface, but in an ideal world this would be implemented on the complete API surface.",,,,,,
401860432,1840,Issue,is that something you're interested in exploring and/or championing?,,,,,,
401875698,1840,Issue,"I would love to, but cannot truthfully commit to the implementation due to other priorities, at least for some months to come. Sorry.",,,,,,
554585077,1840,Issue,"I'd like to take on something a little bit *chunkier* and more ***core*** to the library (to get a deeper understanding of it) and this feels like a well-scoped piece of work that fits that purpose.My thoughts on a plan of attack *(based on the discussion in this issue)*:- Spike out the cancellation code on a smaller piece of the API surface (a single `*Client` or perhaps even just a single method in a `*Client`)- Once proved above and agreement has been made, expand the cancellation code to the rest of the API surface- Create convention tests to ensure things stay consistent (might do this before expanding the cancellation code to the rest of the API surface as it would be the guide for that piece of work...)Thoughts  ?",,,,,,
554649473,1840,Issue,that seems like a fine approach,,,,,,
401633628,1839,Issue,Hi  have already fixed in #1822 and will push a new release soon,,,,,,
401449860,1837,Issue,"Stepping into this, I've found that the URL that gets GET'd in the end is Notice the double slash? In the end this ends up redirecting back to  giving me the slightly different results",,,,,,
401451576,1837,Issue,"Ok, so changing dir from `""/""` to `""""` and stepping over this line:(Same line on master)Allowed the request to run as expectedSolution would be to one or both of the following:a) Properly handle ""/"" passed as a path to the repo content apisb) Allow empty path strings as valid parameters",,,,,,
401639124,1837,Issue,Hey  This is ringing a bell... need to look through old issues to see if I can find it.,,,,,,
401639707,1837,Issue,"OK yeah, so that answer is that an overload already exists that has no `path` parameter, and does the root dir.Previously an issue and PR #1688 & #1689 were raised to ""fix"" this, but were closed when they realised there was an overload that allowed this already.  As I commented there though, I would be happy to allow empty string on the `path` overloads as well, if you do want to get a PR in.",,,,,,
447150378,1837,Issue,"Just ran into this as well.  Either use the overload that doesn't take the path, or substitute a dot (`.`) for the slash (`/`) .In fact, the API supports a named parameter (path) so it can be explicitly stated rather than using the position (?path=/&ref=) so the best of all worlds would be to make this patch:",,,,,,
594514834,1837,Issue,"I believe this was related to `RepositoryContentsClient.GetAllContentsByRef` but there weren't any code samples provided to confirm this.I had a failing test submitted in #1956 that covered this API, so I took that to fix the issue in #2105 which shipped in [`v0.42.0`].I believe this has been resolved but please let me know if you still see it, and the code sample used to reproduce the problem on our end.",,,,,,
401123662,1836,Issue,Thanks! I hadn't noticed the .Git member.,,,,,,
400666744,1835,Issue,"Octokit is for interacting with the GitHub API, rather than local Git repositories. If you want to do a local sparse checkout your best bet is the Git command line.",,,,,,
400909196,1834,Issue,"git line ending configuration are super complex.  Git clients can have their own settings, repositories can specify their own settings via .gitattributes file, sometimes on a per file/pattern basis, and so on.  Clients can auto convert line endings locally and preserve linux line endings in the repo.If you aren't going to use an actual git client to operate on a file system clone of a git repo (and thus get all the EOL logic for free) I would say you should just pick a line ending (linux format would be my reccomendation) and use that.",,,,,,
400168196,1833,Issue,"The GitHub API is not the best way to do hardcore git data manipulation stuff.  Whilst it does have the rudimentary ability to create blobs/trees, commits and references etc, I dont think it would be that easy to get the exact commits from upstream into your fork.  So if you do want to follow the ""traditional pattern"" of git fetch/pull from `upstream` and push to `origin`, you should look at libgit2 or interoperating a commandline git client.If you are happy to take a more GitHub based approach (rather than git approach), that WOULD be possible via the API, you could automatically raise a Pull Request from the upstream branch to your fork's branch, then automatically merge it, using the merge option for ""rebase merging"".  I think this would avoid you getting a merge commit on your fork's branch, and thus being transparently up to date with upstream...",,,,,,
400170257,1833,Issue,"thank you for the suggestions. I would prefer to stick with octokit so your second suggestion is particularly interresting to me. Can you point me to a sample that demonstrates how to create a PR from upstream into my fork, how to automerge, etc.?",,,,,,
400343112,1833,Issue,"I haven't tried this myself, but this [SO answer] suggests you might be able to get away with just using the Git Data API: - Get upstream ref `/repos/upstream/repo/git/refs/heads/master`, and get the hash from it - Update your fork `PATCH` `/repos/my/repo/git/refs/heads/master` with the same hashHow this might look with Octokit.NET (the code compiles but No Guarantees‚Ñ¢ on anything else):",,,,,,
400384088,1833,Issue,your suggestion works like a charm and so much simpler that anything I tried so far. ThanksIn case anybody is curious here's my code to update my fork if it's behind the upstream repo:,,,,,,
650555443,1833,Issue,"your suggestion works like a charm and so much simpler that anything I tried so far. Thanks  In case anybody is curious here's my code to update my fork if it's behind the upstream repo:  Just wanted to say thanks for sharing this snippet, this is exactly what I was searching for üòÑ",,,,,,
400167421,1832,Issue,"Can you provide a small example of what you mean, as I'm not seeing how ""marking all methods as virtual"" really helps you that much, as then you would have to implement basically everything yourself. You already can use your own `HttpClient` with octokit - so that would be one place you could intercept and handle particular HTTP responses (such as throttling on rate limit exceptions, or automatically retrying).  There are also fantastic libraries such as [Polly] that would enable you to wrap existing octokit calls with policy handlers to retry or delay things.",,,,,,
400391306,1832,Issue,"Thanks for your prompt reply.Yes, you are right! I forgot that I can solve it using DelegatingHandler of HttpClient. I planned to do it using [Dynamic Proxies].Using my own HttpClient, means that I need to create a chain of _DelegatingHandlers_  to act appropriately based on Github's response. However, in this case, I need to have access to some of the ocktokit's classes which now have _internal_ modifiers and are not exposed to third-party bits.For example, in my own custom DelegatingHandler, I need to parse the raw http response and be able to extract the type of exceptions (RateLimitExceededException,LoginAttemptsExceededException,etc). However, since _Reponse_ class is _internal_ and _Connection.HandleErrors(IResponse)_ is _private_, i have to reimplement the logic which makes my solution unreliable. Because in this case I need to always make sure my implementation is always consistent with Github's future response format. I believe having access to some of the internal methods and classes of octokit, makes it possible for us to rely on its always consistent and tested codebase.",,,,,,
400497700,1832,Issue,"following your suggestion, I implemented a mechanism to deal with rate limiting and possible http exceptions. I would be very happy if you could review my code. I shared it [here].",,,,,,
400868571,1832,Issue,"Nice one  Obviously it's not ideal for you to have copies of the octokit source code in your repo though, so let's find a way to expose the minimum seams needed for you to be able to hook in your extensions.  I'd prefer not to just make all these things public or virtual, however Im sure we could come up with something.  Eg do you only ever need to respond to exceptions?  If so, perhaps we can add a hook into the ""HandleErrors"" section, allowing you to respond differently to the various exceptions at that point.",,,,,,
400898024,1832,Issue,"Thanks  My main requirement is to have a retry policy to deal with exceptions such as timeouts, HTTP related errors, and GitHub related errors.I don't know how adding a hook into the _HandleErrors_ can help us to implement a retry policy. In addition, timeouts and HTTP related errors happen before reaching the _HandleErrors_ method.I thought a lot about this matter and I came to this point that having a custom [DelegatingHandler], maybe is the most practical way to achieve retry-able actions.",,,,,,
399946679,1831,Issue,cc,,,,,,
399948571,1831,Issue,release_notes: Fix exception in `RepositoriesClient.GetAllLanguages()` when no languages exist,,,,,,
399752419,1825,Issue,"Hmm... I believe that endpoint requires being authenticated as a user, and you are not a user, you are an installation of a GitHub App.  When the app is installed by the user, they choose which repositories it can access (pick from a list, or choose ""All"").  If you look at the API docs, there will be a little ""i"" indicating when the endpoint is accessible by GitHub App or not.EG The ""get current user's repos"" is not enabled for GitHub AppsThe ""get a user's repos"" is though... if you know what username is you want to checkBut I think what you actually may be wanting to do, is get a list of repos the `Installation` has access to?  If that's the case, then that would be [this endpoint] but unfortunately we haven't got that implemented in octokit.net yet.  So far we have implemented the basic GitHubApp support such as authentication, listing installations and the various core response models...  You can still do plenty if you know you have access to a repo (eg you received a webhook from it) but we cant yet enumerate/determine all repositories the app can access until we implement those additional endpoints sorry üôè Although we hope to get to it as soon as we can, we often tend to be driven by user needs and contributions - so it would be great if you were willing to have a crack at implementing this.  Even just as a headstart, contributions are very useful and appreciated!  :+1:",,,,,,
399718059,1824,Issue,could you have a read of this and provide feedback üôè Thanks!,,,,,,
401255443,1824,Issue,release_notes: Revise GitHub Apps walkthrough documentation to provide more clarity,,,,,,
399716264,1823,Issue,"Hi  , Thanks for the feedback, and sorry that the walkthrough hasn't managed to convey enough clear detail! We try to strike a balance between re-iterating what the official GitHub documentation says, but not wanting to include too much of their detail in case they change something and ours is then out of date or incorrect.  We therefore include several links to the official docs, and expect that Octokit users should familiarize themselves with those concepts first, before reading our walkthrough.  Do you think we need to be more explicit in stating the expectations that users should be following the official doc links, before running through our walkthrough?  Do you think we got the balance wrong, and need to include some more overall details about the relationship of PEM certificate => JWT Token => Installation Access Token (eventhough the official docs do cover that)?I'll have a crack at reworking the doc, it would be great if you could review what I come up with and provide feedback! :+1:",,,,,,
398740089,1822,Issue,release_notes: Remove nuget dependency on `SourceLink.Create.GitHub` package,,,,,,
398454055,1821,Issue,"I broke this line down so it wasn't so long, but it's that first line that should resolve the ambiguous reference:",,,,,,
398456193,1821,Issue,"Wow, thanks for the quick answer! That solved it.",,,,,,
398292756,1820,Issue,"Hi  Can you provide the c# code that produced the error?The API link you provided (getting all repos for a user) doesn't correlate to the the stack trace.  `RepositoriesClient.GetAllLanguages()` would correspond to ``We definitely dont want an exception like this occurring, but I just want to get the repro code in this issue for completeness :+1:",,,,,,
398373535,1820,Issue,"Sure here is the link to the source code: Particularly, it breaks on line 41 (`language = await ....`) when I call the API to retrieve all languages and _any of the language is null_:This exception does not happen when a repository has at least 1 language.",,,,,,
400169029,1820,Issue,can you please take a look at #1831 and let me know if that would suit your needs?  Do you have a preference between returning an empty list or returning a `null`?  I went with empty list,,,,,,
400510396,1820,Issue,yes I definitely prefer the empty list to null. Thank you.,,,,,,
398731857,1819,Issue,"Hi  , thanks for the suggestion!",,,,,,
398732168,1819,Issue,release_notes: Clarify the rate limit `Reset` field is in UTC,,,,,,
398460578,1818,Issue,"I noticed there are [2 more Events] that are not defined in EventInfoState. So, I added them in my 2nd commit.",,,,,,
398732649,1818,Issue,Interesting... this `comment_deleted` event appears to be undocumented at this stage.Thanks for finding this  !  :+1:,,,,,,
398733095,1818,Issue,"release_notes: Add new `EventInfoState` values (`MarkedAsDuplicate`, `UnmarkedAsDuplicate` and `CommentDeleted`)",,,,,,
397958321,1817,Issue,"I've been wondering about these things too.Given we already have a `netstandard1.1` target, according to the [.NET Standard compatibility matrix], this alone should already be usable by .NET Framework 4.5 (as long as you use .NET Core SDK 2+ tooling).  So do we even need a `net45` target anymore in the first place?  I also wonder, if we have the `net45` target for people that somehow cant get off that framework, then is it ""just as difficult"" for them to move to 4.5.2 as it would be to 4.6+ (in other words is their issue that making ANY changes is not possible)?  Can you share your use case and project frameworks/versions etc and what restrictions you are operating in?  Also can you see any reason why you wouldnt be able to use the `netstandard1.1` target, and whether that would work in VSCode?",,,,,,
397974059,1817,Issue,"The issue at hand is `` referencing net45 in a target framework will fail builds if you don't have the targeting pack installed, which isn't available. Using netstandard1.1 does work fine, but the package vs framework proliferation is a little ugly honestly, it would look like you are installing a ton of dependencies, but they are just framework redirects. For that reason I have been targeting 452 explicitly in my packages, but that causes yet another issue, but one I think you have avoided by targeting so low, but useful info anyway: framework prefers framework, so even on 472 the 45(2) dll will be chosen over any compatible netstandard version. Leads to issues where you may use polyfills for lower framework versions, but desire to use built-in stuff in higher (AsyncLocal for instance). So, then you have to target a higher framework version too.Also, there is this consideration, semi-related since we are talking about targeting:![tweet]All said my pattern has been: ``  where 4X is the highest framework I would LIKE features from, to omit polyfills if necessary.",,,,,,
397974656,1817,Issue,Issue #1745 from January is a pretty prime example of the hassle.,,,,,,
398012093,1817,Issue,"hmmm so to unpack what you're saying, a full framework app will choose the highest available full framework target but wont ever use a netstandard target even if one exists at a ""higher"" feature level than the full framework option?  Eg a net472 app choosing a net45 version rather than netstandard2.0? yeeshWhy then wouldnt we actually prefer to only support netstandard1.x and 2.0 and drop net45/452 entirely?  Is it just the ""ugliness"" of all the included dependencies?  If we had to trade that off against people using later frameworks never being able to tap into the netstandard targets, Im tempted to just do netstandard only?Is the following the justification you were thinking, as to why you are including each target?net452 - provide an option for people on ""legacy"" full framework but prefer the supported 4.5.2 option as well as having a targetting pack available allowing use of vscode etcnet4X - fuller framework offering to not need to use polyfills, full framework apps will prefer this over the net452 target if they can use itnetstandard1.1 - low netstandard offering, based on compatibility matrix would provide an option for things like netoreapp1.0, mono 4.6, xamarin IOS/android/Mac versions prior to the latest and greatest etc (although all of these could also use up to netstandard1.6 so why the 1.1 - the main difference between 1.1 and 1.6 seems to be full framework 4.5/4.5.1/4.6 but you highlighted above that a full framework app would never consume a netstandard library if it also had a netXX option in the same package)?netstandard2.0 - re-baselining on the fuller API surface as per 's comment above edit: updated based on more thinking/reading",,,,,,
398249899,1817,Issue,"Yeah that my understanding for the most part. Only the netstandard2.0 piece is a little confusing. I think you edited to match my understanding, but it is as such: netstandard2.0 targets net46+ on the framework side, so if you were only targeting that already in say netstandard1.6 then just re-baseline on 2.0 instead, BUT if you targeted lower, then include both.So the end result is netstandard1.1;netstandard2.0. What I'm not sure about is: does the framework preference issue apply when checking for nuget package updates? If so it could lead to a scenario where clients don't get new package versions until they uninstall and reinstall the package. This is probably worth a test...",,,,,,
398250826,1817,Issue,"I quickly was able to confirm that issue does not occur, whew!Also, this is what the experience will look like for framework users when you switch to netstandard only.",,,,,,
398273220,1817,Issue,The experience of installing netstandard 1.x packages on .NET Framework brings up that scary dialog. I've seen projects multi target to net4x and netstandard because of it.,,,,,,
398282008,1817,Issue,"üëã welcome  so does that count as ""guidance"" that the preference is to avoid the scary dialog, thus we should continue to support `net4X` as well as `netstandard1.1`?  And to clarify your tweet from the other day, we also should add a `netstandard2.0` target to provide a better dependency story for those on newer .NET Core platforms?  And should keep our `netstandard1.1` target since that's the only way people on earlier Mono/Xamarin and .NET Core 1.x can access the library?Assuming yes, then I guess the result of this Issue discussion is that we should change our current target frameworks (`net45,netstandard1.1`) to `net452,netstandard1.1,netstandard2.0` instead",,,,,,
398284759,1817,Issue,"so does that count as ""guidance"" that the preference is to avoid the scary dialog, thus we should continue to support net4X as well as netstandard1.1?That might be the least jarring upgrade. I would start with those tfms and test the install on various platforms. And to clarify your tweet from the other day, we also should add a netstandard2.0 target to provide a better dependency story for those on newer .NET Core platforms?Yes. We should do that. The idea is to reduce the dependency closure on .NET Core 2.x and above. And should keep our netstandard1.1 target since that's the only way people on earlier Mono/Xamarin and .NET Core 1.x can access the library?That's an interesting question. You should probably keep it around for now otherwise it'd be a breaking change. At some point though you'll need to cut the cord (like when the support for these older platform runs out).",,,,,,
594494709,1817,Issue,We are now targeting .NET Framework 4.6 as a minimum.,,,,,,
397873243,1816,Issue,"OK, finally finished debugging weird AppVeyor and TravisCI issues and everything is good to go, if I can get a :+1: from someone üòÄ",,,,,,
397877560,1816,Issue,LGTM if I still count :),,,,,,
397911103,1816,Issue,OK I'm hitting the button!![],,,,,,
397461072,1815,Issue,"sorry  , I didn't fully tweak to the fact that the docs site auto publishes from `master` whilst the nuget releases are only when I decide to cut a release...I've been falling into the trap of ""just waiting for that one last PR to be done"" before cutting a release, but it's no excuse üò≠ I'll look to publish one over the weekend!![]",,,,,,
397469669,1815,Issue,"I didn't mean to come off so pushy! I actually really like Octokit, and I was just hoping to use the GitHubApps features that were in the docs. Poking around the repo, I could see lots of good stuff, and the code looks to be in great shape, so I couldn't see a reason not to publish.Thanks for a great tool!",,,,,,
397912206,1815,Issue,"All good, I need to release more frequently, particularly when there are doc changes that get auto published from master... I've pushed out a release, please give our GitHub App support a go, and provide any feedback!",,,,,,
398033786,1815,Issue,I just swapped out my code for handling the GitHub installation auth token generation for Octokit's and it works like a charm. Thanks!,,,,,,
398037228,1815,Issue,Awesome! What method are you using to do the JWT creation out of interest?,,,,,,
398219711,1815,Issue,"We are signing the IntegrationId using the pem-formatted private key generated by GitHub. It would be awesome if the complete JWT signature functionality was included in your API, but I can see why you might leave that part up to the user.",,,,,,
398227055,1815,Issue,"the fact we target `netstandard1.1` meant we couldn't easily pull in the crypto stuff necessary, but we did refer people to use the [`GitHubJwt`] library (and we infact use this in our [integration tests] as well). Are you using a particular nuget package to do the JWT or just the crypto code in your app itself?  I'd also love to know details on what you're building as it'd be great to know what users we are catering to.  If it's not open source, feel free to DM me on [twitter]",,,,,,
398336066,1815,Issue,"We're using Org.BouncyCastle.Crypto for reading the PEM file and converting it into a valid key, and Microsoft.IdentityModel.Tokens for handling the JWT library. These are available in .NET Core 1.0.",,,,,,
471163070,1814,Issue,"I started looking into this, but had a thought before I did any work on it. Would it be necessary to have the warning in the intellisense of *every* method (that's a lot of copy-üçù) or would it be enough to add it just to the intellisense of the class and constructor?",,,,,,
471274014,1814,Issue,"Nobody would really be constructing the `RepositoryStatisticsClient` themselves I dont think, so probably just in the actual class description intellisense would be fine.  I also think this would be fine since that paralllels what the official docs do (a single call out at the top, for the whole client) rather than repeating it on each method :+1:",,,,,,
471274159,1814,Issue,"That would show up when a user does `client.RepositoryStatistics` before dotting into an actual method?If so, then you have my +1",,,,,,
396804273,1813,Issue,"Thank you for such an in depth reply.I'll do these things asap, although I'm a bit in a hurry this next week.---To do:- [x] Add unit tests for the  client methods in [RepositoriesClientTest]- [x] Implement 2nd endpoint (if it exists (it probably does)) that takes the repository Id - [x] Use IReadOnlyList rather than a normal int[] array for TeamId- [x] Do something more succinct for  property in - [x] Make Ensure.NotNullOrEmptyList into Ensure.NotNullOrEmptyEnumerable- [x] XmlDoc comments should be added to RepositoryTransfer- [x] Implement and run integration tests---This list was merged with the main ""to do"" list.---Edit: add ""to do"" listEdit 2: add quotes to ""\""to do\"" list""",,,,,,
397223572,1813,Issue,Coming along nicely üëç,,,,,,
397852173,1813,Issue,"Sorry to bug you with this but I'm new to this open source thing and I'm not sure where to ask, so I'll do it in this ""thread"".My implementation of the API seems correct to me, I've checked the JSON serializer and (to me at least) it seems like it should be working, but the request sent never actually adds the teams it passes as . Other than that, the integration tests (org -> user and user -> org w/o teams) pass.On another note, about the other end point: it's not listed in the [api]. It only mentions , not . Is this a case of incomplete documentation? Or does it actually not exist?If it does exist but isn't listed, am I even supposed to try and implement it?",,,,,,
397853687,1813,Issue,"My implementation of the API seems correct to me, I've checked the JSON serializer and (to me at least) it seems like it should be working, but the request sent never actually adds the teams it passes as team_id. Other than that, the integration tests (org -> user and user -> org w/o teams) pass.We appreciate all contributions so don't worry if you are new at this.  You've done a great job so far üòÄ In terms of the behaviour not seeming to apply the requested teams, I will pull down your branch and run through the tests on my end to see if I also get the same result. On another note, about the other end point: it's not listed in the api. It only mentions POST /repos/:owner/:repo/transfer, not repositories/:id/transfer. Is this a case of incomplete documentation? Or does it actually not exist? If it does exist but isn't listed, am I even supposed to try and implement it?Yes these endpoints aren't listed in the docs at every place, however I think ""somewhere"" in the docs they do state that any endpoint taking `/repo/:owner/:name` also has a `/repositories/:id` version, and a while ago we decided to implement these in octokit.net for every endpoint (where they exist) because they provide a safer way of interacting with things.  Relevant discussion is here: #1120So yeah, it would be great if we could implement the `repositoryId` versions as well (assuming they do exist, which they should!)",,,,,,
399408626,1813,Issue,"What I think we can do for now is [skip the failing tests] with a comment saying ""The upstream API doesn't seem to be applying requested Teams at this time""",,,,,,
399573528,1813,Issue,"Good news, I heard back from the folks at github and it sounds like the docs have a typo - the parameter is actually called `team_ids` so let's rename it and see if your tests then work!",,,,,,
399630691,1813,Issue,"Integration tests work like a charm now, thanks for the help!Still working on the other points (yes, I realize I put the awaits in the wrong place for the unit tests), but it's 2 AM and I really need to sleep.",,,,,,
399681266,1813,Issue,"What is with this Travis CI test? It seems really inconsistent.Twice the branch passed it in one commit, then I changed XmlDoc in the next one and it stops passing with some error associated with linksource.Should I be doing something to fix it? I have no idea.",,,,,,
399713167,1813,Issue,Yeah the travis thing isn't anything you have done... We are unfortunately running into sporadic failures in the sourcelink test step which seem to be network issues. It's happening to others as well,,,,,,
399724460,1813,Issue,"since you've done such an amazing job so farAww, you're going to make me blush. Anyway, thanks!Everything you asked for in this last batch is fixed, so I'll wait your next revision.",,,,,,
399752925,1813,Issue,"Everything you asked for in this last batch is fixed, so I'll wait your next revision.LOL - you know what?  I think we are üíé here!  (just waiting to get TravisCI passing) and we will be good to go!",,,,,,
399753096,1813,Issue,release_notes:  Implement [Repository Transfer API (Preview)] (`RepositoriesClient.Transfer()`),,,,,,
399753445,1813,Issue,![]Congrats on your first octokit.net contribution  - it is very much appreciated!  Fingers crossed you are keen to keep contributing!,,,,,,
395097182,1812,Issue,":wave: Hi  The permissions for the actual access token look quite broad, but it would then still depend on what permission the user has on the repo in question, and what exactly you are trying to update.Can you provide more details on what you are doing (a code sample would be great)? Thanks",,,,,,
395663771,1812,Issue,"Hi  your comment pointed me in the right direction and i solved my issue. Here 's a brief description of the issue:There was an organization git account with many repos and personal accounts. One of the personal accounts was the token issuer that i was using to access the and update the issues. More specifically  i was trying to edit the description of the organizational account's issues, through the personal account's token. Although the personal account had almost all scopes checked, the permissions for the organizational's repos were all read only! So even though i could edit and update any issues that i was creating through the personal account's token i couldn't edit existing issues from the organization. We had a couple of solutions around  this.1.One of them was to change the role of the personal account inside the organization. but that was rejected since it gave great control to the account and that was not desired from the organization's part. I can't blame them!2.The other solution was to change the repository's default default member permissions.That was rejected too because that would give all the collaborators the power to edit issues except from the personal account whose token i was using.So because non of the above solution was secure proof a third suggestion was put on the table. For each repo ,that the personal account i was using needed write access, would change the default repo permission for my account.Now i had already thought about that and for me that would be the best scenario too, but the thing is that there are more than 1400 repos that my account would need write access. That means that unless we do it through the git api, some pure fellow will have to go inside each and every repo and change permissions! We still haven't decided. For the time being it seems that the lazy fellows in the the organization just decided to change the account's role from member to owner. To be continued....",,,,,,
526608586,1812,Issue,"Hey, this issue hasn't seen any attention in a long time. I'm curious, how would this work for standard **:octocat: GitHub** accounts? I am trying to update an issue from the SDK and it's not working. I'm using an API Token as well and I assume it's related to this... please help.",,,,,,
526641354,1812,Issue,"It Depends‚Ñ¢ on what you're trying to do with the token. And while the user thought they had set all the right permissions, this bit is important to keep in mind: Although the personal account had almost all scopes checked, the permissions for the organizational's repos were all read only!Knowing what you're allowed to do within an organization (check the permissions your team has) will likely help to diagnose your issue.",,,,,,
526643342,1812,Issue,"I'm the repo's owner, regardless of organizations -- why would that matter? [Here is an issue] I filed, but I believe it's still somehow related to the API token. I own the repo, and created an API token to interact with the repo. Why does organization have anything to do with my own repo?Does simply being a part of an organization mean that my own repos are subject to their restrictions? That wouldn't make any sense at all. The repo is mine, I created it and it is does not belong to those organizations -- right? What am I missing here?",,,,,,
526688867,1812,Issue,"Does simply being a part of an organization mean that my own repos are subject to their restrictions? These are maintained separately, so you shouldn't impacted. The previous user had to deal with this headache. The repo is mine, I created it and it is does not belong to those organizations -- right? What am I missing here?If we're focused on repositories under your user account, I'd also confirm that you've set `repo` scope (if you're updating a private repository) or `public_repo` (if you're updating a public repository) on the token.",,,,,,
527080037,1812,Issue,"I had the same (original) issue but with OAuth App (so it might not be that original). It's true as above comment said; organization access scope is maintained separately. So when you are a repository owner in an organization (even is also an org owner), your own personal token can't get into organization access scope until granted. You have to grant yourself.![Screen Shot 2019-09-02 at 4 26 05 PM]",,,,,,
527376287,1812,Issue,thanks for the reminder about [OAuth app access restrictions] for organizations - that's definitely something I've seen users have problems with in the past...,,,,,,
530480986,1812,Issue,"I have the issue""message"": ""You need admin access to the team before adding a repository to it."",When I crate a repo. How can I solve that",,,,,,
530485368,1812,Issue,that error indicates your user is not an administrator of the team. That's not something changing the token can address.,,,,,,
532191707,1812,Issue,I'm going to close this out because it's not clear what work needs to be done in Octokit.net to improve this area. Please open a fresh issue if you have ideas.,,,,,,
401253329,1806,Issue,release_notes: Add GraphQL NodeId property to all affected response models,,,,,,
394052247,1805,Issue,"release_notes: Improved the ""Upload Release Asset"" doc sample",,,,,,
394052281,1805,Issue,Thanks,,,,,,
394052157,1804,Issue,"release_notes: Fixed error in ""Create Release"" doc sample",,,,,,
394052351,1804,Issue,Thanks,,,,,,
389803622,1803,Issue,Hi  what permission do you have on the target repository? ... Because only users with write access can assign labels to issues,,,,,,
451002949,1803,Issue,... Because only users with write access can assign labels to issuesI'm pretty sure it's this. Gonna close it out without more information.,,,,,,
388618209,1802,Issue,Looking pretty üíé  I realised we also need to add preview header into the various `GetAll` methods in `ObservableIssuesLabelsClient` as these don't call through to the normal client.eg:,,,,,,
388652736,1802,Issue,Added the header to observable client. I hope I didn't miss come calls.,,,,,,
388657173,1802,Issue,Looks like you got them all ü§óI'll do a final review tonight...  things are looking pretty good!,,,,,,
388795721,1802,Issue,"advisories: Note that the `IssuesLabelsClient.RemoveFromIssue()` methods which previously had no return value, will now return an `IReadonlyList`.  This change is source compatible but not binary compatible.",,,,,,
388820785,1802,Issue,"release_notes: Implement support for [Label API Improvements], including additional fields (`Description` and `Default`), emoji support and searching for labels (`SearchClient.SearchLabels()`)",,,,,,
388821236,1802,Issue,"I found a few more methods that needed the preview header, and also decided to implement the final part of the ""enhanced labels API changes"", being the ""search for labels"" call.Are you able to review what I've pushed up?  üôè",,,,,,
388898250,1802,Issue,It looks good. I've fixed the documentation a bit.,,,,,,
389839287,1802,Issue,Thanks  !!!![LGTM],,,,,,
387380062,1801,Issue,"Thanks  for jumping on this so quickly... this is an awesome feature and we are very keen to get it implemented in octokit.net üòÄ I just had a quick üëÄat this stage, I should have some more time over the weekend, but here is what jumped out immediately:- ""List"" methods should be named `GetAllForReference` and `GetAllForCheckSuite`- The annotations shouldnt be in a separate client as we structure our clients based on the API doc structure, so in this case there would be a top level `IChecksClient` with sub clients of `ICheckRunsClient` and `ICheckSuitesClient`.   Annotations would just be methods such as `ICheckRunsClient.GetAllAnnotations`- We will need to expand our `GitHubApp` permission class to contain the new `check` permission- A lot of `sealed` and `internal` classes which should just be `public`- You forgot to include the `AcceptHeaders.ChecksApiPreview` in all the `ApiConnection` calls üòÄ - Watch out for the URI's as the owner/repo ones are `repos/:owner/:repo/etc` whilst the repository ID ones are `repositories/:id/etc` (you currently have `/repositories/` for all)",,,,,,
387953985,1801,Issue,"there's alot to review here, would be better to focus on one client at a time, and ensure unit tests and integration tests are passing üòâ A couple of other consistency things:- to maintain consistency with other clients, can we list the `owner`/`repo` version of a method first, then the `repository_id` version?  This is because we are POC'ing some code generation tools so consistent ordering is going to be important- similary, the naming convention for clients is that the class name is plural (which you've done, eg `IGitHubCheckRunsClient`) but the accessor method is singular.  so in terms of usage, we should be `github.Check.Run.GetAllForReference()` rather than `github.Checks.Runs.GetAllForReference()`",,,,,,
388378690,1801,Issue,"For the reordering, is that just the interface or the implementation as well?",,,,,,
388616326,1801,Issue,"Implementation as well, I believe",,,,,,
388618465,1801,Issue,yeah ideally in interfaces and implementation classes.  Hopefully the code base is reasonably consistent with this already,,,,,,
403792655,1801,Issue,"Ive split this PR up, to make it easier to get it done.  Please see #1846 for the Check Suites side of things.  Then we can get the Check Runs side done...",,,,,,
385903734,1800,Issue,"when you get the current user, there's a `Plan` property that contains the details:",,,,,,
386286318,1800,Issue,"What about the user's organization, because at the moment PrivateRepos is showing as zero.",,,,,,
385162187,1799,Issue,"Are you suggesting this could be used instead of the normal or `IObservable` clients, or in addition to them?My *initial* reaction is that I wouldn't be too keen to simply add yet MORE duplicates of every client/method, at least not while we have other higher priority things to implement... however happy to have a discussion about this (or anything really!) if you have further thoughts üòÅ",,,,,,
451006889,1799,Issue,"Closing this out for now unless someone is interesting in championing this effort. It'll require a lot of work on internals to support properly alongside the current Task and Observable versions, and I'd rather the maintainers support getting the newer v3 API features supported in the library.",,,,,,
383334624,1798,Issue,Hehe I was actually digging into this and wrote a similar test last night myself :grinning:  yours is better though :+1: Mine did include base class properties but we had even more legit fails in that case... Eg [ApplicationAuthorization] which inherits [Authorization] but doesn't allow setting the base class properties via the ctor.,,,,,,
383343206,1798,Issue,"In any case, Im happy to proceed with fixing these failing tests on this PR and see how the changes look.  If you are keen feel free to get stuck into them, otherwise I should have some time later tonight hopefully :+1: Model type 'Octokit.CommitComment' is missing a constructor with all properties.Model type 'Octokit.IssueComment' is missing a constructor with all properties.Model type 'Octokit.RenameInfo' is missing a constructor with all properties.Model type 'Octokit.Authorization' is missing a constructor with all properties.Model type 'Octokit.PullRequestReviewComment' is missing a constructor with all properties.Model type 'Octokit.PunchCard' is missing a constructor with all properties.Model type 'Octokit.Page' is missing a constructor with all properties.Model type 'Octokit.Commit' is missing a constructor with all properties.Model type 'Octokit.RateLimit' is missing a constructor with all properties.Model type 'Octokit.BranchProtectionRequiredReviews' is missing a constructor with all properties.Model type 'Octokit.SourceInfo' is missing a constructor with all properties.Model type 'Octokit.Verification' is missing a constructor with all properties.Model type 'Octokit.Activity' is missing a constructor with all properties.Model type 'Octokit.GitTag' is missing a constructor with all properties.Model type 'Octokit.ActivityPayload' is missing a constructor with all properties.Model type 'Octokit.DeploymentStatus' is missing a constructor with all properties.Model type 'Octokit.Team' is missing a constructor with all properties.Model type 'Octokit.Reference' is missing a constructor with all properties.Model type 'Octokit.GpgKey' is missing a constructor with all properties.Model type 'Octokit.Deployment' is missing a constructor with all properties.Model type 'Octokit.CollaboratorPermission' is missing a constructor with all properties.Model type 'Octokit.Issue' is missing a constructor with all properties.Model type 'Octokit.ReactionSummary' is missing a constructor with all properties.Model type 'Octokit.TeamMembershipDetails' is missing a constructor with all properties.",,,,,,
383414009,1798,Issue,"I should also mention if we encounter any cases where it doesn't make sense to abide by the convention we can introduce an attribute (decorated at the response class declaration level) to suppress the test for that class, and filter them out in the test",,,,,,
383543255,1798,Issue,release_notes;  Added convention tests to ensure Response classes have a `ctor` that exposes all properties (to support mocking),,,,,,
383711470,1798,Issue,"Thanks for going through the ctors.I didn't see a good way through reflection to determine what base ctor was being called. We could open the rule up to all members by removing the `DeclaringType` condition. The scenario I was trying to solve for was for the ctors that pass explicit values to their base ctor. As mentioned, these could be ignored with attributes if it makes sense.Ex. `AccountType` in []",,,,,,
383869887,1798,Issue,"OK so if we include the base class stuff, there are 4 offences.  `User` and `Organization` have issues because they pass through the hardcoded `AccountType` enum value.Then we have `ApplicationAuthorization` which actually doesn't call it's base `ctor` at all (quite odd!)and `Merge` which again doesn't pass through to it's base `ctor` at all",,,,,,
383891912,1798,Issue,"In terms of the latter 2 I think it will be fine to just add the base ctor to the existing one, and all of the existing parameters that go with it. After all, these ctor really are only useful for creating mock responses, our deserializer uses the parameter less one, and the protected setter properties so the blast radius is pretty small on these and I like the idea of enforcing the convention that all fields could be mockedI'm terms of the first 2 I'm thinking the best approach is to add an attribute but rather than suppressing the whole test, the attribute could take a parameter of field names to be exempt. That way we can still enforce the other fields are present, but exempt the Account Type field since it's not valid to create an Organization with any other typeSound good?",,,,,,
384100013,1798,Issue,Sounds good.I was thinking the same thing with excluding individual properties rather than the whole class. Pushed an update which should account for those last scenarios.,,,,,,
384110730,1798,Issue,"Awesome thanks  I've just pushed a change to shorten the attribute name, as although technically correct, that length was hurting my head ü§ï  ü§£",,,,,,
384111133,1798,Issue,"release_notes: Ensure all response models have appropriate `ctor`'s to allow mocking, and enforce with a convention test",,,,,,
384248524,1798,Issue,Thanks  üëè ![LGTM],,,,,,
383335338,1797,Issue,"The request code looks correct and is similar to working examples I use.One thing I note is, when using github.com you don't need to provide a Uri argument to GitHubClient constructor (and actually the Uri should be the API address not the webUi). Although I don't think that would be your issue maybe try without doing that?Other than that, does your fork's master branch contain valid commits that could be raised in a PR to the target you are specifying? As a final note, I noticed your test code is targeting THIS repository - we'd prefer if people didn't raise unnecessary PR's or issues in this repo for testing purposes please üòå (you can create a test account and repo then fork that and use for your own testing).",,,,,,
451010278,1797,Issue,"I'd recommend checking these three things: - No need to provide the `uri` parameter when creating the `GitHubClient` for GitHub.com - Check there are new commits on the branch in the fork - Ensure you're using a real repository The latter two things are likely to trigger the ""Validation failed"" error from the server",,,,,,
381568475,1796,Issue,"Hey  , thanks for this PR.  I'll need a bit of time to go through itIn the meantime, I've merged some other PR's so this one needs a rebase or merge from master.  Thanks!",,,,,,
381571638,1796,Issue,"I did not find a good overload for a null payload with accept headers. And adding the obvious overload for this scenario would cause ambiguous call issues. So I ended up passing new object() as the payload for the Delete and TriggerDownload methods.That's all good, we've done the same in a few other places as well, when `Post` or `Delete` methods don't have a payload.  The overloads on the `IConnection` calss are a bit out of hand unfortunately, but because they are `public` it will be a breaking change to clean things up and we try to avoid breaking changes where possible. Integration tests are passing using our enterprise instance.That's good to know.  We have an enterprise instance too, but I've never looked into pre-receive environments as yet",,,,,,
383312197,1796,Issue,"The response classes are using implied parameterless constructors, so that is probably why the convention tests passed, and is for sure why the integration tests pass. I will get some constructors with all parameters added, which will require the explicit parameterless one as well.",,,,,,
386868785,1796,Issue,Hey  sorry for the delay!  I finally got a chance to run the integration tests against a GHE instance... made a couple of tweaks as you can see in the commits :+1:Things are good to go from my perspective if you can please review the changes I just pushed up and let me know if you're good too?,,,,,,
387221430,1796,Issue,Changes look good to me.,,,,,,
387376693,1796,Issue,"awesome stuff  I'd love us to get even more GitHub Enterprise features implemented :+1:It reminds me I have some stale PR's that I should rebase and get merged (#1269, #1415 )",,,,,,
387376861,1796,Issue,![LGTM],,,,,,
389833832,1796,Issue,release_notes: Implement [Pre Receive Environments API (Preview)] for GitHub Enterprise,,,,,,
381961434,1795,Issue,Hi  Here are these tests:,,,,,,
383286844,1795,Issue,"not sure about those failing integration tests, as they work for me.  Have you got your integration environment and test account configured, as per [CONTRIBUTING.md]?  Do any integration tests work for you at the moment?",,,,,,
383548194,1795,Issue,I've put the tests back to specifying the expected accepts header.  Also reinstated the branch protection preview header on the calls it had been removed (this would drop support for earlier enterprise versions where it's still required to be enabled).  We can specify both headers on these calls (for branch protection AND nested teams support),,,,,,
383549986,1795,Issue,"release_notes: Enabled additional methods for preview ""Nested Teams"" support:  - `IRepositoriesClient.GetAllTeams()`  - `IRepositoryBranchesClient.GetAllProtectedBranchTeamRestrictions()`  - `IRepositoryBranchesClient.UpdateProtectedBranchTeamRestrictions()`  - `IRepositoryBranchesClient.AddProtectedBranchTeamRestrictions()`  - `IRepositoryBranchesClient.DeleteProtectedBranchTeamRestrictions()`",,,,,,
384246743,1795,Issue,many thanks  and congrats on your first contribution to octokit!![],,,,,,
380606057,1794,Issue,"Hi  Nested Teams is currently a preview API feature which means we have to include a special accepts header in any calls which deal with teams. It looks like our initial implementation in #1682 only did this on the actual `TeamsClient` methods and missed these other calls in other API clients which deal with teams such as the [one you're using] (and possibly others?) It's a pretty simple fix, we just need to include the `AcceptHeaders.NestedTeamsPreview` on any other calls that deal with teams... It would be awesome if you wanted to tackle this and send a PR that fixes this!",,,,,,
384763946,1794,Issue,"Hi  I installed prerelease NuGet package `Octokit.0.30.0-PullRequest1798` to test these changes.However, code behavior is not changed üòû Moreover, I found, that Octokit returns only bottom team for some repos (while still returning top parent team for the first case):Am I missing something?I can provide you a sample project, but I don't want to expose my access token. Can I send you the sample project in a secure way?",,,,,,
385160140,1794,Issue,"Hi  I've done some additional testing and it seems like this is the way the upstream API is behaving at the moment.  Eventhough we are now including the correct preview header, it seems to just make the response include the `parent` attribute on the team... but doesnt actually seem to include child teams of the parent team that has repository access. I'll ask the folks at GitHub if this is intended behaviour or not, because I would agree with you, that the expected outcome would be all teams are listed, even those that have inherited their permissions on the repo via their parent team..",,,,,,
395818242,1794,Issue,Any update on this? Should I contact myself with the support?,,,,,,
395827669,1794,Issue,"Sorry for not closing the loop on this, what I got from folks at GitHub was that they did have an internal issue about this, but also that the documentation does't actualy say this is how it should work (in terms of the sample response)...I don't think it's unreasonable to expect child teams should be included though as that is how other endpoints behave... But yes I would say you should also contact support yourself if you want to provide your added feedback about this feature",,,,,,
380254716,1793,Issue,"Looks like the linux build failed while installing .NET, though I am not familiar enough with travis to know if that is fixable in code or not.",,,,,,
380260745,1793,Issue,"Looks like the linux build failed while installing .NET, though I am not familiar enough with travis to know if that is fixable in code or not.I don't believe this issue is related to your contribution. I've restarted the build to see if it's repeatable (and thus probably an infrastructure issue).",,,,,,
380354376,1793,Issue,"Yeah it was a travis issueThis looks good , are we able to add an integration test as well?",,,,,,
380624007,1793,Issue,I added some integration tests.,,,,,,
380779145,1793,Issue,thanks  !I pushed some tidy ups to the integration tests.I also added the implementation for `repositoryId` as well (all API calls that use `owner/repo` also have a corresponding endpoint that takes the `repositoryId` instead).Do you mind reviewing the changes I made and let me know if you are good for this to be merged?  üôè,,,,,,
380832788,1793,Issue,"Thanks I did not know the `repositoryId` endpoints were that widely interchangeable, good to know.Also looks like some integration tests assume the history of the octokit repo persists. I'll keep that in mind for the next PR.Your changes look good to me",,,,,,
381552304,1793,Issue,release_notes: Add an overload to `IReleasesClient.Get()` that allows retrieving a `Release` by the associated tag,,,,,,
381557872,1793,Issue,Thanks  and congrats on your first contribution!![LGTM],,,,,,
379913435,1792,Issue,"I'm a bit hesitant to include things like this in the core library, as we try to keep it as much of a lightweight wrapper around the upstream GitHub api as possible.  This is why we don't have ""composite"" actions (involving multiple API calls) or built in caching.  I think it's difficult to match the different use cases and expectations of users when you start doing things like this.  Particularly in this example, it could end up ""sleeping"" for almost an hour.  (I'm also questioning why it has a hardcoded 1 second sleep, after any response is received?)   Thanks for sharing though, and we can keep this here as an example for anyone wanting to know how they could wrap calls to automatically handle rate limit or abuse retries.  One thing I've been thinking about, is creating a separate NuGet package for `Octokit.Extensions` that could include more of these additional helpers, without having them in the ""officially supported"" library...",,,,,,
379914909,1792,Issue,"For reference, I wrote [a similar thing] a while ago in a hurry that was designed for batch tasks and doing as much work as possible with the available quota: - CLI-focused - displays messages around available quota while working - fail-fast - once you've exceeded your quota, show when you can start over and exitIt's not as exhaustive as the initial example, but also doesn't wait for your quota to reset - just wanted to illustrate that there are different approaches here around rate-limiting.",,,,,,
379918569,1792,Issue,"It makes sense to not include in the base library for your reasons. However, by having the rate limit information return in the header, it is very easy for first time users to almost immediately hit the limit and then have to wade through a lot of documentation to figure out how to prevent it. Thus my recommendation. The ""1 second"" is from some of the documentation as a recommendation. If it can be removed, I'll remove it from the post so others don't include it if they reuse it.",,,,,,
379921181,1792,Issue,"Another thought, given the challenge of using the library for multiple calls or ""composite"" calls, may be to develop a queue into which the user can submit calls and have the rate limiting done for them. If that is something you'd consider, I'm willing to do the the initial development work on it. I'm just looking for ways to keep others from hitting the problems I did and having to spend all the time wading through the docs to get a workable solution.",,,,,,
381561355,1792,Issue,"It makes sense to not include in the base library for your reasons. However, by having the rate limit information return in the header, it is very easy for first time users to almost immediately hit the limit and then have to wade through a lot of documentation to figure out how to prevent it. Thus my recommendation. My concern is that if there was a ""magic"" wrapper that helped people wait out the rate limit then they are even less likely to know what they are doing (or the potential impact they may be causing).  We'd then have people thinking that ""octokit took 30 minutes to execute a simple query"" and things like that üòÆ I'd definitely be for improving any documentation that wasn't clear in how things work, although I did think we specifically called out how rate limiting works and highlighted the fact that you need to use authenticated requests if you want to be given the more generous rate limits from GitHub. The ""1 second"" is from some of the documentation as a recommendation. If it can be removed, I'll remove it from the post so others don't include it if they reuse it.Did you have a link to this?  The implementation as provided always waits 1 second AFTER a successful response... I think you should only wait if an abuse or rate limit was hit, which your code already does.  Im not sure it makes sense to always delay 1 second AFTER a successful response Another thought, given the challenge of using the library for multiple calls or ""composite"" calls, may be to develop a queue into which the user can submit calls and have the rate limiting done for them. If that is something you'd consider, I'm willing to do the the initial development work on it. I'm just looking for ways to keep others from hitting the problems I did and having to spend all the time wading through the docs to get a workable solution.Again, I think things like this really fall out of the domain of an API wrapper... there are so many different ways people may want to implement queuing, rate limit handling or caching, we don't really want the additional complexity in this library.  If you wanted to put together your own extension package, or provide a gist with the code samples, I'd be happy to take a look at the approach, but it wouldn't be something we would include in the core library :+1:",,,,,,
400497229,1792,Issue,I just saw this thread. I got the idea from  and I solved the rate limiting issue and the retry policy by using Polly and DelegatingHandler of HttpClient. I created a [library] to share my code with other folks.Response and ApiInfoParser classes and BuildResponse method are copied exactly from the octokit's source code. I had to copy them because they weren't defined as public classes and methods.,,,,,,
378560884,1791,Issue,Thanks  ![LGTM],,,,,,
378560986,1791,Issue,release_notes: Tidy up code formatting in docs/samples,,,,,,
376333148,1790,Issue,"Using Webhooks is preferable since github will notify you when something happens, rather than you having to poll for changesYou would need to setup a push event webhook, then filter for the branch yourself",,,,,,
376334678,1790,Issue,"Thanks,  ! Good to know.  Cheers.",,,,,,
375951948,1789,Issue,Maybe `CommitPayload` if it appears in places other than push event,,,,,,
402697893,1789,Issue,Fixed in #1844,,,,,,
376424372,1788,Issue,", do you have any other comments?",,,,,,
376729898,1788,Issue,"Done, . Good suggestion!",,,,,,
376779518,1788,Issue,"release_notes: Add the ability to search issues by milestones, using `SearchIssuesRequest.Milestone`",,,,,,
376779649,1788,Issue,Thanks  for the PR and congrats on your first contribution to Octokit!![],,,,,,
375762639,1787,Issue,Looking through the code I found the `Term` property. Will try to see whether this will do it.,,,,,,
375764180,1787,Issue,"So yes, passing the `term` as a constructor parameter to the `SearchIssueRequest` did it. Still, leaving this option as an ask to consider exposing `Milestones` property on the request.",,,,,,
375789090,1787,Issue,"Thanks , Just wondering did you just specify the milestone ""foo"" as the search term, or did you specify like ""&milestone=foo""?It should be easy to add the extra query option, would be great if you could send a pull request through?  :grinning:",,,,,,
375810406,1787,Issue,Hi . I ended up using it as I would in GitHub search: `milestone: myMilestoneName`. It worked just fine. I'll try to submit a PR with the proposal.,,,,,,
374218668,1786,Issue,"Hey  It looks like this was a recently added feature last month: As well as a `Description` field, there are also some other fields we are missing (`Id` and `Default` for example)...Based on that feature announcement, the `NewLabel` and `UpdateLabel` requests can also be updated to add in the new `Description` field.To enable this new field, we will have to add the preview header `application/vnd.github.symmetra-preview+json` to any calls returning, creating or updating labelsIt would be wonderful if you were willing to contribute any of this support.  If you are, let us know... happy to give further guidance if you require :+1:",,,,,,
388587289,1786,Issue,I think I will have time to implement this one.,,,,,,
374140673,1785,Issue,"Hi  If you're running it through fiddler are you able to post the json response so we can check it against the response object model? Obviously it's a date field but there are a few in the response so would be easy to see exactly which one it is... The mention of 2 calls being made is also interesting, as we do not have any built in retries or anything like that... Could you please post the fiddler details of those too?",,,,,,
374395796,1785,Issue,"Hi  thanks for getting back to me so promptly.Fiddler response received:Interesting I didn't see the second call this time. In any case, this JSON file will help.",,,,,,
374397846,1785,Issue,the problem seems to be this value:That's different to other datetime formats that the GitHub API returns:,,,,,,
374405860,1785,Issue,"Interesting, i guess this needs to be taken into account? I am calling github.com so it isn't an enterprise based issue.",,,,,,
374406513,1785,Issue,please reach out to  and point them at this discussion - I think it's a bug with this particular endpoint.,,,,,,
374408992,1785,Issue,"I have sent them a message as requested. Shall we give it a few days and see if they get back to us accordingly?I wonder, given GitHub is a reliable enough source, is there a reason Octokit is so strict on the parsing in [the code] and not just use `DateTime.Parse` and let the internal .NET engine determine the value?",,,,,,
374410314,1785,Issue,"is there a reason we are so strict on the parsing in the code and not just use `DateTime.Parse` and let the internal .NET engine determine the value?We're strict because [the GitHub API docs] clearly document the format of datetime values with timezone offsets, and I believe this is something that needs to be fixed on the server.",,,,,,
374414327,1785,Issue,"Yes it seems there is a bit of confusion on the GitHub side as the documentation is saying that it would look like the UTC style, but the link they point to as an example is the Zulu style.",,,,,,
374454858,1785,Issue,"Also (and im struggling to remember the complete ins and outs of it) I think I found that `DateTime.Parse` actually didnt fully honour some of the formatting we receive from GitHub formatted dates (around the ""Z"" character I think).  Ill see if i can find a discussion",,,,,,
376322958,1785,Issue,can you retest this? I think we've fixed the datetime formatting on this endpoint so that it's now consistent with the others.,,,,,,
380935056,1785,Issue,Closing as GitHub said they've resolved this. Will reopen if I encounter again.,,,,,,
381582498,1784,Issue,release_notes: Update Octokit build tooling to use .NET SDK 2.x (note that this is only an SDK tooling update - `Octokit` and `Octokit.Reactive` libraries are still targeting `netstandard1.1`),,,,,,
372056022,1783,Issue,you probably want to follow along with  and the original issue,,,,,,
372012843,1782,Issue,"Hi ,Would this be because your assembly doesn't have an `InformationalVersionAttribute` set or is it not even possible to work around?",,,,,,
372031821,1782,Issue,It indeed is because the final assembly is missing and AssemblyInformationalVersion and you can add this attribute to your assembly as a workaround.,,,,,,
530128869,1782,Issue,"Marking this one as a bug, but because there's a workaround and plenty of other work I'm not sure when we'll get to it.",,,,,,
371066462,1781,Issue,The Travis build failed on a non-related issue (it couldn't install mono because of connection timeout) and I can't run the build again. Can you please rebuild? (and merge?),,,,,,
371097012,1781,Issue,"release_notes: Parameter names in validation exception messages are now derived from the parameters themselves, rather than a literal string that was hopefully kept up to date",,,,,,
371098343,1781,Issue,"Love your work  thanks for helping with the code base consistency üòÄ Soo many files üòõ - I took a ""spot check"" approach LOL ![]",,,,,,
371091788,1780,Issue,"release_notes: Removed a number of `[Obsolete]` methods, members and constructors inline with our standard deprecation schedule",,,,,,
371094260,1780,Issue,"advisories: The following `[Obsolete]` items have been removed from octokit, please use the indicated replacements:Client Methods- `OranizationsClient.GetAll()` => `GetAllForUser()`- `PullRequestsClient.Comment` => `ReviewComment`- `RepositoryBranchesClient.GetRequiredStatusChecksContexts()` => `GetAllRequiredStatusChecksContexts()`- `RepositoryBranchesClient.GetProtectedBranchTeamRestrictions()` => `GetAllProtectedBranchTeamRestrictions()`- `RepositoryBranchesClient.GetProtectedBranchUserRestrictions()` => `GetAllProtectedBranchUserRestrictions()`- `RepositoryTrafficClient.GetReferrers()` => `GetAllReferrers()`- `RepositoryTrafficClient.GetPaths()` => `GetAllPaths()`- `TeamsClient.GetMembership()` => `GetMembershipDetails()`- `TeamsClient.AddMembership()` => `AddOrEditMembership()`- `TeamsClient.AddMembership()` => `AddOrEditMembership()`Request Models- Remove unwanted `ctor`'s from `BranchProtectionUpdateSettings` and `UpdateTeam`- `NewIssue` `Assignee` => `Assignees`- `IssueUpdate` `Assignee` => `Assignees`Response Models- `TeamMembership` => `TeamMembershipDetails`",,,,,,
371095204,1780,Issue,ooh yeah!!  love that nice and tidy build output now üíé ![],,,,,,
370794536,1779,Issue,release_notes: Correct missing/incorrect XmlDoc entries for parameters on some methods,,,,,,
370569937,1778,Issue,Should this clarification also be made to the other methods in this client?,,,,,,
381584829,1778,Issue,"Hey , can you tick the ""Allow edits from maintainers"" option on this PR, as I have made this doc update for the other places `reference` parameter is used (also updated the implementation class, and the `IObservableReferencesClient` interface and implementation as well) but am unable to push the changes",,,,,,
381592238,1778,Issue,"Hmm, that's odd, it's checked on my end.",,,,,,
383291022,1778,Issue,"ah indeed, i was on the wrong branch (you had 2 that were similar) ü§¶‚Äç‚ôÇÔ∏è",,,,,,
383291059,1778,Issue,let me know if the updates look ok,,,,,,
383542747,1778,Issue,release_notes: Clarify the usage of `reference` parameter in `IReferencesClient` methods,,,,,,
370250217,1777,Issue,OK I found out!,,,,,,
370196610,1776,Issue,I haven't played with GitHubApps myself but from the documentation there are only a specific set of endpoints they can use,,,,,,
370232076,1776,Issue,"- Hi, Yes I have asked the question on the Github forum a week ago about endpoints and GitHub app, so far no reply. I can also see that the document you guys refer to is about an OAuth App not a GitHub App so my case isn't the same.",,,,,,
370264607,1776,Issue,"That article is written in the past, before GitHubApps existed as they do today. It talks about application oauth flow and as far as I know should still be correct/accurate. GitHubApps are a new type of integration which have their own authentication method involving generating a signed time bound JWT token using the private cert of the GitHubApp and always have the identity of the app (or an installation of the app) and don't actually impersonate a user like the earlier oauth flow effectively does. GitHubApps also can only access a selected subset of endpoints",,,,,,
369107550,1775,Issue,"-irl the Octokit libraries don't really care about the _source_ of the token, as it will always send `Authorization: Token {token}` when making requests. But the source of a token is important for organizations.Personal access tokens: - are created by the user, and are restricted to the scopes the user assigns when creating them. - can access organization data unless the organization has enabled [SAML single-sign on] - then personal access tokens need to be [authorized]OAuth applications: - need to be approved by the user before they can create an access token - may also need to be approved by the organization to access the organization dataMy gut feeling  is that the organization has enabled [""OAuth App access restrictions""] which means that applications need to be [approved] by the organization admin before the app can access the organization data. Can you confirm that?",,,,,,
432303105,1775,Issue,"grossly unclearI agree completely.  Adding this info here (since this came up during my troubleshooting search):I hesitated to grant my oauth token the scope for ""Full control of private repositories"" (`repo`), because it didn't sound read-only.  A better description would be ""Access all aspects of public and private repositories"", and `public_repo` would add more clarity if it was the first sub-scope listed underneath.But you _do_ need the top-level `repo` scope checked, or your queries for private repos will just return an empty array (no errors).",,,,,,
532192479,1775,Issue,Closing this out due to inactivity.Please open a fresh issue if there are things you would like to clarify.,,,,,,
532209128,1775,Issue,Opened,,,,,,
368550616,1774,Issue,"is an asynchronous function so you will need to `await` it first, making your sample look like",,,,,,
368575534,1774,Issue,"Just to make sure I am doing this correctly as it freezes at GetAllGetAll(Owner, Name)Owner = owner of the repoName = Name of repopublic static async Task GetReleases(string GIT_URL)",,,,,,
368580616,1774,Issue,"the _await_ keyword 'returns' the IEnumerable _after_ the asynchronous operation (represented by the task) completes. When execution first hits the await operation, the task gets started and your code actually returns at that point, to its caller. When the operation completes the system causes the next line after await to execute, usually on the same thread that began the operation.",,,,,,
368583778,1774,Issue,"Okay, but being stuck on the await to complete for 10+ minutes kinda kills the point of using this library for me.As no one is going to want to wait 10+ minutes for something to finish a simple task.",,,,,,
368631593,1774,Issue,"- For an initial test kind of thing you can do (as I have when playing around) use:That will synchronously (as they refer to it) wait inside the 'Result' property and your code will behave more intuitively but it will still take the same time. There's no asynchronous code then and it's a bit easier to fathom when experimenting.If the call is taking 10 minutes then is that unreasonable? I strongly suspect that the delay will be at GitHub themselves rather than Octokit. Are you unwittingly pulling a large volume of data?I've experienced rather lengthy delays myself on some things like getting all branches that meet some compare condition with another branch, that requires a compare operation on each branch and these seem to take some time. (like 45 seconds for like 30 odd branches).Also note - I can see that GetAll( ) has overloads which take a ApiOptions object, seems you can get the data back as a number of ""pages"" and specify the size of each page. This may enable you to get say a few back at a time and display these or whatever as the results come back rather than waiting and doing nothing while the whole set is transferred.Out of curiosity, how many items are returned for these lengthy operations?You could write some helper code that encapsulates that paging and perhaps uses a page size of say 20 yet **yield return** each item one at a time. This way the caller would see what seems like a continuous set of results but in reality they are being pulled 20 at a time in quick succession.Perhaps Octokit itself already provides a ""paging-set to IEnumerable"" helper somewhere...",,,,,,
368638663,1774,Issue,"Okay, but being stuck on the await to complete for 10+ minutes kinda kills the point of using this library for me. the default behaviour of `GetAll` is to follow pagination hints and fetch **all** records related to an API. If you're on a repository with thousands of releases, this might explain why the request is taking so long to complete.If you only want to get a subset of these releases, there is an overload that takes an `ApiOptions` object which lets you control how much data you want:There's also the `GetLatest` API that is intended to just get the latest release:",,,,,,
368646202,1774,Issue,"I was testing on a repo with 3 releases, and even getlatest was taking ten minutes.Already gave up and just made a readonly token to use and removed the need for github info. (As this was really all I tried using this lib for was to make sign-ins needed instead of a token)",,,,,,
368657390,1774,Issue,"So this is a windows forms app?   It's definitely not right that a call should take 10 minutes. If you are able to post more of your code we could try running it on another system. You could also just simplify your example and test your above code in a console application, to see if it has the same problem",,,,,,
369243480,1774,Issue,"- Hi,I was curious about how I'd implement an alternative ""GetAll"" into Octokit, I can see it's defined deep down as a member of the `IApiConnection `class. What I was curious about is implementing an alternative that returns` IEnumerable` and under the hood uses pagination to get pages ""on demand"", this is a pattern I've used before with other REST services.In that pattern I simply get the first page, then do something like this:I'm sure you get the idea, the big question I have for you is how to introduce this without breaking existing consumers of the interface `IApiConnection`.This patterns only goes to the network to get more items as and when the caller is enumerating items and there are no more items left in the ""current"" page. So if caller was enumerating something likeThen only as many network calls as are necessary would be made to get the first matching 20 items and no more, this is a potentially huge saving for certain kinds of data extraction.",,,,,,
369410558,1774,Issue,"the first issue that I can see is that most of the `GetAll` APIs return `Task`, so I'm not sure how a drop-in replacement would work when that signature needs to change. But don't be afraid to experiment with a different implementation if you think this might help for better lazy-loading scenarios.",,,,,,
369432509,1774,Issue,"- OK yes, that's true - very interesting to explore options here and yes - lazy loading - is exactly the term I was seeking!",,,,,,
369612668,1774,Issue,- Would the team here regard a change to `IApiPagination` a breaking change? The interface is public but seems to perform a purely internal role. I'm considering a small change to the definition of `GetAllPages `that could (I think) make it straightforward to introduce lazy pagination with zero changes to consumers of Octokit.,,,,,,
369751676,1774,Issue,"From your original issue text )reading via email) I was wondering if you werent aware we had the `ApiOptions` pagination settings, and users already can write a loop that retrieves each page one by one as they need them (you can also generally specify a larger ItemsPerPage value than the default eg default might be 20 but you can often request 100 per page).  But after your edits and further discussion it seems you just want this to be more abstracted away from the user and effectively to stream chunks of records to the user as they enumerate through the collection?  Isn't that what the Reactive `IObservable` stuff is meant for?In any case, feel free to play around with whatever implementation you like and put up a PR for discussion/feels...  We do try to avoid breaking changes but we can figure that part out once there is an actual ""better"" implementation to consider",,,,,,
369785407,1774,Issue,"- Hi, yes you may be correct and its better to leverage IObservable than implement a lazy paging mechanism. I've not really done much with IObservable and need to devote some time to it. So far as the paging goes, yes I did see `ApiOptions `and was considering making start page zero (0) act as a sentinel so the underlying logic in Octokit could detect that value and then do the lazy paging, but that all depends on whether changing the signature of the method in `IApiPagination `would be regarded as a breaking change or not.If that signature _could_ be tweaked I think I have a rather neat way of adding this lazy paging while maintaining the integrity of all other existing interfaces.I can't imagine any scenario where a consumer of Octokit would need to ever access `IApiPagination` because it seems to be of purely internal significance.I may just play with this when I get some time and show you guys what I end up with just out of academic interest.",,,,,,
369817627,1774,Issue,"I've not really done much with IObservable and need to devote some time to it. IObservable is a push-based way of enumerating values, which is a bit different to what you had in mind. So I'm going to share some reservations of mine about this change, and provide some hints as to where you should be looking.I'm quietly worried about breaking the _behaviour_ of `GetAll` here to achieve lazy loading (because it's there in the name - _Get_ _All_) and `IEnumerable` is basically a synchronous interface (`MoveNext()` does block, so if you're going to make a network request when you need a new page it's still not going to be a great experience for the consumer).I'd recommend instead looking at [`IAsyncEnumerable`] and in particular [`IAsyncEnumerator`] which is part of Ix.NET.The signature for IAsyncEnumerator is much closer to what you are looking for in terms of an asynchronous enumerable:There's been very early discussions about making this a part of the BCL and supporting the ability to `foreach` over these like you would a regular `IEnumerable`, but I'm not involved with them at all so you'll have to keep up with Mads Torgensen et al and future C# language features.",,,,,,
369926722,1774,Issue,"- Thanks for the additional info on `IObservable`, much appreciated. Also just to be very clear I was not suggesting any change to `GetAll `only the method signature in `IApiPagination`, no other existing public interface or method signature would change.I created a system last year that used T4 templates along with a method defintion XML file to generate a client class around a REST service (which has hundreds of JSON classes and hundreds of endpoints).In that design some methods in the XML get generated as TWO methods in the generated client class(es), these were paginated methods similar what I see in Octokit. When the T4 translated such a method is created a paged based conventional method where caller can enumerate the pages easily and another method (name had 'Seq' appended, an F# convention) which did something like this, internally enumerates pages and yield returns each item.It's particularly useful for scenarios where the caller is doing a` .First()` or `.Take()` operation because the caller is unaware of the pagination and the system pulls only as many pages as are required to satisfy the .First() or .Take() if the caller really does want all pages ""at once"" then `.ToList()` gives them that.So if I did spend any time here on this (and I'm more academically interested in how I'd do it than anything else) the only existing public interface that I think I'd need to change is the method signature in` IApiPagination `which I suspects is of no interest to any Octokit consumers (I may be wrong of course).On a very separate topic I'm developing a system to pull data in various ways from GitHub and I think you'd urge me to leverage the reactive version of Octokit here, is that true? If so is there anything missing from the current reactive version that's present in the ordinary version? The consumer in this case will be a .Net Core Web App by the way.Thanks",,,,,,
433189673,1774,Issue,Another question:It seems that it's not possible to get all releases from an **organization**?I'm using oktokit version 0.32.0,,,,,,
433190102,1774,Issue,"that isn't supported by the [GitHub API], which is a constraint on what can be supported in Octokit.",,,,,,
594494517,1774,Issue,"So this is a windows forms app? It's definitely not right that a call should take 10 minutes. If you are able to post more of your code we could try running it on another system.We didn't hear back from  here about the context for where the sample code is running, and maybe it does just need a Windows Form app to see the issue on our side.Updated title to focus on the original bug rather than the side discussion about pagination.",,,,,,
594826220,1774,Issue,"ya, sorry I stopped getting any notices about this.  Can't even remember what the issue was fully now or what I was doing XD",,,,,,
594828626,1774,Issue,"The repository which reproduced the issue is still present, and we have a sample code handy, so I'm going to mark this as `up-for-grabs` to see if someone can reproduce it.",,,,,,
594835609,1774,Issue,alright,,,,,,
370197999,1773,Issue,"I'm not sure there is anything specific we can say here regarding octokit. We aim to wrap the upstream REST API, but of course some endpoints are not implemented yet üòÅIt sounds like your queries are really related to how the github API works and the design decisions around github apps and which endpoints are enabled for apps or not... These are best directed at github support or the github platform forum",,,,,,
368386183,1771,Issue,Yeah I'll add that too,,,,,,
372190794,1771,Issue,just letting you know I havent fogotten about this!  I've been out of town but will get to this this week.  I wanted to add the new field to some integration tests just to prove that it is being exercised correctly,,,,,,
381580632,1771,Issue,"I went to add this to integration tests, only to realise that it only has effect when the PR is from a fork of a repo, back to the repo...  all of our integration tests are for PR's within the same repo and this new field is always `false` in that case.  So I've done some manual testing of create, update and get requests, and am satisfied this additional field is working :+1:I also found 1 minor change was required, as the setter for the new field on `NewPullRequest` was not accessibleMany thanks  for another contribution!![LGTM]",,,,,,
381581097,1771,Issue,release_notes: Add `MaintainerCanModify` field to `PullRequest` response and `NewPullRequest` and `UpdatePullRequest` requests,,,,,,
368134044,1770,Issue,Many thanks  ![],,,,,,
389831311,1770,Issue,release_notes: Added `PreviousFileName` field to `PullRequestFile` response,,,,,,
367876105,1769,Issue,"if you'd like to contribute this, the file you need to change is [here] and I think all you need to do is add a new property:And then add an additional parameter to the second constructor:",,,,,,
368298058,1767,Issue,Thanks  and congrats on your first contribution to the repo!![LGTM],,,,,,
368298134,1767,Issue,release_notes: Support `PullRequestReviewEvent` payloads using new response model `PullRequestReviewEventPayload`,,,,,,
367101555,1766,Issue,"Nothing specific at the moment. Webhook payloads are generally aligned with the activity event response classes but in terms of actually receiving a webhook, extractibg the event type from the http header and then deserialising the payload - octokit doesn't do that sort of thing. It also doesn't belong in the core library IMO however I think it would be appropriate to  have a wrapper/extension nuget package that provided this, similar to how its being done on the node.js octokit modules",,,,,,
367128060,1766,Issue,"- Thanks, I'll probably write some kind of support stuff and perhaps share it here if I think its decent!",,,,,,
370198029,1766,Issue,Sounds good!,,,,,,
366506746,1765,Issue,![],,,,,,
366211744,1764,Issue,"release_notes: Add `MergeableState` property to `PullRequest` response model, to indicate additional information about why a pull request can't be merged",,,,,,
365477594,1762,Issue,"I thought I'd be able to leverage our JSON deserializer to convert the list of issues to a string, like this:However it blows up on the second line with this error:I also tested this with JSON.NET to confirm it wasn't our deserializer to blame, but it has the same error.Our [`SimpleJsonSerializer`] has a bunch of domain-specific rules and conventions for mapping JSON to .NET objects, but I bet we're not applying the rules enough to be able to round-trip an object through it.",,,,,,
365530780,1762,Issue,"Yeah we only serialise request models, not response models the particular error you ran into is with a stringenum wrapper with an empty /unspecified value, which actually happens to be something I ran into with #1760 and am working on fixingThere could well be other round trip serialise/deserialise problems after that one is fixed though",,,,,,
365532597,1762,Issue,"I'm interested in doing something about your stated problem (some way to save/load our response objects) but in the meantime there potentially could be other options for you to explore toFor example which GetAllForRepository call is this (issues, PR's, commits, etc)? If you don't actually need ALL of them you can use pagination to query data in more manageable chunks, or use search Api's to specify criteria to hone in on what you are looking for (eg PR's of a certain state or issues with a particular tag or whatever)You could also declare your own DTO class with the fields you care about and use automapper to map our responses to your DTO's which you would then be able to persist/serialise as you need to. In my case I'm doing this and storing certain objects via entity framework in a database",,,,,,
365533313,1762,Issue,Final thought... Because we try to have immutable response classes all the parameters have protected setters and the only way to create them is via a constructor... so I wouldn't think normal desetializers like newtonsoft would be able to instantiate our objects (unless it handles classes where only the constructor can be used)? So I'm thinking using our own serializer/deserializer is probably the only way that is likely to be able to handle things easily,,,,,,
365661216,1762,Issue,"Thanks! I'm using this for issues. For now I am doing SearchIssues to work around it. But it does mean I can't use LINQ to form the majority of my filtering and processing - I have to format my reports effectively into a Github-compatible requests. It's fine for ""pre-designed"" reports, but not great for REPL-style quick queries.DTOs with Automapper is like... hard work :). j/k. I can do that as an option if need be.",,,,,,
365266125,1761,Issue,"I cant seem to see anything telling in the API responses for comparing commits... and I'm not aware of anything else that could have this info, sorry ü§î  anything i've missed?",,,,,,
365289035,1761,Issue,"Hi,I got this reply from Github:Hi Korporal,Thanks for reaching out. That's an interesting question -- I think there are two ways to do that currently:1) create a pull request and then fetch the pull request via the API: . The ""mergeable"" field will tell you if the pull request can be merged without conflicts (i.e. whether the two branches are mergeable in Git without conflicts)2) create a temporary branch pointing at the same commit as the base branch (e.g. via ) and then merge the head into the temporary branch via . If the merge succeeds -- then there were no conflicts. If the merge fails -- there were conflicts.There's no endpoint specifically for the purpose you described as ""to see if a pull request were created, would there be merge conflicts"". Hope this helps.Best,Ivan====================Is the merge operation described above in 2.) , supported by Octokit?Thx",,,,,,
365464882,1761,Issue,"yeah, those are the only two tricks I know about. Is the merge operation described above in 2.) , supported by Octokit?Yes",,,,,,
365883926,1761,Issue,"I'll close this out, given you've posted the response from github support",,,,,,
364862593,1760,Issue,Looks like a legit failure:,,,,,,
364874477,1760,Issue,"Yeah am working on a fix but it gets pretty hairy, I think the fact the StringEnum wrapper had the implicit operator to a string type means you can technically set it to null eventhough you really shouldn't be able to (since its a value type struct) It can also be null if it's a member of a parent class that gets newed up (leaving the StringEnum as a null). I'm trying to change its default behaviour to be more like an enum value type (ie default to default(T)) and make it no longer accept nulls in the ctor but I'm now worried how many response models might then blow up because they should really have been made nullable `StringEnum?`",,,,,,
364893134,1760,Issue,"Well, the internal represenation will be `string.Empty` if `null` is passed: then it'll default to `default(TEnum)` if you try to parse it:",,,,,,
364899236,1760,Issue,"The serualizer doesn't know about TryParse though, it just calls `Value` which throws an exception because empty string isn't a valid enum member. I've tweaked `.Value` to return `default(T)` rather than throw an exception but I'm also wondering whether it should even be ""valid"" to pass a `null` into the `ctor`. My reasoning is, if the response may contain nulls or omit a field, then the response class should just declare that member as a nullable type, just like we would do for a regular enum field. Only drama is any current response classes that are relying on the ctor allowing nulls to be passed in will need to be found and changed to declare as nullable. We've got pretty decent integration test coverage though so I'm considering doing this",,,,,,
364900407,1760,Issue,"I've tweaked `.Value` to return `default(T)` rather than throw an exception but I'm also wondering whether it should even be ""valid"" to pass a `null` into the `ctor`.But doesn't that default the purpose of `.Value`? Isn't the point that it should throw an exception so you have to handle ""unknown"" values explicitly. Silently falling back to `default(T)` would make the application continue to run, but possibly with incorrect values.",,,,,,
364900931,1760,Issue,"My reasoning is, if the response may contain nulls or omit a field, then the response class should just declare that member as a nullable type, just like we would do for a regular enum field. Only drama is any current response classes that are relying on the ctor allowing nulls to be passed in will need to be found and changed to declare as nullable. We've got pretty decent integration test coverage though so I'm considering doing this.Agreed. I think the current behavior (`null` throwing) should be expected (it *is* invalid after all), and the solution should be to make the response property nullable instead of silently falling back to `default(T)`.",,,,,,
365246613,1760,Issue,"could you take a look at the latest stuff?  It contains the commits that change the `StringEnum` now returnss `default(T)` for `Value` property.  Thus, it behaves in line with a regular enum.I've then gone down the rabbit hole in fixing the serialization side of things.  Ultimately i found the serializer was saving out the entire StringEnum struct as json (ie enumerating all properties and including `string_value` and `value` etc) so Ive added special handling for types of `StringEnum` to get the enum value and then serialize it like a normal enum (taking into account `[Parameter()]` attributes and the like.",,,,,,
365253788,1760,Issue,"let's see how this looks.  I've removed that ""fallback `default(T)` behaviour.  But still asserting that `null` can't be passed into the `ctor`.The only slightly hinky part is that the serializer blows up on a class with an uninitialized (not nullable) `StringEnum` member.  Now as you say, given we use this on response classes and not on request classes AND the fact that anywhere it is used it should be declared nullable if it is infact optional... I guess this is OK that the test has that peculiarity (could always make the test class have a ctor that mandates the members be supplied/initialized)",,,,,,
365883648,1760,Issue,Is this looking OK to you   ?Just running through all the integration tests now,,,,,,
365892397,1760,Issue,"Yeah, I can't see anything wrong with it üòâ LGTM!",,,,,,
366194476,1760,Issue,Integration tests are üíé,,,,,,
366194662,1760,Issue,release_notes: Deserializer now handles nullable `StringEnum` members,,,,,,
365273431,1759,Issue,release_notes: Remove deserializer enum cache miss by correcting the case of `AccountType` parameter values,,,,,,
366205520,1758,Issue,"advisories: On February 22, 2018 19:00 UTC, GitHub will [disable permanently the use of weak cryptogrpahic standards].  Applications targeting .NET Framework 4.5.x will be affected, as that framework does not enable the now required protocol (TLS1.2) by default.  This octokit.net release will automatically enable this protocol, when the `GitHubClient` is constructed.  Note that applications targeting .NET Framework 4.6+ or .NET Core should already have TLS1.2 enabled by default, and this release does nothing with enabled protocols on those platforms.",,,,,,
366205550,1758,Issue,"advisories:  Affected clients that are unable to update octokit.net, can include their own [code change] to enable TLS1.2 as an alternative to updating to this release.",,,,,,
366491335,1758,Issue,release_notes: Add TLS1.2 to enabled security protocols (.NET Framework 4.5 only) to avoid SSL connectivity errors when [GitHub deprecates weak algorithms] on February 22,,,,,,
364748742,1757,Issue,"Hi  thanks for the PR!  Having a look at the doco, and my own API responses it seems like the visibility property can have a value of `private`, `public` or `null` so it would be best to represent this as an `enum` rather than just a `string`.  We have a special `StringEnum` type?  Otherwise let me know and I can push a change onto your branch that does this :+1:",,,,,,
365026358,1757,Issue,"Hey , thanks for the input. I'll take a crack at this!Update: , I have changed it to a .",,,,,,
366197063,1757,Issue,"#1760 is merged now, if you wanted to merge or rebase master into this branch and see if that clears up the failed tests",,,,,,
366490469,1757,Issue,Something a bit weird with your merge caused lots of commits to show up. I fixed it up for you and also ran integration tests to make sure things work.  Found an old skipped test that works now so was able to unskip it üòÄ,,,,,,
366490740,1757,Issue,Many thanks for the contribution  !![LGTM],,,,,,
366490803,1757,Issue,"release_notes: Add `Visibility` property to `EmailAddress` response model, to indicate whether a primary email address is `Public` or `Private`",,,,,,
368947550,1757,Issue,Thank you for all the help  ! Couldn't have done it without you üòÑ,,,,,,
364251550,1756,Issue,"Uh oh... I presume it is probably related to thisAccording to that the SSL deprecation was in place for one hour just now, and will be permanently disabled on the 22ndAssuming you are just using the standard octokit client (with its built-in http provider) it looks like we may need to do something here ASAP Can you please confirm - you are using the standard octokit client (built in http client)? - what octokit.net package version you are on - what target framework and platform your app is (eg which framework or core version, is it console app, winforms, Web API, asp.net etc) - is it working again now that the 1 hour test has ended? I'm going to edit the title of this issue too btw Thanks",,,,,,
364486300,1756,Issue,"- Hi.It did spontaneously resume around an hour or so later, I was going to mention this here but now that I see your remark I wanted to add more detail for you.Smartgit was impacted (but oddly a coworker had no issue, perhaps his Smartgit is setup differently).The experiment app I was working on has this Nuget package defintion:It is a .Net console app created in Visual Studio 2017.The first three lines of code that do anything with Git are: It was that last line above that was executing when the exception was thrown.The console app's target framework is .Net 4.5Do you guys think that Octokit users may have problems once we hit the 22nd Feb?(PS I'm the same user I just have two accounts a normal one and an admin one we use for managing our company repos).",,,,,,
364494661,1756,Issue,"- I'm unfamiliar with the TLS stuff, did Octokit fail for me yesterday because it has to be changed, the code must change? or is it a firewall change? a SSL certificate change?",,,,,,
364519156,1756,Issue,"I'm not familiar with the details of this project. But, given it is Windows oriented, might it make use of the [git credential manager for windows] (whether directly or indirectly)? If so, that could be the source of the issue. As noted in the [blog post], one must run [version 1.14.0] (or greater) to be compatible with TLS 1.2.",,,,,,
364521844,1756,Issue,"- Hi,I've never even heard of this Git credentials manager! So far as I'm aware I do not have this installed.Maybe this is something used by MS tools (e.g. Visual Studio) that need to manage access to Git?",,,,,,
364529182,1756,Issue,"Maybe this is something used by MS tools (e.g. Visual Studio) that need to manage access to Git?Yes, it is used by a fair number of Windows tools to manage credentials to git. So, I wouldn't be surprised if it was in use. But, I'll wait for  to weigh in with a more informed assessment of the internals of Oktokit.net.",,,,,,
364537171,1756,Issue,"The Git Credential Manager does not come into play here. Octokit.net is a library for making https calls to the GitHub API.The fact that those calls failed during the 1 hour window where [GitHub shut down support for TLS 1 and 1.1] tells me this is an issue with making the https calls. -ncuadmin I suspect you are running on .NET 4.5. There are a few solutions.* Upgrade to .Net 4.6+. It supports TLS 1.2 by default.* There's a registry hack to make your machine use TLS 1.2 by default, but search for it and use it at your own risk. üíÄ  we can make Octokit set TLS 1.2 by default by running the following code very early.Hope that helps!",,,,,,
364558976,1756,Issue,"- Hi,Is it the case that an app which simply performs this during its startup:Will thereafter automatically uses TLS 1.2 whenever it makes outbound SSL connection requests?Thx",,,,,,
364562217,1756,Issue,"That's correct , as  says, octokit uses the built in http client in .NET Framework, and any apps on earlier than framework 4.6 don't have TLS1.2 available by default (but it can be enabled with that snippet above). Eventhough it only affects apps targeting earlier framework, since we do support those frameworks and github API connections won't work without this after the 22nd, we'll incorporate this into octokit and push a release soon. Affected clients can also include the fix themselves if they can't update for whatever reason.",,,,,,
364573176,1756,Issue,Many thanks  this is much appreciated!,,,,,,
363931870,1755,Issue,-ncuadmin can you post up a snippet of the code you're using?,,,,,,
363936551,1755,Issue,- HiHere's a small part of it:I'd like to enumerate that sequence in date order.Thx,,,,,,
363942103,1755,Issue,"-ncuadmin the Branches API only includes the SHA of the commit associated with each branch, but this can be used to get the full commit information:",,,,,,
364166768,1755,Issue,- Much appreciated!,,,,,,
363576797,1754,Issue,"Hi  thanks for highlighting this, would you consider contributing a PR to fix this? It's very easy to add a field in octokit, just add the member to the response model with the right name `Visibility` and it will be populated.",,,,,,
364254912,1754,Issue,"Sure thing, I'll give it a shot.",,,,,,
362363656,1753,Issue,"Hi -Hanlon You can specify the branch name or any commit sha to start listing commits from, using the `CommitRequest`request model via [this overload]( ) method",,,,,,
362389111,1753,Issue,"Amazing, thank you  - works like a charm. I hadn't realized the `Sha`  parameter in the `CommitRequest` could accept the branch name. Much appreciated!",,,,,,
362394736,1753,Issue,"Yeah we try to reflect the [upstream github API] as much as possible, and that's definitely an oddly named parameter (probably historical reasons). In general github API seem to support a branch,  tag or commit sha in most of the places that want a commit so it's always worth tryingWe also do try to bubble up these types of guidance/parameter info via [xml comments] which should appear as intellisense info inside any IDE that supports it, so you should be able to discover/explore these annotations as you are playing with the library üëç",,,,,,
494735646,1753,Issue,"Sorry to drag this up again, so based on  comment above is the following expected to work?It throws an exception for me. Can the Sha part of the CommitRequest be the actual branch name?",,,,,,
494775220,1753,Issue,It throws an exception for me. what exception does it throw? Maybe the issue is not related to this specific problem...,,,,,,
361908723,1752,Issue,"Thinking about this though, I'm not sure the first sentence makes sense... To me, the files in the comparison dont necessarily correlate to the `AheadBy` and `BehindBy` figures do they?  To my understanding, those are the number of commits the head branch is ahead and/or behind the base branch by... but if you consider that even a single file could contain multiple differences that are caused by commits on either the target or the base branch, so the one file has both ""ahead"" and ""behind"" commits to it?  Therefore a file doesnt necessarily constitute an ""Ahead"" or ""Behind"" change.There is however a `Status` field on each file which indicates whether it is added, removed, edited, in conflict etc... is that more what you wanted?  There is also info on each file about how many lines were added/removed/changed.Also, to answer the actual question (eventhough I dont think you need this in this case) Is it possible to get the common ancestor?Yes - the `MergeBaseCommit` property on the `CompareResult` response is the common ancestor.Some more reading on this:",,,,,,
361923835,1752,Issue,"Hi, imagine two branches that initially point at some common commit ""root"" then one one branch I add a file X1.txt and commit while on the other branch I add a file X2.txt and commit.Now the compare between these two branches will show AheadBy = 1 and BehindBy = 1.The files list will be X1.txt and X2.txt - this is current behavior.However the file X1.txt appears ONLY on the first branch and the file X2.txt appears ONLY on the second branch.That's what I'm seeking and I think I can get this from the common ancestor.My motive here is to see what would be impacted if I were to merge one branch into another, by which I mean if I were to merge branch A into branch B, what on branch B would be impacted by such a merge.Clearly only files modified on branch A would be impacted by such a merge, files modified on branch B that were not modified in branch A would not be impacted (by the merge).",,,,,,
361928401,1752,Issue,"In your example I'd expect x1.txt to have status `Added` and x2.txt to have status `Removed`So I think you could still get this info from the files list (status field) of the compare result, rather than needing to resort together common ancestors and so on?",,,,,,
361933857,1752,Issue,"Actually I think I'm probably wrong on that, on my phone so can't verify right now",,,,,,
361939729,1752,Issue,"- Hi,The goal here (which is really what this is about) is to answer the following question:**What files/folders would be changed in branch X if we were to merge branch Y into it.**Nothing in branch X can influence the answer to this question. Branch X may contain several changes to some file, but if that file is not touched by branch Y then that file will not be impacted by a merge of Y into X.The motive for the question itself is to enable us to try to answer another question like this:**If we merge branch Y into branch X would that invalidate the (time consuming QA) testing of the apps we just did for the project represented by branch X? if so which apps would it invalidate?**",,,,,,
365884475,1752,Issue,"perhaps reaching out to GitHub support is the best approach on this one too.  If you do, could you post the response?",,,,,,
361590680,1751,Issue,"If someone wants to attempt to edit the files themselves to see about indentation, I'd be curious to know what you see on your end. For me, even using the GitHub.com editior and removing all whitespace, removing the CRLF (or LF) and then redoing the indentation still isn't fixing it, which is why I'm fairly certain it's just a UI bug on comparing branches for the pull request UI.",,,,,,
361902074,1751,Issue,having a quick look it seems like you have tab characters there rather than spaces?,,,,,,
361903839,1751,Issue,I know it appears that way but it's gotta be a bug. Even using the in browser editor they are spaces for me.,,,,,,
361909036,1751,Issue,"that's weird... when im attempting to edit it in the browser editor, they are showing as tabs for me.  The cursor jumps the whole thing in one go, whereas the lines above/below it are moving 1 space at a time.  I wonder if something is somehow cached on your web browser?Ill try and edit one of them in the browser editor and see if it works",,,,,,
361909576,1751,Issue,"Thanks Ryan,I'm at the airport about to hop on a flight or I'd do it, haha. For me, all local files had spaces and on my fork they were spaces in browser. I committed multiple times deleting the line(s) and retyping with spaces.It may be a cache issue, but I went ahead and submitted a bug report to GitHub with steps I took just in case.",,,,,,
361909641,1751,Issue,Yeah that worked ok for me.  Must be something strange happening on your browserWhat does my commit  look like to you?,,,,,,
361910138,1751,Issue,"From my phone, looks like the remarks are lined up and now the params are off (or are still off, can't recall if last night they too were misaligned).I apologize for you having to go to try to fix something as simple as tabs versus spaces, heh.",,,,,,
361911530,1751,Issue,"From my phone, looks like the remarks are lined up and now the params are off (or are still off, can't recall if last night they too were misaligned).Oops i think I just missed that line 25 one.  Anyway I think all files are fixed now, things look OK from this end at least!",,,,,,
361912102,1751,Issue,release_notes: Clarified `ProductHeaderValue` usage to align with GitHub API Docs,,,,,,
361912510,1751,Issue,Thanks  for the contribution!![LGTM]üòÅ üòÅ üòÅ,,,,,,
361914277,1751,Issue,"Thanks  for the fix and merge. #teamwork #tabsarebetter #savethekeystrokesWish editors would resolve tab/space things on their own, heh. I swear all my local copies showed spaces only using Atom, VS, even notepad++ haha.",,,,,,
366489673,1751,Issue,"FYI  some of the commits on this PR are from an unknown (to GitHub) email address, and won't count in your contributions graph.  You can [add it as a secondary email address] to your profile so that they are included in your account/contributions :+1:",,,,,,
366493171,1751,Issue,"I don't see the ? icon that should tell me which email is under the commit. Any help? Thanks for pointing it out!I've been changing some things (such as my profile name) on my account, that may be the issue.",,,,,,
366493960,1751,Issue,"True, it doesn't have the question mark... But I'm pretty sure everything is tracked by the email address of ultimately",,,,,,
366494444,1751,Issue,ah well. i dont mind :P,,,,,,
366496077,1751,Issue,My only issue is it looks odd in the auto generated release notes :üòÅSome info here,,,,,,
366496155,1751,Issue,Unfortunately I believe its due to the anonymous email I use as part of GitHub's privacy on profiles (options 2/3 of the diagnoses). Both fixes listed actually say that there's not a way to fix old commits.,,,,,,
366496998,1751,Issue,Anonymous email as in it's from a domain github won't recognise?,,,,,,
366519397,1751,Issue,"Non anonymous as in on your profile at GitHub, there's a privacy setting to hide your email. , see bold ""Keep your email address private""",,,,,,
361394224,1750,Issue,"Sure, feel free to send a PR to clarify this field. You could also include a link to the official docs in a `Remarks` tag as well, similar to what we do on method calls",,,,,,
361433573,1750,Issue,"Working on it now, thanks",,,,,,
360619916,1749,Issue,"You probably want the [Compare Commits] API:That will list out the whole file list, and it has some limits which are mentioned in the docs, but that should do the trick.",,,,,,
360915277,1749,Issue,"- Hi,Im seeing compare results that have non-zero for BehindBy - yet the collection ""Commits"" is always empty, as is ""Files"", is this expected? If I see AheadBy as non-zero these collections are populated....",,,,,,
365888143,1749,Issue,"so is the answer here that in the comparison sense, it doesn report on the commit/file level of the BEHIND changes?  Just like if you have a PR that is behind master, github.com doesnt show you the changes your PR ""doesn't"" have in it's branches, only ""what would change in the base branch if you merge this PR"".  Could you diff in the other direction (B->A rather than A->B) if you want to get the reverse changes?",,,,,,
367088259,1749,Issue,"- Yes, ""diffing"" in reverse is an interesting suggestion, I'll certainly play with that and try to update this issue with what I find.",,,,,,
360313660,1748,Issue,"Thanks!  I will run this through integration tests locally tonight, I may even look to add an integration test that uses a `Task.WhenAll` concurrency to reproduce the problem and confirm this fixes it :+1:",,,,,,
360975808,1748,Issue,"Really struggling to produce a repro of the issue, so i can test the fix üò¨ If you have any repro code, let me know",,,,,,
360984379,1748,Issue,"I don‚Äôt, same problem - it was happening about 1 in 20 runs in my project where I `Task.WhenAll()` the projects endpoint for around 40 projects. It hasn‚Äôt happened since switching to this build, but that could just be because of luck. It‚Äôs so intermittent, it‚Äôs hard to tell.Let me see if I can come up with anything - maybe by targeting just at the cache and pumping in hundreds of types or something I can get it to repro.",,,,,,
361237195,1748,Issue,"I've run all the integration tests and am happy with this change.  It would be nice to have a repro test but I've been throwing all sorts of parallel things together, using mocked responses, just the enum deserializer, even running against the actual github API and havent even managed to trigger the failure condition (before this fix is applied).Unless you've come up with anything  I think it's going to be a YOLO merge for this one üòù",,,,,,
361406871,1748,Issue,"I tried over the weekend and couldn't come up with anything reliable. I did get it to fail a few times under observation, but nothing that would hold up in a test suite.",,,,,,
361913046,1748,Issue,"Cool well given I've run the integration tests succesfully locally, and neither of us are able to get a reliably reproducible scenario, Im happy to merge this :+1:Thanks heaps for contributing this fix  !![LGTM]",,,,,,
361960589,1748,Issue,üëç,,,,,,
366491260,1748,Issue,"release_notes: Using the same `GitHubClient` instance from multiple threads in parallel will no longer throw occasional exceptions, after making the `GitHubSerializerStrategy` internals thread-safe",,,,,,
360315856,1747,Issue,"What is your current dotnet SDK installed in the path?I just tested on a windows machine that has `2.1.2` sdk reported by the above command.  When running the octokit build script it downloads the 1.0.1 runtime into the local `.dotnet` directory and everything proceeds to work fine.  In order to support the `netcoreapp1.0` for AWS Lambda, we did have to use an `ImplicitMetaPackageReference` setting in the csproj files to stop the build tooling automatically going up to a 1.1 equivalent.  It's all clear as mud but would be interested to know what SDK you currently have (and if not at least 2.1.2 like mine, does upgrading your system to the same as my test box, make things work!?)",,,,,,
360316695,1747,Issue,"Also in my case, after the download of the 1.0.1 framework ps1 file and it executing, the `.dotnet\Shared\Microsoft.NETCore.App\` contains both `1.0.4` and `1.1.1` folders (it sounds like yours only included `1.0.4` for some reason?)",,,,,,
360318147,1747,Issue,"Interesting - yeah, mine only contained `1.0.4` under the netcoreapp folder. Given that you got both, I wonder if having different global versions changes the local install. Or maybe my work firewall is getting in the way of one or more bits (it‚Äôs pretty aggressive).I think I‚Äôve got the latest SDK, but could be behind a minor release or two. I‚Äôll check next time I‚Äôm in front of my workstation and try to figure out what‚Äôs actually going on.",,,,,,
360320830,1747,Issue,It's funny because I think technically any later sdk could build the projects but in order to execute the test projects (netcoreapp1.0) you need the specific runtime. Plus the fact we are using cake frosting as a build script also means you need a runtime for that (and also I just noticed we are targeting netcoreapp1.1 for the cake build project)Even the fact the build.ps1 wrapper downloads the runtime if you don't already have it is just to try and make things easier rather than just failing and telling the user to go install the right runtime We can certainly look into making things a bit more consistent,,,,,,
360568115,1747,Issue,"reports I've got 2.1.4 so I wonder if this may be some kind of regression, though it's not clear to me how the local install of the SDK would impact the bootstrapping process since it downloads it's own SDK.I'll keep digging. It wasn't a big deal for me personally since I just opened VS and built/tested from there, but now it's a mystery why it's not working and I want/need to get to the bottom of it.",,,,,,
360571950,1747,Issue,Turns out it's working fine now that I'm out of the office. I now see both the `1.1.1` and the `1.0.4` folders under `dotnet/shared/Microsoft.NETCore.App`. I'll attribute this to the aggressive SSL inspection my corporate firewall does - must have blocked one or another of the bootstrapped downloads.,,,,,,
360243198,1746,Issue,"Hey  I do believe you are in luck üòÑ You can use the [Compare Commits] call using branch names, and going across forks (see the note there about using `USERNAME:branch` format for the fork branch)  and the response includes `AheadBy` and `BehindBy` summary info :+1: Something like this will hopefully work! Please let us know if this does the job for you",,,,,,
360259320,1746,Issue,"- This is EXACTLY what I wanted and works like a dream!!Now (of course) I have another question. If I want to know if the tip of some branch (a commit) is definitely present (merged into) some other like ""master"", is that easy too?",,,,,,
360272131,1746,Issue,"I'm thinking if you compared ""master"" to that ""commit sha"" and it HAD already been merged, then the comparison result would indicate `(BehindBy >= 0 && AheadBy == 0)`. However if you are talking about cherry picking commits or squash merges etc I don't think this would work",,,,,,
360273483,1746,Issue,- You're right and I do simply want to know if all of the branches commits are on master.Thx,,,,,,
360273924,1746,Issue,Glad it's working for you üëç,,,,,,
359962606,1745,Issue,"Turns out I didn't have the correct version of .Net Core installed (I only installed version 2.x, while the project requires version 1.x). Also, I had to remove net45 and net452 from the `` tag. Thing is, I can't commit such a change. Any reason why the Linux tools doesn't just ignore any missing framework?",,,,,,
359970102,1745,Issue,we have the `build.sh` scripts at the root of the repository that's [used on Travis] and seems to be targeting .NET Core:Does that give you the same error if you're on .NET Core `1.x` without having to change the `.csproj` files?,,,,,,
360026880,1745,Issue,"I believe the build actually does work even for `net45` target framework on Linux in TravisCI, because the TravisCI instance is setup with Mono framework",,,,,,
360038998,1745,Issue,"If you don't want to put Mono on your instance, you can edit VSCode's build task configuration (located in `.vscode/tasks.json` file) and add additional commandline arguments to the `dotnet build` command, to specify `--framework netstandard1.1`eg:although that is for just one csproj.  you cant do this at the sln level because libraries target `netstandard1.1` while test projects target `netcoreapp1.0` ü§î We could probably have a better story for development on linux and OSX platforms by either providing some vscode config files in the repo and/or getting the CAKE build script to be fed an option not to build the `net45` stuff",,,,,,
359243157,1744,Issue,"Fyi we actually support net core 1.0 onwards...Though I think it would be better to state netstandard 1.1 rather than a net core version, and possibly hyperlink it to Microsoft page showing the netstandard versions and what each one aligns with",,,,,,
359243846,1744,Issue,Yep,,,,,,
359311679,1744,Issue,I've updated the PR to show what I mean... do you think this is sufficient?,,,,,,
359347533,1744,Issue,.NET Standard and up?,,,,,,
359382860,1744,Issue,"Yes, .NET Standard versions are cumulative, so by supporting .NET Standard 1.1 any framework that implements 1.1 or later, will be able to consume Octokit",,,,,,
359383222,1744,Issue,release_notes: Update supported platforms in README.md to include `.NET Standard 1.1`,,,,,,
359391072,1744,Issue,So mean that higher versions are also supported? Might be confusing otherwise.,,,,,,
359413068,1744,Issue,"I don't think so, it's the same as for full framework we state we support 4.5. (we don't explicitly state this also means 4.6 4.6.1 4.6.2 4.7 etc, that's just how .NET framework works)",,,,,,
359238931,1743,Issue,Fully supported üòÅ,,,,,,
359214678,1742,Issue,Fixes #1737,,,,,,
359216252,1742,Issue,I tried to satisfy your points in my new commit.,,,,,,
359312186,1742,Issue,Thanks so much  for tidying up this doco!![LGTM],,,,,,
359312281,1742,Issue,release_notes: Updated Rate Limits documentation and samples,,,,,,
358596884,1741,Issue,"Yep definitely keen to add the `node_id` fields and would be great to get a PR!Due to the large number of response objects (and even larger number of method calls) that will include this field (and now need to include the `jean-grey` preview header) there is going to be an unfortunate amount of code churn (every Http Get/Post etc will have to specify the accepts header) PLUS all the unit tests have to be adjusted since there is one that checks the URL and headers for each call ü§î I'd be open to doing this in a more sane way for this sweeping change, until it's out of preview.  Perhaps appending this accepts header onto EVERY call we make, in the `Connection.SendDataInternal()` method (that every call ultimately routes through) could be an option.  This means it's provided on every call and also means unit tests don't need adjusting (because they are testing against the higher level `Connection` methods).  A quick hack doing this shows only 3 unit tests that will need adjusting...In my previous experience with GitHub API I haven't seen issues when sending accepts headers to calls which don't actually want them (they just appear to be ignored) but I suppose there is some level of risk in doing this on *EVERY CALL*  what do you think about the risk (or otherwise) of sending the `jean-grey` header on *all* API calls?",,,,,,
358597320,1741,Issue,Tagging  for thoughts on accept header abuse too üòÅ,,,,,,
358786842,1741,Issue,My current stance on the preview headers is to be very transparent about it and not to set any preview headers by default. I would make it simple to set them though as end users (including setting multiple headers as they can be combined) so that they are sent with any following request by default,,,,,,
358789486,1741,Issue,/cc,,,,,,
359085800,1741,Issue,"I agree with 's stance. However, it'd be nice to give end-users a way of turning this on when instantiating the client. For example, Do any of the clients support something like this?",,,,,,
365887520,1741,Issue,"Just to loop back on this one, there are some fundamental differences between octokit.net being a c# based ""object oriented"" implementation, vs octokit/js being more dynamic that come into play here.  On the javascript side, you can give users control over preview headers if you want, and simply return them back the dynamic json responses without strong typing (assuming even if you wanted to provide typescript typings for the responses, you wouldnt easily be able to support different types of responses (eg Repository and RepositoryWithLicensePreviewEnabled)?Meanwhile on the c# side here, we are deserializing API responses into explicit response objects that are strongly typed.  This means octokit.net itself pretty much needs to decide if we will enable a preview feature and modify the response object accordingly or not.  It's not really something that could easily be made opt in/out.  In theory for the ones that simply add a field, we could allow opting out of it, and the response object would just have a `null` for the new field.  But sometimes preview features actually change the shape of the response, and we wouldnt be able to support old and new in an elegant way.In general i think the user base is pretty happy to be ever marching forward, and supporting whatever preview functions come along with the ride üòÅ What I was specifically getting at with looping a few other people into this conversation was my thoughts that to easily implement the graphQL node id on sooo many calls, it would be good if we simply used the preview header on all requests (even those that technically dont support it).  Given the upstream API ignores preview headers that arent relevant to it, this seemed like a pretty pragmatic approach to implement this approach without requiring huge code changes (which would then get reverted when the API is no longer in preview).",,,,,,
394051987,1741,Issue,"This is out of preview now anyway, so we dont have to worry about the preview header stuff which complicated things given the large number of endpoints Now we can simply add the new field to all of the affected response models",,,,,,
357230181,1740,Issue,I'd recommend `GetAllForRepository` but also: - using the pagination API so you get more results per page: - using a local cache for past review comments and only querying for values since the most recent stored entry,,,,,,
357254844,1740,Issue,"Thanks for your prompt reply. In some repositories, because of a large amount of data, even using pagination with big page sizes won't solve the above problem. besides that, I'm working on a research that I need to fetch all of the review related information from top repositories to analyze them afterward, so practically the second solution is not suitable for my scenario.",,,,,,
357259899,1740,Issue,"I would still recommend investing in a backing store (like a database) so that you can easily store the PR comments and work with them locally, so you can research as many repositories as desired while working within the API limits. The 5000 requests/hr limit is a server-side restriction of the GitHub API, and the Octokit client is not able to circumvent this.",,,,,,
357297235,1740,Issue,", Of course, I'm using a backing store to save data. However, storing is a different concern from fetching data from servers. The problem is that practically GetAllForRepository is useless in scenarios where you need more than 5000 requests to fetch all of the data. A mitigation to this could be a change in GetAllForRepository to wait for a sufficient amount of time, in case of reaching the limit. And, automatically starting to fetch data again after that.",,,,,,
357302348,1740,Issue,"A mitigation to this could be a change in GetAllForRepository to wait for a sufficient amount of time, in case of reaching the limit. And, automatically starting to fetch data again after that.I'll defer to  on this from an earlier thread:  we generally shy away from implementing higher order logic like making composite/multiple API calls on behalf of the consumer, or building in retry/throttling type behaviour in the library itself, because there are too many potential use cases to implement in a way that would suit everyone.[The rate limiting API is available in Octokit.net, so that callers can handle this themselves].",,,,,,
357412738,1740,Issue,"The problem with the current API is that when I call GetAllForRepository then I have no way to control its behavior by myself. Because when GetAllForRepository is running I don't have any access to GetLastApiInfo() method via events or callbacks. I should wait till I catch the Rate Limit Exceeded exception and act accordingly.I'm really sorry to bother, your API is really awesome and I just wanted to make a contribution to improve it, based on the experience I had with it.",,,,,,
357424973,1740,Issue,"Because when GetAllForRepository is running I don't have any access to GetLastApiInfo() method via events or callbacksThe `GetAllXXX()` methods will all have an override that takes an `ApiOptions` parameter, that allows you to specify the `StartPage` (amongst other pagination settings).  When you don't pass an `ApiOptions` to the call, octokit automatically retrieves all pages for you, which sounds like where you are going to run into trouble on large repositories.But you can easily control this yourself by writing your own loop that uses `ApiOptions` to get 1 page, then check your remaining rate limit and either delay or go around the loop again.",,,,,,
358006728,1739,Issue,üëç This is something we need over at [`github/VisualStudio`] as well.,,,,,,
358588352,1739,Issue,"Many thanks  !  I just wanted to check that there aren't any other missing fields for this response class while we're here, but it looks like this was the only missing one :+1:",,,,,,
358589191,1739,Issue,"release_notes: Add `PullRequestReviewId ` property to `PullRequestReviewComment` response model, to indicate which `PullRequestReview` the comment is related to",,,,,,
358589350,1739,Issue,![LGTM],,,,,,
357498858,1738,Issue,Thank you for picking this up! My original goal was only to do the bearer token authentication but stuck on some incompatibility with .NET Core 1.0. Let me know if you have any questions on my code.,,,,,,
358580914,1738,Issue,bump,,,,,,
358675215,1738,Issue,All done!,,,,,,
359240487,1738,Issue,Done,,,,,,
359243365,1738,Issue,I'll take a look in the next day or two thanksWe still need to add unit tests and integration tests though ü§£,,,,,,
359361749,1738,Issue,"OK, then.Tell me what tests are still missing and I'll add them to my backlog.",,,,,,
359407693,1738,Issue,"OK, then I'll get to it when I have the time, which currently I don't have enough of üòÉ I think I'll start with fixing according to your review notes, implement the missing parts that are straight-forward.I'll read what you wrote about tests, check out the demo project.Regarding tests, I'll just say that I currently use this code in a project here where I work, and for what we need, it is working and tested, so I think it can be merged, just so it won't get too big a merge. May I suggest that'll once I push the fixes you requested, you'll merge it and open another issue for tests?",,,,,,
359412474,1738,Issue,"At a minimum we need unit tests before I'm comfortable to merge new features, and then before cutting a release (which I plan to do as soon as this feature is in) I also need to run integration tests to ensure things actually work! I'm happy to help with the tests if you like, also not too worried about the review size, as I prefer to deliver a feature and it's tests in one merge to master :+1:",,,,,,
359418391,1738,Issue,In that case I'll be glad to have some help writing the tests. Especially integration tests that require connecting to GitHub. I didn't look yet at the demo projects and I currently work on completing the reviewed code.,,,,,,
361310315,1738,Issue,"I added some unit tests, but I don't know how to run the integration tests.",,,,,,
361579371,1738,Issue,"Now I figured out how to run the Integration tests, but I don't know how to set up a test account (I created a new account, added a new organization, created a PAT, ran the configuration script, even installed the app I wrote), and for some reason I can't debug it (it constantly fails to attach the debugger). Can you please help?",,,,,,
361913607,1738,Issue,"What are you running the integration tests via?  Most of the contributors to the project are using Visual Studio 2017 and to be honest, that's probably the only way to effectively run the integration tests are there are way too many of them to run ""everything"" at once from command line or CAKE build task etc, so you really want the ability to select which tests to run",,,,,,
361915961,1738,Issue,"I am using Visual Studio 2017, that was the only version I managed to open the solution in.But I can't get it to debug the integration tests.",,,,,,
361916330,1738,Issue,"How can I print to the log (output pane, show output from tests) in an integration test? Perhaps I can debug ""the old way""...",,,,,,
361918722,1738,Issue,"Ah sorry, I thought you had previously made a comment about doing this on linux!In VS2017 in the test explorer you should be able to just select ""Debug Selected Tests"" rather than ""Run Selected Tests"" and it should then hit breakpoints that you have setup.Unfortunately with automated tests (and perhaps specifically XUnit) you cant actually get console output to print as it gets swallowed.  There seems to be a long and sordid internet debate/commenting on this issue if you google it Im sure you can read lots about why this is so üòÅ   If you really have to see something you can write text to a file which is horrible üò± but generally debugging with breakpoints should ""just work""...",,,,,,
361919961,1738,Issue,"Back to the topic of this PR I was just checking out the [API docs] for the GitHub Apps implementation and it looks like we have a bit of reworking to do of the structure and naming of things.  Apologies for not noticing this sooner, and I appreciate you had picked up another PR that had already set this direciton... but it's important that we have consistency with the official docs and the upstream API we are wrapping, as well as consistency across the code base in terms of naming things and structure.  Feel free to let me know if you aren't keen to make these changes, and I can take over instead :+1:We want to match the octokit structure to the API doc structure, so given the docs are like this:We shouldn't really have `GitHubClient.Application` and `GitHubClient.Installation` both at that top level (the `Installation` should be a child of `Application`).   Also instead of `Application` it should be named `GitHubApp` (as a property) and `GitHubAppsClient` (class name) so we match the terminology of the API docs as well.Infact looking at it more, that whole ""Installations"" area is actually a different set of API calls that are used once you are authenticated as a GitHubApp installation (same as the ""Marketplace"" area)...The calls being implemented in this pull request are [get the authenticated github app][create new installation token][list installations for user] all of which actually live in the ""GitHubApps"" section (not in the ""Installations"" section or in an ""Access Tokens"" section).  This is all rather confusing but appears to be the way it is in the official upstream API ü§î So what I actually think we need to do is- delete the `InstallationsClient` and `AccessTokensClient` classes- rename `ApplicationsClient` to `GitHubAppsClient` - implement all 3 methods in `GitHubAppsClient` using consistent octokit method naming which would be called   - `GetCurrent()`  - `CreateInstallationToken()`  - `GetAllInstallationsForCurrent()`",,,,,,
361939843,1738,Issue,"You mean something like this? (See above changes,  )",,,,,,
361942603,1738,Issue,"What about adding methods specifically inside `Installation` and such, making it more OOP like? I mean, why write this:when you can write this:",,,,,,
366630268,1738,Issue,Can you please take another look at this PR? Thanks.,,,,,,
366792856,1738,Issue,Sorry  I had somehow missed that you had pushed the requested changes a while ago... Will get stuck into reviewing them tonightCheers,,,,,,
367587715,1738,Issue,"Hi there, !Did you have a chance to take a look on the changes? Do you have any comments?",,,,,,
367814773,1738,Issue,"it's on the list to review, have been quite busy sorry!",,,,,,
369049487,1738,Issue,"This is tough to review sorry as it's a brand new area.  A few things I noticed- `Application` response model already exists from years ago and is being re-used here, but doesnt have all of the fields of the actual response object and also has a `Url` field which doesnt map.  We may have to create a new `GitHubApp` response model for this stuff- We probably need to implement more of the endpoints such as `Get` for an app, `GetInstallation` for an installation and `GetAllForUser` in order to support GitHubApp stuff enough to be useful to end users?- XmlDocument tags on the clients and response model fields will be necessary to provide intellisense guidance to users- Integration tests - we need to figure out how/if we can flesh out our integration test framework to handle doing these calls as a GitHubApp- Some of the endpoints (such as list installations or generate installation token) require being authenticated as the GitHubApp which means we have to do the FWT token stuff and so on, we might need to think about whether we provide helper methods around this or just expect the consumers to have created the JWT from their app's certificate etc already",,,,,,
369049646,1738,Issue,"Oh, forgot to mention that the initial round of requested changed regarding naming things and re-arranging the methods etc looks pretty good, thanks :+1:",,,,,,
369053219,1738,Issue,"ive pushed up some of the mentioned stuff (implenting the `Get(string slug)` method to get an app, and also implementing the `GitHubApp` response model instead of re-using `Application`.",,,,,,
369165812,1738,Issue,"Thanks, !I fixed the build (it seems you forgot to update a test) and now all tests pass.Can you please merge it to the master now? I think the rest of the review notes we can fix in a later time.",,,,,,
369188769,1738,Issue,"Before it goes to master we need xmldoc comments, unit tests and integration tests at a minimum. But as I mentioned I think we also need a more complete implementation and some solution around the JWT tokens as what we have so far probably isn't enough for end users to make good use of at the moment... So you disagree? If you want to test what we have so far, you can get nuget packages from this PR build from our appveyor feed :+1:",,,,,,
369197756,1738,Issue,"Hi ,I already added all the required unit test (I used other unit tests as reference to what is needed, so if I missed something please tell me).I don't know how to write integration tests nor how to run them locally. I tried once (even twice üòÉ), and I get connection errors of various types. I started adding the `GitHubAppsClientTests` integration tests, but since I can't debug it locally I can't continue. I know for sure it doesn't throw exception, as the main function is getting called.Regarding missing XML comments - what comments are missing exactly? I'm only asking because when I build the project I already get tons of ""`missing xml comment for publicly visible type or member`"" warnings, most of them for data fields, so I didn't bother adding XML comments for the new data fields. I did try to add XML comments to all new methods, so please tell me if I missed anything.Regarding the more complete implementation and some solution around JWT tokens - up until I started writing this feature it was not implemented at all (no JWT token, I don't know what FWT token is), so I think users get at least something which allows them to start writing extensions, don't you agree?I already use it in code that is going to be integrated into production soon, and I don't think there'll be too big a change after the fixes you request, if any.Please tell me what you think.",,,,,,
369219942,1738,Issue,I've been following this PR for 2 weeks now as I need this feature in one product I'm currently developing. I'd really appreciate the integration.The security handling is sufficient enough in the current implementation via `ICredentialStore`. I could contribute with doc and some samples on how to implement these for:* Access as GitHubApp* Access as GitHubApp installation,,,,,,
369367049,1738,Issue,"From my perspective we currently have no evidence that these calls even work because we don't have working integration tests. Unit tests make sure we call the correct url or correctly assert nulls etc but we need integration test to prove we actually ""work"" and handle the response from the API We also need xmldoc comments on the client methods and member attributes of the response classes. And given this is a new/complex feature we also need a sample/doc page about how to do this GitHubApp stuff  So do you already have a working example where you create a signed JWT token using the private cert of an authorised app?",,,,,,
369370934,1738,Issue,"Chiming a little bit here. I've managed to use my initial commits, created GitHub JWT, and use PEM from filesystem or env var. You can check this PR  for details.It does require .NET Standard 2.0 to make the JWT part working.",,,,,,
369372325,1738,Issue,"Also, would it be prudent to split this PR into several parts:* Foundational work (new authentication option + access token client)* GitHub JWT -- I'd argue this can be a separate package. Octokit can take a token string, not caring how to create it.* Other clients (installation, etc.)",,,,,,
369460650,1738,Issue,"Im happy with the approach to split it, and yes I do agree the JWT stuff doesnt necessarily belong in Octokit (however we need to be able to do it for integration tests, and we need to be able to tell users HOW to do it, so maybe your `GitHubJWT` stuff in todo-bot could be pulled out into it's own nuget package?).  Even if we split the PR up in order to deliver the foundational Credential and token creation parts first, Im still keen to abide by our standards of each piece needing to tick certain boxes to merge to master (namely consistency in naming/code base hygiene, unit test coverage, integration test that excercises the function, xml doc comments for intellisense guidance and any updates to samples/documentation which particularly for GitHubApps being an entire new thing, is important)",,,,,,
370195848,1738,Issue,[GitHubJwt is now a Nuget package].,,,,,,
370198168,1738,Issue,"That's awesome, although if it's targeting netstandard 2.0 we won't be able to use it since we are targeting netstandard 1.1... Does it require anything that isn't available for 1.1?",,,,,,
370198877,1738,Issue,".NET Core 1.0 has limited support for PEM files. I did not try .NET Core 1.1 since AWS Lambda has never supported the version. AWS Lambda recently added support for 2.0 and that cleared all the issues.The test project itself can target netcoreapp2.0 and use both netstandard1.1 and netstandard2.0 libraries without issue. I'd expect Octokit stays at netstandard1.1 but any consumer that wants to use this specific library to generate JWT will need to run on netcoreapp2.0.If I have some time, I can try out .NET Core 1.1 and see if there's any issue.",,,,,,
370734440,1738,Issue,"I've added and fixed some XML documentation tags.I also want you to notice the name of this PR - it states this is an ""initial support ..."", not ""complete support ..."". Just saying.",,,,,,
370766638,1738,Issue,".NET Core 1.0 has limited support for PEM files. I did not try .NET Core 1.1 since AWS Lambda has never supported the version. AWS Lambda recently added support for 2.0 and that cleared all the issues.  The test project itself can target netcoreapp2.0 and use both netstandard1.1 and netstandard2.0 libraries without issue. I'd expect Octokit stays at netstandard1.1 but any consumer that wants to use this specific library to generate JWT will need to run on netcoreapp2.0.  If I have some time, I can try out .NET Core 1.1 and see if there's any issue.Yes this is true, we can make the test projects `netcoreapp2.0` however I guess the thing to think about is more just a design principle that in general a _library_ should target the *lowest* `netstandard` version it can get away with, in order to be able to be used by the largest possible number of applications, whilst an _application_ should target the *highest* possible `netstandard` version that supports the platforms it should be run on.  So being a library I would suggest the JWT should target a lower `netstandard` if possible.  Also don't be confused between `netstandard` and `netcoreapp` (`netstandard1.1`  is still supported by `netcoreapp1.0` so can still run on AWS Lambda (prior to them implementing `netcoreapp2.0` runtime (as long as you use the explicit metapackage reference 1.6.0 like we had to do in #1713)",,,,,,
370768027,1738,Issue,"I've pushed up some changes... let me know what you think  . I agree this can just be ""initial support"" but that doesn't mean we get to skip the ""standard"" things that get a PR mergeable - unit tests, integration tests and documentation üòâ I also reverted some unrelated commits that were fixing up stuff in other files unrelated to GitHubApps - let's keep this PR focused on GitHubApps implementation so it is easier to review and look at new PR's for those other fixups (incidentally I had also already made some of the same XmlDoc corrections for missing attributes, which ive pushed up on #1779)From my perspective the remaining things to do on this PR are to implement Unit Tests for the Reactive client, and to hopefully get at least a basic integration test working (eg authenticate as a test GitHubApp with JWT token, create an installation token, then access some other endpoint).  Now that  has provided the GitHub.JWT package I think this should be doable",,,,,,
371049663,1738,Issue,"sorry for the merges and reverts, my git client got me confused a little bit. :flushed:",,,,,,
371058129,1738,Issue,"Been playing around with this some and it seems to work well. I know it'sWIP but the lack of `/installation/repositories` is a bit of a downerseeing as you need it to associate webhook payloads with installationtokens afaik.On Mar 7, 2018 2:33 AM, ""Itai Bar-Haim""",,,,,,
371091147,1738,Issue,"sorry for the merges and reverts, my git client got me confused a little bit. üò≥Hmm your last commit actually reverted all the changes I made üòÆ Ill push up a commit to re-instate them!",,,,,,
371135067,1738,Issue,![],,,,,,
372067744,1738,Issue,"Looking forward to leveraging this, I'm just at the earliest stages of planning a GitHub App so this PR is very timely. May I suggest also that adding even a small amount of documentation about this could prove very helpful.",,,,,,
372187008,1738,Issue,im not sure what's going on but you seem to be doing merges and reverting changes we already have in master back to previously (bad) versions.EG:,,,,,,
372207999,1738,Issue,Hmmm... seems like the last merge messed things up. I'm on it.,,,,,,
372212878,1738,Issue,Done (until further requests.),,,,,,
372288732,1738,Issue,OK ive updated the integration tests to `netstandard2.0` and using your library to generate the JWT automatically  (thanks! üíé )Ive also had a first crack at writing up some doco if everyone could please [have a look]Last issue to look at is the builds being broken because we need the 2.0 runtime on our appveyor and travis images now...,,,,,,
372326162,1738,Issue,"I read your docs. Looks good!I just added a new feature allowing to get the Installation ID (wrapped in an empty Installation object, perhaps we should do something about it) from any event's payload. I think you should mention that in the docs to help developers get the access token for an installation in case they need it for tasks like creating status notifications.",,,,,,
372652910,1738,Issue,"wrapped in an empty Installation object, perhaps we should do something about itYeah it's not so nice using the whole response class when only the Id property is returned. Could you create a new response class for this? Maybe it could be called`InstallationSummary` or `InstallationPayload`... I think you should mention that in the docs to help developers get the access token for an installation in case they need it for tasks like creating status notificationsHow do you envisage people using it (via receiving the event as a webhook or by querying the activity events API?).   Supporting webhooks better is something I'd like to add (on a separate PR!) because at the moment users would have to use our deserializer directly... Is that what you do in your implementation using octokit?   Can you provide a code sample or add to the doc file I started to show how you would envisage using the activity payload installation id currently?",,,,,,
372838219,1738,Issue,"Thanks for the updates but for consistency with the rest of the octokit.net approach I don't want to have ""comfort"" methods in response models that call client api's etc so could this please be removed? It's just there are hundreds of places this could be done, so it doesn't make sense to only do it here, and it's not something I'd want to start doing and proliferating across the code base. Our design is aimed at being a c# wrapper around the upstream API and mirroring the structure and behaviour of thatSo while it's a great idea it doesn't belong in the core library... Perhaps if it's something you want to undertake, you could develop an ""extensions"" repo with its own nuget package, that uses extension methods and so on, to provide the more object oriented comfort features you are wanting.",,,,,,
373603382,1738,Issue,"I've created a [`netstandard1.4` targeted GitHubJwt PR]. This will not get merged until I get the tests pass. With small modification, 1 out of 2 of the test passes on `netcoreapp1.1`.Add the custom feed `` and install the version you want to try out. I'd recommend trying out `0.0.1-2-g457db9a`.",,,,,,
381553917,1738,Issue,"Today is the day folks!  Sorry for the delays, I was trying to chase down sourcelink issues on TravisCI which I thought may have been related to moving to the SDK2.0 tooling but probably weren't in the end.  Since the GitHubJWT library doesnt require netcoreapp2 anyomre anyway, I wont worry about tooling updates in this PR.Appreciate the patience and many thanks to everyone who helped with this PR, especially  and .  Integration tests have been passing as I've been running them every now and then for the last few weeks so I'm happy to merge this and start putting together the next release üòÅ ![uc berkeley band gif by cal-downsized_large]",,,,,,
389832008,1738,Issue,"release_notes: Add initial support for GitHub Apps, see [the documentation] for further information",,,,,,
356910837,1737,Issue,"Hi  the reasoning is simply that the remaining API rate limit is returned in the response headers of all calls, so we may as well provide a mechanism to access that information :)It would be awesome if you wanted to send a PR to implement the actual [Rate Limit API] though, then users can choose the method that is more appropriate for them :+1:",,,,,,
359206971,1737,Issue,"Actually, I found that [Rate Limit API] has been implemented before. I will update the documentation.",,,,,,
359573663,1737,Issue,Fixed by #1742,,,,,,
356566062,1736,Issue,"Hmmm our examples in integration tests often create new branches (create a git blob, then a tree, then a  then a commit, then a branch) In those cases the repo already is initialised so the commit is created with a parent commit of the existing master branch commit, but checking the docs for [creating a commit] says if you specify a blank parent sha it's written to the root of the repo. So hopefully you could try that?",,,,,,
451010760,1736,Issue,Closing this out due to inactivity,,,,,,
356205717,1735,Issue,Can you add unit tests that deserialize example json with both formats of date fields?,,,,,,
356206271,1735,Issue,I'm not sure I actually got it right. How does that number represents time? Is it actually a file time? or is it the number of seconds since the Unix Epoch?,,,,,,
356208743,1735,Issue,"Can't remember off the tip of my head, I think it's Unix epoch time...  we have a helper method elsewhere in the code base",,,,,,
356223050,1735,Issue,Here you go :  It's an extension method on `long`,,,,,,
356223652,1735,Issue,"Thanks. I made the required changes and pushed, as you can see. I also updated a bit the solution folder structure (virtual structure) so all the tests projects are bound together under the ""Tests"" solution folder. I hope that's okay. If you don't like it, feel free to remove it from the PR.",,,,,,
356956939,1735,Issue,Done!,,,,,,
358580823,1735,Issue,bump,,,,,,
358584911,1735,Issue,"As a follow up we should review other places we are using the extension method `FromUnixTime()` or otherwise dealing with `long` members for dates on API responses, and consider changing them to simply be `DateTimeOffset` now that the deserializer will automatically handle the conversion :+1:",,,,,,
358586125,1735,Issue,Refer #825 and #1731 for related disussions,,,,,,
358586178,1735,Issue,release_notes: Octokit now handles `DateTime` and `DateTimeOffset` response fields whose API response is in an unexpected Unix epoch time format,,,,,,
358586717,1735,Issue,Thanks  ![LGTM],,,,,,
356096800,1734,Issue,"The github API returns sparser results for ""GetAll"" type queries, so you might need to load each PR individually to have all fields fully populated.Once you have the list from your search query, try loading each one with `PullRequest.Get()` and check if the fields have the data you want?If you check out my [Octokit.ReleaseNotes] project there is an example of taking a list of PR's and loading all the details about them in parallel which might be useful for you [here]",,,,,,
356699085,1734,Issue,"Great, i'll check it out. Thanks for the detailed response. I think it'd be great if there was a way of specifying a fuller return data structure, or even a batch 'fully populate' command, but I'm sure I can work around it with the code you've pasted. Thanks again!",,,,,,
356912196,1734,Issue,"We try to keep Octokit as an API wrapper that reflects the upstream GitHub API structure and calls, so since the upstream API doesn't have a mechanism to flag that you want ""fully populated"" responses in ""Get All"" type requests (presumably for performance reasons), it's not really something that would be implemented in Octokit either.Note, the successor to the v3 REST API is the [v4 GraphQL API] and GraphQL allows more control over specifying exactly what fields you want returned in responses etc.  This isnt something we support in Octokit today but is something we are looking at (you of course could talk to it with your own code or another library though)",,,,,,
357233904,1734,Issue,"Ok great, it looks like GraphQL is the way to go in the future. thanks again",,,,,,
354877895,1732,Issue,"Hi  Thanks for the PR... in order to better understand your intentions could you please provide a brief description?   also to understand whether you think you are ""done"" or not, would could you please mark [WIP] in the title if you aren't done yet, and also provide a task list that are checked/unchecked, so we know what you still aim to do? Eg in this case a new payload class needs to be added to the special switch statement in the deserializer code and of course we need tests to prove it actually works üòÅ",,,,,,
355398282,1732,Issue,"Looks good  , if you have finished working on it, can you remove `[WIP]` (work in progress) from the PR title so we know it's ready ffrom your perspective?",,,,,,
355954454,1732,Issue,"Hi !Thank you. I consider it ready, and have removed the [WIP] tag.",,,,,,
356161372,1732,Issue,"release_notes: Support `StatusEvent` payloads, using new response model `StatusEventPayload`",,,,,,
356162182,1732,Issue,Thanks  and congratulations on your first octokit contribution!![LGTM],,,,,,
354663158,1731,Issue,"can you provide some more context for this change? Also, this might be worth upstreaming to [SimpleJson] if it's useful more broadly...",,,,,,
354675677,1731,Issue,"In some cases GitHub sends wrong date format for the ""created_at"" and ""pushed_at"" fields. This is a GitHub bug, probably, but still, such a convention should be supported (and it would have saved me hours of debugging).Back in 2015 there was an open issue on this, which I commented on today, but I can't find it right now. I'm sending this from my phone, and don't have the full attention to provide more info right now.",,,,,,
354677337,1731,Issue,"thanks for the extra info. I found #825 where you commented earlier. This is a GitHub bug, probably, but still, such a convention should be supported (and it would have saved me hours of debugging).In your other comment you mention this: Also, from the timing it seems the problem had returned only recently (about two weeks ago).If this is a recent regression then I'd love to try and chase this down, because we should be consistent with these fields. If you can point me to a repository which fired a webhook with the wrong format for `created_at` and `pushed_at` in the payload I can chase that up internally and confirm it's been resolved while we discuss this fix.",,,,,,
354709044,1731,Issue,"I'm experimenting with web hooks on my own fork of spoon-knife.I noticed that it happens for some push events.EDIT: It seems to happen on all push events.On Mon, Jan 1, 2018, 23:07 Brendan Forster  supported (and it would have saved me hours of debugging). In your other comment you mention this: Also, from the timing it seems the problem had returned only recently (about two weeks ago). If this is a recent regression then I'd love to try and chase this down, because we should be consistent with these fields. If you can point me to a repository which fired a webhook with the wrong format for created_at and pushed_at in the payload I can chase that up internally and confirm it's been resolved while we discuss this fix. ‚Äî You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub",,,,,,
358607679,1730,Issue,shall we close this one in favour of #1738 ?,,,,,,
358716165,1730,Issue,"Yep, the other PR looks good. Closing this one.",,,,,,
354446662,1729,Issue,"Hi  I've updated PR #1726 to fix the `CreateAccessToken` url, does that look good to you? By the way,please take serveral minutes to check all address of enterprise, it's a horrible disasterDo you have any other examples? I use octokit against our GHE instance and haven't found any incorrect url's with the methods I'm calling...",,,,,,
354180810,1728,Issue,"Hi  The github API returns sparser results when getting ""all"" objects, compared to when getting a single object. If you load a single commit, the `Files` member should be present thenegObviously this is inefficient to do this for many commits so ideally you can have some way to filter down on the commits you need to load first",,,,,,
354204694,1728,Issue,"I'll try that, thanks.My goal was to count how many changes each user did in one project, so I have to iterate through each files and commits..",,,,,,
354210695,1728,Issue,"Ouch, I'm not sure it's a good idea to try and do all that raw processing yourselfWhat about the repository statistics endpoints, maybe the contributor breakdown there would give you something useful?",,,,,,
354221106,1728,Issue,"Seconding using the repository statistics endpoints - this is supported in Octokit.net, and it will do the heavy lifting for you...",,,,,,
450467362,1728,Issue,"hi,  Can I apply pagination on a commit's files array in some way? Because there is cutoff on up to 300 files for each client.Repository.Commit.Get request, BTW the repository I am working on sometimes performs a large merge operation which results more than 10, 000 changed files, If I can't use pagination, Is there any other way to get the complete changed file list of a specific commit? Thanks.",,,,,,
450490586,1728,Issue,"this is not currently supported by the GitHub API, and so you might have to fall back to working with the Git repository via a local clone to get that information.",,,,,,
450491763,1728,Issue,"That's exactly my plan B, and shall be working fine, thank you for your kindly response:)",,,,,,
354100518,1727,Issue,"Hey , we haven't implemented any of the github apps stuff yet so definitely keen to see what you come up with",,,,,,
354141639,1727,Issue,"Awesome! I'm blocked on signing the JWT in .NET Standard, should be smooth sailing once that's out of the way. ü§û",,,,,,
351047923,1726,Issue,how does this look?,,,,,,
351057255,1726,Issue,üëç,,,,,,
355397513,1726,Issue,release_notes: `OAuthClient` now handles GitHub Enterprise instances correctly in `CreateAccessToken()` and `GetGitHubLoginUrl()` methods,,,,,,
350408289,1725,Issue,"I think this might be related to the branch name - it looks like you're creating it from the current time, and if that doesn't exist the repository wouldn't know where to create the new commit from. What if you used a fixed branch name to confirm that the `PUT` is working as expected?",,,,,,
350432398,1725,Issue,"I create branch with that name just before attempting to create new file. You can check my program right here **Edit:**I found a bug in my code. I was trying to create a file that already exists on base branch.The file creation works fine :)Thanks for your reply and for Octokit, its great :)",,,,,,
350528104,1725,Issue,I'm glad you were able to get to the bottom of it!,,,,,,
349895263,1723,Issue,"While you have been explicit that this is a WIP,  could you please explain the difference between this and  ?(best would be if you could update the PR description)",,,,,,
349902124,1723,Issue,Oh this is probably my fault as I raised #1717 without realising it is already implemented as `CrrateReply` rather than an overload of `Create`,,,,,,
349957432,1723,Issue,I didn't notice that this is already implemented.,,,,,,
346986182,1722,Issue,Thanks  ![LGTM],,,,,,
346987012,1722,Issue,"TravisCI is having some sort of issue at the moment, I'll check back later and see if it's working",,,,,,
347752392,1722,Issue,has Travis moved some cheese around?,,,,,,
348099500,1722,Issue,"Cool, found some guidance [here] that indicated the 1.0.1 sdk package isnt available in the package feed travis is now using.  Updated to 1.0.4 and all is well again :+1:",,,,,,
348099591,1722,Issue,"release_notes: Add `UpdatedAt` property to `Milestone` response model, to indicate when it was last updated",,,,,,
358608644,1721,Issue,Hi  just wondering if you still want this PR kept open?,,,,,,
362130841,1721,Issue,"sorry for the late response, it's crunch time at work these days! Please keep this open if possible, I'll try to get back to it as soon as I get the chance.",,,,,,
393264123,1721,Issue,What's left to get this over the line? Anything I can do to help?,,,,,,
393281316,1721,Issue,That would be great! The checklist above can provide guidance to what's still to do.I can add you to my repo if you want and you're welcome to pick it up there.,,,,,,
393547736,1721,Issue,if you add me I'll see what I can do.,,,,,,
393550263,1721,Issue,"I just invited you, thanks for offering to help",,,,,,
439730052,1721,Issue,Is this being working on? Do you need help with getting this implementation done?,,,,,,
439900766,1721,Issue,Hi  it would be awesome if you wanted to pick this one up!,,,,,,
440062729,1721,Issue,sure,,,,,,
508147900,1721,Issue,Are you still keeping an eye on this? I grabbed the changes from [this PR] and have put in some work.,,,,,,
568260315,1721,Issue,Any progress on this topic?,,,,,,
471164313,1719,Issue,Looks like this was implemented in,,,,,,
471274094,1719,Issue,Thanks  Closed by #1845,,,,,,
395061619,1718,Issue,Me and  will give this one a shot.,,,,,,
350079761,1717,Issue,This is already implemented as `CreateReply` üòÆ,,,,,,
343891101,1716,Issue,"Whoa I didn't even realise we had an ApiClient in the codebase that didn't use the `ApiClient` base class, nice pickup! üéâ I guess the only thing is that in order to prove these changes are good, we will need integration tests for all the methods in this client, not just the paginated ones üòâ",,,,,,
591109856,1716,Issue,release_notes: add pagination support to `client.Miscellaneous.GetAllLicenses();`,,,,,,
591110393,1716,Issue,"thanks for getting this going! I decided to push it over the finish line and add in the missing integration tests. If it all goes green now, I'm gonna merge and include it in the next update.",,,,,,
344545661,1715,Issue,"release_notes: Add `InReplyToId` property to `PullRequestReviewComment` response model, to indicate when a comment is in reply to another comment",,,,,,
344546088,1715,Issue,Thanks   üéÜ ![LGTM],,,,,,
343881346,1714,Issue,"Thanks  it definitely pays to have more obvious ""warning"" ![]",,,,,,
343639191,1713,Issue,Can you foresee any issues with this    ?,,,,,,
344088991,1713,Issue,seems legit ü§∑‚Äç‚ôÇÔ∏è,,,,,,
344547278,1713,Issue,"release_notes: Ensure the `netstandard1.1` targeted package is compatible with AWS Lambda `netcoreapp1.0` environment, by explicitly specifying the `NetStandard.Library` meta-package version",,,,,,
344547663,1713,Issue,"I don't think this should break anything based on my own testing, but there's only one real way to find out...![]",,,,,,
343391684,1712,Issue,"Yes I ran into this myself and have a local build using that implicit package reference to get around it We don't actually target netcoreapp 1.1 intentionally, it's just that the newer build tools automatically use 1.6.1 netstandard library meta package (which aws lambda build tools detect and think you are netcoreapp 1.1)I was hoping lambda would support 2.0 already",,,,,,
343394952,1712,Issue,"AWS policy is to support LTS version only, and 2.0 is current. 1.1 moved to LTS when 2.0 is out back in August, so I'm asking AWS as well for their timeline/commitment to add support for 1.1.",,,,,,
343405181,1712,Issue,From what I saw the pretty much indicated they wouldn't be likely to support 1.1 eventhough it's now LTS üòùI'll push up a PR for the local change I was using for my [octokit lambda demo],,,,,,
342463086,1711,Issue,"Hi , we generally shy away from implementing higher order logic like making composite/multiple API calls on behalf of the consumer, or building in retry/throttling type behaviour in the library itself, because there are too many potential use cases to implement in a way that would suit everyone. The rate limit and abuse exception classes should include details on  when it's safe to try again, so consumers can implement their own response to this, in a way that suits their particular implementation.",,,,,,
342632711,1711,Issue,"I see , it¬¥s a fair point.  The only bad thing is that I doubt we¬¥ll be able to include details when it¬¥s safe to try again because the github api itself doesn¬¥t provide enough information, it just returns a 403 and a generic message.",,,,,,
342634020,1711,Issue,"The only bad thing is that I doubt we¬¥ll be able to include details when it¬¥s safe to try again because the github api itself doesn¬¥t provide enough information, it just returns a 403 and a generic message.[Rate limiting headers] are sent on every response from the API. And this is [available from Octokit] too.",,,,,,
603810400,1711,Issue,Using version 0.40.0 and this code `client.GetLastApiInfo()`I only get zero's back after the first call?,,,,,,
603814420,1711,Issue,"please open a new issue with details about how to reproduce it (version, code sample, whether you're providing a token or credentials or something else) so we can investigate this properly.",,,,,,
342278390,1710,Issue,"If you load a single PullRequest with `Get` operation, is the field populated then? Some response fields are only provided on a single record request and not on a `GetAll` request.",,,,,,
342283971,1710,Issue,"Using Get actually provides more fields, but now all the fields say true for Mergeable, even for PR's that say CI check has failed and says ""Merging is blocked""",,,,,,
342331188,1710,Issue,"Using Get actually provides more fields, but now all the fields say true for Mergeable, even for PR's that say CI check has failed and says ""Merging is blocked""The `Mergeable` field is compute-intensive, so it's only exposed on `Get` - see the details [here].I think we have an old issue about differentiating `GetAll` from `Get` to make this clearer, but it's been a while since I last came across a discussion about this.Also note that `Mergeable` is purely for whether the branch can be merged into the base branch. Things like [Commit Statuses] should be used to look at the CI checks, and [Required Status Checks] to determine which need to pass before the branch can be merged.",,,,,,
342533445,1710,Issue,So `Mergeable` only signifies if there are merge conflicts?,,,,,,
342626396,1710,Issue,"Yes. As  outlined, if you want to check the commit status values you can do that with other API calls",,,,,,
342123629,1709,Issue,![],,,,,,
342123631,1709,Issue,![],,,,,,
342114609,1708,Issue,"Thanks , as you've realised we've already had #1703 submitted so I'll close this one :+1:",,,,,,
402482297,1707,Issue,Not implemented yet?What are options to search by topics?,,,,,,
402549207,1707,Issue,There is a work on progress PR #1721 but the contributors dropped off. I'm currently focusing on the checks API stuff so it would be wonderful if you could help on that PR if you've got a use case for the topics support ?,,,,,,
471237171,1707,Issue,"What is the status of this? [The documentation] implies that it is working, but it says ""For example: "" but the example has not been written yet**Edit:** It seems like the octokit documentation may be pulling directly from the [GitHub api documentation] which would explain the discrepancy",,,,,,
471270849,1707,Issue,"Hi  , the documentation you are referring to is for octokit.js the javascript API client, whilst this is the c# client.  It looks like we still haven't had any traction on finishing that old PR #1721 off, so as of now Repository Topics are still not supported in the c# client unfortauntely üòû",,,,,,
471831262,1707,Issue,"Sorry guys, I didn't realize I was in the c# client... üò¨",,,,,,
341949598,1706,Issue,"Im not sure what the problem is, but the projects definitely work in VS2017 for other developers/contributors of this project, and myself on several different machines.From your error message it sounds like you somehow don't have the .NET Core SDK installed",,,,,,
341949571,1705,Issue,"The API documentation for Repository search is here: Answer to your questions:1. Option 22. I believe the search keywords are ""AND"" logic by default. is api AND github is ""api github"" as a phrase3. Github.com search by default searches Name AND Description.  (but you can search in README as well by specifying the `in:` qualifier",,,,,,
341885948,1704,Issue,"Are you saying you want to access the ""topics"" for a given repo?",,,,,,
341887251,1704,Issue,"I'm sorry, I still do not understand the structure of ""github.com"".How to understand the place github.com/topics/chrome-extensions""Chrome extension"" is the theme in which the repositories are located?or""Chrome extension"" - a repository in which there are nested repositories?""Chrome extension"" contains 95 pieces of repositories.QuestionHow to search in the files ""README.MD"", which are located in repositories (95 pieces of repositories) in the topic ""Chrome extension"" ?For example.Similar topic ""API""  contains 9039 pieces of repositories.PSSorry if the question (answer) is difficult to perceive.I do not know much English.I use - translate.google",,,,,,
341949846,1704,Issue,"Hi  ## What are Topics?""Chrome extension"" is a TOPIC.A Repository can have as many TOPICs as the owner wants.BUT a TOPIC does not own a repository... it is like a tag or label on a repository, that can group repositories together that have similar topics.  Does that make sense?Here is some further information: ## Can we search for repositories by topic?Yes It is possible to search for repositories with a topic: But we have not implemented TOPICS in octokit.net yet!To implement this support we would need to:- Add `Topic` field to `Repository` and use [preview header] to enable the field to be returned from the API- Add `Topic` field to `SearchRepositoriesRequest` so you can search by topic- Add `Topics` field to `SearchRepositoriesRequest` so you can search by number of topics",,,,,,
341950011,1704,Issue,I've raised #1707 to cover implementing this support in Octokit,,,,,,
341862709,1703,Issue,"FWIW, this is a blocker in our case for using the library :(",,,,,,
341867967,1703,Issue,"Verified the fix by pushing this PR from the AppVeyor artifact to  and updating my azure function that uses the previously failing github statuses. It now works like a charm :)So, no longer a blocker, but would surely like to drop using the (unlisted) PR package.",,,,,,
341877130,1703,Issue,Thanks  I'm mobile at the moment but I'll check this out over the weekend,,,,,,
341948908,1703,Issue,Just taking a look at this now... the `ctor` of the `CommitStatus` class should be updated from `int` to `long` as well...Once that's done I should be good to merge :+1:,,,,,,
341950157,1703,Issue,We've started using `long` for newer response models we've added but still have `int` in use in lots of places.  We probably need to think about broader changes to update alot of these to `long` otherwise it seems like eventually we will run into these overflow problems elsewhere.  From a quick search:,,,,,,
342044379,1703,Issue,"makes sense to migrate over to long elsewhere. Maybe that could be part of another issue/pr? For my limited (and immediate) blocker, the CommitStatus is the only place where I've found this to be an issue (so far). Amended the commit to include the ctor type change. Thanks!",,,,,,
342108995,1703,Issue,Thanks for updating the `ctor`,,,,,,
342109509,1703,Issue,"oh, i just pushed the same thing, looks like it was the same commit too -",,,,,,
342112436,1703,Issue,Yeah looks we best get this released ASAP![],,,,,,
342112891,1703,Issue,release_notes: Update `CommitStatus.Id` field from `int` to `long` to prevent overflow exceptions,,,,,,
342115705,1703,Issue,advisories: This release has been pushed out in response to `CommitStatus.Id` on GitHub exceeding `Int32.MaxValue`.  We've made this field a `long` now... sorry about that!,,,,,,
342125164,1703,Issue,+1Thanks!,,,,,,
342125689,1703,Issue,"v0.28 has been pushed to NuGet, can you guys please confirm we are good?!  Thanks",,,,,,
342133318,1703,Issue,"Yup, latest release is working like a charm. Internal tools are functioning again! :D",,,,,,
341819601,1701,Issue,"as the README isn't part of the returned search results, you'll need to make a follow-up query to read the [`README`] for a given repository.I've tried to tweak your sample to illustrate this - hope it helps!",,,,,,
341579717,1700,Issue,"Hi  We have upgraded to .NET Core project system so you will need Visual Studio 2017 to open the solution.  Alternatively you can use VSCode, or our CAKE build scripts, as mentioned in the [CONTRIBUTING] guideI do notice we still have a mention of Visual Studio 2015 on that page - sorry!  We need to update this to say VS2017 üòõ",,,,,,
341631323,1700,Issue,"If to open in VS2017 I receive ""an output""C: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit \ Octokit.csproj: error: imported project ""C: \ Program Files (x86) \ Microsoft Visual Studio \ 2017 \ Community \ MSBuild \ Sdks \ Microsoft.NET.Sdk \ Sdk \ Sdk.props ""was not found. Verify that the path in the  declaration is correct, and make sure that there is a file on the drive. C: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit \ Octokit.csprojC: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Reactive \ Octokit.Reactive.csproj: error: imported project ""C: \ Program Files (x86) \ Microsoft Visual Studio \ 2017 \ Community \ MSBuild \ Sdks \ Microsoft.NET.Sdk \ Sdk \ Sdk.props ""was not found. Verify that the path in the  declaration is correct, and make sure that there is a file on the drive. C: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Reactive \ Octokit.Reactive.csprojC: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Tests \ Octokit.Tests.csproj: error: imported project ""C: \ Program Files (x86) \ Microsoft Visual Studio \ 2017 \ Community \ MSBuild \ Sdks \ Microsoft.NET.Sdk \ Sdk \ Sdk.props ""was not found. Verify that the path in the  declaration is correct, and make sure that there is a file on the drive. C: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Tests \ Octokit.Tests.csprojC: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Tests.Conventions \ Octokit.Tests.Conventions.csproj: error: imported project ""C: \ Program Files (x86) \ Microsoft Visual Studio \ 2017 \ Community \ MSBuild \ Sdks \ Microsoft.NET.Sdk \ Sdk \ Sdk.props ""was not found. Verify that the path in the  declaration is correct, and make sure that there is a file on the drive. C: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Tests.Conventions \ Octokit.Tests.Conventions.csprojC: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Tests.Integration \ Octokit.Tests.Integration.csproj: error: imported project ""C: \ Program Files (x86) \ Microsoft Visual Studio \ 2017 \ Community \ MSBuild \ Sdks \ Microsoft.NET.Sdk \ Sdk \ Sdk.props ""was not found. Verify that the path in the  declaration is correct, and make sure that there is a file on the drive. C: \ Users \ admin \ Documents \ Visual Studio 2015 \ Projects \ prm \ github \ octokit.net \ octokit.net_Projects_prm \ Octokit.Tests.Integration \ Octokit.Tests.Integration.csprojpicture [link] **Question.**How to be?",,,,,,
340257544,1699,Issue,Thanks !,,,,,,
342114345,1699,Issue,release_notes: Correct rendering of `HttpClient` documentation page,,,,,,
340734436,1694,Issue,"I will work on it today. I was low on spare time in past few days, sorry for the delay.",,,,,,
340937869,1694,Issue,"No apology necessary,  we all do this in our spare time when life permits üòù just wanted to make sure you weren't stuck",,,,,,
343705165,1694,Issue,"I have added the missing unit tests, added and ran integration tests, but there is a problem - `GetAllForSubNamespace` endpoint ignores requested pagination. Do you have any idea how to handle that?",,,,,,
343886833,1694,Issue,I've raised a ticket with GitHub support about the API pagination not being honoured for the subnamespace callRepro:‚úÖ  üíÄ,,,,,,
348100035,1694,Issue,"To get the travis build passing, pull in latest master to your branch :+1:In terms of the pagination issue up stream, GitHub support confirmed it's a problem although it looks like it still isnt fixed.  I think it should be fine to leave it implemented in octokit as is, since hopefully they will fix it eventually üòÅ",,,,,,
348468513,1694,Issue,release_notes: Add pagination support to `ReferencesClient`,,,,,,
348468601,1694,Issue,Thanks  !!!![],,,,,,
337470604,1693,Issue,"Thanks  !Any reason why you've gone with an extra function call rather than adding a parameter to the constructors?  In your usage would you only set this larger timeout value right before you do an assett upload, and then reset it again for other calls, or would you set the timeout once globally and have all calls use the larger timeout value?",,,,,,
337479843,1693,Issue,"Any reason why you've gone with an extra function call rather than adding a parameter to the constructors? [...] You guessed right. In the fix I made, I just hardcoded the timeout value to fulfil our needs that was just uploading an asset ;-)But but because that is a library, we can't enforce a use that will not fit to every use. Timeouts could be useful.So, indeed, I provide this method to be able to change it just before uploading an asset (and set it back to a normal value just after).But you are right, I can also add an optional parameter to the constructor to make it more convenient to use. I will do it.",,,,,,
337735904,1693,Issue,"But you are right, I can also add an optional parameter to the constructor to make it more convenient to use.In fact, I had a look and I didn't find to make the API friendly to use without doubling the number of constructor of `GitHubClient` and `Connection` classes. I'm not sure to willing to do that anymore....",,,,,,
337812372,1693,Issue,"Yeah the constructors are a bit messy... I agree perhaps leave it to the discrete method call.  Since it is more likely people would change timeout only when uploading a large asset, then change timeout back again afterwards, this should be ok",,,,,,
338180460,1693,Issue,I have made the changes suggested...,,,,,,
338343041,1693,Issue,"Can you set ""The timeout value"" xml comment on the other cases too please? ‚ò∫Last thing, it would be great to have a unit test that ""proves"" this works. Something like mock out an IHttpClient then create a githubclient/connection using the mock, call the new SetTimeout method and verify the mock's timeout was changed. I'm on my phone so can't say exactly how to do it right now, let me know if you need more help",,,,,,
338633477,1693,Issue,done.,,,,,,
339647133,1693,Issue,Thanks  I just mad a couple of tidy ups to the xml comments and renamed the function to `SetRequestTimeout` from `SetRequestsTimeout` for consistency with the codebase :+1:,,,,,,
339647500,1693,Issue,"release_notes: You can now use `IGitHubClient.SetRequestTimeout(TimeSpan timeout)` to set a custom timeout, particularly useful for lengthy operations such as uploading release assets.",,,,,,
340229777,1693,Issue,Thanks heaps  !![LGTM],,,,,,
337438743,1692,Issue,"Thanks  looking forward to it as you make progress :)By the way, it looks like your master branch isnt up to date with this repo's master branch, so you might want to rebase your branch on `upstream/master`",,,,,,
337725270,1692,Issue,"Hi  Thanks for the out-of-date tip, I didn't notice it. Right now I am unable to run my integration tests due to my test account being flagged. Could you run them? I believe that the general work is done and can be reviewed.",,,,,,
337732174,1692,Issue,"No worries, I will take a look",,,,,,
337732981,1692,Issue,"We need ti updates these tests to use dual test accounts (as inviting octocat user is probably what has caused your test account to get flagged)If you look elsewhere we have a `[DualAccountTest]` setup where you have 2 test accounts configured, so your main one can invite your second one, without upsetting a ""real"" user like octocat",,,,,,
337745597,1692,Issue,"Ok, I will change it.",,,,,,
343706973,1692,Issue,Changed it and tested it.,,,,,,
348764003,1692,Issue,release_notes: Add pagination support to `RepositoryInvitationsClient`,,,,,,
348765600,1692,Issue,Nice one  thanks for addressing those review items and thanks for another completed PR  üëç ![LGTM],,,,,,
338534470,1691,Issue,Thanks,,,,,,
336307773,1690,Issue,I also can't find much in the REST API spec for this info.  The repo statistics are probably the closest thing?,,,,,,
336308625,1690,Issue,"I think most of the data for the other tabs (community, traffic,forks etc) is available in the API, but some of the sections like PULSE or NETWORK do not appear to be exposed directly in the APISome of these things are implemented in octokit.net and some wont be (but we are always happy to work with you to implement things that are wanted/needed!)",,,,,,
336309644,1690,Issue,"Also, keep in mind that any new features in the GitHub API are not going to be backported to v3.I've been chatting with the other Octokit teams a bit about what this means for Octokit.net, and need to grab some time with ,  and whoever else is interested to sketch this out further.",,,,,,
336313129,1690,Issue,"Ok, seems like the information that is exposed doesn't fit what I need. Thanks for your help",,,,,,
500390319,1690,Issue,"You could have a look at my repo for functionality, drop a comment if you need help!",,,,,,
335061178,1689,Issue,"I figured the tests would fail. Regardless, just wanted to throw something up to get discussion moving on this. Either we allow empty strings to be passed as ""paths"" or we allow ""/"" to be passed and alter the logic following the `format` of the URL to prevent a double slash.",,,,,,
335128484,1689,Issue,"Whilst I'm not opposed to the change, were you aware that there are already overloads (that don't take a `path` parameter) which operate on the root directory of the repository?",,,,,,
335162589,1689,Issue,well thats embarrassing. Good point. Didn't think to consider the other overloads. Those will do. I'll close the PR and issue. Thanks for pointing that out.,,,,,,
335164399,1689,Issue,"It obviously isn't too discoverable though, given you didn't spot them...  If we implicitly support an empty string via a different overload anyway, I dont have an issue with allowing the empty string to be explicitly passed in as `path`.  So I'd be happy to still take this PR if you got the tests passing and updated the XmlDoc comment for the parameter to note that ""Pass empty string for the root directory""",,,,,,
335162778,1688,Issue,"As  pointed out, this is unnecessary if you use the overloads of `GetAllContentsByRef` which drop the path and default to the root dir.",,,,,,
334630790,1687,Issue,:thumbsup:,,,,,,
334902420,1687,Issue,That all looks good to me. Thanks again for that polished release.,,,,,,
334906654,1687,Issue,![],,,,,,
403373695,1687,Issue,Wow,,,,,,
404718311,1687,Issue,I'm not sure I should be counted as a *key contributor* any more...![],,,,,,
471167530,1686,Issue,I'll put my hand up to get this sorted,,,,,,
471177757,1686,Issue,Aaaand I ran into the _you are limited to sending 50 invitations to a repository per 24 hour period_ limit...I'll be back!,,,,,,
471273703,1686,Issue,üé¢,,,,,,
331881988,1685,Issue,I threw this code into [LinqPad] and it seems to run fineWhat happens if you remove your custom `IHttpClient` entirely instead of just calling the default one from within the custom one?,,,,,,
331906157,1685,Issue,"I changed to use the default client, effectively doing:And it is still hanging.Spinning up a new Console Application, this doesn't seem to occur.I reviewed and refactored my project to be a little easier to follow - I was doing some heavy linq, including an `AsParallel()` call, and after removing that and refactoring to use a single thread for the heavy lifting everything seems to work, but this isn't ideal as the application would need to get branch, pull and review information from multiple repositories (which in this case can take 1-2 minutes to obtain). I'll see if I can find a way to replicate this issue more reliably (or determine if it's just user error).",,,,,,
331906738,1685,Issue,üëç Keep us updated so we can try and help,,,,,,
332010026,1685,Issue,"After refactoring I can't seem to replicate the issue. I have a feeling it was related to how I was making the requests (via long complex awaited linq statement, which has nested awaited linq statements that I probably wasn't handling properly). I've since changed it to be a little more sensible, and everything works as expected. Thanks for the help!",,,,,,
332079790,1685,Issue,Where you able to work around the issue of things taking too long?,,,,,,
332149396,1685,Issue,"Well, I was able to re-implement the way I was trying to speed things up (using `.AsParallel()` on virtually every collection), but it's still taking some time - mostly because there are so many requests (one for the user, plus two per repo they have access to (branch + PR list) and one per open PR (for reviews)). It would be nice if I could batch requests to the API, or if more information came back on certain calls (like having Reviews come back as part of a PR request), but until the API supports it I'll have to live with what I have.",,,,,,
332154134,1685,Issue,"In terms of the original problem raised in the issue it sounds like you were getting into crazy async/await territory and getting a deadlock situation... we ""should"" have all of our awaits properly configured with `.ConfigureAwait(false)` as per #1248 but it's possible to have missed some.  I'll flick through the particular calls and double check.In terms of your comment about needing to make so many API calls, yes indeed it is the case with REST APIs but the good news is that GitHub have a [GraphQL API] available in preview, which is an entirely different paradigm and allows you to make single requests grabbing graphs of information (eg pull requests meeting some criteria, with user comment and commit details, but only the fields you want instead of the entire objects etc) rather than lots and lots of REST calls.  There is also some great work going on in an Octokit implementation for this at [Octokit.GraphQL] which is currently in Alpha, if you wanted to kick the tyres :+1:",,,,,,
331707714,1684,Issue,"Im not sure where the `4e2918d5f8cd4a4461eca1d6da37eda1` comes from sorry!  There appears to be a different value for each file in the pull requestr.  Perhaps its a blob or tree SHA or something else you might be able to get at, via the [git data] api?",,,,,,
331743409,1684,Issue,"unless it's something that's available and documented via the  site, it's not something that should be in Octokit.net.",,,,,,
335363693,1683,Issue,"Looking into this a bit more I think it's because my calling application is running various tasks in parallel - it must be hitting a timing issue with the `Dictionary _cachedEnums` from `GitHubSerializerStrategy` of which we have a static instance in `SimpleJsonSerializer`!  `static readonly GitHubSerializerStrategy _serializationStrategy = new GitHubSerializerStrategy();` thus making it not threadsafe.Tracing through the code, `if (_cachedEnums[type].ContainsKey(value))` is returning `false` but when it then attempts to `_cachedEnums[type].Add(value, parsed);` it throws the exception that the key already esxists (another thread has just put it in there).It seems an easy fix would be to change `_cachedEnums`to the `ThreadsafeDictionary` helper class like other parts of `SimpleJson` are using (or we could use the framework's `ConcurrentDictionary`)",,,,,,
343638980,1683,Issue,Interestingly it looks like [this unit test run] just ran into this issue,,,,,,
359940965,1683,Issue,I am also seeing this on other endpoints like repositories and issues. Also running queries in parallel via a `Task.WhenAll()` call.,,,,,,
360039552,1683,Issue,Yep it doesn't matter which endpoints as it's related to the internals of the deserializer class.  The workaround at the moment is to use separate instances of `GitHubClient` for each thread.  The proper fix is to implement thread safe dictionaries which I hope to get to when I have a chance (but PR's are very much welcome as well! üòÄ ),,,,,,
360285576,1683,Issue,"I'm game for a PR. My instinct is to use the `ConcurrentDictionary` class to handle this. I also think the cache will need to use thread-safe dictionaries as it's values since those sub-dictionaries are also potentially accessed concurrently.Let me know if you think I should be using `ReflectionUtils.ThreadSafeDictionary` instead. It looks like it's optimized for computing new values for a specific key on get misses. It appears it assumes that every key has one corresponding correct value that can be computed by a delegate (I.e., a dictionary that maps types to their constructor - a given type has a specific constructor). If I'm understanding it correctly, that doesn't seem like an ideal fit here.",,,,,,
331858459,1682,Issue,LGTM,,,,,,
333968323,1682,Issue,release_notes: Implement [Nested Teams API (Preview)],,,,,,
328515193,1680,Issue,release_notes: `ISearchClient.SearchRepo()` now uses the correct values for the `Forks` search qualifiers (`Include` or `Only`),,,,,,
328722072,1680,Issue,"This is a pretty minor change, and the tests I added are passing, but it would be good if someone can give it a quick üëÄ  to make sure I havent missed anything",,,,,,
328852173,1680,Issue,LGTM,,,,,,
329135954,1680,Issue,thanks -Zuber,,,,,,
329145076,1680,Issue,![alice-in-wonderland-thank-you-xIJLgO6rizUJi],,,,,,
328515478,1679,Issue,release_notes: BranchProtection response class `EnforceAdmins` now provides a standard `ctor` allowing it to be mocked if required,,,,,,
328722193,1679,Issue,![],,,,,,
328267660,1674,Issue,Thanks for the fix ! In vs2017 alot of these csproj properties can even be set in the GUI... Just have to remember to look!,,,,,,
328412069,1674,Issue,release_notes: Intellisense should once again be available for Octokit libraries - sorry about that!,,,,,,
328412204,1674,Issue,Confirmed by consuming the nuget packages from the AppVeyor CI feed :+1:Many thanks  ![LGTM],,,,,,
328235287,1672,Issue,Thanks !Could you please add an integration test that verifies all returned repos are from the requested organization?Are there any other missing filter options on code search that we should implement at the same time?,,,,,,
328264014,1672,Issue,"hi  sure, I¬¥ll add an integration test. As far as I¬¥m aware that was the only missing field",,,,,,
328455760,1672,Issue,everything good to go if you think it's all fine,,,,,,
328507665,1672,Issue,"Thanks  , I ran the integration test but it failed due to specifying a blank search term and using the incorrect owner Url üòÄ   But I've pushed a couple of fixes to your branch and its all ‚úÖ nowI'll just wait for AppVeyor and TravisCI to give the go ahead then I'll be right to merge it!",,,,,,
328515809,1672,Issue,release_notes: Implement `Organization` filter in `ISearchClient.SearchCode()`,,,,,,
328528286,1672,Issue,Awesome stuff  thanks heaps for the contribution!  Hope to see more from you in the future üòÄ ![],,,,,,
328654078,1672,Issue,"sorry about the tests, it was pretty hard to have them running locally and I couldn¬¥t find a way to run my test in isolation, then i saw the build green and thought it must have run okanyway great collaboration, and I certainly hope to help more in the future! :)",,,,,,
328721873,1672,Issue,"No worries, due to how many integration tests we have, we cant run them from AppVeyor or Travis at the moment!  I will pull down the branch and run them locally before merging a PR.What IDE are you using?  To run individual tests we would normally use the Test Runner in Visual Studio 2017.  There is also some setup required which is covered in the CONTRIBUTING guide.  If you do want any help to get your environment setup, drop into our gitter chat and we can help youThanks again for the PR!",,,,,,
328786520,1672,Issue,"I'm using Visual Studio 2017 with Resharper. I followed the guide and tried to run the test but I had issues, next time I'll drop a message in the chat so that I can get it running locally. No worries, happy to be of help and contribute to the community!",,,,,,
327370959,1670,Issue,release_notes: Implement team membership enhancements for role (Maintainer or Member) and state (Active or Pending) including new methods `TeamsClient.AddOrEditMembership()` and `TeamsClient.GetMembershipDetails()` and updating `TeamsClient.GetAllMembers()` to allow filtering by role.,,,,,,
331851115,1670,Issue,anyone able to have a üëÄ at this?  Id like to merge this and #1682 then cut a new release,,,,,,
332155527,1670,Issue,Thanks -Zuber I've updated the obsolete message to be more consistent with others,,,,,,
327368082,1669,Issue,"release_notes: Implement additional fields in `Team` response and `NewTeam` and `UpdateTeam` requests, for `Privacy`, `Maintainers` and `Description` where they were missing",,,,,,
327368535,1669,Issue,advisories: `NewTeam.Permission` has been changed to a nullable type `Permission?` and will no longer be sent unless explicitly set,,,,,,
328304526,1669,Issue,Im going to merge this today unless anyone has any concerns,,,,,,
328314471,1668,Issue,"OK so things changed a bit as  and I realised that the tests for the `GetAll` method need at least 2 review requests to test the pagination works as expected. Managing 3 accounts in the code would get a bit difficult, so it was decided to use a static repo for these tests. See [the `octokitnet-test` organisation] and [the specific PR] we use for these tests.This change means that the state sharing between tests doesn't happen as much as the `GetAll` method would have been the one benefit from it the most, as we have 6 test methods for it.We still take advantage of it, though, but only in [one place].More than happy to get feedback on this.The whole thing feels somewhat over-engineered with the abstract class, so feel free to bounce ideas around!",,,,,,
340659361,1668,Issue,Closing as it feels heavy compared to what it achieves.,,,,,,
327325287,1666,Issue,Sadly this is a limit of the payload that's returned from [the API itself].This is the entire payload we get:,,,,,,
466384214,1662,Issue,I'll take this one,,,,,,
466388396,1662,Issue,"The existing `IMigrationsClient.GetAll` method is the only `.GetAll` method I could find in all clients that has a return value of `Task`, this makes for some fugly code that needs to use `.ToList()` on the call to the new `.GetAll` with `ApiOptions` from the existing `.GetAll` method. Should I refactor the existing method to return a `Task(endpoint, null, AcceptHeaders.MigrationsApiPreview).ConfigureAwait(false);`.~~Should I refactor this to remove the `async/await`, again to be consistent with the other clients...? (although, that would mean changing all the methods in that class so might not be worth it here)~",,,,,,
466618831,1662,Issue,Should I refactor the existing method to return a Task instead to be consistent with all the other .GetAll methods?Sounds good to me üëç,,,,,,
465987388,1661,Issue,I'll üôå for this one.,,,,,,
326720366,1660,Issue,"Downloading the artifacts from AppVeyor, things are looking pretty :gem:Nuget package info/version is ‚úÖ Assembly/File Version is numeric 0.27.0 ‚úÖ Product version includes the pre-release version (in this case, `-PullRequest1660`) ‚úÖ",,,,,,
326720618,1660,Issue,"release_notes: Assembly versioning, NuGet package metadata and inter-package version dependencies should now be correct, after automating them via the build process",,,,,,
326720678,1660,Issue,can you take a üëÄ and let me know what you think?,,,,,,
326723552,1660,Issue,"It looks fantastic!One thing I noticed is that in the NuGet Package Explorer screenshot for the `Octokit.Reactive` package, the dependency on `Octokit` mentions the default `0.0.0-dev` version even though it looks these packages have been produced by the Cake build since the package itself has the correct version calculated by GitVersion. That seems a bit strange...Also, if I had to nitpick, I'd say _dotnetcore_ in the description reads funny to me and if I was a consumer of the package, it'd make more sense for me to read _.NET Core_ or _.NET Standard_.",,,,,,
326778531,1660,Issue,Fixed up the wording.The version dependency of Octokit.Reactive on Octokit is annoying... things were looking so nice and straight forward!  We will have to dig into this,,,,,,
326778914,1660,Issue,How good would it be if that fixed it!,,,,,,
326778954,1660,Issue,"OK sounds like for the time being we need to use a workaround of specifying the version on the dotnet restore.  This is because the `\Octokit.Reactive\obj\project.assets.json` file is used for the `dotnet pack` version dependency stuff, and it's contents are set at `dotnet restore` time. Testing locally looks good, let's see what ApVeyor spits out",,,,,,
326779039,1660,Issue,Blinging üíØ!,,,,,,
326779070,1660,Issue,![],,,,,,
326779106,1660,Issue,Thanks for the wording change.Massive kudos for the GitHub-fu!:shipit:,,,,,,
333971686,1660,Issue,release_notes: Octokit can now run in environments where `PlatformNotSupported` exception was encountered when initializing the API connection (eg AWS Lambda),,,,,,
326778441,1659,Issue,"The cases where API does support pagination and we havent implemented it, have been excluded from convention tests and issues raised to fix each client.",,,,,,
326779224,1659,Issue,release_notes: Add convention tests to enforce API Pagination support and naming conventions,,,,,,
325988226,1658,Issue,‚ú®üëç,,,,,,
326104553,1658,Issue,"Not a deal breaker, but in the advisories section, the field is kebab-cased where the API and the associated PR use the snake_cased version.",,,,,,
326105089,1658,Issue,"Yes right, need to check if it's dash or underscore as I copied that kebab cased one from the blog post",,,,,,
326108688,1658,Issue,"OK hopefully that reads better now, thanks",,,,,,
326125660,1658,Issue,Thank you. Looks great!,,,,,,
326146148,1658,Issue,Looks good to me üëç,,,,,,
326191912,1658,Issue,All systems are go!![],,,,,,
324596501,1657,Issue,"Yay! We've saved 6,5KB! üòâ",,,,,,
324772112,1657,Issue,"Yeah it's not much üòú, but since I'm using Octokit since recently to actually create this pull request, I thought, why not optimize your repo as well ;).",,,,,,
324787323,1657,Issue,"Thanks  , interesting to see how you are using octokit![LGTM]",,,,,,
323589338,1656,Issue,"üëç from me, thank you for working so hard on this release!",,,,,,
323616413,1656,Issue,"I had a look, and it all looks great; those release notes look :gem:!I had another look at the [PR that brought the GitVersion config file] to refresh the memory, and it makes sense that `master` has a prerelease tag since we use GitHubFlow. Tagging `master` after merging this PR should definitely produce `0.25.0`.Thanks for driving that release, great effort!![giphy]",,,,,,
323616829,1656,Issue,"Release notes look good, and thanks to everyone who contributed to this - especially  and  for the .NET Core work!![]",,,,,,
324183344,1656,Issue,Can someone have a final check of the Advisories and Breaking Changes section I added to the release notes?,,,,,,
324183912,1656,Issue,It all reads well to me.,,,,,,
324300446,1656,Issue,"Travis is having capacity issues with OSX builds, it's been queued for serveral hours.  Given it's just doc updates since the last succesful builds Im going to hit the button on this release!Everyone stand back...![]",,,,,,
323465597,1654,Issue,"release_notes: Fixed `RepositoryCommitsClient.GetSha1()` to correctly obtain the sha1 of the specified commit, after the API went from preview to official",,,,,,
322728825,1653,Issue,could you have a sanity üëÄ before I merge this?,,,,,,
322732975,1653,Issue,"Other than that one comment, it LGTM",,,,,,
322297142,1652,Issue,"Project support ha been merged to master but isn't in an official build yet. If you grab the nuget package from our appveyor fed it should be there. What you want to do is create a project card for an issue - you specify the issue's id (globally unique id, not the repo issue number) as `ContentId` and `Issue` as `ContentType`.  I think you also need to specify the columnId the card will go into (there are separate API clients for getting the details of the configured columns for a project etc)",,,,,,
322595394,1652,Issue,"as usual, that did the trick.  thanks for your help üòÑ",,,,,,
321948782,1651,Issue,"Are you looking for the [Content] API, that lets you read directories or files in a repository?This should give you a list of folders and files at the root of the repository.",,,,,,
594509267,1651,Issue,Closing this out due to inactivity,,,,,,
323483925,1650,Issue,release_notes: Implement pagination support for `OrganizationOutsideCollaboratorsClient.GetAll()` method,,,,,,
320650554,1649,Issue,"once this is merged, we should be good to (re)implement pagination support for #1639",,,,,,
323483841,1649,Issue,release_notes: Fix pagination on API calls that use `Uri` parameters (typically for requests that include some form of filtering),,,,,,
320161025,1648,Issue,Will likely add more integration tests,,,,,,
320785076,1648,Issue,I think I got everything you requested. Also it seems Travis-CI might be having some issues that are unrelated to my commits.,,,,,,
320852542,1648,Issue,Think I got everything,,,,,,
322168115,1648,Issue,"Ive got a few tweaks I'd like to push up, are you able to turn on the ""allow edits from maintainers"" option in the right hand side bar of this Pull Request?",,,,,,
322199545,1648,Issue,should already be on :),,,,,,
322299606,1648,Issue,"Oh I see, I didnt realise you were using `master` branch in your fork.  As a general advice it's best to use a named branch in your repo so that your master doesn't diverge from upstream (eg this repo) master.",,,,,,
322338154,1648,Issue,Ready to ship? üòÉ  ![giphy-downsized],,,,,,
322419213,1648,Issue,"Not yet, integration tests need a lot of work. There's a few tricky things (including the fact that you can't approve/request changes on your own pull request) so I'm just working on a couple of things for this which I'll push up tonight",,,,,,
322451157,1648,Issue,"Ok so I ended up making allowances for specifying a secondary test account which is used to create the PR (so the main test account can perform all review actions on it) I also fixed up some of the status enums, the delete methods weren't working and also adding comments to the review wasn't quite right. That's why I always like to go hard on the integration test coverage üòÄTake a look at what I pushed up and let me know of any comments/issues",,,,,,
322473511,1648,Issue,Thanks for taking the extra look at the integration tests. I had run into the same issues you mentioned when trying to create them and then completely forgot to come back to it. Took a look at your changes though everything LGTM üòÑ,,,,,,
322734101,1648,Issue,"Thanks  this is a great addition, I'm sure lot's of users will love being able to manage PR Reviews.  Congratulations on your first contribution to octokit.net üéâ ![LGTM]",,,,,,
323483663,1648,Issue,release_notes: Implement [Pull Request Reviews API],,,,,,
319934385,1647,Issue,"Funny, I initially had an empty commit stating that tests were failing after adding the .NET 4.5 target. AppVeyor wouldn't build the PR as it found it was _non-mergeable_.",,,,,,
320213433,1647,Issue,"After asking for help on Twitter,  and  suggested disabling AppDomains when running tests.That took the `net452` run from 2min+ to 12 seconds on my machine :+1:_Edit:_The AppVeyor build took: - 17 seconds for `netcoreapp1.0` - 18 seconds for `net452` the thing is Travis builds are broken since we brought back full framework.Any idea on how to tackle this?",,,,,,
320219259,1647,Issue,"Nice work guys! I'm thinking we should enable the convention tests on both targets too? Yeah I was looking at the travis failure, didn't get too far as yet. It complains about the test runner path although we aren't even setting one. The cake guys have merged some PR's recently to add newer dotnet tooling support so we could try updating and seeing if any new options help",,,,,,
320434587,1647,Issue,"After a bit of research, it looks like using `dotnet test` against `net452` when using mono is not supported for now: A possible workaround is to change the Cake process so that the tests are run only against `netcoreapp1.0` when not on Windows.What do you think ?",,,,,,
320435244,1647,Issue,"Yep I'd been researching this on and off today too and had come across the same item you linked. My thoughts were to work around it as you say, by not running net45 2 targeted tests on non windows platforms",,,,,,
320440627,1647,Issue,Nice one  I noticed in the appveyor log that there are 4 extra unit tests discovered in net452 target compared to netcoreapp1.0 which is interesting,,,,,,
320454627,1647,Issue,"We were running tests on Mono for Cake under 4.5.2 before, so this should be possible. Have you considered using the xunit console runner for running the 4.5.2 tests on Mono?I can't remember exactly what we were doing, but we've been cross compiling for net452 and netstandard1.6 since july last year. I can take a look later when I have some free time.",,,,,,
320467238,1647,Issue,I think the issue is specific to `dotnet test`. Using the console runner or `dotnet xunit` should work. Do you know if a Cake wrapper exists for the latter?,,,,,,
320475323,1647,Issue,"I saw the 4 additional tests, too.I found out they come from tests such as [this one] where we make sure exceptions can be hydrated from serialized data. doesn't exist in .NET Core so they only get run against full .NET framework.",,,,,,
320475999,1647,Issue,"Hmm, I was trialling using `dotnet-xunit` and those serialization tests break when not using app domains:Some googling took me to . I'm already out of my league, but from what I understand, not using app domains affects assembly loading.Another thing is I can't reproduce the slowness if I use `dotnet-xunit` with app domains enabled against `net452`.",,,,,,
320488838,1647,Issue,"Yes, assembly loading is affected. We had to remove support for things like TypeConverterAttribute in Cake when turning off AppDomains in tests.You can use `context.Xunit2` after importing the `Cake.Common.Tools.Xunit` namespace to use the xunit console runner.",,,,,,
320492874,1647,Issue,"Since we've got AppVeyor anyway I'm pretty happy with skipping the net452 target unit/convention tests on TravisCI until/if it can ""just work"" without jumping through lots of hoops",,,,,,
320492903,1647,Issue,Let me know if you're happy for me to :shipit:,,,,,,
320495029,1647,Issue,"Alright, let's do this. I'll still investigate see if there's something we can do about it.Thanks for your help !",,,,,,
320542479,1647,Issue,Thanks  ![LGTM],,,,,,
322052684,1646,Issue,I can hop on this one.,,,,,,
355399032,1646,Issue,Just noting that `StatusEvent` will be implemented in #1732 once merged,,,,,,
319852232,1645,Issue,Actually I just realised that there are [unit tests here] covering each of the payload deserialization (using hardcoded json responses) so im not sure if we need the integration tests or not.  On the one hand they are useful since there's no telling whether the upstream API responses may look different to the hardcoded test fixtures but the rarer events do pose a problem in finding them within the 300 events/90day limits on the GitHub events API,,,,,,
319852267,1645,Issue,"would appreciate your thoughts on this from an implementation POV would this workaround be useful to you, given you had raised #1635 covering the `DeleteEvent` payload being unsupported currently?",,,,,,
319928644,1645,Issue,"Would it be more convenient to provide a type wrapping the payload JSON? So you could add a method like `DeserializeAs()`, which would deserialize the JSON into the specified type using the built-in serializer and settings?",,,,,,
319937708,1645,Issue,"Would it be more convenient to provide a type wrapping the payload JSON? So you could add a method like DeserializeAs(), which would deserialize the JSON into the specified type using the built-in serializer and settings?I am not following what this gains?",,,,,,
320079460,1645,Issue,"I am not following what this gains?It gives you a really convenient way to deserialize the JSON into the type you provide, using the custom (GitHub-specific) JSON (de-)serialization settings.",,,,,,
320136389,1645,Issue,"It gives you a really convenient way to deserialize the JSON into the type you provide, using the custom (GitHub-specific) JSON (de-)serialization settings.Do you think there is a use case for consumers providing their own type?  Given how specific the deserializer rules are (eg mapping ruby/snake case to c# camel case, using our `[Property]` attribute on members or enums to determine the API field mappings etc...  The class has to be ""just right"" and if someone was going to go to that effort it would be preferable they send a PR to add the model officially so everyone can use it?That said I do still like the idea not so that people can BYO response class but more so because it could provide a bit more discoverability and compile time guidance than we currently have.Eg currently you just ""have to know"" that you can cast the Payload to another type via `activity.Payload as PulRequestEventPayload` but there is no evidence you can do this, and no indication on what type you should use.Whereas if we implemented a method like `DeserializeAs() where T: ActivityPayload` users would hopefully disover the fact it can be deserialized AND get a compile time check that they are at least specifying a class that derives from `ActivityPayload`.  Im not sure if `ActivityPayload` itself should be a wrapper class, similar to the `StringEnum` you implemented  that contains the json string and can provide it as raw json or deserialized to a specific payload type, or whether we would just have a `DeserializePayloadAs` method on the `Activity` object itself.",,,,,,
320338540,1645,Issue,"Do you think there is a use case for consumers providing their own type?Yes, the use case is that there might be no official type for the payload yet, and you're blocked until next release. Isn't this what we're trying to fix? if someone was going to go to that effort it would be preferable they send a PR to add the model officially so everyone can use it?Yes, that would be preferable. But this will let them do the work and unblock themselves first, _then_ submit a PR :smile: currently you just ""have to know"" that you can cast the Payload to another type via `activity.Payload as PulRequestEventPayload` but there is no evidence you can do this, and no indication on what type you should use.What if it's a new payload type that doesn't have a type yet? Im not sure if `ActivityPayload` itself should be a wrapper class, similar to the `StringEnum` you implemented  that contains the json string and can provide it as raw json or deserialized to a specific payload type, or whether we would just have a `DeserializePayloadAs` method on the `Activity` object itself.In my opinion, this problem is the exact same problem as the `StringEnum` problem. We don't control the payload types and new ones can be introduced at any moment. When that happens, users that want to handle that payload needs to wait for a new release (or, I guess, do the casting).Is this generic enough for a `Payload`? I'm om the phone, so don't have 100% control on the door of this thing...",,,,,,
320507733,1645,Issue,"Yes, this exactly what I need - then I can use something like JsonConvert in order to deserialize the object into my own DeleteEventPayload class which contains all the fields which I need to access.But what would be even better is not having to create this class at all, have Octokit deserialize into some kind of dynamic object instead, so that I can access its fields however I like.",,,,,,
320534078,1645,Issue,"We could return a `dynamic` object but I'm not a huge fan of them (and you could do that for yourself anyway from the json string if you want). We also could return our `JsonObject` class  which I believe comes from ""simple json"" which we use internally as the basis of the deserializer.... I figured the string json was the most flexible though",,,,,,
394048634,1645,Issue,"As a consumer of this library, literally anything than what is currently being done now would be preferable. Not having access to the raw JSON payload for all of the unimplemented activity types means that I need to resort to executing a raw request and parse into my own types - which is really unfortunate. The addition of this change would be really helpful.",,,,,,
394052490,1645,Issue,"Thanks for the feedback , as you can see above we had a few options regarding how to actually implement this, however I agree that anything is better than how things are now!I'll aim to pick this back up and at least get something in",,,,,,
319641456,1644,Issue,"I Am Not A Lawyer, but I'd mostly say: - respect the license associated with the code - to avoid confusion with the Octokit group of libraries, a name change would be :gem: - attribution is always nice (but not required)",,,,,,
319643866,1644,Issue,"Sounds good, Was planning on doing all 3, just wanted to see if I missed anything",,,,,,
319520981,1643,Issue,"please provide a sample of the code you're using - the API is different to the website, so maybe there's some things that can be clarified when we're talking about the same code.",,,,,,
319683740,1643,Issue,"- I'll try to get around to this later today. But Github confirmed that being able to see a commit that's only on a fork using a URL that targets the upstream is expected behaviour - at the browser/URL level anyway.I am forming the opinion that forks are nothing more than ""virtual views"" of a repo, for the forks made by John and Mary, all existing branches get cloned as (for example) Mary.master and John.master. Then Mary and John when perusing their forks are actually simply seeing their own branches but with the name prefix stripped away.So there really is only one repo and the appearance of forks as distinct repos is illusory, but this is just what I think I don't know for certain.",,,,,,
319685177,1643,Issue,"- Here, I just forked the Octokit repo and then manually added a simple commit to my ""master"" branch, however using this URL:It appears that it's ""in"" the base repo, the one from which I forked ! Additionally the page gives no indication that the commit is really only on a persons fork.Clicking ""Browse files"" gives me this page:The API calls I am making share this behavior.Incidentally I use the same personal credentials when testing my code as I use to login here (for time being anyway).I'm hoping there's a programmatic way to get a ""no"" to the question ""Is this commit (550C9D40) in the upstream repo?"".",,,,,,
319733433,1643,Issue,"I'm hoping there's a programmatic way to get a ""no"" to the question ""Is this commit (550C9D40) in the upstream repo?"".I don't think so. I think this behaviour came about because it was hard to find a commit within a network of repositories without knowing which fork had it - the exact opposite of what you'd expect.What I'd do is compare two branches, like this:This maps to the API as And shows your new commit:",,,,,,
319978269,1643,Issue,"- Hi, well I'll consider what you suggested. But in my case I don't care about branches as such. I want to reliably know if the commit is anywhere within the main (which I call ""principal"") repo or in a fork of that repo. The behavior is counter-intuitive I think and it would be neat of Github would think about this and perhaps add a new API endpoint or option.",,,,,,
320607455,1643,Issue,Since this isn't specifically an octokit issue I'd suggest you make sure your feedback is sent to github support (you could also ask them if there is a way you can tell if a commit is in the main repo or a fork via the API... It's not clear if you already did that or not :grinning:),,,,,,
319483664,1642,Issue,"Here's more detailThe code below is simply experimentalwithout the ""777"" appended it works, I get a real commit object back and its valid. When I append the ""777"" to force the reference to be a non-existent reference, it simply hangs, the .Result never materializes.",,,,,,
319485527,1642,Issue,"I don't trust `.Result` in general, and there's better ways to work with tasks these days. This code works for me:",,,,,,
319486602,1642,Issue,"- Hi, thanks that's very helpful and works (although I actually get an AggregateExcedption but the inner exception is indeed NotFoundException).",,,,,,
319487535,1642,Issue,"I'm not sure which version of the .NET Framework you're running on (this was with 4.5.2) but I think that's the root cause. Anyway, I'm glad you were able to handle the exception!",,,,,,
319488030,1642,Issue,"Yeah I was about to say the same thing, my repro gets the expected 404 (NotFoundException).  Using `.Result` is not great and depending on what your hosting app was it can cause infinite hangs.  Although that might mean we have a `.ConfigureAwait(false);` missing somewhere...",,,,,,
539211994,1642,Issue,Trying out on .netcore 3.0 and seeing `Octokit.ApiValidationException` exception with an invalid commit id.  Should the code be updated to throw NotFoundException for .netcore 3.0?,,,,,,
539217619,1642,Issue,"Trying out on .netcore 3.0 and seeing `Octokit.ApiValidationException` exception with an invalid commit id. Should the code be updated to throw NotFoundException for .netcore 3.0?No, this is a different situation (we target netstandard these days).Please open a fresh issue with details if you'd like us to investigate this.",,,,,,
539232379,1642,Issue,"Sure, opened #2026",,,,,,
319476177,1641,Issue,"OK I found a way, NP.",,,,,,
319482520,1641,Issue,"Hi , glad you sorted it out yourself... did you want to post a code snippet of what you ended up with, so someone with the same question can see your solution?",,,,,,
319482930,1641,Issue,"- Hi, I would but having confusing problems, see ticket 1642.",,,,,,
320671190,1640,Issue,"Also need to poke the API to see whether pagination is supported on the ""list"" `GetAll()` calls and if so, add `ApiOptions` overloads",,,,,,
320777786,1640,Issue,"I'll have a look at pagination support, I (probably incorrectly) assumed it would have the same issue as the previous PR",,,,,,
320842134,1640,Issue,"There are still a few cases of ""Invite"" rather than ""Invitation"" in various test classes etc, but other than that it looks good!",,,,,,
321508784,1640,Issue,"FYI ive confirmed that the Teams and Organization ""list invites"" methods DO support pagination, so we need `ApiOptions` overloads on those calls.For the integration tests I have a couple of users you can invite so there are 2 pending invites.  Then you can do pagination tests with PageSize=1",,,,,,
321528361,1640,Issue,"Cheers , I'll hopefully get to it tomorrow or on the weekend.",,,,,,
322035830,1640,Issue,I just pushed up a couple of tweaks but everything is looking good.  Just have one question I'll mark up now,,,,,,
322066430,1640,Issue,I'm just gonna update the test accounts used for the tests I did earlier as I've used my real account in some of them,,,,,,
322112833,1640,Issue,Hitting the button!  Thanks  ![LGTM],,,,,,
322119853,1640,Issue,![],,,,,,
323483388,1640,Issue,release_notes: Implement `GetAllPendingInvitations()` functionality for `OrganizationMembersClient` and `TeamsClient` (Preview API),,,,,,
319857653,1639,Issue,"I also found some of the integration tests were failing for me due to using your specific test organization and usernames, but substituting them with the configured test settings (`Helper.Organization` and `Helper.Username`) got them working.  I've pushed up that commit.  All tests are now passing for me :+1:",,,,,,
320433948,1639,Issue,Fixed that last `nameof` issue,,,,,,
320542430,1639,Issue,FYI I've hitup GitHub support about the lack of pagination support on the GET endpoint... if they confirm it's a bug we can reinstate this on a future PR.Thanks !![LGTM],,,,,,
323480454,1639,Issue,release_notes: Implement [Organization OutsideCollaborators API (Preview)],,,,,,
318801134,1638,Issue,"Hmm that's weird, I also have the .NET core 2.0.0 stuff installed too and things seem to be fine for me using Cake (unsurprising this works as it automatically downloads version 1.0.1 locally if the detected version is not 1.0.1) and VS2017 on windows.  Haven't tried on Mac recently... What environment/method are you using?",,,,,,
318801536,1638,Issue,"Just tried raw `dotnet test` from commandline in the `Octokit.Tests` directory and that worked too.Not that Im against adding the global.json per se, just trying to understand why it doesnt seem necessary in my setup.Having a read of [this overview] it also sounds like SDK 2 tools should be able to do everything for 1.x projects, the only slight affect of having the 2.0 stuff installed is that by default `dotnet new` would create a 2.x targeting project (unless you have a global.json saying otherwise).",,,,,,
318803104,1638,Issue,"Hmm...OK, running tests from command line works for me (not sure what I was doing this morning), looks like it's ReSharper's test runner that gets into a weird state...so that's fine. Closing this.",,,,,,
318802919,1636,Issue,"Yeah this would definitely be a cool feature to add!  According to [the docs] ""most API functions"" will support ETag and/or Last-Modified header... which can be specified in `If-NoneMatch` or `If-ModifiedSince` headers on requests, which will return `304 Not Modified` response rather than actual data, if no new content was present since the specified ETag/timestamp.The trick is, how to implement it gracefully!We currently expose the ETag (and can also add the LastModified field) header values via the exiting `GetLastApiInfo()` method, so we are essentially covered on that side of things...In terms of specifying the ETag or ModifiedSince values on requests in a broad/elegant way, we could think about adding support for these on our `ApiOptions` class which we currently use to specify pagination related settings.  The problem there is that only `GetAll` methods supported pagination so they were the only ones that had overloads added that take an `ApiOptions` parameter.  But I guess they are also the most important ones where you want to do ETag based efficient calls anyway.  If it was a single entity ""Get"" request there really isnt much benefit in using this kind of functionality - it's only the ""GetAll"" requests where it would be most useful...  do you agree with that reasoning?Things to think about- Should we support ETag and Last-Modified?  What happens if one is specified and the API doesnt support it - hopefully this results in an Api error with clear indication of the problem, I'd be happy to bubble that up to the user- Can we identify any candidates that are NOT `GetAll` type calls, that would be good to have this functionality on?  If so we might want to look at having a base ApiOptions that only supports these fields, and change what is currently `ApiOptions` to something like `ApiPaginationOptions` that inherits the base one and add the pagination fields.  That way we could use the base one on non GetAll functions- How should we behave when the 304 response is received?  Simply return empty collections?",,,,,,
533393027,1636,Issue,"Hey folks - I'm working on a GitHub App that receives webhook events and ends up making calls back into GitHub to update checks. Its all going well but occasionally the PR status ends up in an inconsistent state when my code may have set in conflicting check run status/conclusion calls.The problem I'm facing is that the incoming webhook events may come in on any of a host of machines that are processing events and so there is a natural race condition that occurs. Ideally this is where support for ETags would help because my API would be able to query the status of a check (noting the ETag) - evaluate a few conditions and then attempt to update the check providing the ETag. If the ETag had changed then I could get an error.Basically what I'm after is some kind of concurrency, ETag or upset mechanism. It looks like the REST API provides this but it isn't exposed via Octokit.",,,,,,
533518745,1636,Issue,"yeah, this is something we've been thinking about for a while but haven't really figured out #352. If there's a specific area of the codebase that you'd like to see this supported I'd be open to experimenting with how this might be supported as a spike.I'd love for this to be more elegant than ""just add another parameter, it'll be fiiiine"" because between this and pagination and the actual parameters a caller can provide we're definitely hitting a maintenance wall here keeping track of what each endpoint actually supports without overwhelming callers.",,,,,,
535305796,1636,Issue,I only just spotted this response - thanks. I'll jump over to #352 to continue the conversation there. I'm happy to help here if we can figure out a way of doing this elegantly.,,,,,,
318565460,1635,Issue,"I need to review how that code works but it would be great if you could send a PR to implement the missing payload class! in terms of a workaround you could obviously call the github API yourself or use the lower level octokit Connection Get method, but really the easiest way would be to implement the payload class and then use the nuget package from our appveyor feed, until the next official release to nuget.org",,,,,,
319848526,1635,Issue,I poked a bit more into this and have proposed a workaround that will allow any unsupported event types to be accessed as Json...  please provide input on PR #1645,,,,,,
319851261,1635,Issue,"I've raised #1646 to cover the fact that there are various missing event payloads, so I'll close this issue.  If you feel like implementing the `DeleteEvent` please send a PR over!  There is some guidance in #1646 about how to implement a new payload",,,,,,
317909528,1634,Issue,"Thanks for advising, can you confirm which nuget package version you're using? Also if you could add a failing test via a PR that would be awesome and help confirm a fix CC",,,,,,
319837746,1634,Issue,"I tracked this back to  where conditional compilation symbols were apparently not brought over correctly from `.xproj` to `.csproj`.It should be an easy fix, but I think it's also a great opportunity to maybe have a look at running tests against both targets, `net45` and `netstandard1.1`.I'm happy to have a stab at this one. since it would be, in my opinion, too heavy to run integration tests against both targets, what would be the best way to reproduce this in a failing test? take a JSON response and try to deserialise it?",,,,,,
319848778,1634,Issue,"Thanks  for taking a look, I hadn't got to it yet!Agree that integration tests in both frameworks is going to be painful!  take a JSON response and try to deserialise it?This sounds like a reasonable idea - add some more unit tests around deserializing JSON responses so we can run them for both target frameworks quickly",,,,,,
318543750,1633,Issue,"how about we do a PR for each of your check list items rather than one massive one? Makes it easier to review and each one is delivering incremental value. I can review this one as soon as I can, and you can start  a new branch for the next one on the list",,,,,,
318556150,1633,Issue,"sounds like a good plan, I was actually thinking that myself this morning when I was pushing the latest commits",,,,,,
318802375,1633,Issue,"This is all looking good from a functional/complete perspective... but I'd just like to think about the name of the permissions enum.  We already have an enum `Permission` that is used when setting permissions with values `read` `write` and `admin`.  In this case there is an extra value `none` but I dont like calling the response object `CollaboratorPermission` and the enum `CollaboratorPermissions` as they are too similar, plus to align with `Permission` enum, the enum should be singular rather than plural.I think keep the response class as `CollaboratorPermission` and find a new name for the enum - what about `EffectivePermission` or `PermissionLevel`?",,,,,,
318803367,1633,Issue,Happy to rename to `PermissionLevel` as that's what we're checking here.,,,,,,
318804775,1633,Issue,Thanks muchly  ![LGTM],,,,,,
323480259,1633,Issue,release_notes: Implement `ReviewPermission()` functionality for `OrganizationMembersClient` (Preview API),,,,,,
343895398,1630,Issue,Hi  just checking if you planned to progress this PR any further?,,,,,,
343941065,1630,Issue,I will take a look at it.,,,,,,
344280535,1630,Issue,"This is my take on implementing `IRepositoriesClient.GetLicenseContents()`It fixes the `LicenseMetadata` to include new attributes returned by GitHub.Getting `Repository` will include the license information ~~- this may be a breaking change, as I changed the API Preview header.~~ - the API supports Squash Commit and License preview headers.",,,,,,
344564342,1630,Issue,"GitHub API supports multiple preview values in the `Accept` header separated by comma, or the API may send multiple Accept headers.I tried this scenario, because to implement #1707 the client will need to indicate is supports License Preview and Topics Preview API.I left the Squash Commit Preview, because I was not sure it is still required.",,,,,,
344566796,1630,Issue,"Awesome, yeah i just did a test myself and verified that `application/vnd.github.mercy-preview+json,application/vnd.github.scarlet-witch-preview+json` returns both `code_of_conduct` and `topics` on the returned repository object, so it's nice to see it does support multiple headers when required.Leaving the old squash/merge method preview header there is good, in terms of supporting older GitHub Enterprise versions that still have that API in preview.So :+1: on the multiple headers, but can we be explicit about them in the unit test, and also maybe do a more elegant implementation than `AcceptHeaders.Foo + "","" + AcceptHeaders.Bar`?Eg how about a a `Concat()` function on the `AcceptHeaders` class?So the usage could be `AcceptHeaders.Concat(AcceptHeaders.Foo, AcceptHeaders.Bar)` ?",,,,,,
344567640,1630,Issue,"Sure, I can concat it. I opted for non-elegant but more performant code, because it's compiled constant now.",,,,,,
344579951,1630,Issue,"If you want to keep it as a constant maybe forget about the concat function bur declare a new const like ""SquashCommitAndLicensePreviee"" that can be used everywhere required?",,,,,,
344592609,1630,Issue,The Concat() method looks good.,,,,,,
345238969,1630,Issue,anything else I should fix here?,,,,,,
345415075,1630,Issue,"Oh sorry, I didnt seem to get notification that you had pushed changes (maybe because you rebase/force pushed).  I'll have a final review",,,,,,
345415748,1630,Issue,Everything looks pretty good with what's been done so far :+1:However I realised that we need to add the preview header to more of the calls in `IRepositoriesClient` so that license info is included in the `Repository` objects returned.  Eg `GetAllForOrg()` `GetAllForUser()` `GetAllForCurrent()` etc and probably even `Create` and `Edit` in theory?,,,,,,
345445170,1630,Issue,I put License Preview API header to more RepositoryClient calls. I did not add it to Create() method because it had no effect there. License is updated with delay after the repository is created (with AutoInit=true) and GitHub will not report the license immediately.,,,,,,
345497251,1630,Issue,Fair enough regarding the `Create()` call.Changes look good but the one other thing you may not be aware of is that the Reactive implementations make their own API calls for `GetAll` methods (whereas for single item responses they just pass through the call to the normal API client)... so there are a number of equivalent `GetAllPublic()` `GetAllForOrg()` etc calls in `ObservableRepositoriesClient` that will need the new preview header defined as well. eg:,,,,,,
348472738,1630,Issue,just wondering if you still wanted to finish this one off or if you'd like some help to add the `ObservableRepositoriesClient` stuff?,,,,,,
350047673,1630,Issue,"Sorry, I don't have time now to implement `ObservableRepositoriesClient`.",,,,,,
350081197,1630,Issue,"I might be able to pick this one up, what would the simplest way to do that  ?",,,,,,
350120570,1630,Issue,"Simplest in terms of implementation or git branches etc -Zuber?If you mean the latter you can just add a remote to 's fork then create a local branch from there, that way the original commits are attributes to  and the continuation to you. Push it up to your repo and I can update this PR (assuming  has ticked the box to allow me to push to the branch)",,,,,,
350121469,1630,Issue,"Yes, maintainers can update this pull request.",,,,,,
350136263,1630,Issue,#NAME?,,,,,,
350187878,1630,Issue,I pushed the changes up to let me know if there is anything else that needs to be done,,,,,,
358615266,1630,Issue,Sorry -Zuber I must have missed this one!  I've merged your changes into this PR and fixed up a couple of impacted unit tests.  Hopefully get a green build now...,,,,,,
358618451,1630,Issue,"release_notes:  Implement support for Repository Licenses, including adding `License` property to `Repository` response model, adding `SpxId` field to `LicenseMetadata` response model and a new `IRepositoriesClient.GetLicenseContents()` call",,,,,,
358651109,1630,Issue,![KvGkTDzBnY03m],,,,,,
316947250,1629,Issue,Thanks  !,,,,,,
315024588,1628,Issue,Thanks ! There is actually `AddAssignee()` (and Remove and Clear)  methods that are better to use than the underlying reference type's `Add() ` method if you could update the samples to use that. Same for labels,,,,,,
316354637,1628,Issue,"I will , very busy atm cleaning up work before I go on holiday. Can this stay open for a short while longer? I might do it while on vacation. :-)",,,,,,
531046225,1628,Issue,"Closing this out because the fork was deleted, and a lot of time has elapsed. let us know if you're still interested in contributing this documentation change.",,,,,,
314921484,1627,Issue,"Octokit is only concerned about the GitHub API, which coincidentally exposes some primitive git metadata, but probably not at the level you're after. Sounds like you might want to use something like libgit2sharp for this. Possibly in combination with Octokit.",,,,,,
315023152,1627,Issue,Thanks  I'm going to close this issue out,,,,,,
314737694,1626,Issue,"Using the Add and Remove methods is the intended behaviour, similar to adding repositories to search criteria or labels to issues.   Yyou can see some implementations in the integration tests here",,,,,,
314738076,1626,Issue,"Possible, but at the very least update doco?! :)",,,,,,
314738118,1626,Issue,"I'm okay to close this then, btw.",,,,,,
314738685,1626,Issue,"Actually there are `AddAssignee`,  `RemoveAssignee`  and `ClearAssignee` methods in `IssueUpdate` class too  Possible, but at the very least update doco?! :)For sure, did you you find incorrect reference somewhere? Would you be able to send a PR to correct?",,,,,,
594498494,1626,Issue,"Looks like `NewIssue.Assignee` has been removed, but I'm going to leave this open as this feels like a good chance to include some example code for this scenario somewhere.",,,,,,
314447535,1625,Issue,Hi  How about [this overload] on RepositoryContentsClient?,,,,,,
314645161,1625,Issue,Thank you so much.Its work,,,,,,
314659470,1625,Issue,"I want to do that scenario from local cloned repository, Is there any way to that?",,,,,,
314739001,1625,Issue,"Octokit.net is built you interface with github.com (or github enterprise) API, it doesn't operate on local git repos, sorry. You could look at libgit2 if you want to do local repo stuff",,,,,,
313931046,1624,Issue,"Oh, I see [GitHub API v3: /Users/Octokit/Repos/].`In fact:![capture]Thanks anyway.",,,,,,
311338101,1623,Issue,"Thanks  it looks OK, but I'm just wondering what happens if we call `ToRequest()` on the same  object twice? Since the first one  mutates the underlying `Config` dictionary, won't the second time throw the exception because the keys are already in the dictionary?",,,,,,
311508114,1623,Issue,"- Off the top of my head, I'm not sure of the behaviour of the Linq bits there.Let me write some more tests for that scenario.",,,,,,
311517194,1623,Issue,"- you're right in that subsequent `ToRequests` throw in that there is a check in place for existing entries in config...Two options, we can modify the original code to include the `Events` and `Active` properties:This is less invasive, but I feel is brittle. If there are new properties are added then we need to also add them to this list...The other option is to have the explicit `NewRepositoryWebHook` _properties_ override any of the matching properties that were explicitly passed into config.In this case, it would use ``;I prefer the latter. In this case we would remove the check for duplicate properties.",,,,,,
312524456,1623,Issue,"- FYI, I've updated this PR to reflect the latter option outlined above.",,,,,,
317150043,1623,Issue,![LGTM]Thanks,,,,,,
317150065,1623,Issue,release_notes: NewRepositoryWebHook no longer discards base WebHook fields if they are set,,,,,,
323480131,1623,Issue,release_notes: `NewRepositoryWebHook.ToRequest()` no longer discards existing fields if they are set,,,,,,
311047863,1622,Issue,![jack-nicholson-nodding-anger-management-S3Ot3hZ5bcy8o],,,,,,
311091698,1622,Issue,Looks like some usages of `GetAllBranches` hasn't been changed though üòï,,,,,,
323479967,1622,Issue,release_notes: Remove methods and members that were marked `[Obsolete]` in 0.23 or earlier,,,,,,
311041958,1621,Issue,"~~Isn't `Config` already `public` in the base `NewRepositoryHook` class?~~ (never mind, i see it's `private set`Perhaps we just need to add a `ctor` on `NewRepositoryHook` that takes all the properties this class has (`Name`, `Config`, `Events`, `Active`) and use that from the `NewRepositoryWebHook.ToRequest()` ?",,,,,,
311199439,1621,Issue,Is there an issue with making the `Config` `protected set` ? That would allow this descendent class to make changes to the config without needing to create a new instance.,,,,,,
311239467,1621,Issue,"Not specifically,  but a quick look indicated that the properties of NewRepositoryWebHook are actually put into the Config dictionary so it could get messy if that underlying field can be directly changed as well?",,,,,,
311243630,1621,Issue,"- I'll put together a PR, can review from there.",,,,,,
311247783,1621,Issue,- care to review  ?,,,,,,
310893594,1620,Issue,LGTM,,,,,,
311041315,1620,Issue,Thanks -Zuber and  for the LGTM's üòÅ,,,,,,
310892983,1618,Issue,"Yeah, currently we have PullRequestReviewRequests and PullRequestReviewComments implemented, but not the actual PullRequestReview's themselves.Ill mark the issue as ""up for grabs"", is it something you'd like to work on?",,,,,,
312012436,1618,Issue,"I'm out till July 10th, so if someone wants to take it before then be my guest!",,,,,,
313734290,1618,Issue,Hi   are u still out/busy...i would like to work on this one what do u say?,,,,,,
314857597,1618,Issue,Sorry I misread your question - yes go ahead and take it!,,,,,,
314999785,1618,Issue,üòÑ  i will open a pull request this weekend.,,,,,,
320014484,1618,Issue,Any progress updates with the branch?,,,,,,
320049336,1618,Issue,Quite busy with work in weekdays..will try my best to manage some time this weekend and start working on it.,,,,,,
320132398,1618,Issue,"Sorry I noticed this hadn't had any traction in almost a month and started working on it yesterday for my own uses. I started a PR, only really need to finish writing integration tests",,,,,,
320176069,1618,Issue,üëç,,,,,,
309659591,1617,Issue,"Hey  I'd be happy to use the approach they took in the StackExchange one you linked - catch the exception if thrown, and maybe just set the platform/architecture values to ""unknown"" in that case... It would be great if you wanted to fire a PR in to do this!",,,,,,
309886435,1617,Issue,"thanks, I will see what I can do but it won't be for a while... off on holiday for a couple of weeks from tomorrow.",,,,,,
319852566,1617,Issue,"Just circling back on this one, is this still something you would be interested in contributing   ?",,,,,,
320571291,1617,Issue,I will look at this tomorrow. Sorry for the delay,,,,,,
320607941,1617,Issue,No need to apologise :grinning:,,,,,,
326720420,1617,Issue,Hey  we were doing some work in this area in #1660 and I included an attempted fix for this issue.  Are you able to test whether that fixes the issue for you?  You can get the nuget packages for that PR from the appveyor feed,,,,,,
309416804,1616,Issue,"Hi  Based on the discussion in #1243 I thought this will work.The discussion in #1243 actually mentions the following: One thing to pay attention to is that requesting a specific issue will not return the repository key.So it seems the upstream API response only includes the `Repository` information sometimes.  Im assuming the logic might be that the API doesn't lookup/include the `Repository` information, when you had to specify the repository in the API call in the first place.  eg when querying a single or multiple issues from a specified repository, I guess you ""already know"" what the repository is?Looking at the tests added in PR #1292 (the ""fix"" for #1243) it seems the only expected responses that do include `Repository` field are- `GetAllForCurrent()`- `GetAllForOwnedAndMemberRepositories()`- `GetAllForOrganization()`",,,,,,
309461486,1616,Issue,I see. I couldn't find any documentation about this. In case I can be of any help (meaning I would help to create some more documentation or fix existing) please point me to the proper process.,,,,,,
309580329,1616,Issue,"Hmm so typically we don't so document or note all of the cases where certain fields are or aren't included in API responses, but I can see in this case it would be helpful to do so. So in terms of documentation there is [this page] but I don't feel like it would be that discoverable there... Perhaps the best way to note that this field is not always returned  is to add a note in the xmldoc comment [here] saying something like the field is only included on queries that span multiple repositories, or something similar. Having it in the xmldoc text means it will show up in intellisense whenever a user is referencing the field in code",,,,,,
307568477,1615,Issue,"I looked into this a little bit. It seems that when you go to , which corresponds to `GetAllContents` on the root directory, the content of each file will not be returned. However, passing in the file name to `GetAllContents` (I wasn't aware you could do that, I thought it only worked with directories) returns its content.",,,,,,
307543845,1614,Issue,What version of the library are you using?,,,,,,
307563124,1614,Issue,`0.24.1-alpha0001`.,,,,,,
307563615,1614,Issue,"Ah yep that was our alpha dotnetcore build and won't support sourcedebugging because at the time SourceLink tooling didn't exist fordotnetcore.Previous releases it should work...And the good news that it's already now re/implemented in our dotnetcorework, so will be there in the next release (occuring soon, as few as acouple of things get sorted out).You can grab the  current master build off our appveyor feed if you want totry it out nowOn 10 Jun 2017 22:47, ""James Ko"" .",,,,,,
307565777,1614,Issue,"I am trying with a .NET Framework app, but it's not working there either.![sourcelink_wont_work]Proof that I've enabled the source server setting:",,,,,,
307565846,1614,Issue,Using 0.23 or the master branch build from appveyor?,,,,,,
307565944,1614,Issue,This is using [0.24] (the one that doesn't support .NET Core).,,,,,,
307566735,1614,Issue,"I just tried again, using the latest AppVeyor build with a .NET Core app, and it doesn't work there either. Not sure what I could be doing wrong on my end üôÅ",,,,,,
307567767,1614,Issue,"For the dotnetcore version on appveyor, you need to be in vs2017 and using the ""new"" sourcelink option Details here :",,,,,,
307602576,1614,Issue,"I already had both SourceLink v1 and v2 enabled and was using VS2017. I ended up git cloning the repo and inserting a new test to diagnose the issue. Regardless, thanks very much for your help :smile:I'm closing this issue for now, but if anyone else has had problems with debugging too, comment and I'll reopen.",,,,,,
307413999,1613,Issue,"thanks for the interest, but I'd recommend doing that as a standalone library.",,,,,,
306966237,1612,Issue,"Hey  Maybe try our new dotnetcore (netstandard1.1) library and see if that works better. It's not an official release on nuget just yet, but a prerelease package is available if you specify Prerelease flag to get it. Or you could change your feed to our appveyor one",,,,,,
307153532,1612,Issue,Thanks for the advice! I just tried installing the prerelease package and it works perfectly. :heart:,,,,,,
306824923,1611,Issue,thanks!,,,,,,
323479631,1611,Issue,release_notes: Fix `Release` documentation samples (`ReleaseUpdate` should be `NewRelease`),,,,,,
305767094,1610,Issue,"Ok, a bit of playing later ... I believe I have it.  Here is sample code:",,,,,,
305767515,1610,Issue,"I'd appreciate any feedback on if this is an appropriate approach.Note, that I need to remove all the Tree Type nodes as without this, no change is made.Assuming this is a reasonable hack - would it be a good idea to add a constructor to NewTree which accepts the current tree?  (Happy to do the PR if this makes sense)",,,,,,
305772892,1610,Issue,"Hey -Folder I haven't played too much with the Tree API so I was poking around trying to figure out the answer to your question.  It doesn't sound ""right"" that you'd have to strip things from the list though Looking at the API docs  I do see that there is a base_tree field that can be set to the sha of the tree you want to update, and we've implemented this `BaseTree` in `NewTree` request model. So rather than loop through the entire recursive tree and add them to a new tree, perhaps you can just have a new tree with the changes you wanted, and set it's BaseTree to the sha of the current tree, avoiding the need to include all the other things you didn't actually want to change... Did you try doing that at all? In terms of adding this kind of logic to octokit, currently we haven't provided accelerator/composite methods that make multiple API calls,  and are more focused on providing equivalence to the underlying API methods. So I'd say it's better to have a documented example of ""how to perform complex tasks with octokit"" but probably shy away from directly implementing such things. Happy to discuss though",,,,,,
305870881,1610,Issue,"Hi  - thanks for the commentsYou are 100% correct - there is a base tree.  This works great for additions (and I suspect update, but not tried).It doesn't however support delete.From the research I've done, I believe that to delete - the only method is to clone the entire existing tree (without setting the base tree).  And then either omit or remove the files you wish to delete from the NewTree before submitting it.If you see the comment in the API docs for the base_tree property - while not explicit in about how it should be used for deleting items, it does point in that direction.  And a few blog posts have backed that up.So yes, I would agree this seems a rather cumbersome approach - I believe it is the appropriate approach.  (although always happy to be proved wrong)",,,,,,
305932461,1610,Issue,Ah ok I didn't appreciate the fact that there's no way to delete something except to omit it from a whole new tree ! What's with needing to exclude anything of type Tree from the new tree though? Did you figure out why that's necessary?,,,,,,
305959118,1610,Issue,"Removing the Tree types was taken from this blog post (see section 5b) -> Originally I had the above code without the removal of the Tree type - everything seemed to work (I got 201 Created rather than 500 as mentioned in Levi's post).  However, when I looked at the commit on Github it showed as no changes had been made.Add that single line:And everything seems to be working.I suspect that having the Tree type in there is the equivalent of setting the base tree (I'd expect them to be same Tree ... not checked that though).  As such including the ""last"" Tree as an object in the list, I believe git is using that as it's base, then applying any additions or updates in the list (of which there are none).  The absence of a file in the list has no affect, as the removed file will have already been pulled in when it took the ""last"" tree.That last part is speculation on my part ;)",,,,,,
556042802,1610,Issue,Hi! Having the same problem as well so I used this as a workaround for now. Are there any plans to make it possible for the deletions to be done via git trees though? I tried to do it based on what the docs mentioned The SHA1 checksum ID of the object in the tree. Also called tree.sha. If the value is null then the file will be deleted.but the API always returns an error saying the tree.sha / tree.content should be provided. Hope you can let me know thanks!,,,,,,
303943171,1609,Issue,This is not supported through the GitHub API.,,,,,,
303667134,1608,Issue,can you link to the documentation you are looking at?,,,,,,
303836523,1608,Issue,"I'm looking at this:Specifically:comments | array of draft review comment objectsI would like to submit several pull request comments/review comments in batch. I don't want to trigger pull request comment event after every single comment, but rather when I'm done commenting.",,,,,,
303962863,1608,Issue,"Looks like we don't have that overload: Given that was originally implemented a while ago and this feels like a new change, I guess it'd be nice to see if someone was keen to add this support in.",,,,,,
301220877,1605,Issue,Apologies as well - prolly not the right place to file this,,,,,,
301294358,1605,Issue,Looks like this isn't specific to Octokit.net - Gut feeling is something server-side has changed - I'll do some digging through the support channels and see if I can get an idea of what's changed recently.,,,,,,
301340019,1605,Issue,Thanks for taking a look into it!/cc  so they can track the progress of this issue,,,,,,
301616403,1605,Issue,a configuration fix has been deployed a few hours ago - are you able to see if that fixes the issue on your end?,,,,,,
301617360,1605,Issue,"I will confirm, this is fixed for me. Github support had me test it this morning and it worked for 3 different files of differing sizes above the 700KB threshold I was having issues with when it occurred.",,,,,,
301617500,1605,Issue,thanks for confirming. I'll close this out for now. please let me know if you see any other issues.,,,,,,
301619236,1605,Issue,"looks like things are rolling again - .Note that the last noted time the service gave us an error was at 13:54 CDT:2017-05-15 18:54:04,965 [42] ERROR chocolatey-package-verifier had error(s):There are 2 exceptions of 'ApplicationException'.System.ApplicationException: Error creating Gist for bazel v0.5.0-rc4. The service will try to test the package again later. Until then enjoy this error log heartbeat. The service is still running, yay! ---> Octokit.ApiException: [..snip..]~~~Note that the bazel package testing gist creation was successful an hour ago -",,,,,,
301619537,1605,Issue,"yeah, that last error was before the update was deployed.",,,,,,
301619637,1605,Issue,fantastic customer service there. I def owe you a drink next time I see you!,,,,,,
300297382,1604,Issue,"I think [the docs] explains the strategy pretty clearly, though I haven't seen any work on this yet. If you're going to read the [epic thread], I suggest you get some popcorn :wink:Lately, there's been quite a few projects pointing to [StrongNamer] for questions like these. The library lets you transparently and automatically sign the assemblies you reference as part of the build process.",,,,,,
300322724,1604,Issue,"I'm mostly neutral on this due to the fact that it doesn't hurt me in my day-to-day work, but I'll defer to  and  who have been doing a lot of work recently on getting .NET Standard support in on whether they want to support this at some stage.And :thumbsup: to StrongNamer as an escape hatch for this.",,,,,,
300639598,1604,Issue,I don't have a strong opinion on the subject as I've never used it/experienced any pain with it.I'd lean towards StrongNamer as the process seems straightforward.,,,,,,
300746344,1604,Issue,"I wasn't aware of the history (definitely enjoyed reading the epic thread! :popcorn:)I am also from the ""don't have a strong opinion"" stance.  The fact it hasn't come up in the 15 months I've been contributing to Octokit would seem to indicate it isnt a hugely requested feature.  Given there are things like StrongNamer now to let others effectively make any of their dependencies strongly named when they need it, without needing the library to be strong named for all other users... is there an actual need to do anything in octokit.net here? are you able to use StrongNamer on your side to satisfy your requirements?  If there is a valid reason why it's not suitable then we can look at implementing it here, but I didnt like the sound of locking down assembly versions (as I am shooting for full automated builds and releases to nuget) or the fact that this could cause our existing users issues with redirects etc.",,,,,,
300099901,1603,Issue,"I'm honestly not sure which version of the .NET Framework is supported by Unity 3D.If it is earlier than 4.0, we don't have plans to support it due to the heavy usage of the Task Parallel Library. And we dropped 4.0 support a while ago because there were significant gains to using .NET 4.5.A supported version of .NET Standard is almost ready - I think the target is .NET Standard 1.1 - but that may not be a solution here.",,,,,,
300101382,1603,Issue,So what should i do?Do i use GitHub HTTP API?,,,,,,
300103389,1603,Issue,"that's what I'd recommend - use the endpoint and snippet examples from  and have a bit of JSON parsing of the response to get the data you need in C# objects.You could extract the relevant source file for the response models from our [Octokit/Models/Response folder] and add them into your project to save time with models and parsing, but I'd recommend getting familiar with the API first.",,,,,,
299689493,1602,Issue,thanks for noticing this!,,,,,,
323479522,1602,Issue,release_notes: Fix `Issue` documentation samples (`GetForRepository()` should be `GetForRepository()`),,,,,,
298783946,1600,Issue,"Great, I'll take a look at this quickly. Thanks for taking the bite on this one!",,,,,,
299126169,1600,Issue,"That looks great, thanks again. I made a few minor changes, could you please have a look?",,,,,,
299137741,1600,Issue,![],,,,,,
299143988,1600,Issue,![LGTM],,,,,,
299155464,1600,Issue,Ooh crap I missed this one!! Thank youuuuu,,,,,,
298612235,1599,Issue,"on second thought, is that even needed? or would you rather rebase it and force push when ready to merge?",,,,,,
298614015,1599,Issue,"I think it's fine, I prefer not to force push a branch that others may have pulled already.",,,,,,
298626938,1598,Issue,"I am trying to implement this methods: , but running into trouble since there is no `IApiConnection.Post` overload that does not take data - but that **will** take an `accepts header`.Due to that, the unit tests are failing",,,,,,
298628540,1598,Issue,I think in that case we normally pass an empty body eg `new object()`,,,,,,
298636550,1598,Issue,The unit tests for `RemoveAdminEnforcement` are failing for some odd reason..,,,,,,
298647806,1598,Issue,"okaayy....Wrote up the integration tests, and `include_admins` is still required - even though it might be ignored if the `enforce_admins` param is passed in.Will rollback the removal and push, but do we obsolete it - or just leave it alone until it is no longer respected by the api?",,,,,,
298654718,1598,Issue,I think I am done with this  Just one breaking change as outlined in the pr description.,,,,,,
298654835,1598,Issue,"Based on that API updates blog though, it sounds like as of May 2nd (even in US timezone that's mere hours away) the include_admins may start to cause an error if present?",,,,,,
298655714,1598,Issue,So lets wait a day or two and give AV another kick and see what happensAt this point the property is not used anywhere - it just exists on the class so taking it off will be quick,,,,,,
298656338,1598,Issue,There is also the question of those two unit tests that are failing for some reason. I am quite sure that they are implemented exactly the same way as other tests for methods with the same kind of code,,,,,,
298656772,1598,Issue,Sounds like a plan üëç Are you able to rebase your branch on master (or merge master into it) so the diffs of all the Url/string changes etc arent shown on this PR?,,,,,,
298657704,1598,Issue,"Sure, did a rebase.those commits got included by mistake when I was doing some commit cleanup",,,,,,
298663157,1598,Issue,Review comments addressed.,,,,,,
299151632,1598,Issue,You want to try re-running AV and see what happens with re to the `include_admins` param?,,,,,,
299153864,1598,Issue,"AppVeyor only runs unit/convention tests, so to really see what github api thinks of those fields we need to run integration tests locallyGiven [this anouncement] though, I'm pretty sure we will be good to remove include_admins now üòõ",,,,,,
299157658,1598,Issue,üòÜ I am still pedantic enough to run integration test locallywill ping in a few once I push changes,,,,,,
299159287,1598,Issue,![star-wars-haters-the-force-awakens-5xaOcLOqNmWHaLeB14I]we should be good to goalong the way found out why the unit tests where not working,,,,,,
299172189,1598,Issue,Rollin rollin rollin!Thanks -Zuber üòÄ ![LGTM],,,,,,
299172814,1598,Issue,"Woot!Thanks for working through this with me, feels so good to get back into OSS![hulu-deadbeat-hulu-original-series-3o6ZtqTJwfo4xoVrNu]",,,,,,
323479009,1598,Issue,release_notes: Enhance `RepositoryBranchesClient` to support Admin Enforcement changes,,,,,,
298583776,1597,Issue,"I am working on implementing this, but there is a question of just how many constructors to addDo we tell people that if they want to set `EnforceAdmins` they have to use the fullest ctor, or add another two?(once this lands, #1523 is going to be adding a few more as well..)",,,,,,
298592839,1597,Issue,Maybe just 1 ctor taking each single option and 1 ctor taking all options?,,,,,,
298594355,1597,Issue,"so n+1 with n being the number of properties on the class? Sounds good to me.An interesting item in the docs that  might have some insight on is the fact that the `include_admins` property on some of the sub classes is marked as **`required`**, but in testing I've done, it does not effect the end result.My personal vote is then to obsolete it as it can cause confusion.edit: a quote from the announcementThis will be a breaking change in the near future. To make the transition easier, we're allowing you to set admin settings the old way by passing include_admins for required_status_checks or required_pull_request_reviews on the general update branch protection endpoint until ~April 21, 2017~ May 2, 2017. At that point, the only way to change your admin settings will be to pass enforce_admins, and passing include_admins will receive 404 responses.",,,,,,
298598094,1597,Issue,"Yeah sounds like it won't be unhonoured very soon. Probably no time to even obsolete it, may need to just remove it. Given its a preview API these things sometimes down occur",,,,,,
297851458,1596,Issue,First one is easy:Second one is only partially possible:The response returned for each branch doesn't give you much - just a link to the commit - and so you'll need to lookup that commit to find the timestamp.,,,,,,
298159695,1595,Issue,"is cool!  I've pulled it down to have a play.I think we should convert ALL response models that have an `enum` property, to wrap it in `StringEnum<>`I've pushed a a convention test to pick them all up, and help us ensure we keep to this convention moving forward :+1:Next, Ill push up some changes to the actual response models to satisfy the convention tests",,,,,,
298177709,1595,Issue,"Hmm so there are a few curve balls when actually running this... In our SimpleJsonSerializer we take care of converting github api values that contain hyphens or underscores into our C# enum values, for example `utf-8` in GitHub API is `Utf8` in Octokit, and `base_ref_changed` is `BaseRefChanged` so the current implementation fails in `ParsedValue` to parse enum values from strings that contain these characters.  Our deserializer also handles having properties added to enum values to allow us to customize what string representation a given enum value should have, for example in the Reaction API, we have api value of `+1` which maps to c# enum value of `Plus1`.  It's not nice to duplicate this ""API enum strategy"" code in both the `JsonSerializer` and the `StringEnum.ParseValue()` so I've rejigged the SimpleJsonSerializer to expose a `DeserializeEnum(string value, Type type)` function, that can now be used in both places.  Let me know what you think, Im about to push the commit up",,,,,,
298180544,1595,Issue,"I also found that in the implicit conversion of `TEnum` to `StringEnum` the ctor needed to serialize the passed in `TEnum` value to a string using our ""GitHub API strategy"" rather than just `ToString()` (so that we get the ""correct"" string value taking into account property mappings etc)... otherwise something like this was failing in Integration Tests:This is because when `ToString()` was used, the `StringEnum.Value` property was ""Plus1"" when it needs to be ""+1"" in order to match the true `StringEnum` as returned fro the API call (due to the custom `[Property(value=""+1"")]` attribute on those enum values, to map the GitHub api string to our eunm name).With the DeserializeEnum and SerializeEnum changes I've just pushed up, I now have a bunch of integration tests working without needing any code changes.Given the nature of these changes, I'll look at getting a full integration test run done as part of merging this PR (the CI builds dont run integration tests)",,,,,,
298228795,1595,Issue,Ive now run all the integration tests on this branch and confirmed everything is good :+1:,,,,,,
298423077,1595,Issue,"Nice! Thanks for correcting my sloppy work,  :wink: Hopefully the solution will be easier to build (and run the full test suite) once the migration to SDK-based csproj goes through. Right now, it failed to load a couple of projects etc., to it wasn't straight forward to just run the full test suite.",,,,,,
299154018,1595,Issue,I rebased this branch to resolve a conflict. You should probably do a pull before you start work on it üòâ,,,,,,
299155714,1595,Issue,lol I already had done some work locally but all good... ive pushed up the convention test for the Parameter attribute on enum members,,,,,,
299158226,1595,Issue,"I'm thinking about changing the names of the values in `StringEnum` to `Value` (parsed) and `RawValue` or `StringValue`. People would generally be interested in the parsed value, and not the string value. It makes sense to change the parsed value property to something shorter. What do you think?",,,,,,
299169709,1595,Issue,Yes I was thinking the same about having maybe `StringValue` and `Value`.  Although I do wonder if it's too much of a surprise for a property called `Value` to potentially throw an exception?,,,,,,
299179553,1595,Issue,"Although I do wonder if it's too much of a surprise for a property called Value to potentially throw an exception? Well, that's more or less what it does today, except it'll throw when deserializing. We've essentially deferred throwing to the call site.With this PR, the situation has improved, because the user can now use the `TryParse` method once they get an exception, without waiting for a new Octokit release with the new values.What we _really_ want. is steer people *away* from the `Value` (and `StringValue`) properties and over to the `TryParse` method. That's the only way the API will be ""future proof"" when new enum values are added. The question is; how do we accomplish that?",,,,,,
299190404,1595,Issue,"Yeah agree it's better than current explosions üòÅ In terms of getting people over to using `TryParse` I guess the most we can do is update some doco/examples with some guidance (and perhaps write our integration tests that access enums in the same way we would expect others to access enums).The problem for me is that I personally find `out` vars a real ugly pain and feel like they hamper efforts to have clean/elegant code when you have to declare the variable on a separate line etc... but that is obviously the standard way c# handles these type of things currently (in c# 7 there is an inline `out var` option i believe, and of course tuples to think about, but for now it seems TryParse is the way to go, and at least people have an option in their own control to deal with unknown API response exceptions without having to wait for a new release that added the new enum members",,,,,,
299191293,1595,Issue,"Yes, with C# 7, you have the following alternatives:or, if we add `Destructure` extension methods to `StringEnum`:I'm not sure which I like/loathe the most üòù",,,,,,
299466232,1595,Issue,The only enum left is `Language`. It's pretty hairy and I'm thinking about just adding it to the ignore list for now. What do you think?Language probably shouldn't be an enum in the first place because enums are for (more or less) fixed sets. Languages are definitely not a fixed set üòõ,,,,,,
299592365,1595,Issue,"‚ù§Ô∏è Awesome pickups  on those enum values that have been incorrect forever üòõ So as I see it, now we have `[Parameter()]` attributes on all the enums so now we can take the bold step of removing the magic ""eat hyphens and underscores"" in the deserializer to truly cement this change and make sure we are obeying only the explicit parameter definitions.But in order to do this, literally EVERY response/request enum must have the attribute, so that means we either have to get `Language` done too, or we turn it into a string.  I guess from a search request perspective, we want to give users a helpful hand in letting them pick from nicely named languages, rather than needing to know the exact string/case the API wants, so I think there is value in providing it as an enum.  But Im thinking perhaps this would be a case where if we make it a StringEnum on the Rerquest model, users also have an option to provide a string value (if the API has a language we dont yet support)",,,,,,
299740445,1595,Issue,"Not sure how we missed it but `StringEnum.Equals` was comparing itself to itself, rather than itself to `other` LOL!Luckily it was causing an integration test for Repository Migrations to fail (the test creates a migration and loops until the status is Exported (a StringEnum value) but the test was not waiting for the correct status due to the StringEnum Equals comparison not actually comparing against the ""other"" value)",,,,,,
299740974,1595,Issue,"I changed the SImpleJsonSerializer to get rid of the magic hyphen/underscore eating, and have run all integration tests locally, so Im going to push those changes up.The few remaining things I want us to tackle on this PR aresort out Language enum (I'm keen to not exclude it from the tests and even change the Request model to use `StringEnum` Consider if we want to add Destructure extensions for c# 7 (may as well, right?)Write up a doc page about how octokit now deals with enums and how consuers should be accessing themIll add a TODO list to the first post",,,,,,
299889086,1595,Issue,"Not sure how we missed it but `StringEnum.Equals` was comparing itself to itself, rather than itself to `other` LOL!Ouch. That's embarrassing... Good catch! üòñ Sort out `Language` enum (I'm keen to not exclude it from the tests and even change the request models to use `StringEnum Consider if we want to add Destructure extensions for C# 7 (may as well, right?)Yeah, I figured I'd stay away from C# 6/7 features for now. There's quite a few things that could be simplified, but I think that should be a separate PR :smile:",,,,,,
300757296,1595,Issue,"I'm keen to help to get this one across if that's OK.For the `Language` stuff, my understanding is as follows: - We have to decorate every member with a `Parameter` attribute, to follow what  has been doing for the other enums - Change all the request/response types that use `Language` to use `StringEnum` - Stop treating `Language` as a special case in the convention testIs this correct?",,,,,,
300757476,1595,Issue,Yep!  Sounds about right :+1:,,,,,,
300758333,1595,Issue,"Looks like it's only the Search related requests, as other places that deal with language (eg responses for repositories, repository languages, gists) are already just using strings.",,,,,,
300761823,1595,Issue,Do we also have to change the serialization code to indicate how to serialize `StringEnum` instances?,,,,,,
300762003,1595,Issue,"Do we also have to change the serialization code to indicate how to serialize `StringEnum` instances?I'd expect the serializer to just fall back to a call to `ToString`, which should give the correct value, but we have to verify that üòÑ",,,,,,
300767506,1595,Issue,"I'd expect the serializer to just fall back to a call to ToString, which should give the correct value, but we have to verify that üòÑI just noticed that search request models explicitly define how they're serialised through the `MergedQualifiers` method.",,,,,,
301292773,1595,Issue,OK so based on our conversations in  we are going to leave the `Language` enum alone for now... so I think this PR is done from a dev point of view.   are you sure we dont want to add destructure extensions now?  The last thing to do is write up some doc/guidance about how we handle response enums (and see whether any existing doc/samples should be changed),,,,,,
301618278,1595,Issue,are you sure we dont want to add destructure extensions now?I think we can manage without them and potentially add them with a big C# 7 upgrade PR later.,,,,,,
303083793,1595,Issue,LYW! :+1:,,,,,,
303088954,1595,Issue,"Awesome, I think we're done in terms of coding!  just need to get something written up in docs about the new enum usage",,,,,,
307085844,1595,Issue,"Finally got some time to knock up a quick doc file on using `StringEnum<TEnum`, if you guys can take a look and make any suggestions/corrections!",,,,,,
307623186,1595,Issue,"LGTM , thanks for taking the time to do this.",,,,,,
307971464,1595,Issue,Didn't see this until now. Looks really good! :heart:,,,,,,
310765608,1595,Issue,"Ok so I finally got my test account banning/flagging issues sorted and ran through all integration tests... Lucky too, as there were 2 event states that use a hyphen rather than underscore that I picked up Appveyor isn't posting back to github for some reason but [it did complete successfully] so I'm going to merge this shortly :+1:",,,,,,
310892345,1595,Issue,Thanks  for your work on this!![LGTM],,,,,,
310985464,1595,Issue,Thank you! ‚ù§Ô∏è,,,,,,
323478670,1595,Issue,"release_notes: Provide a robust way to handle unknown enum values returned by GitHub API, to prevent deserialization errors until the enum values can be added to octokit",,,,,,
323514865,1595,Issue,This was a fun PR! :heart:,,,,,,
297648211,1594,Issue,"What about making `EventInfo.Event` some kinda union type between `string` and `EventInfoState`. It would just be a simple wrapper around a `string`, but would allow you to call something like `TryParse(out EventInfoState)` to get an enum version. That way, if the event type is new (missing from the enum), you could still handle it as a string, and it won't blow up when new types are added.The type could also have an implicit conversion to `EventInfoState` that would continue to throw if the value is invalid. This would make it (more or less) backwards compatible.",,,,,,
297649705,1594,Issue,"And RemovedFromProject event -- dotnet/roslyn issue 35, after local fix to address AddedToProject ...I like your idea to not hardcoding all events, make the list more resilient ... but of course I know near 0 about Octokit.net design ;)",,,,,,
297651657,1594,Issue,"Yeah, #1591 should fix these. But given how often new events are introduced I really think deserializing to `string` with more flexibility for callers to then map it to something is a more sane long-term strategy for this area ü§î .",,,,,,
297652513,1594,Issue,Thanks for the link to the PR. I just hit 'MovedColumnsInProject' ... I will grab the list from the PR ;),,,,,,
297675932,1594,Issue,"We had a sort of proof of concept of a way to handle this in #1504 which essentially would see all response enums contain an extra member (eg `OctokitUnsupportedValue`) that could be used when encountering an unknown value, whilst also exposing a `string xxxxxRaw` property containing the unparsed api return value.  But it didn't necessarily feel quite right so I hadn't pushed it too hard.  I do quite like the elegance of 's suggestion above",,,,,,
297676133,1594,Issue,"Had to run out for lunch, but I may or may not have a PR brewing, using something likeIt's basically a drop-in replacement of the existing enum, with no additional code changes necessary because of the implicit conversion.",,,,,,
297676274,1594,Issue,Even better :+1:,,,,,,
298180935,1594,Issue,Closing this since the specific missing properties is resolved in #1591 and the ongoing improvements to handle Enums in a more resilient fashion is in #1595,,,,,,
298181777,1594,Issue,"Great, thanks!Out of curiosity: What is cadence for your NuGet alpha releases? Last nuget.org alpha build is from January. I'd like to know when I can stop using the project-to-project reference. Not a high pri ... but would be nice.If there is anything I can help with to release new alpha version, please let me know. If it is not over my head or super-costly, I will be happy to help.",,,,,,
298182215,1594,Issue,So we don't currently regularly release alpha packages to nuget... that one release was actually a special case to expose our dotnetcore port to a wider audienceYou can add the appveyor CI feed to your nuget settings and pull packages from there if you need My plan is once we've merged the dotnetcore and CAKE build script (should be soon) we'll look at automating pre release packages pushed to nuget on each PR merged to master,,,,,,
298182841,1594,Issue,"ok, I'll use the AppVeyor CI feed (I think I already added it anyway, then I realized it is not fixed either there yet ;-) - I just forgot about it ...)Thanks!",,,,,,
297557812,1593,Issue,so there's no need to also remove `Octokit.Reactive` from these files?,,,,,,
297579805,1593,Issue,"I didn't hit any issues with that one, so erred on the side of minimal changes as always :) Just verified on another fresh install: no issues as far as I can see.",,,,,,
297580055,1593,Issue,"cool, I'll take this in then. Thanks!",,,,,,
297580646,1593,Issue,<3,,,,,,
323478346,1593,Issue,release_notes: Remove unused Rx-Main dependency from LINQPad samples,,,,,,
297231674,1592,Issue,"Yeah, this is a convenience thing. Since there's also a bug restoring Rx-Main right now, Weird. Would love to hear more about this one - I gather it's because Rx-Main is unlisted and we haven't had a chance to land the migration to `System.Reactive`, but restore shouldn't be affected by that.",,,,,,
297231952,1592,Issue,^ the LINQPad experience :),,,,,,
297232733,1592,Issue,"Of course, because LINQPad doesn't know about specific versions...![]Yep, burn those references to the ground   :fire: :fire: :fire: :fire: :fire: :fire:",,,,,,
297374103,1592,Issue,Done: PR is #1593,,,,,,
297205461,1591,Issue,:thumbsup: all seems reasonable. I'll let  or someone else have a look before I merge it.,,,,,,
297238234,1591,Issue,üëå,,,,,,
298177673,1591,Issue,![LGTM],,,,,,
298182931,1591,Issue,FYI: I have validated the changes on all dotnet/Roslyn repo. All 3 cases I hit there  were addressed by this list.,,,,,,
323477978,1591,Issue,release_notes: Fix even more `IssueTimelineClient` deserialization exceptions by adding even more new `EventInfoState` values (this is getting old!),,,,,,
297047167,1590,Issue,"This sounds really weird.Can you post more details (eg the type of application and whether this is during a single application life cycle or across separate program executions) and also the exception and stack trace details of the initial exception and also the one ""after connection restored""?",,,,,,
297049890,1590,Issue,"This happens in one life cycle. Restarting the program after the internet connection is makes everything function perfectly again. It's a very basic console application that takes some data from github and interprets it for some data analytics purpose. It all works perfectly fine when the internet connection is never interupted.The problem seems to be an AuthorizationException. I tried setting the credentials again when connection was restored, but that did not fix the problem. I also tried re-creating the entire GithubClient object when internet connection was restored, but that also did not fix the problem. See the attached screenshot.",,,,,,
297068244,1590,Issue,"Nevermind, a unit test I had written was interfering and changed the API key. There's nothing wrong...",,,,,,
296410408,1589,Issue,"it's a pre-release package, so you'll have to provide `-Pre` to install [this version]",,,,,,
296352590,1588,Issue,"Welcome  - thanks for contributing to octokit!  I'll mark up a few quick ""house keeping"" things in a review, but it looks like you'll need a bit of guidance about the API request/response models etc as I can see a couple of things that are going to trip things up",,,,,,
296352978,1588,Issue,"In terms of more structural things, there are 2 main things i've spotted so far- With the response models, it looks like you are creating a `PullRequestReviewCreate` model for the return of this call, however my take on [the api docs] is that this call actually just returns a `PullRequest` object.  So in this case I don't believe we need a new response model, it should just use `PullRequest`.  However it looks like we DO need to include some new fields on the `PullRequest` model (namely the `IReadOnlyList RequestedReviewers` property).- There are usually ""undocumented"" api endpoints for each call that has a repository specified...  The traditional/documented calls are for owner and name, but there is usually another one taking the `long repositoryId` instead - refer #1120 for more details.  If you take a look at some other pull request related calls you should see the `repositoryId` based calls and what the ApiUrl formatting looks like.  As part of making this change we need to implement the `repositoryId` versions of these calls (unless for some reason it turns out they arent supported... the only way to tell is to probe the github api and see if they work!)",,,,,,
297559559,1588,Issue,"RepositoryId work, I have just checked them and added methods for them in code.I have a problem with the delete methods. According to the docs it should only return appropriate result code, but in practice it does return an object similar to the create method. Should I stick to the docs and return `Task` or should I return `Task` as this is what is really returned in response?",,,,,,
297567509,1588,Issue,"I have a problem with the delete methods. This one?  According to the docs it should only return appropriate result code, but in practice it does return an object similar to the create method.This seems like an inconsistency - they should be returning `204 No Content` for success. I'll poke around and talk with the team to confirm this is the intended behaviour. Let's not surface the response here and just use `Task`, as long as the status codes are reliable enough.",,,,,,
299619223,1588,Issue,"One other thing we need to sort out with this new API is whether it supports Pagination or not.  If it does, we need to have overloads for the GetAll methods that take `ApiOptions`",,,,,,
299668442,1588,Issue,I am investigating the pagination support in GetAll method ATM.,,,,,,
300030987,1588,Issue,"This is looking üíé   Thanks for all your work on this... I'll pull it down tonight and run through the integration tests, then should be good to merge üëè",,,,,,
300159171,1588,Issue,"Integration tests are good, although we still need to add the pagination integration tests (eg  )",,,,,,
300767902,1588,Issue,Can you check my latest changes? I've reduced the number of users and adjusted the tests. How do you feel about leaving my test user in the tests? It would be nice to have some kind of `octocatPrime` user for the tests.,,,,,,
301063312,1588,Issue,"OK the test worked for me, i made a couple of tidy ups.  Im having a heck of a time with the test accounts though.  Due to using octocat, my test account got banned/flagged for abuse!  I got in unlocked and tried to create 2 test accounts ""octokitnet-test1"" and ""octokitnet-test2"" to use for these tests but those accounts are also now flagged (eventhough they didnt have any activity).  I managed to get all the tests to pass by using my real username and a friend's real username, but I dont want to check that change in.",,,,,,
301292828,1588,Issue,The 2 test accounts I created (and am using in the integration tests) should be unblocked now and the tests are working for me.  Can I get you to review the changes I pushed up  and let me know you're happy?  Once you give the thumbs up Im good to merge this in,,,,,,
301300271,1588,Issue,LGTM üëç,,,,,,
301308002,1588,Issue,![LGTM]Great work  thanks for contributing this new API implementation to octokit!,,,,,,
323477524,1588,Issue,release_notes: Implement [Pull Request Review Requests API (Preview)],,,,,,
295019497,1586,Issue,From the [integration tests]:Please let me know if there's anything more you want from this endpoint.,,,,,,
295094552,1586,Issue,"Hello, shiftkey!Yes there is no way to get license information about particular repository.Please take a look at my link:",,,,,,
295112910,1586,Issue,"Indeed there are a couple of unimplemented calls that would be under `IRepositoriesClient` endpoint.Would you be interested in making these modifications   ?Firstly, we could have license information included in existing calls that return `Repository` objects.  To do this we need to add the licenses preview API header (`AcceptHeaders.LicensesApiPreview`) in the underlying Http Get requests of those client calls (eg `client.Repository.Get(owner, repo)`) and then add a `License License` property to the `Repository` response class.Secondly there actually is a ""Get a repository's license"" call which you linked to.  This would be suitable as a new call in the `IRepositoriesClient` such as `Task GetLicenseContents();` and implement the `RepositoryLicense` response model (from the api doc it looks like this response may be different to the existing license responses)",,,,,,
295116489,1586,Issue,"Hello ryangribble!Sounds interesting :)If this issue be still active in two weeks, I'll take a look.",,,,,,
294332366,1585,Issue,"could you please review when you have a chance?I assumed from the wording of the associated issue that this only had to apply to the response models. Let me know if you want to expand this to request models, too, it will be a quick change.",,,,,,
294347525,1585,Issue,I reckon we may as well do request models as well,,,,,,
295163847,1585,Issue,"I kicked it and it's Green now... Travis builds seem to be frustratingly flaky üò¢ I'm having second thoughts about the Request models though.  My thinking has kind of come around to the fact that these are meant to be proper Url's so allowing people to pass ""any old string"" may not be great.  Thoughts?I also had a look at other places we use `Uri` type such as some helper functions or the `GitHubClient` itself, and I don't think any of those cases need to be turned to `string`.  So I guess pending a thought on whether Request models should or shouldn't be converted to `string` this should be good to merge.Also obviously this is a breaking change but I think just getting it in and flagging it in the release notes is preferable than waiting out 2 releases with the current properties marked `[Obsolete]` - given our pre 1.0 status I'm thinking that should be OK...",,,,,,
295189970,1585,Issue,"I'm having second thoughts about the Request models though. My thinking has kind of come around to the fact that these are meant to be proper Url's so allowing people to pass ""any old string"" may not be great. Thoughts?Yeah, I'm less into doing this for request models now because of how invalid input might be rejected - we're not doing anything explicit here with validating, but it's still a decent constraint to make callers follow.I can only see `NewCommitStatus` updated here -  how many would change here if we enforced `Uri` on the`*Url` request model properties?",,,,,,
295497641,1585,Issue,"Only 4 request models have `*Url` properties which are not `Uri`, so the change should be pretty quick and easy.One more thing; The current logic to get all the request models is to analyse all the parameters of all the methods on the client interfaces. It turns out that the [`Release`] response model is a parameter of the [`UploadAssetData`] method on `IReleasesClient`.That hasn't been a problem before since the tests always include the response models and we selectively choose if we want the request models.I see a couple of options available here: - a quick hack to exclude the `Release` type from the request model types - as it's done for [`IStatisticsClient`] - duplicate the `Release` type to make it a request model type. This would mean duplicate also the inner types.Any preference, or maybe another idea since I don't have the full picture?*Edit:*So the `UploadAssetData` method only uses the `UploadUrl` property of the `Release` object it takes as a parameter. If you want to be strict about request/response models separation, the method could take only the tokenized upload URL of the release instead of the whole object.",,,,,,
296073189,1585,Issue,"I have a couple of commits ready to go that implement the first option, that is the `Release` type is excluded from request model types.Here are the changes that'd br brought in should you decide to go ahead with this approach:",,,,,,
296163644,1585,Issue,Those few request models seem ok to me... I'd be interested in what currently happens if a user provides a string that is NOT a properly formatted Url for those properties... If the upstream API rejects it anyway then it's a no brainer to enforce the Uri on our side. If they are somehow allowed through then we'd need to think about whether we want to potentially prevent users from doing something they could be doing currently,,,,,,
296419748,1585,Issue,"Here's what I found out: - `AuthorizationUpdate.NoteUrl` and `NewAuthorization.NoteUrl` are both optional properties and will accept any `string`; I called the API endpoints with a value of `not a URL` and the calls succeeded - `NewCommitStatus.TargetUrl` needs to use the `https` scheme, but doesn't necessarily require a valid Uri; the API rejected `not a URL` but accepted `https://not a URL` - which will throw if used in `Uri` ctorI didn't know how to test the properties on `NewDeploymentStatus` as I couldn't figure how to create a deployment in the first place despite the [associated API documentation]",,,,,,
297186728,1585,Issue,"quick update on thisI played around with the deployment status API. and `NewDeploymentStatus.EnvironmentUrl` are only enforced to start with `https`, but can be invalid Uri - like `https://not a URL`.Going from there, I would suggest: - leaving `NoteUrl` on `AuthorizationUpdate` and `NewAuthorization` as `string` since the API will accept any value - leaving `TargetUrl` on `NewCommitStatus` as `string` since a valid Uri is not enforced - it just needs to start with `https` - leaving `LogUrl` and `EnvironmentUrl` of `NewDeploymentStatus` as `string` for the same reason as above",,,,,,
297238655,1585,Issue,I like those suggestions üëç,,,,,,
297248213,1585,Issue,"Cool, thanks.I still kept the integration test which checks that request models have `*Url` properties of type `string`, but excluded the types we talked about earlier from it.Is that fine by you or would you rather not check request models at all?",,,,,,
297249677,1585,Issue,Is that fine by you or would you rather not check request models at all?This is fine - it's good to be explicit here.,,,,,,
297254239,1585,Issue,"I *think* the AppVeyor build failed because the NuGet v2 feed is experiencing issues![nuget-v2-down]I don't know how the Travis one passed, though. Local NuGet cache?",,,,,,
297561697,1585,Issue,"Could one of you trigger a new AppVeyor build?If it's green and you're happy with the current state of the PR, I think this is good to go.",,,,,,
297565062,1585,Issue,You should be able to trigger a new build by rebasing this branch,,,,,,
297566749,1585,Issue,i got you,,,,,,
297569206,1585,Issue,"Thanks! :+1:  Forgive my ignorance, could you explain a bit more? I usually add an empty commit when I want to do this, but keen to learn if there's a better way.",,,,,,
297572206,1585,Issue,"If you rebase this branch, `mderriey/1582-change-model-url-properties-to-string`, on top of `octokit/master` and force push, it should trigger a new build. This PR would probably be a good exercise for squashing as well üòâ",,,,,,
297677694,1585,Issue,"Since GitHub introduced the ""squash"" action directly when merging PR button ‚ù§Ô∏è ‚ù§Ô∏è I never bother to explicitly squash the branch anymore üòõ SO in terms of the Request models Im just trying to catch up here... did we end up with ANY of them needing to be `Uri` or did they all end up being `string` because the upstream api does accept non Uri's?  If there are no real examples of existing request models that must be Uri we probably shouldn't have the convention test since it would stand to reason that future api calls implemented would likely follow the same upstream behaviour (and thus we should use `string` rather than `Uri` in future too?)",,,,,,
297681754,1585,Issue,"Here's how it went: - After the convention test was created, 3 types were found having `string` properties - Calling the API endpoints associated with these types showed that they didn't need to be `Uri` as, well, the upstream API doesn't enforce valid URLs - The convention test was modified to add those 3 types as exceptionsIn other words, all the request model types but these three have `Uri` properties. I don't know the API well enough to determine if the other request model types should have `Uri` properties.",,,,,,
298155874,1585,Issue,"Thanks for the recap  .  So i pulled down your changes and played a bit and actually there are NO other Request models with Url properties except the ones you've excluded anyway.  So im thinking how about we actually change the test to ""RequestModelsHaveUrlPropertiesOfTypeString"" and enforce that we use strings for these.  Given that the only existing 4 request models with these properties are all accepted as strings upstream anyway it seems likely that future upstream API fields would be similar.",,,,,,
298156932,1585,Issue,"Haha,that's funny. I hadn't looked that closely. Thanks for that. Maybe the tests should only test types that do have `*Url` properties...Since it's only the excluded types, maybe we can go back to the scenario we had at some point with one convention test checking request and response model types at the same time? Would that work or would you prefer having two separate tests?",,,,,,
298157506,1585,Issue,"Maybe the tests should only test types that do have *Url properties...Yeah i guess at the moment the `MemberData` is all response types which does artificially inflate the test cases needlessly...  It's fine if you want to write a new function that only gets models that DO have the property that `EndsWith(""Url"")` if you want toSimilarly, it's fine if you want to combine back to one test case that does Request+Response models, or to leave it as is :+1:",,,,,,
298159114,1585,Issue,I went with: - filtering the test input to get only the types that do have at least one `*Url` property - merge back the tests into one,,,,,,
298228948,1585,Issue,"Thanks  this is looking üíé now, Ill hit the button",,,,,,
298228967,1585,Issue,![LGTM],,,,,,
294301403,1584,Issue,"Aha, the check comes. I'm fixing it now.",,,,,,
294317199,1584,Issue,"and  I have done removals of some obsoleted methods, and also checked the unit tests. Please review üôÇ **Update 1:**One thing is, the build on travis CI failed. I couldn't find the cause. Do you want to be fixed or checked?",,,,,,
294324586,1584,Issue,"Thanks  I will have a review this long weekend but just a note on those last couple of commits.  I think those tests can be completely removed as there should already be tests for the `Repository.Branch.Get/GetAll` methods in the appropriate file, so the tests in the RepositoryClientTests wouldnt be needed anymore since those methods are now removed from `RepositoryClient`.  Let me know if I'm not making sense, I'm on my phone üòõ",,,,,,
294330202,1584,Issue,"Thanks  ! üôÇ Yes, I agree about the tests removed. I think I can remove those tests on a separate PR.I'll move on to next PR to remove those test after you finish reviewing this PR. Have a good weekend! üëç",,,,,,
294347451,1584,Issue,"It looking pretty good, but the obsolete RepositoryContentsClientTests tests should be removed on this PR too, not much point in doing 2 PR's for the one change",,,,,,
294472987,1584,Issue,"Thanks for your reply,  OK, in this PR I will add more commits that remove the obsolete RepositoryContentsClientTests unit tests.",,,,,,
311046923,1584,Issue,Superceded by #1622,,,,,,
312161892,1584,Issue,already done? apologize for the long delay. thanks for the update!,,,,,,
294284177,1583,Issue,You'll want to use the `RepositoryContentsClient` in octokit  One good source  of sample code is the integration tests eg this one retrieves the contents of a folder:,,,,,,
524056513,1583,Issue,You want to use this call:  octokit.repos.getContents(dirContentsConfig);Here is a reference to the documentation: Here is some code that will print the files found in that directory and other folder metadata.,,,,,,
294257925,1582,Issue,Or maybe they should just go back to `string` if we're not getting anything from using `Uri` due to the increased allocations?,,,,,,
294258075,1582,Issue,"+1 on consistency, and a selfish +1 on strings (for performance reasons). I'd value consistency more overall, though.",,,,,,
294273264,1582,Issue,"I'm happy to do this.Would you rather have them as `string` or `Uri`?So far, 43 classes have at least one property named or suffixed with `Url` that are not `Uri`.On the other hand, 27 classes have at least one property named or suffixed with `Url` that are all typed as `Uri`.",,,,,,
294275478,1582,Issue,I really don't think we're getting much out of returning `Uri`s - and they're boring enough that the caller can `new Uri()` the result if they need it explicitly.Let's make them all `string`.,,,,,,
294275857,1582,Issue,"Sounds good. You could also add a convention test ,  to keep us consistent going forward :D",,,,,,
294282755,1582,Issue,"Cool, will do!",,,,,,
298240384,1582,Issue,\o/ thanks  and !,,,,,,
293426176,1581,Issue,![]Is there any particular feedback you need from me?,,,,,,
293532332,1581,Issue,"Nothing specific, unless you can spot anything I've missed!",,,,,,
298616059,1581,Issue,I'm confused. How can there still be conflicts when `master` was just merged into `dotnetcore`? Have I not done what I think I've done?,,,,,,
298616341,1581,Issue,Could it be be because it squashed the PR instead of merge maybe?,,,,,,
298617579,1581,Issue,"Right, that makes sense. I think it does. So this happens because we lost the merge commit from `master` to `dotnetcore`?",,,,,,
298629821,1581,Issue,"Ive pushed a merge commit and the conflicts aren't showing now.  It's interesting because locally the only 2 files on the merge were 2 csproj files, yet the github web interface was claiming conflicts in the linqpad files as well.  ü§î",,,,,,
298654325,1581,Issue,"FYI I've pushed a PR to do the mentioned doc updates (and as it turns out, a few more cleanup type tasks).  Once #1600 is merged into dotnetcore, we should be good to hit the button on this PR!",,,,,,
299174192,1581,Issue,"OK people, I'm going to do it... see you on the other side üòÅ ![LGTM]",,,,,,
299175232,1581,Issue,![]],,,,,,
295157386,1580,Issue,Anyone able to take a üëÄ to check what I've done seems sensible?,,,,,,
295189791,1580,Issue,![LGTM],,,,,,
323476546,1580,Issue,release_notes: Fix `connection.GetLastApiInfo()` was returning `null` in some situations,,,,,,
293230399,1579,Issue,The `MarkAsReadForRepository()` methods suffer from the same problem.  I wrote some integration tests and found they also are failing.Pushing up fixes now...,,,,,,
293246152,1579,Issue,"PS, there are also a handful of other API clients where `PUT` is called without providing a body.  I'll do some poking to see if this also causes HTTP 400 errors and follow up on a separate PR if fixes are required",,,,,,
293532639,1579,Issue,If someone can give this a quick üëÄ I'll hit the button,,,,,,
293746117,1579,Issue,:shipit:,,,,,,
323476235,1579,Issue,release_notes: Fix `NotificationsClient.MarkAsRead()` exception by specifying a payload body in the `PUT` request,,,,,,
292860220,1578,Issue,"Weird - [the source] looks rather mundane, and the endpoint also seems boring:",,,,,,
292952442,1578,Issue,yes it's definitely weird,,,,,,
293167046,1578,Issue,"Ive poked around with this, and it looks like the `last_read_at` parameter is required.  Not sure if this is a recent thing or it's always been like this, as there are no integration tests for this method currently.For now, you can call the method using the following code and it should work OK (specifying no time in the `MarkAsReadRequest` passes null for the argument)The easiest fix for this would be to change the parameter-less `MarkAsRead()` implementation to simply do `return MarkAsRead(new MarkAsReadRequest())`",,,,,,
293178544,1578,Issue,"Not sure if this is a recent thing or it's always been like this, as there are no integration tests for this method currently.Sigh. I'll check it out. Thanks for digging into it !",,,,,,
293188558,1578,Issue,"I think this would be an uncommonly used method, so there's no telling how long it may have been like this for upstream (possibly forever?!)",,,,,,
293217870,1578,Issue,"If you PUT with an empty JSON object you get the correct behaviour without having to specify anything in the payload. And I'm pretty sure that PUT without a body isn't typical HTTP behaviour (the server may think ""you haven't given me an entity to update, what am I supposed to do here?"" and returning a 400 like it's doing here seems reasonable).Anyway, #1579 should fix it",,,,,,
290983624,1576,Issue,"Im not sure of the historic reasons, but it looks like there are 12 places where the `response.IsTrue()` is guarded by a try/catch that eats the exception and returns false instead.  For consistency, if they are to be changed I'd like to see them all changed.Im also not sure how to treat this behavioural change as some consumers could be impacted by exceptions being thrown when previously they received a `false` return.  Although it does seem the exceptions would only occur in true error situations, since a response of 404 or 204 will cause `false`/`true` to be returned.Any thoughts   ?",,,,,,
290984155,1576,Issue,"Actually of those 12 instances it looks like all but 2 are actually using `catch (NotFoundException) { }` as opposed to `catch { }` The former is ""correct"" because it will have the logic that a HTTP 404 (NotFound) will return `false` a 204 (NoContent) means `true` and any other status (like your authorization exception) will be thrown.So rather than how you've changed it in this PR, if you just make the `catch` be for `NotFoundException` only, that should achieve the desired result.  If you could also fix up the [the other one] while you're at it, that would be swell!FYI there are also 40-50 matches of other code/methods where they check for a HTTP 204/404 for success only they dont use that handy `HttpResponse.IsTrue()` extension method :grinning:.  Looking at most of those it looks like they are also behaving ""correctly"" in that a `true`/`false` return results on a 204/404 and an exception on any other status code...",,,,,,
290992743,1576,Issue,Sounds fair - I'll change it.,,,,,,
291024401,1576,Issue,"I'm not across the history of the `.IsTrue()` extension method - it does seem to look functionally correct:But it does overlook that the underlying connection will raise an exception before the caller has had a chance to look at the response:So the try-catch is still necessary, but it should be more granular and only look for the `NotFoundException`.",,,,,,
291052478,1576,Issue,I have reintroduced the try...catch blocks but this time only for NotFoundException. I did it in both the Add methods as requested.,,,,,,
291119588,1576,Issue,Great!  Thanks,,,,,,
291119966,1576,Issue,![LGTM],,,,,,
291122790,1576,Issue,ugh so I was giong to merge this but the builds are actually red üò¢,,,,,,
291127406,1576,Issue,"Yes, I saw that but I convinced myself it wasn't due to the changes in this PR. Partly because #1571 fails the exact same way, partly because it loos like something related to .net core?",,,,,,
291129558,1576,Issue,"Yeah that was just a demonstration project anyway and it seems the appveyor image and dotnet core tooling doesn't like it anymore. Will be superseded by our proper dotnet core port soon anyway, so ive removed it from master for now Thanks!",,,,,,
291129929,1576,Issue,No - thank you :),,,,,,
290613475,1575,Issue,the reason is they're two different code paths (and that we don't look at the exception for the second one): -  - I gather surfacing the `AuthorizationException` is probably the better thing to do here - if you're keen to contribute a fix I can guide you through the process.,,,,,,
290618332,1575,Issue,"I would very much like to look at doing a fix. I see you have a ""How to Contribute"", but if you have further information I'd like it - this being my first time ;)",,,,,,
290620530,1575,Issue,"If you've got VS2015 installed, you should be able to just open the solution and build it locally.There's a bunch of additional things in our [CONTRIBUTING.md] docs - running tests, etc - and this [overview] of the code is probably helpful.",,,,,,
290631257,1575,Issue,I'll give it a shot - thanks,,,,,,
290335478,1574,Issue,"OK so this worked üòÄ üéâ But I'd like to make a couple of enhancements - [ ] Ability to run sourcelink on local buildsBy default sourcelink is running only on CI server.  Ill add a cake parameter allowing us to run sourcelink locally if required.  When this parameter is passed to Cake, we can set `/p:ci=true` parameter on the DotNetBuild task which will cause sourcelink to run.  Not sure what other side effects of setting `ci=true` are though...  Alternatively I can investigate how to control running sourcelink or not with a specific parameter maybe...- [ ] Show sourcelink output in build script outputCurrently the log doesnt show any of this output unless you set verbosity (passing `/v:n` to the build task).  But that of course shows HEAPS of other output when ideally there would be a way to just see the sourcelink info (or even just the result of `dotnet sourcelink test`). Let me know if there is anything like that  or whether I have to go with verbose mode?",,,,,,
290340779,1574,Issue,That's great !,,,,,,
290578451,1574,Issue,"Ability to run sourcelink on local buildsBy default sourcelink is running only on CI server. Ill add a cake parameter allowing us to run sourcelink locally if required. When this parameter is passed to Cake, we can set /p:ci=true parameter on the DotNetBuild task which will cause sourcelink to run. Not sure what other side effects of setting ci=true are though... Alternatively I can investigate how to control running sourcelink or not with a specific parameter maybeYou could set the environment variables or msbuild properties of `CI` or `SourceLinkCreate` to `true`. They are not case sensitive. See [this code] for details. Show sourcelink output in build script outputCurrently the log doesnt show any of this output unless you set verbosity (passing /v:n to the build task). But that of course shows HEAPS of other output when ideally there would be a way to just see the sourcelink info (or even just the result of dotnet sourcelink test). Let me know if there is anything like that  or whether I have to go with verbose mode?2.1 will be a lot less verbose. It will not print all the source files. I'll probably publish to NuGet Gallery the [latest prerelease] soon if it passes tests.",,,,,,
290607608,1574,Issue,SourceLink 2.1.0 is out :-),,,,,,
290976865,1574,Issue,"2.1 will be a lot less verbose. It will not print all the source files. I'll probably publish to NuGet Gallery the latest prerelease soon if it passes tests.I didnt mind the verbosity of the sourcelink output itself, the main problem was since it's part of the ""build"" task, when I set verbosity I got loads of build related output from MSBuild (when i really just wanted the sourelink output).For the time being ive actually removed the builtin MSBuild sourcelink test, and running my own cake task to do a sourcelink test on the produced assemblies, so our build output shows that sourcelink was verified.",,,,,,
290984341,1574,Issue,"Builds are green, I'm happy if you are :+1:  From the appveyor build log:TravisCI:",,,,,,
290986232,1574,Issue,"You are the first to get it working on Travis! Thanks. I'll look to see how you got msbuild 15 running there. With 2.1, you can also just test nupkg files.",,,,,,
290987302,1574,Issue,"Oh nice!  I'll change my step to run after packaging and use the nupkg files instead, as the way I was getting the dll assemblies was assuming a few things! Regarding travis yeah we had a few hoops to jump  but between  and I we got it working! Most of the magic will be in travis.yml and build.sh and a little in our cake build (running nuget and gitversion via mono)",,,,,,
291020439,1574,Issue,"I don't explain it, but running `dotnet sourcelink test` as part of the Cake build is much much longer than running it directly; When I tried before pushing, it took a good 2 minutes as part of the Cake build, and maybe 4-5 seconds from a PowerShell console. do you see the same behaviour? Is it worth looking into it?",,,,,,
291021331,1574,Issue,"Hmm, must be something with my machine, it took ~40 seconds on AppVeyor and Travis CI.",,,,,,
291021815,1574,Issue,It is literally downloading all the source files 1 by 1. I added an `up for grabs` to [speed this up]. How fast is your internet connection compared to AppVeyor and Travis CI?,,,,,,
291022318,1574,Issue,"Yeah it did take a noticable amount of time but as  said it is checking each file on github's checksum against that stored in the embedded pdb so it was expected.  it seems to be faster on the subsequent assemblies so I'm guessing some caching must be involved?Also when comparing to previous builds Im not sure if the SourceLink.Test msbuild target was even actually running once  introduced the `SourceLinkCreate` msbuild parameter setting.  From the brief look I had, the `CI` parameter would run create and test actions, but the `SourceLinkCreate` parameter only controlled creation, and a separate `SourceLinkTest` parameter controlled the testing.  [See here].",,,,,,
291023439,1574,Issue,"in this case, I'm using a 100Mb/s link. you're right, I don't think it was, and this was intentional. I like the fact that we're explicitly testing that source linking works. Do you prefer running it as part of the `dotnet build`?If not, I'm happy with the current state of things üòÉ",,,,,,
291024269,1574,Issue,"Do you prefer running it as part of the dotnet build?I prefer running it separately as I liked the idea of seeing output/validation of the sourcelink data.  Perhaps in the future if the msbuild sourcelink test target can log the ""sourcelink test on xxxx succesful"" when msbuild logging verbosity is the default, then we could remove the explicit step, but for now im happy!",,,,,,
291024469,1574,Issue,"One other thing I just thought about... when you run sourcelink test ""before pushing"" it gets 404 failures because that commit hash doesnt exist on github.com.  So perhaps that is the reason for seeing execution time take longer locally",,,,,,
291024678,1574,Issue,"I thought about that, too, I pushed before running it locally as the sourcelink test passed. It's not a big deal, really, I thought it would also take a long time on CI, but it turns out it's not, so it's not really an issue IMO.",,,,,,
291027376,1574,Issue,![],,,,,,
291027436,1574,Issue,release_notes: Provide [SourceLink] capability for Octokit and Octokit.Reactive assemblies,,,,,,
290010473,1573,Issue,"It will be merged back into #1567, closing.",,,,,,
289911479,1572,Issue,"Unfortunately not.The [docs] for doing OAuth without the web flow involves signing in with basic authentication and creating an authorization on behalf of the user. But that still requires their input.Alternatively, if the user can provide a personal access token you can use that for credentials and get a higher rate limit - however it's not associated with your application.",,,,,,
289922000,1572,Issue,Thanks for getting back Brendan. That's unfortunate.We are building a [chatbot] to interact with GitHub and were hoping it could scale to more than 60 queries per hour. Do you think creating a personal access key to be associated with the application so that it can have its higher rate limit would be a good idea?,,,,,,
289929517,1572,Issue,"Do you think creating a personal access key to be associated with the application so that it can have its higher rate limit would be a good idea?The OAuth token represents the relationship between a user and an application - that doesn't feel relevant here as it sounds like you don't need to have everyone authenticate against the application. Personal access tokens are great for testing and prototyping, but they are tied to a real account - combining whatever the real account has access to with [the scopes you give the token]. So there's a concept called ""machine accounts"" which I'll point out here. From the [Terms of Services] page: A machine account is an account set up by an individual human who accepts the Terms on behalf of the account, provides a valid email address, and is responsible for its actions. A machine account is used exclusively for performing automated tasks. Multiple users may direct the actions of a machine account, but the owner of the account is ultimately responsible for the machine's actions. You may maintain no more than one free machine account in addition to your free personal account.What I'd do to simplify things without having to worry about OAuth: - create a machine account, add it as a member of your organization and give it access to the appropriate teams and repositories it needs to get stuff done - generate a personal access token for the machine account, ensuring it has just the appropriate scopes set that it needs - set that token `GitHubClient.Credentials` whenever your chatbot needs to interact with the GitHub APIIt avoids the whole OAuth application setup and management, but it doesn't sound like something you need here.",,,,,,
289939208,1572,Issue,"create a machine account, add it as a member of your organization and give it access to the appropriate teams and repositories it needs to get stuff doneThis is what we've done with our slack bot for releasing Octopus and it works well! üòÑ",,,,,,
290985075,1572,Issue,"Agree that a ""machine account"" with a personal access token sounds like the way to handle this.  We also have a release/helper bot that uses this approach.Im going to close out this issue but feel free to comment further or re-open if you need to",,,,,,
290999222,1572,Issue,Thank you all for your help. We set up a machine account for the application and are achieving our higher rate-limit.,,,,,,
289567389,1571,Issue,Hi  can you please explain why this should be reverted? Thanks,,,,,,
299198283,1571,Issue,"dotnetcore is now merged, so these projects/solutions no longer exist",,,,,,
289252467,1570,Issue,Glad you figured it out! It'd be good if you could leave the issue here and update with the solution incase others run into the same situation,,,,,,
289252574,1570,Issue,"I simply made an implementation mistake, so it didn't have value. Sorry for the bother.",,,,,,
287956593,1569,Issue,please review.,,,,,,
290611726,1569,Issue,any updates on this? Do you want me to wait for other work in progress to be completed before approving and merging my PR?cc,,,,,,
290615243,1569,Issue,I don't think so. Thanks for the contribution!![],,,,,,
290678219,1569,Issue,"You're welcome,  üëç",,,,,,
290984418,1569,Issue,Sorry for the delay on this one  I was planning on just running the integration tests but hadnt had time.  Can pick it up on the next release anyway.We actually need to remove all the obsolete items from -2 releases ago,,,,,,
290986204,1569,Issue,no problem! üôÇ I'll try to fix the remaining obsoleted items in a separate PR. Or do you want me to wait until you finish your integration test?thanks for the reply üëç,,,,,,
290986978,1569,Issue,No need to wait! That would be great thanks üòÄ,,,,,,
323477218,1569,Issue,release_notes: Remove obsolete constructor of `RepositoryUpdate` request class,,,,,,
287694435,1568,Issue,Here's where we introduced the `Obsolete` rule: And this made it into the v0.23 release - I think this is fine to remove the `ctor` from the next update ! :thumbsup:,,,,,,
287698598,1568,Issue,"Thanks for the prompt response,  üëç  I think this is fine to remove the ctor from the next update ! üëçok, so what do you think is the best? here are the solutions to choose:1. Do you mean to remove the obsoleted parameterless ctor in the `RepositoryUpdate`? Then we will have many changes on the tests, although it is quite straightforward and it's easy to change. It is also easier to check all of the diffs on the PR, therefore it's easier to review.2. Or we could do the otherwise, by changing the usages of all of parameterless ctor by replacing with ctor with 'name' parameter instead. Then we could mark the `ObsoleteAttribute` to always resolved as error instead of just compile warning, to really deprecate this constructor and to tell the consumer of this class to not to use it anymore. For example: `[Obsolete(""Please use the ctor RepositoryUpdate(string name) as Name is a required field"", true)]` (I prefer this solution üôÇ )Let me know what you think, I'll create a PR for any one of those.",,,,,,
287729874,1568,Issue,"After the item ha been marked obsolete for a couple on releases its fine to remove it, so go with option 1 üëç",,,,,,
287857442,1568,Issue,PR #1569  has been submitted.cc,,,,,,
286884050,1567,Issue,"Sweet! Will definitely take a loot at it.I also think xUnit now supports cross-targetting test projects, so we could run them in the `net45` and `netstandard1.1` contexts.Thanks for that.",,,,,,
286884344,1567,Issue,"did you guys have any guidance on ""the best"" way to get the DotNetCorePack Cake task to use the desired version number on the nuget package.  As mentioned in the PR there are a number of possible ways, interested in what ""the standard"" should be",,,,,,
286889781,1567,Issue,Here is an example of setting the desired version number with the new dotnet SDK (1.0.0).,,,,,,
286890073,1567,Issue,I also noticed that you do not include a `NuGet.config` in your `build` directory which you should since Cake.Frosting only exists on MyGet at the moment.Example here:,,,,,,
286908884,1567,Issue,"Once you upgrade to the MSBuild 15 tooling, adding in SourceLink v2 is a piece of cake. I recommend it just being a follow-up pull request. Ping me when this is merged and I can assist. Rx.NET just merged source link support and is [a good example], in addition to the [aspnet mvc PR files].",,,,,,
287048465,1567,Issue,"thanks for advising to go with option 2 for the dotnet core pack üòÄ Although it seems when providing the full version via the `/p:Version=` argument, there isn't any need to also keep the `VersionSuffix` property.We actually [do have a nuget.config already], as we have been using cake.frosting for a while on our previous project.json setup... perhaps you were looking at our `master` branch rather than `dotnetcore` branch?Thanks for the help and again - thanks for cake.frosting it's been going well for us :+1: thanks for the offer of assistance, as you say it's super easy to add sourcelink 2.0 support with the new msbuild tooling - pretty much just plan on copying one of the other PRs you've already done, but we'll certainly let you know if we can't sort it!",,,,,,
287057806,1567,Issue,"OK so appveyor is now building OK but ive been battling with travisCI unsuccesfully, running into a permissions error.  I just realised though that im not even sure if the cake tasks we have would work on linux... we include tools/nuget.exe in our repo and it seems this is picked up/used by the ToolInstaller class in cake script, to install our GitVersion and OctokitCodeFormatter tools.  So if we wanted that to work i think we would need to get the linux compatible nuget.exe and run it via `mono nuget install` on the TravisCI linux and mac boxes... GitVersion.exe is the same thing (can be run via mono i beleive).  our code formatter tool doesnt support non windows platform, but its not actually used in the default build target so would be ok.Potentially with dotnetcore, we dont even need to worry about TravisCI and could just use Appveyor instead...  Thoughts   ?",,,,,,
287147901,1567,Issue,I also think that we can ditch TravisCI. Maybe it was needed before because some specific platform variants had to be built with Mono but it's not the case anymore with .NET Core.,,,,,,
287189105,1567,Issue,"Potentially with dotnetcore, we dont even need to worry about TravisCI and could just use Appveyor instead... Thoughts  ?:thumbsup: especially to drop macOS - not being dependent on those will speed up things significantly!",,,,,,
287601360,1567,Issue,"I checked out the PR base branch, and running `.\build.ps1` worked as expected. The `Package` task created the expected version of NuGet packages. I think you can check this one off.I had a look at how source linking was enabled in both the Mvc repo and [Rx.NET]. Looks very simple. I'll have to dig a bit deeper to understand where the `IsTestProject` property being used.Thanks for that, good effort!",,,,,,
288520254,1567,Issue,Hey  what's left to get this one merged?Do you want to get SourceLink in this one or in a separate one as  suggested?,,,,,,
288860645,1567,Issue,"Hey  what's left to get this one merged? Do you want to get SourceLink in this one or in a separate one as  suggested?Yeah a separate PR for SourceLink sounds good.In terms of this one, the only thing left was to either get TravisCI working or drop it.  I guess we did have agreement to drop it, but a part of me still wants to pursue it ""for science"" if nothing else üòõ I just pushed a commit that adjusted the NuGet.exe that is in our repo's permissions and this actually has seen the Travis linux build able to install tools (Cake's internals appear to correctly handle running NuGet.exe via `mono nuget.exe` when it needs to) and it's now failing trying to run GitVersion commandline.  Again, GitVersion does actually support running via `mono` but it could be that Cake doesn't handle this internally.  Assuming we can get GitVersion working, the only other thing that may not be possible on linux/osx is the LinqPad samples (we could skip them on these platforms perhaps) and the code formatter (which doesnt run as part of a CI build anyway).Let me know if you think im flogging a dead horse!",,,,,,
289165417,1567,Issue,"I don't see the value in getting the build working on Travis, but I understand you want to give it a go. Plus, that way we'll find out if CAKE's internals support using mono for all the tools when on Linux/macOS.I also found that page in the docs talking about troubleshooting issues on Travis locally with Docker containers: .I'll give it a look later today.",,,,,,
289262759,1567,Issue,"might also be useful in debugging the travis issuesEDIT: Do'h now I see it uses docker, it is probably just an implementation of the official guidlines",,,,,,
289715131,1567,Issue,that is an interesting approach with running GitVersion on non-windows!  Great thinking!,,,,,,
289727623,1567,Issue,Haha yeah although my current debug method (push commit and wait for TravisCI) has some pretty poor feedback loops üòù   I really should look into the docker image stuff!,,,,,,
289765625,1567,Issue,woot so GitVersion is now running on TravisCI via Mono heheheNext problem is the projects trying to build for net45,,,,,,
290033628,1567,Issue,üëè üëè ![],,,,,,
290057565,1567,Issue,"Nice, hopefully that last commit makes the OSX builds more stable  I think we're done here, did you want to take a final look over and give me a üëç to hit the button?",,,,,,
290299532,1567,Issue,"I thought GUIDs in `.csproj` were a thing of the past, but Visual Studio still comes with surprises :wink:.Sweet, thank you, :shipit:!",,,,,,
286606035,1566,Issue,This is not available through the API.,,,,,,
286565503,1565,Issue,"Hi   thanks for reaching out. The good news is, the Releases client is implemented, you will find it at `client.Repository.Release` rather than `client.Release`The bad news is that the documentation is out of date! If you would consider sending a pull request to correct [the offending doc file] that would be wonderful! Otherwise we can raise an issue for somebody to fix it up üëç",,,,,,
286251109,1564,Issue,Thanks  for the correction... Out of interest did you actually run into a situation where exceptions were being thrown by these extension methods?,,,,,,
286253179,1564,Issue,"did you actually run into a situation where exceptions were being thrown by these extension methods?Nope, just trying to be consistent with methods present inside **StringExtensions.cs** :)",,,,,,
290984457,1564,Issue,Whoops forgot about this one!Cheers,,,,,,
285839352,1563,Issue,"If someone can have a üëÄ over this before I merge it, that would be great!  üòÄ",,,,,,
285991320,1563,Issue,"left a couple of minor comments, everything else is :gem:",,,,,,
286009499,1563,Issue,"just a suggestion, I think it's easier to suppress CA warnings as project scope instead of class/method/property scope for CA rule of 1704. üôÇ This rule is mostly pedantic in a sense it will limit the expressiveness of naming class/method/property, and it's easier and faster (in compile time) to just suppress it on project scope, not at different source on class/method/property.",,,,,,
286273546,1563,Issue,"This rule is mostly pedantic in a sense it will limit the expressiveness of naming class/method/property, and it's easier and faster (in compile time) to just suppress it on project scope, not at different source on class/method/property.I disagree. The explicitness of this rule means violations (whether necessary or otherwise) are easier to identify. Doing things at a project level makes it easier to ignore these sorts of issues.",,,,,,
286873109,1563,Issue,"should be good now.  I also agree on minimising the number of code analysis rules we ""opt out"" of at a project level :+1:",,,,,,
286907701,1563,Issue,"ugh, CI failures on macOS The command ""curl -o ""/tmp/mdk.pkg"" -fL "" failed and exited with 56 during .",,,,,,
287056705,1563,Issue,kicked the builds and they are ‚úÖ now,,,,,,
290984598,1563,Issue,not sure if you wanted to close out reviewing this or not.  Ill merge it in a day or two if I haven't heard back,,,,,,
291023914,1563,Issue,:shipit:,,,,,,
323476037,1563,Issue,release_notes: Fix more `IssueTimelineClient` deserialization exceptions by adding more new `EventInfoState` values,,,,,,
285804148,1562,Issue,"Hi  There is a bit of history behind this field, but it looks like it has been changed again (without an api change notification being posted on the api blog).Originally, this field did not actually include the merge commit of a PR but was the internal ""test commit"" of the PR merged with the base branch, and wasnt updated to the resultant SHA when thr PR was actually merged.  It was then deprecated from the github API, and we [removed it from octokit.net] to avoid confusion.This was the deprecation comments back then, from upstream:But looking at the API docs now, it appears this field is BACK and actually does contain a useful value! üéâ I'm happy to merge this change and get the field added again, however could you please update the field comment to contain a synopsis of the above information?My suggestion (not particularly elegant, if you can do better!) would be something like:",,,,,,
285825020,1562,Issue,Nailed it!![LGTM]Thanks  for picking this up üëç,,,,,,
285825302,1562,Issue,release_notes: Add support for the newly resurrected `PullRequest.MergeCommitSha` property,,,,,,
283618904,1560,Issue,Thanks  for the fix!so it looks like appveyor builds are not playing nice.  and the travis linux builds are failing due to that same dotnetcore related issue that you fixed on the dotnetcore branch.  Did you want to cherry pick that travis fix into this branch so we can get master building?I will try and figure out what the problem with AppVeyor is!,,,,,,
283824540,1560,Issue,Hey  I cherry-picked the commit but this time the Linux build failed. Could you please queue another one when you have the chance?Cheers.,,,,,,
284220002,1560,Issue,OK so the appveyor problem turned out to be account feed no longer being allowed for public projects.  We actually arent using this feed anyway but our appveyor.yml had the settings in it which I've now removed.,,,,,,
284221025,1560,Issue,Thanks for the fix  (and finally!  TravisCI and AppVeyor are passing again :) )![LGTM],,,,,,
284256509,1560,Issue,Cheers!,,,,,,
323476785,1560,Issue,release_notes: Fix `RepositoryTrafficClient` to handle upstream API change in timestamps from Unix epoch time to ISO8601,,,,,,
283990334,1559,Issue,"This looks like another iteration of 'X event type was not found, so Octokit crashes.'",,,,,,
284220159,1559,Issue,"Yes, the easy ""fix"" is to add the missing value to the enumeration, similar to #1536We are also kicking around a new approach to enums in #1504 which would at least stop exceptions from being thrown whenever GitHub adds a new event type",,,,,,
281056981,1558,Issue,"can you provide a sample for what you're calling, so we can reproduce it on our end?",,,,,,
281057465,1558,Issue,"Hi  it looks like the API response field for `timestamp`may now be a formatted  time string rather than the long value Unix epoch time that it used to be, back when [we implemented it]( ) Such is the nature of preview API features I guess! We should confirm this has changed on a few example repos and if so change the field type to `DateTimeOffset`",,,,,,
281114083,1558,Issue,", below  is what I am calling., thanks for helping out, let me know if you need more details.    public class PluginParams    {    	///     	public string GitHubProductName { get; set; }        }    public static GitHubClient GetGitHubClient(PluginParams settings)    {    	var github = new GitHubClient(new ProductHeaderValue(settings.GitHubProductName));    	github.Connection.Credentials = new Credentials(settings.GithubCredentialToken);    	return github;    }                     var github = GitHubCommon.GetGitHubClient(settings);        // Read repositories from GitHub    var repos = github.Repository.GetAllForOrg(settings.GitHubOwner).Result;        foreach (var repo in repos)    {	    var targetRepoElement = GitHubCommon.FindRepositoryById(orgElement, settings, repo.Id.ToString());	    	    // FAILS in those two methods	    var clonesTask = github.Repository.Traffic.GetClones(repo.Id, new RepositoryTrafficRequest(TrafficDayOrWeek.Day));	    var viewsTask = github.Repository.Traffic.GetViews(repo.Id, new RepositoryTrafficRequest(TrafficDayOrWeek.Day));`	    	    Task.WaitAll(clonesTask, viewsTask);	    // do stuff here        }",,,,,,
281114544,1558,Issue,", where in the code may I change the type? Maybe I can test it... :)",,,,,,
283559300,1558,Issue,"Indeed, it looks like both the [views] and [clones] now use a formatted string. Good catch, .Looking through the codebase, I could only find that timestamp pattern in 2 classes, [`RepositoryTrafficView`] and [`RepositoryTrafficClone`].I should be able to get a PR in.",,,,,,
284354612,1558,Issue,Thanks a lot guys! Good job :),,,,,,
285805187,1556,Issue,Hi  Thanks for the correction üòÄ I may as well merge this (eventhough all these projects will be going away once we merge the `dotnetcore` branch),,,,,,
275889735,1555,Issue,"Awesome stuff  So going forward I'd like to have each pull request merged to master automatically push a pre release package to nuget. I think we could use beta tag in this case rather than alpha (which I used for the dotnetcore stuff since it was pretty experimental and also not in master yet) Mapping things out as to how I could see this working, do you think this sounds good? 0.24 last release Merge a PR to master : 0.25.0-beta0001 to nuget Merge next PR to master: 0.25.0-beta0002 to nuget Merge another PR to master: 0.25.0-beta0003 to nuget Create release branch release/0.25.0: create draft release in repo (and nothing to nuget yet) Update release notes, tweak tests etc on release branch: update draft release with latest release notes (nothing to nuget)Publish draft release (tags master): 0.25.0 to nuget Merge PR to master: 0.26.0-beta0001 to nuget etc",,,,,,
275890161,1555,Issue,"`beta` sounds fine!As to the workflow you described, it matches what I had in mind, too.  Maybe we don't need to go into that much detail right now, but with the sentence *Update release notes, tweak tests etc on release branch: update draft release with latest release notes (nothing to nuget)*, does it mean the CAKE build should update the draft release? If so, maybe we can discuss that outside of this PR, but I'd be keen to know more about it.I'll make the change straight away.",,,,,,
275891105,1555,Issue,"Yeah we can discuss the release creation/updating etc on #1545 In terms of this change though, does the configuration achieve the numbering that I mentioned in my previous comment?",,,,,,
275891256,1555,Issue,"Yes, it will. the `increment: Minor` will increment the minor version by default, so after a tag `v0.24.0`, the next version will be `0.25.0`. Since we use `ContinuousDeployment`, a new version will be created after every commit, but the new version will affect the pre-release tag, not the minor.I hope this makes sense.",,,,,,
275891585,1555,Issue,"Yep, I'm guessing we have to tag the repo with -beta0001 in order for the next merge to master to get - beta0002 and so on? Not that it's a problem, just that we currently don't tag",,,,,,
275892076,1555,Issue,"Ah, sorry, I must not be clear enough.There's no need to tag the repo. The reason is that `ContinuousDeployment` always uses pre-release tags when it calculates a version. It will get the latest base version - most probably from a tag - then applies the increment specified - in our case Minor - then uses the specified pre-release tag so that each commit has a different version.The thing to keep in mind is that the increment will be applied only once between two tags, and the pre-release tag comes the config of the branch, not from a git tag.In our case: - `master`, tagged with `v0.24.0` - a PR is merged to `master`; the base version comes from the tag, it's `0.24.0`, the increment is Minor, so the new version is `0.25.0`. but as we use `ContinuousDeployment`, we apply the `beta` tag, so final version is `0.25.0-beta0001` - another PR is merged to `master`. all the steps from above are exactly the same, except the final version is `0.25.0-beta0002` because it's the second commit since the tag - another PR to `master`. same thing, version is now `0.25.0-beta0003`Does this make things clearer?",,,,,,
275892329,1555,Issue,"Ok yeah so I was wondering how it kept track of the 1,2,3 if there was nothing in the repo üòÄ  so it counts the commits, clever! Does that mean if a PR was merged instead of squashed (thus there might be 5 commits to master rather than 1) it would jump from beta0001 to beta0006?",,,,,,
275892502,1555,Issue,"I just tried, and yes, it will be incremented by how many commits the PR branch contains. I hadn't thought about that. Is this a problem? I saw you squashed my previous PRs, do you do this for PRs that target `master`, too?",,,,,,
275892647,1555,Issue,Yeah we squash PR's normally since it keeps the history cleaner. I think it's ok üëå,,,,,,
276231038,1554,Issue,any idea why this issue - and the other ones - didn't get closed? I thought putting the correct message in the PR description would do the trick. Or do you need to put it in the commit message when you squash the commits into one while merging the PR?,,,,,,
276248124,1554,Issue,What you did should have worked Maybe it's the full stop at the end of the line?!,,,,,,
275798147,1553,Issue,"Hi  many thanks for taking up this feature enhancement!The progress looks good so far!  A couple of comments:If we look at the official [API docs] I can see that the request to ""Add or Update Organization Membership"" actually takes a parameter to indicate the role the user should have (eg Mmber, Admin).  So that means you would create a new Request model object (eg `OrganizationMembershipUpdate`) that has a `Role` property of that enum type.And looking at the response model returned, currently you have this defined as a single `enum` however it is actually a response object that includes `State`, `Role`, `Oragnization` and `User` fields.  So you will actually want your `OrganizationMembership` be a response class that has these fields on it, and rename your enum to something like `OrganizationMembershipStatus`If you add some integration tests it will be easy to test this call against the real github.com - make sure you follow the details in our contributors section about how to configure the integration test settings (and of course, make sure you have setup a test github account and organization so you arent using your real account, if you havent already)Let me know if you want more detailed help or if you are happy to have a crack at addressing these. :+1:",,,,,,
275828520,1553,Issue,"Hi  ! I've got it and I'm going to start with these alters, thank you so much.   üëçüëçüëç",,,,,,
277067882,1552,Issue,Hey  could we discuss what else needs to be done to get this merged?,,,,,,
340659126,1552,Issue,Closing this one as it's dead. Happy to open a new one when deemed necessary.,,,,,,
275794571,1551,Issue,"Ive tested this and it's :gem:In terms of consistency with the older FAKE builds, this task was called `ValidateLINQPadSamples` rather than `RunLinqPadSamples`.  Do you think we should rename it?  If not then can you double check there are no docs anywhere that need to be updated?Also, from an OCD point of view (and I realise it was like this under FAKE anyway!) it would be nice if the samples were done in logical 1,2,3...10 order rather than alphabetical (1,10,2,3).  Or do you think it would be too ugly to add an `.OrderBy()` lambda to the query (considering it has to split the string, check if it's numeric, etc etc)? üòõ  Or perhaps we could just rename the sample files to be `01-xxxxxx`.  Thoughts?",,,,,,
275819783,1551,Issue,"I'm happy to rename it to what it was before. *Validate* is much closer to what the task is doing, as running them doesn't add any value per-se.For the samples names, I'd lean towards renaming the files so they all have two digits - so `01-xxxxx`. It keeps the task focused on executing the samples and it's something we can check in the future in PRs if we add some more.",,,,,,
275824241,1551,Issue,Love your work! Just waiting to see what is up with travisCI builds...,,,,,,
275825228,1551,Issue,"Hmm, I remember adding a command to the TravisCI config for macOS to link openssl libs where the `dotnet` CLI was looking for them. Now it fails saying the files already exist, so maybe they fixed it. I removed it and we'll see what happens üòâ",,,,,,
275830881,1551,Issue,"Ah nice, I couldnt see anything that correlated with Travis failures but as you say I guess they fixed their OSX image and the workaround is now no longer requiredThis is ready to üö¢",,,,,,
275830917,1551,Issue,![LGTM],,,,,,
275791873,1550,Issue,this is working nicely :+1:One enhancement request I have is to add an info message to the log to state that it's generating a temporary csproj (so it's less confusing that the formatting tool then mentions csproj when we are a dotnetcore project) <== add something like this,,,,,,
275819845,1550,Issue,üëç to that.,,,,,,
275830986,1550,Issue,"Awesome :grinning:If you can just merge/rebase on the target branch to pull in that travis fix, I can hit the button once the builds are üíö",,,,,,
275876673,1550,Issue,![],,,,,,
275795629,1549,Issue,"Considering the builds are passing this must be good üòÄ While looking through this I noticed that in the Octokit.ruleset file is this comment  This ruleset only includes the rules we care about. I'll be adding new ones as we fix our codebase.But if Im understanding the actual ruleset file correctly, I think actually we are actually opting in to ALL rules except 7 specific exemptions.  If that's correct, perhaps while we are üëÄ at this part of the project we can update that comment.  Something like ""This ruleset enables all of the Microsoft CodeAnalysis rules, with a few deliberate exceptions"".Thoughts?",,,,,,
275821633,1549,Issue,"Opening the ruleset file in VS 2015 shows you're right. All rules should raise an error, except the 7 we explicitly disabled.",,,,,,
275876906,1549,Issue,![LGTM],,,,,,
274732510,1544,Issue,"Closing this PR as we decided to break them into several PRs so we don't end up with unrelated work in a PR.New issues were created: #1546, #1547, #1548.*Edit: , I tried creating these issues with the `dotnetcore` milestone, but it didn't work. Maybe I can't. Would you mind doing it please?*",,,,,,
273617811,1543,Issue,Yes you already asked this in #1521 and it looks like the `Patch` field is not provided on those responses (thus it is `null`).  There is discussion on that issue about another field that could be useful (but isnt currently supported in Octokit)Let's continue discussions over on #1521 and close this duplicate issue,,,,,,
285839701,1542,Issue,"Do either of your methods work when the file is not ""large"" ?",,,,,,
285847753,1542,Issue,They both work with small files and sometimes with larger ones (the limit seems above 10m but not much further ),,,,,,
468574451,1542,Issue,How to download the products Zip file (products are their in the Nested gitRepos) using tree ?,,,,,,
532198031,1542,Issue,"Apologies for the delay in replying.This error is a generic page that you'll see if you're incorrectly calling the API. I wouldn't worry about this if you see it again.Regarding the `Content.CreateFile()` API, I'm not 100% sure of the limits based on the documentation. The `Blob.Create()` API has a limit of 100MB for downloading, but it may be different for uploading.As the octokit.net API is wrapping the GitHub API, we really rely on the [documentation] that GitHub provide.  If things there are unclear, please contact [GitHub Support].",,,,,,
272977785,1541,Issue,![],,,,,,
273020858,1541,Issue,ü§î I initially fixed this as a commit on the release branch while fixing a broken integration test...  But then I thought this should probably be in release notes which means I needed it on a PR üòÄ,,,,,,
272713036,1540,Issue,"ready for your review.I couldn't think of too many more tests that needed adding, and `ApiErrorMessageSafe` is already covered by 50+ tests so I think we're good there. Happy to add any more if you think of them though. It's also a protected property so I couldn't test it directly, which was my original plan.",,,,,,
272854199,1540,Issue,"This is good, thanks !Not sure what is up with AppVeyor, all our builds seem to be stuck ""queued"" today.  Will see if it's fixed by tomorrow",,,,,,
272854491,1540,Issue,release_notes: Unparseable ApiErrors should now fall back to better default error messages,,,,,,
272858741,1540,Issue,![LGTM],,,,,,
272689071,1539,Issue,Looks good to me!I will try and get #1523 up to snuff to try and squeeze it into this release.,,,,,,
272692280,1539,Issue,"Ive fixed a good handful of integration tests, some of them were really quite strange (like `AccountType.Bot` now being a thing!).All integration tests are now passing!",,,,,,
272692958,1539,Issue,oo.. that is probably related to [Integrations],,,,,,
272861234,1539,Issue,"OK I think this is good to go, just waiting for an üëÄ from  or",,,,,,
273015556,1539,Issue,Exciting! Great work  üëç,,,,,,
273057026,1539,Issue,"Well, here goes nothing!![]",,,,,,
273057164,1539,Issue,Published:,,,,,,
273081324,1539,Issue,:tada: üëç,,,,,,
273223419,1539,Issue,![],,,,,,
272142679,1538,Issue,"What DI are you using?You should be able to set the credentials in DI setup, and when it gets passed to the controller it is fully ready to use",,,,,,
272143323,1538,Issue,"Autofac in Startup.Services.cs in a standard MVC 5 app. Currently in Startup I have:    `var gitHubClient = new GitHubClient(new ProductHeaderValue(""appname""));`A user will need to login before I can get at their access token.",,,,,,
272144236,1538,Issue,I should have clarified that I'm using this in conjunction with an OWIN GitHub external login provider. So depending on the logged in user there will be different credentials,,,,,,
272145110,1538,Issue,"I'm not that experienced in DI, but do you have an option of calling something like `container.GetInstance()`, registration of which is set to pull token from logged in user?I know that it is not the cleanest solution, others may have a better one.",,,,,,
272154673,1538,Issue,Not during application start. I need to add the Credentials after it's been passed to the controller,,,,,,
272156140,1538,Issue,"I meant that instead of relying on injection into the controller, inject the Autofac container itself and call `container.Resolve`, which - if I understood correctly - can be registered to use dynamic values to create the instance.There are a number of projects that might have useful code, when I get back I'll try and look for them.",,,,,,
272180649,1538,Issue,"That doesn't _feel_ like the right thing to do here, but if you can supply code/links then I'll take a look into that approach, for sure.",,,,,,
272190439,1538,Issue,"My apologies, I remembered wrong.The posts I had seen only dealt with the actual login, not how you would deal with using the combination of DI.here they are anyways, in case they help you with something.",,,,,,
272190495,1538,Issue,might have something more helpful to add,,,,,,
272223483,1538,Issue,I've just noticed in the GitHubClient code the comment to only use the Credentials getter/setter if you only use a single hard-coded credential. I'll read up on ICredentialStore.,,,,,,
272227318,1538,Issue,"I had a bit of a fail with ICredentialStore, but in amongst my googlings I saw [this blog post] which set the Credentials a slightly different way.By setting the Credentials in this way (actually it's more long-winded than this for error checking but you get the idea) :my code works fine with the GHC passed to the controller via DI and then setting the credentials based on the logged in user in the controller method.This may not be best practise (given that comment on GitHubClient.Credentials) so if anyone explain how to do it correctly that would be great. For now I'll get on with other work ;-)",,,,,,
272251987,1538,Issue,"I think the client is supposed to be one per credential rather than using the same one for multiple credentials. For that reason, I would expect the DI to be configured to create a new `GitHubClient` instance per injection request and probably, to have that require the credentials to be injected accordingly.In fact, I'm not sure  it makes sense to inject an `IGitHubClient` directly but instead to inject your own provider object that can create clients based on credentials you give it.Something like that; then the provider can lookup the creds for the given user and provide the appropriate client back.",,,,,,
272328550,1538,Issue,"Yes, the way we tend to do it is create a Factory class which gets injected by DI, and that Factory class (which can be initially setup with your common values such as the AppName and the Url (if using GitHub Enterprise) etc) knows how to generate a client with the credentials you give it from your lower context...eg",,,,,,
285840367,1538,Issue,CLosing this out as answered :+1:,,,,,,
272329260,1537,Issue,"I am not familiar with git hub. somehow I cannot find the comments I received in my email.Once you are done with this one, can you assign another entrylevel task?",,,,,,
272655542,1537,Issue,"I am not familiar with git hub. somehow I cannot find the comments I received in my email.If the comments were on some lines of code that have since been replaced, then github collapses it into a ""outdated"" section.  You can click that to see the comments again: Once you are done with this one, can you assign another entrylevel task?That's awesome!  All of our issues with a tag of ""up for grabs"" are meant to be easy enough for new contributors to tackle.  You can choose anything that takes your fancy but if you really want a suggestion how about  üòÄ   When you find an issue you want to work on, Just comment on that issue that you want to take a look at it (this makes sure we dont have multiple people trying to fix the same thing!).  Create a branch on your fork of the repo (I notice you used your master branch for this PR, instead you should create a branch and do the work there, so your master branch can just be a identical copy of this repo's master branch) push that branch up and raise a pull request.  Put [WIP] ( meaning work in progress) in the PR title, and we can then work together as you make the change.  It's totally fine to raise the [WIP] pull request early in the process so we can collaborate rather than waiting until you've done lots of coding!",,,,,,
272655740,1537,Issue,"Many thanks  for this enhancement, and congratulations on your first octokit.net contribution!  ![]",,,,,,
272655838,1537,Issue,"PS: I noticed the commits on this PR are from a different email address than your github profile, so they arent linked together.  You should [add your other email address] to your profile so the commits are associated with your github account!  üëç",,,,,,
272330303,1536,Issue,Ive edited that comment myself since you had allowed contributors to push to your branch :grinning: and Ive also notified github support of the undocumented value so they can consider updating the docsThanks  and congratulations on your first contribution to octokit.net üéâ ![LGTM],,,,,,
272333141,1536,Issue,"Oh cool, thanks for fixing that.  Beat me to it :)",,,,,,
272343007,1536,Issue,(just waiting to get Travis CI happy before hitting the button),,,,,,
323477907,1536,Issue,release_notes: Fix `IssueTimelineClient` deserialization exceptions by adding new `EventInfoState` values,,,,,,
272005458,1535,Issue,"Hi  , yes it should be implemented - something like the following should work:Please let me know if this is what you were looking for! üòÄ",,,,,,
272186404,1535,Issue,"Hi , yes, thank you very much, was exactly it!",,,,,,
271850937,1534,Issue,Sweet as!  Thanks for taking the time to correct this misleading comment!! üëç ![LGTM],,,,,,
271852597,1534,Issue,My pleasure.  I glad to have helped move the project along in such a significant way.,,,,,,
271855249,1533,Issue,"Hi  Yes it does look like we don't currenly have the [Add organization member] endpoint implemented.  However as a workaround, as [documented here], users can also be invited by [adding them to a Team] in the Organization (which we do have implemented as [`IGitHubClient.Organization.Team.AddMembership` here]) and I also believe you can invite a user by inviting them as a repository collaborator (which we have implemented as [`client.Repository.Collaborator.Invite()` here])We will keep this issue open to track implementing [Add organization membership] as `client.Organization.AddOrUpdateMembership()`",,,,,,
322036350,1533,Issue,Poking around in this area thanks to  #1639  #1640 revealed we also have to implement[Remove organization membership] as `client.Organization.DeleteMembership()`,,,,,,
369652268,1533,Issue,"Hello guys, was anybody able to get past or have a work around for limit of 50 invitations requests per 24 hour ?",,,,,,
369752452,1533,Issue,I wouldnt think so  as this would be imposed by the github API for abuse reasons.  You could contact github support and ask the question though.Under what circumstances do you need to invite more than 50 people to an organisation every 24 hours?,,,,,,
481721982,1533,Issue,"Hi  We need to invite all our company users to github org (that's more than 50 people missing in our org).We can not use the workaround effectively, because we have 167 teams and over 6000 repos.Also, when do you plan to implement this feature? It looks so strange to have only one method instead of symmetric ones.",,,,,,
271473127,1532,Issue,The `Id` field isn't used in any of the APIs (`Number` is the recommended identifier) but for the sake of completeness if someone wants to add in the field [this] is the response model.,,,,,,
271542198,1532,Issue,"can you share your use case?  My concern is that by adding this `Id` field which as  says isnt actually used for any other API calls, it will just lead to confusion with users using `Id` instead of `Number`",,,,,,
271979227,1532,Issue,"Thanks   for the quick response! My usage scenario is when integrating pullrequests for different repos, the numbers are no longer identical. For now I can use repo + number as the ID to differentiate them. But it would be super helpful for me to use the official id unified by github. Thanks again!",,,,,,
271993954,1532,Issue,"OK no worries, we can just make sure that the XmlDoc comments on this `Id` field are sufficiently explanatory to hopefully avoid users mistakenly using it when they really want `pullrequest.Number`Are you going to have a crack at adding this field to `PullRequest` class  ?  Happy to guide you through it!  It's pretty much just a case of adding the field to the class (and including it in the constructor) then ensuring we check that field is returned in an (existing) integration test",,,,,,
272005160,1532,Issue,I would like to help and please let me know more.,,,,,,
272007543,1532,Issue,"Awesome!  Well basically you just need to add the new field `long Id` to the PullRequest response class [here] and also include it in the constructor [here].  You can look at all the existing fields of that response class to get an idea of what is required.The octokit deserializer will take care of populating the field etc, so the only other thing to do would be to update an integration test (for example this one [here]) and add an assertion that the new field is populated correctly - eg `Assert.NotNull(result.Id); Have a crack (fork the repo, create a branch, make some changes) then raise a pending Pull Request here, and we can work through any changes there!  Good luck :grinning:",,,,,,
272061274,1532,Issue,I have send out this pull request for review.   Thanks a lot for your guidance.,,,,,,
272655879,1532,Issue,Fixed by #1537,,,,,,
271456989,1531,Issue,"ah yes, I know what's happened here. Here's the commit where we removed the code, which previously had an Obsolete message: Originally we had `client.Release` but we wanted to align the Octokit API with how the GitHub documentation organizes it's endpoints. This meant moving it under `Repository`, like this page: Of course, this doesn't address how we keep the documentation in sync for when the API changes. I don't have any good answers on this - but we can currently test Linqpad snippets against the real binaries and catch failures at the CI stage, if that's something we want to leverage more broadly...",,,,,,
271468115,1531,Issue,How would I call that? I'm not familiar with the GitHub API and/or how to read it. Am I anywhere close to the nail?,,,,,,
271546360,1531,Issue,Yep that's it.  Basically it was just relocated from `client.Release` to `client.Repository.Release`It's an interesting point though about how to keep documented code samples up to date.  I guess some sort of system where the linqpad snippets (which we can automatically test) are embedded into documentation... But that implies a built docs system whereas currently we really just have a limited number of markdown files,,,,,,
271594415,1531,Issue,"Well, that was a fun bit of troubleshooting, but I got it to work... it needs await, so I had to put it in an async method. And you cannot make Main() asynchronous.As well, the try...catch is there in case there are no releases and/or typos in the GetAll() method (because ""ocktokit"" doesn't have any releases, go figure)So for any Google stumblers, here's the code:",,,,,,
271862630,1531,Issue,"Glad you got it working  Just to reply to this:  it needs await, so I had to put it in an async method. And you cannot make Main() asynchronous.FYI in c# you can force an async call to be run in a blocking fashion (and thus can be run from your Main() method, by using the `.Result` like this:Also in terms of this:(because ""ocktokit"" doesn't have any releases, go figure)This doesn't sound right as there are a number of octokit releases!  When I run some sample code based off what you posted, I get the expected 48 releases",,,,,,
271925018,1531,Issue,"I did not know about the .Result call... good info to have! Asynchronous methods are something new to me.And yes, you're right, ""octokit"" has many releases. ""oc**k**tokit"" (notice the extra k), on the other hand does not. Typos will getcha every time, and I'm glad I got one in my first testing, because while this was a simple typo, there may actually be a project that doesn't have any releases, and will throw an exception.",,,,,,
271327908,1530,Issue,üëç Thank you!![full-house-12SXVd8bmXdSg0],,,,,,
271284025,1529,Issue,Is this related to something I found when working on a PR here:   ?If you see the 2nd bullet point where I talk about the attempted `ApiError` deserialization never returning a `null` and thus never falling back to the text payload...,,,,,,
272695422,1529,Issue,"Just refreshing my memory with this stuff and yes I agree with your suggestion.  Specifically I think the 2nd suggested fix would be the way to go, since we can ""fix"" it in one place, rather than needing to fix it in every place that currently has `ApiErrorMessageSafe ?? ""default error text""`And this is a different situation to what I commented about above - in that case I found that a compeltely invalid json structure in the error message was still returning a default/empty `ApiError` object because the deserializer creates an object then tries to populate any fields that match the setter properties.  This led to code that was never really getting what it expected, since `ApiError` itself could never be `null`.  Your case is slightly different since it would also happen if there was valid json error payload but the `message` field was empty string or not present.",,,,,,
272711072,1529,Issue,"üëç Got it, makes sense. I'll put together a PR to un-skip this test and fix it via the decision here.",,,,,,
271293359,1528,Issue,/  ready for review at your leisure.,,,,,,
271296108,1528,Issue,"one thing I wanted to check on here. I see a build failure telling me to add an override for `GetObjectData` to the exception. I see that `ApiException` does this.However, `AbuseException` inherits from `ForbiddenException`, and `ForbiddenException` does not have this override, yet does not see this error on build.Should I:* Add overrides to both `ForbiddenException` and `AbuseException` as part of this PR?* Suppress this warning and open an issue to fix later?* Suppress this warning and fuggedaboudit?* Something else I'm not seeing?I noticed on the `ApiException` that it's marked as `[SecurityCritical]` so I didn't want to make any assumptions.",,,,,,
271300164,1528,Issue,"So to me it looks like you only need to override `GetObjectData()` if you have extra properties on the class.  `ForbiddenException` doesn't have any properties of it's own so it doesn't have to do this, but your `AbuseException` class does have a property, so I think that explains why the error occurs on `AbuseException` and not on `ForbiddenException`.So to correctly implement the `[Serializable]` attribute (and satisfy the code analysis CA2240 error), it sounds like you do need to provide a `GetObjectData()` override on `AbuseException`.  And it also needs to be marked as `[SecurityCritical]` due to what was mentioned in #1493 (essentially it needs to match the base class method being overridden)",,,,,,
271300999,1528,Issue,"ahhh, I see. Thanks! This is likely due to the `RetryAfterSeconds` property, which makes sense. Will get that cleaned up ASAP and then it should be good to go.",,,,,,
271301344,1528,Issue,"Also regarding the test that you removed because it was failing due to #1529 im thinking so we dont lose the test maybe add it back in and skip it for now.  That way we have a test that captures the problem and a good way to test a fix later, by unskipping that test?",,,,,,
271308099,1528,Issue,changes have been made to present the value as a nullable int and default to null when it can't be parsed.,,,,,,
271325377,1528,Issue,It appears the TravisCI build is failing on the XCode build job -- an error related to `Octokit.StatisticsClient` AFAIK.Not sure if this is transient or actually caused by something I did (it seems like the former).Advice? Not sure I can kick off another build manually.,,,,,,
271478663,1528,Issue,"mind giving the code a second look? Should be much more compact now and the new test file has been re-organized (I left `ConnectionTests` in a similar state to as I found it, due to not wanting to arbitrate the conventions).I inverted some if statements which led to some negatives inside the ifs, but I don't think it compromised on clarity. (let me know if you differ).",,,,,,
271699502,1528,Issue,"OK, I think we should be good to go now? Give it another pass.",,,,,,
271856154,1528,Issue,"OK yep this is all looking üíé One final question - have you actually managed to get a runtime test performed, just to try and ensure that the exception was correctly thrown and the retry value was present and parsed?  Or is it too hard to actually trigger the abuse conditions?",,,,,,
271867566,1528,Issue,"Oh, I can trigger it. :)Stand by. I'll build & drop this into a project and send some screenshots / output.",,,,,,
271874527,1528,Issue,"OK, I:* Built my branch locally using `.\build BuildApp` * I then referenced it directly from a project. * I set up this project to create 10 actors in parallel issuing github requests for the same auth token, thus triggering the abuse mechanism after a short period.:white_check_mark: Here it is in the logs throwing the `Octokit.AbuseException`: ![image]Then I had the actor's supervisor detect an `AbuseException` and log out to the console the number of seconds before trying again.:white_check_mark: This shows that `RetryAfterSeconds` is performing as expected:  ![image]",,,,,,
272000777,1528,Issue,Thanks for that üòÄ I think we're done here!![LGTM],,,,,,
272001163,1528,Issue,thanks for the guidance along the way!,,,,,,
271126228,1527,Issue,Hey  that sounds like a great idea  inherit this exception type from Forbidden exception and supply the Retry-After value directly in the Exception?This option sounds üëç to me,,,,,,
271157508,1527,Issue,sounds good. I'll plan to tackle this in the following way: * Create a new Exception Inheriting from ForbiddenException* Modify `Connection.cs` to throw the new exception (with tests)* Add the `Retry-After` as a readonly field within the constructor based on the headers from the `IResponse` that are passed in.,,,,,,
271283196,1527,Issue,"any preferences on what to do if the `Retry-After` header isn't present or can't be parsed? We could default to a number, e.g. 60 seconds, or we could make the field a nullable int. For now, will proceed with idea of a default value of 60 seconds.",,,,,,
271304073,1527,Issue,Personally im not a fan of a non official default that we make up ourselves.  I think make it nullable and if the value can't be parsed/isn't present then return `null`,,,,,,
271304467,1527,Issue,Sure thing -- I'll make those adjustments.,,,,,,
271304572,1527,Issue,"Also, I added the failing test back. Normally my preference would have been to open a new PR against #1529 but this works fine too.",,,,,,
271060308,1526,Issue,"unfortunately the `Sha` property here represents the blob of the file, not the commit where the file was last modified. That's why you're seeing the 404 Not Found when asking for it to resolve a commit. I'm trying to get hold of the last commit object from the sha of a content object.I'm not quite sure of an easy way to get this data - you could walk through the commits starting from the tip of the branch, like this:By default these aren't pre-populated, so you'd have to make a second call to get the changes in each commit.",,,,,,
271266245,1526,Issue,"That's great.  Thanks very much  I've amended based on your help as follows:...which results in the following:I see the the [xml comment on Sha] says 'SHA of the last commit that modified this content' if I'm reading in the right place.  Should this be 'SHA of this content blob' or does it have different uses in other places?Anyway, thanks again - it's a great help.John",,,,,,
271268894,1526,Issue,Yeah looks like that's an incorrectly documented field and should be fixed up... apologies for the bum steer!  üòÆ,,,,,,
271269467,1526,Issue,Well it's helped progress my git understanding so good things have come out of it :),,,,,,
271409491,1526,Issue,I'm glad you were able to workaround the issue! :sparkles:Leaving this open for someone to address the suggestion that the comment on [this line] needs to be updated: I see the the xml comment on Sha says 'SHA of the last commit that modified this content' if I'm reading in the right place. Should this be 'SHA of this content blob' or does it have different uses in other places?,,,,,,
271558887,1526,Issue,"Hi, Have made the change in PR #1534",,,,,,
271851066,1526,Issue,Comment clarified in #1534 - thanks!,,,,,,
271193662,1525,Issue,-aurea do you have an example URL that I can use to confirm this is related to [`EventInfoState`] not having this value?,,,,,,
271210733,1525,Issue,"Apart from adding enum values that are missing and waiting for another release, we also have a proposal to handle these at runtime here  #1504",,,,,,
271212246,1525,Issue,"Thanks, this sounds great.I don't have a url as this is a private repo.But I saw atleast 1 other status apart from the one mentioned in theticket, that gave the same exception.Yes the problem did occur during de-serialization by Newtonsoft, as theEnum did not have the value.I have made this field string in my classes till a fix is available, and amusing the rest API till then.Hope this helps.[image: Aurea]",,,,,,
269542804,1524,Issue,"I think breaking it up is good, so we can include the basic information asap",,,,,,
269774653,1524,Issue,"based on your review:‚úÖ Added link to Github API‚úÖ Added note on authenticated rate limits vs anonymous‚úÖ Fixed the typo.‚úÖ Updated the PR text/title to reflect the smaller scope you preferredThe build seems to be failing on Travis, but that seems unrelated since I didn't modify the build script. :)",,,,,,
269884931,1524,Issue,ready for review again at your leisure. Thanks for taking the time to be so thorough. And happy new year!,,,,,,
269892684,1524,Issue,"Awesome stuff, thanks so much for the additional clarity in the docs and congrats  on the first merged contribution of 2017!  Happy New Year üéâ ![]",,,,,,
271193495,1524,Issue,![],,,,,,
268789721,1523,Issue,"Looking pretty good so far :+1:The names are getting pretty long though!  I wonder if instead of `BranchProtectionRequiredPullRequestReviewsUpdate` we can get away with `BranchProtectionRequiredReviewsUpdate` instead.  What do you think -Zuber ?In terms of the ""test whether  is right"" thing, Im pretty positive it's going to be how I said. eg if you look at the webUI below, passing the item as null controls the ""require reviews before merging"" checkbox, whilst passing the `IncludeAdmins` as true/false controls the Include Administrators checkbox.  If you always pass up the object, how will you ever configure branch protection to NOT require a review?Tests will reveal soon enough I guess üòõ",,,,,,
268790829,1523,Issue,"The names are getting pretty long though! I wonder if instead of `BranchProtectionRequiredPullRequestReviewsUpdate` we can get away with `BranchProtectionRequiredReviewsUpdate` instead. What do you think? sounds good enough to meI am also pretty sure that you are correct, I just made my initial code based off of my understanding of the docs. I was a bit too daft to go check the UI üòÜ",,,,,,
273266058,1523,Issue,"while I am fixing the naming for the new object, should I shorten the other names, or make that a separate pr?",,,,,,
291165165,1523,Issue,#NAME?,,,,,,
291235462,1523,Issue,"Thank you for the nudgeHad a rough spot in my personal life, and then my computer needed to be repaved. I will do my best to finish this up by the end of the week. A decent amount of the code is already written, I just have to polish and push",,,,,,
291239853,1523,Issue,"-Zuber No worries! Life happens, I definitely understand :-)",,,,,,
291282284,1523,Issue,As is the case with preview API's there is also the possibility of shifting goal posts! Some changes were recently announced to this that will need to be taken into account too -zuber did you want to push up the code you do have so far?,,,,,,
291407821,1523,Issue,"I would want to incorporate those changes before I push, as some of my changes might not be needed.Will try and put something together soon for a review",,,,,,
292449474,1523,Issue,"Based on the tests I tried updating, and the UI, any `IncludeAdmin` is ignored if it is not at the top level of the `BranchProtectionSettings`Should I just make those changes as part of this PR, or make a new one that updates the existing code in master, and then rebase this PR on top of it?",,,,,,
292450915,1523,Issue,"To be more accurate, it seems that (as per docs I suppose) if any of the update objects pass in `true` for `includeAdmins` the top level setting is set as `true`As evidenced by this screenshot of the docs",,,,,,
295738742,1523,Issue,"or  any tips on how to proceed with this?The main issue is that we need to obsolete all ctors that accept the `include_admins` param, as setting it in one object can be overriden by another, or by the top level param (which still needs to be added)",,,,,,
325160547,1523,Issue,"Hope you don't mind -Zuber but I've taken over this PR üòÄI realized that [we don't have much time] before we have to pass the new `required_pull_request_reviews` field in all branch protection calls, otherwise they will stop working when the API becomes official in less than a weekFirst post has been updated...",,,,,,
325161975,1523,Issue,OK this should be good!  All integration tests are passing.  Just needs a sanity check for typos etc,,,,,,
325176536,1523,Issue,"Thanks for picking this one up, and my apologies for dropping the ball",,,,,,
325176789,1523,Issue,"One little thought, but otherwise LGTM![3oEdva9BUHPIs2SkGk]",,,,,,
325959501,1523,Issue,"release_notes:  Implement `RequiredPullRequestReviews` support in `IRepositoryBranchesClient.UpdateBranchProtection` and additional granular methods to `GetReviewEnforcement`, `UpdateReviewEnforcement` and `RemoveReviewEnforcement`",,,,,,
325962493,1523,Issue,"advisories: This release contains the necessary Octokit changes to specify the `required_pull_request_reviews` field on Branch Protection updates, which becomes mandatory when the Protected Branches API [graduates from preview mode] on the 1st September",,,,,,
268662095,1522,Issue,"Not directly, due to how the Pull Request API is designed.But you can combine two API calls to do this:",,,,,,
268622346,1521,Issue,Hi  can you post some sample code to demonstrate what you're trying please?,,,,,,
268629284,1521,Issue,"Sorry, i don't know how put entirely as code",,,,,,
268641491,1521,Issue,"I have edited the text. So i have 3 collections: All repositories of a given list, All pull request for each repository, and all files for each pull request. There is a file in the collection that has as .patch the Nothing value. But the .patch is not empty, there is text.",,,,,,
268675978,1521,Issue,"won't have their `Files` entries populated. See #1522 for how to resolve those.If you look at the [commit response] for that change, it appears to be a new feature of the GitHub API, likely related to how we're trying to defer our diff rendering wherever possible.Supporting this new field is probably easy to roll into an update, if someone wants to add it to the right response object.",,,,,,
268847459,1521,Issue,"![error patch]Sorry, i don't understand. Why gives me Nothing in the .patch field?",,,,,,
268930423,1521,Issue,because the `patch` property on the JSON isn't populated,,,,,,
276654117,1521,Issue,Reopen this issue and its possible solution and for example this content  . How i do to access via Octokit? Sorry for a question in the issue thread. But in the chatroom nobody answer yet,,,,,,
276876421,1521,Issue,"As  already pointed out, this `contents_uri` field is not currently supported in Octokit.  The ""fix"" is to add a `ContentsUri` field to the correct response class (I think this is `GitHubCommitFile` and possibly `PullRequestFile` too) and then you would be able to get the Uri for the contents of these large diffs.  You could then access them via a HTTP call",,,,,,
268601580,1520,Issue,I changed this in the `PullRequestClient` as well as the `ObservablePullRequestClient` Should we change it anywhere else at this time?,,,,,,
269325454,1520,Issue,I have made the requested changes.,,,,,,
269857069,1520,Issue,"Great work...  Many thanks for your contribution, this is good to go!![]",,,,,,
272681925,1520,Issue,release_notes: Rename PullRequest.Comment to PullRequest.ReviewComment for better accuracy,,,,,,
268396002,1519,Issue,"Annnnd nevermind -- it turns out the solution is to better **read** the contrib guide, which clearly mentions the powershell for the environment variables. Totally missed that somehow.![]",,,,,,
268428279,1519,Issue,I'm glad this was relatively easy to solve!![],,,,,,
268253219,1518,Issue,"(await _gitHubClient.Organization.Member.GetAll(_organization, OrganizationMembersFilter.TwoFactorAuthenticationDisabled))I hate when this happens.",,,,,,
268431158,1518,Issue,I got you  ![],,,,,,
268447872,1518,Issue,":)On 21 Dec 2016 5:12 a.m., ""Brendan Forster""",,,,,,
268074186,1517,Issue,If you just want to ask a question you could use the gitter chat room also Documentation on rate limiting is here:,,,,,,
317236901,1514,Issue,"And while I'm in the area, I'd like to put my face on this one too",,,,,,
471156234,1514,Issue,You can now use the `affiliation` parameter with the List collaborators endpoint to filter a repository's collaborators by their affiliation type.There is already a `CollaboratorRequest` class that is used when creating/updating a collaborator to set their permissions and I don't think I can re-use this class for the `affiliation` parameter (looking at the code it'd add all the properties of the class to the query string)? Should I add a new class `ListCollaboratorRequest`(?) with the `Affiliation` property and use that for the List collaborators endpoint? The Create team endpoint now offers the `maintainers` parameter which will allow you to add team maintainers upon creation.Looks like this has already been implemented,,,,,,
471271985,1514,Issue,"Yeah it looks like the naming conventions have been a bit out of whack with this one.  ""normally"" we would have `XxxRequest` on a `GetAll` endpoint, and `NewXxx`/`UpdateXxx` on any create/update endpoints... but in this case the `CollaboratorRequest` name has aleady been used üò¨ So yeah I would say :+1: to this Should I add a new class ListCollaboratorRequest(?) with the Affiliation property and use that for the List collaborators endpoint?",,,,,,
317236835,1513,Issue,I'd like to put my face on this one,,,,,,
266436109,1512,Issue,I'd like to try and do this one if it's still available,,,,,,
266438538,1512,Issue,All yours -Zuber !,,,,,,
266439208,1512,Issue,"Unless you prefer the organization ones I also just raised #1513 and #1514 in which case Im happy to knock over this protected branches one since Im pretty familiar with this area.  Up to you though, if you want to do this one that's cool",,,,,,
266440002,1512,Issue,I want something small in order to get back into things.Lets see if I can get this one done fast enough to start tackling those also üòÄ,,,,,,
266455747,1512,Issue,"existen datos ahora.ALG ServicesOn Dec 12, 2016 7:52 AM, ""Ryan Gribble""     fields being provided/not provided)    -    Returned by the existing GetBranchProtection method (add to our    BranchProtectionSettings response object)    -    On new methods to Get",,,,,,
266708720,1512,Issue,"How exactly do you want the additional ctors to look?Currently there are 2: one that takes only a `BranchProtectionRequiredStatusChecksUpdate`, and the other that takes a `BranchProtectionPushRestrictionsUpdate` in addition.Based on my understanding of the docs: `You can, and should, pass required_pull_request_reviews as well. While this is not required currently, it should be treated as such and will be soon.`,  the `BranchProtectionRequiredPullRequestReviewsUpdate` object is different in that it can not be disabled by passing in null.This would lead to a total of 3 ctors:- `BranchProtectionRequiredPullRequestReviewsUpdate` + `BranchProtectionRequiredStatusChecksUpdate`- `BranchProtectionRequiredPullRequestReviewsUpdate` + `BranchProtectionPushRestrictionsUpdate`- All threeDoes that make sense?",,,,,,
266735950,1512,Issue,"I would have thought passing null means review isn't required at all, then passing the object means review IS required (with the boolean indicating whether admins also have to comply with it or not). If you can't pass null how do you indicate no review is required?",,,,,,
266738981,1512,Issue,"Hmmm... Had not thought of it that way, and you are probably correct.But the docs seem to imply otherwise as for the older params they specify `pass in null to disable` while for the new param they don't.So I am going to assume you are correct, and try to write an integration test proving it.",,,,,,
268786431,1512,Issue,"I didn't get to writing the tests yet, but am making a pr just to get another set of  üëÄ on it as soon as possible",,,,,,
268028801,1511,Issue,Is [this] what you're looking for? And then should the tests be modified to use ReviewComment now?,,,,,,
268075277,1511,Issue,"Yeah pretty much, although the obsolete message wording should be more in line with other examples in the code base. It also needs to be done in both the interface definition and the concrete implementation and also for the `Observable` client/interface And yes updating any other test code should be done now, so that later on the removal of the deprecated endpoint is simple/surgical",,,,,,
268285397,1511,Issue,"Ok and just to be clear about the Observables. That would require changing  `IObservablePullRequestReviewCommentsClient.GetComment(long repositoryId, int number)` and `IObservable GetComment(string owner, string name, int number)` correct? And does anything need to be done with `Task GetComment(string owner, string name, int number)`?",,,,,,
268520003,1511,Issue,What I actually meant was to make the same rename to the variable name in the observable API client structure...  But you are spot on that the internals of the observable methods will also need to be tweaked to call the new client's pathIf you're keen to work on this just push up a PR with your progress and we can work through it there üëç,,,,,,
266425994,1510,Issue,"Hey, if you have a read of #1470 there is some explanation there, but basically the fields you mentioned aren't the correct ones.  There was a `SubscribersCount` field which was correct but it was deprecated and replaced with a separate API call.  So the current official way to get this info is via a call to the `client.Activity.Watching.GetAllWatchers()` call.  However as the `SubscribersCount` field was confirmed as being supported for the lifetime of the GitHub API v3, I actually suggested re-instating this field in PR #1473 which is not yet merged",,,,,,
273615920,1510,Issue,#1473 should have resolved this with the `SubscribersCount` field,,,,,,
266429871,1509,Issue,"`GetLastApInfo()` returns the `ApiInfo` from the last call that was made - so you need to have made another ""regular"" call using the same `GitHubClient` instance, prior to calling `GetLastApiInfo()` in order to get data back?If that's not the issue, can you please provide a code sample reproducing the problem?  Ive just run through [the integration tests] locally and they are passing OK on my side...",,,,,,
268394411,1509,Issue,"I'm using the `GetLastApiInfo()` as part of a quick console app I'm writing and can confirm it works as expected for me (null on first call, populated for subsequent calls).",,,,,,
268689898,1509,Issue,"Working just fine for me too, using 0.23.0 in an ASP.NET Core app.",,,,,,
268875257,1509,Issue,"mmmh, ok can't get it working, always just returns null. Assume it's something weird with my setup and dependency injection perhaps.Will close this off anyway.",,,,,,
268875606,1509,Issue,"if you're creating a new instance of the client per request, the client likely won't ever have the ""last request"". May want to look at how many instances you're creating within your DI setup.",,,,,,
280191698,1509,Issue,Actually it seems to work fine for most client requests except for when calling the search api.If calling `gitHubClient.Search.SearchIssues(search)` for example then gitHubClient.GetLastApiInfo() is returning nullIs this because the search api has separate rate limits from the rest of the api?,,,,,,
280194668,1509,Issue,"so to make sure I understand, the issue is basically:| Action | GetLastApiInfo() Result | | | ------- | ------------------------- | - | | Non-search API call | null | ‚úÖ || 2 non-search API calls | has result | ‚úÖ | | Search API call | null | ‚úÖ | | 2 search API calls | null | ‚ùå |Is that correct?",,,,,,
280203589,1509,Issue,yes,,,,,,
293169396,1509,Issue,"While looking at something else I found the reason for this!  [This condition] causes a null `ApiInfo` object to be stored as `LastApiInfo` if any of the various properties are null.  In my case I was debugging something and the Api response did NOT have an `ETag` header, which meant the `ApiInfo` object was then not attempted to be stored.  The fix would be remove that condition and just guard against any of the sub elements being `null` but still clone as much of the `ApiInfo` object as is present.",,,,,,
264331398,1508,Issue,"The second parameter is the unique identifier for a pull request. For example, #1503 is the identifier for this pull request: If you just want to enumerate all open pull requests, use this method: Moreover, if doesn't exist a pull request in a repo, octokit throws me an exception..This is due to a 404 being returned from the GitHub API - we just surface that because we don't have any data to give the caller.",,,,,,
264448036,1508,Issue,"Sorry, but how access to commits and files of pullrequest? I only access with PullRequest.commits and PullRequest.files.EDIT: Oh , y can access with the number . Thanks :)",,,,,,
262860246,1505,Issue,"Not sure if you found a solution, but here's mine:",,,,,,
261531264,1504,Issue,", waht do you mean with  add a BlahText property to always provide what the actual returned value was",,,,,,
261754064,1504,Issue,"What I meant by that comment was to have a string field containing the actual API response as well as the enum field containing the (attempted) deserialized enum value. Eg say the field is `public EventType Event`,  you would also have a field `public string EventText`",,,,,,
261922148,1504,Issue,"So, that means that we search all response types which have  an enum, add a `string` field for that enum, and add a new member `UnknownType` for that enum. Right?",,,,,,
261923576,1504,Issue,"So, that means that we search all response types which have an enum, add a string field for that enum, and add a new member UnknownType for that enum. Right?Yep that's what I was suggesting, although am interested in feedback from yourself and others, if this ""feels"" good...",,,,,,
261925606,1504,Issue,Feels good to me,,,,,,
261927168,1504,Issue,"I think it's a good solution. My only concerns was that we miss if any new values are added by the api. So like -Zuber says, we should implement a mechanism which inform us if there is a new added member.",,,,,,
261929006,1504,Issue,"That idea was only to allow us to then properly add the values into the enum, but I don't see a way to have `octokit.net` phone home from someones app, without them getting upset about it.As long as we can safely parse any value by having a `Unknown` member to fallback on, that should be good enough for the medium term",,,,,,
261937143,1504,Issue,"Ok, then lets go this way.",,,,,,
262236557,1504,Issue,"Sorry  I may not have been clear enough here.  The changes you've made wont achieve the desired result if you consider this example using your methodAnd say the API response contains json `{ my_property: ""value3"" }`With your current changes we will get `MyEnum.Unknown` for `MyProperty` and ""Unknown"" for `MyPropertyText` but what we actually want to get is the unrecognized string ""value3"" for `MyPropertyText`.There is also the case that when the field is `null` you will throw an exception trying to call `.ToString()` on it.So what we actually need to do is something similar to [the way we sometimes handle unix timestamps] where we map the actual api response field (`my_property`) to the string field (`MyPropertyText`), and then have the `enum` field just have a get only property that attempts the enum parse (falling back to `.Unknown` if it couldn't parse and returning `null` if the string value was `null`).something like this:With the helper function `ParseEnumWithDefaut()` being added to the StringExtensions classStringExtensions.csThoughts?",,,,,,
262239488,1504,Issue,"Ok. Now it's clear to me. I already had this in mind, but i don't know how to implement. Many thanks!!",,,,,,
262370597,1504,Issue,"Cool...  A couple more thoughts:- We shouldnt change the signature of the `ctor`'s as they are public and it would be a breaking change.  I guess we can still take the enum field in the `ctor` then assign it to the `xxxxText` property like `StatusText = status.ToString()`- I guess the helper function doing the enum parsing needs to handle the transition from snake case to camel case too, like the JsonSerializer does.  Eg the text value might be ""client_interface"" which we need to parse into `xxxx.ClientInterface` so it will need to convert snake_case to CamelCase first before trying to parse the value?- Need to think about how to test we have these changes correct.  We already have some serialization unit tests for response classes but I'd be suggesting that for each response class we touched, we add unit tests where we feed a json string containing a valid response and one containing a valid response EXCEPT the enum value is one that doesnt match the enum, and then assert all fields on the returned objects are as expected- Will there be any performance impact?  Previously the deserializer was caching enum deserializations so we were basically only ""figuring out"" each enum once no matter how many objects of that response type were encountered.  Now we dont have any of that overhead but everytime the enum field is accessed we are parsing the string to an enum.  If this does cause performance impact I guess we could set the enum field's value whenever we set the text value (ie the `ctor` and the `setter` of the text property) rather than everytime we access it.  It may not even affect performance thoughIm not sure if these changes are getting to kludgy though, need some feedback from  if we are heading too far down a rabbit hole.  I guess the alternative was throwing exceptions whenever an API response changed which wasnt great either :)",,,,,,
262462075,1504,Issue,"Ok, then i wait for feedback from  before going on.",,,,,,
262468479,1504,Issue,"And what we should discuss is the naiming of the new member `Unknown`. [Here] enum member is called `unknown`. I know this not an enum used by any response, but what if they implement such an member by the api.",,,,,,
262618707,1504,Issue,"There is always the trouble of a partner reusing a synthetic value (ie: 'unknown'). **unknown** is probably sufficient, but more descriptive naming may lessen the risk.An additional positive of more descriptive naming is that an external developer seeing the event type will know that this is an artifact of the octokit library as opposed to something odd with the REST api. **octokit_unsupported_type** or simply **octokit_unsupported** might be an alternative.That said, thank you, . This will be a useful feature for our team.",,,,,,
270950795,1504,Issue,"Hey, folks. Any more thought on this¬†PR? We¬†are seeing more issues of the kind¬†noted above in the original issue.",,,,,,
271078950,1504,Issue,"Bump  if you want to comment at all?Im happy to proceed with this change... My most recent points for consideration still stand.And a couple of further points:- I tend to agree with the comments about naming the placeholder value something more obvious... such as `OctokitUnsupportedValue` rather than just `Unknown`- Continuing the second guessing over ""Naming things"", Im wondering if `xxxRaw` is better than `xxxText` for the `string` property that will hold the raw actual response.  Thoughts?- Since going down this road will impose the requirement on all future changes to handle enums on response classes in this way I would like us to ""enforce"" this by adding to our convention tests  - find all enums that are used in Response classes and ensure they have this `UnknownApiValue` placeholder value  - find all Response classes that have an enum typed member (eg `Blah`) and ensure they have a `string BlahText` property",,,,,,
271138049,1504,Issue,sounds better to me as well,,,,,,
271452786,1504,Issue,-msft -Zuber this all seems reasonable :thumbsup:,,,,,,
311043162,1504,Issue,Is this change still needed after #1595?,,,,,,
311043546,1504,Issue,"Nope, this one can be closed in favour of #1595 :+1:",,,,,,
262936875,1503,Issue,I'm struggling to get the FAKE script running. If a kind soul comes by and spots the error ü§ó Otherwise I'll take another look at it a bit later.,,,,,,
263028396,1503,Issue,"I can't help on the Fake front so much, but I'd like to combine the CAKE changes I was working on  (#1440 / #1476)  with this branch since it seems logical to me to do the cake switch as part of the dotnet core work. I should be able to do some work on this this weekend",,,,,,
263035205,1503,Issue,"Sweet, that'd be great!",,,,,,
263123161,1503,Issue,"I merged your changes in with mine from #1476 and built+tested everything fine on AppVeyor using the Cake build üòÅ Basically the cake build is doing GitVersion to calculate version number, package restore, build, test and then packaging nuget packages, setup as artifacts in AppVeyor.  I also removed the Octokit.Next projects since they were just a sample before you got stuck into the real thing.As youll see from the commands in the AppVeyor.yml file - to run the build you just change into `./build` directory and `dotnet restore` `dotnet run` the Cake.Frosting build project.  Or if you want to debug the build you simply open up `/build/build.sln` in Visual Studio and hit F5.  Ultimately I will make it easier to run a build (eg a bootstrap `build.ps1` in the root directory) but for now its just the 2 commands, until we actually delete the Fake f# and associated scriptsTake a look at it on branch  and merge it into your branch if you think it's a go :+1:",,,,,,
263145638,1503,Issue,"Wow, great, I'll take a look at it soon. Thanks :+1:",,,,,,
263531257,1503,Issue,"Thank you so much !Next steps: - get the integration test project ported too, and restored/built/tested in CI - bump `System.Reactive` to v3.x based on , should I just get rid of `net45` and keep just `netstandard1.1`?",,,,,,
263713468,1503,Issue,I'd leave `net45` in there unless you're having specific issues with it,,,,,,
266251781,1503,Issue,"/  The integration test project has been ported to `netstandard1.1` and it turns out `System.Reactive` had already been bumped to `3.x` since it's the only version compatible with `netstandard`.What I think would be good is for you to have a look at some specific methods that were ported to .NET Core and see if you're happy with the implementation: - [`FormatUserAgent` of `Connection`] - [A fix on a test to check the body contains expected values]. The original implementation was trowing a `'object' does not contain a definition for 'fingerprint'` - [A change in SimpleJson since `SerializationException` doesn't exist in `netstandard` land]There might be others, I'll have deeper look.Could you also let me know what you think is missing / what we have to focus on to get closer to a merge?Thanks for the support, it's really appreciated üëç",,,,,,
268787318,1503,Issue,"In terms of the #defines - Some code is referencing `HAS_REGEX_COMPILED_OPTIONS` but this isnt defined for any project.  Im thinking the `net45` one should set this?  There are also perhaps other #defines in a similar boat (eg code that uses them but no projects define them, or projects that define something which isnt actually used anywhere in code)- The `HAS_TYPEINFO` define is used to wrap most calls to `GetTypeInfo()` but there are some in the code base that are ""unguarded"".  Is this a problem?  If it's not a problem, then why do we need to guard any of them?",,,,,,
268788287,1503,Issue,"This is really great stuff  I can't spot anything too serious and everything is locally working for me including builds in VS2015 and cake script, unit tests, integration tests etc.  I guess the next steps are to actually prove things are working (eg a running dotnet core app on on mac/linux/windows using octokit.core library) as well as a traditional full framework dotnet app on windows using the newly built library.  We can also work on our nuget packages (AppVeyor should be spitting them out) to see if they are working etc...  The last piece of the puzzle was source linking in the PDB files but I dont think either of the 2 options mentioned (SourceLink and GitLink) will work for us at this time.  I found another fork/derivative recently that Im going to look at [PdbGit]",,,,,,
268920024,1503,Issue,"Thanks for the review , much appreciated. I pushed some changes according to your comments.You were right for the `HAS_REGEX_COMPILED_OPTIONS`, it was meant for `net45` but I forgot it.I made some changes to the reflection code based on a trick  used, which is to define the `GetTypeInfo` method for platforms that don't have it. This way, you can use `GetTypeInfo` consistently in your code without having to guard for it. A few other extensions methods were created to create missing APIs in `netstandard1.1`  that exist in `net45`, like `GetProperty` or `GetMember`.",,,,,,
271007789,1503,Issue,"regarding making sure everything works, do you want to publish a pre-release package on NuGet and asking people who are keen to try to update and make sure their apps still work? Or were you leaning towards us making sure it looks OK?",,,,,,
271703117,1503,Issue,"My bash-fu is not great, I'll have a look at what happens later.You can now use `.\build.cmd` and it will invoke CAKE. Parameters can be specified with the `--name=value` syntax.Here are the parameters I found in the build project and their default values:| Parameter name  | Default value | Other possible values                           ||-----------------|---------------|-------------------------------------------------|| `target`        | `Default`     | `Dotnet-Unit-Tests`, `Dotnet-Integration-Tests` || `configuration` | `Release`     | `Debug`                                         || `forcepublish`  | `false`       | `true`                                          |",,,,,,
272108754,1503,Issue,"/  I updated the build files so they use the CAKE build.How do you think you'll integrate PdbGit in the process? It looks to me that we need to hook this into the CAKE pipeline since NuGet packages are created as part of it. A very quick search leads me to think that we can't just execute an .exe from CAKE, we'd need to create some code that wraps that execution. Is this correct?Cheers!",,,,,,
272127966,1503,Issue,"Alright, I took a shot at integrating PdbGit in the CAKE pipeline. It was quickly put together and possibly not very robust, but it works on both my local and AppVeyor.",,,,,,
272294223,1503,Issue,Wow that's awesome! Have you actually tried source debugging the built dll/pdb?,,,,,,
272296621,1503,Issue,"*Edit:*I tried with the symbols NuGet package artifacts of the latest AppVeyor build. I can see VS trying to load a file from GitHub. It doesn't work though as it's trying to get the file from [the octokit.net organisation] repository, which is the first issue. The second thing is what I suppose is the commit SHA it's linking to, and I can't find it in either `octokit.net/octokit#master` not `mderriey/octokit.net#port-to-dotnet-core`.Again, this is all very new to me so maybe I'm making false assumptions.---I haven't :confounded:. The instructions look pretty simple but every time I tried it in the past I was never able to make it work...Sorry about that. Do you think you could give it a go? If not I'll try my luck once again :+1: As an aside, I'm very new to source linking, so please forgive my ignorance. Could you tell me why neither SourceLink nor GitLink would work?",,,,,,
272324934,1503,Issue,"Im also not very across this stuff either by the way.  My basic understanding is that source linking allows stepping into the source of a nuget loaded dll without requiring symbol servers etc.  It somehow embeds the links of the files on github into the PDB file.SourceLink and GitLink both scraped csproj files and so on, so they werent compatible with dotnet core (due to project.json) but then even with the ""new"" csproj for dotnet core now, I suspect they will still need to be changed since the csproj doesnt actually contain all files anymore and just has globs etc.  PdbGit was another one I found which seemed to take a different approach and you pointed at the actual PDB files rather than the source project file, although I have no idea if that means it would work with dotnet core PDB files or not etc...  It's pretty much stuff that needs to be researched... and in the meantime I believe one or both of SourceLink/GitLink are making moves to support dotnet core now that the new project structure is here.In terms of PdbGit it probably makes sense that an AppVeyor build from a PR in this repo wouldnt know to reference files/commits from the contributors fork/branch and is instead trying to hit the official repo... although it's weird that the commit hash doesnt seem to exist anywhere :grining: I guess we can always look at the PdbGit source code or reach out to the author to answer some of these questions.  It also could be possible to pass parameters to PdbGit for the SHA and repository to use (but then Im not sure if AppVeyor even knows those details).It's not really important to build source linked PDB files from pending PR's though anyway... we really just want the ""official"" builds from the octokit repo to have that capability.  What I'd like to do when we cut over to this dotnet core and CAKE stuff, is have every build from master branch publish a pre-release package to nuget.org, and then periodically do the ""official"" releases like we do now.",,,,,,
272333249,1503,Issue,"Alright, after cloning the repo [like AppVeyor does], posh-git shows me that `326116e` commit SHA that [PdbGit uses to link sources]. I don't know where it comes from, though.So what I did is a fresh clone of the repository that lives under my account, built it, created a console application pointing to the newly built assembly with the modified pdb next to it, and gave it a go.It partially works, in the sense that I can F11 into the code from the Octokit assembly, but it's off by a line in the file that I tried. Trying to set a breakpoint on a specific line of code would have VS show a popup saying `The following breakpoint cannot be set [...] The breakpoint failed to bind`.---",,,,,,
272368802,1503,Issue,"Unfortunately this doesn't work. As far as AppVeyor is concerned, the repo comes from `octokit.net/octokit`. I know it's not a big deal but I wanted to see if I could get this working.Now here's a crazy: how about we publish a prerelease package of Octokit targeting `netstandard1.1` and use it in this PR to get the correct repo and commit information since AppVeyor gives us the PR number? I know it's a very small test and won't cover much, though.What are your thoughts?",,,,,,
272692737,1503,Issue,"Yep I think we can publish a prerelease alpha package off this branch (without source linking in the PDB) so we can play around with it further in test projects and get something in the hands of our users so they can kick the tyres too.  If you also want to play with writing a CAKE helper that uses that octokit dotnetcore library to find out the correct URL to pass to PdbGit so source linking of pending PR builds works from the contributors source branch that's cool from a ""nailed it!"" perspective... although not ""necessary"" if you dont want to, since I dont think we would ever publish packages from a pending PR.  I do plan to step up the release frequency this year, including automatic publishing by the CAKE build script of every merged PR to master as a prerelease package to nuget, but I dont think packages from inflight PR's would be a thing wanted or needed.  Still, for ""science"" it could be cool to see if you can get it working üòõ",,,,,,
274234579,1503,Issue,and I have made a few more tweaks and all the integration tests are now passing.I'm pleased to announce we now have Pre-Release packages up on NuGet!,,,,,,
274234756,1503,Issue,Im going to merge this PR into the `dotnetcore` branch I just created.We can then correct any further issues via specific targeted PR's for better tracking.Ive also created a Milestone to track everything related to dotnetcore,,,,,,
274235120,1503,Issue,- you sir are a LEGEND :+1:![],,,,,,
274289762,1503,Issue,![]![]Congrats to the both of you on getting this preview out! Keep up the awesome work üíñ!,,,,,,
260064660,1502,Issue,Evidently th new reviews stuff has added some new event types to this API (and probably to webhooks as well) I think it's hard to track this sort of thing with a concrete enum as we don't want to break everytime an upstream event type gets added. Yet making it a string loses some niceties as well. I'd propose we could shoot for a best of both worlds approach involving - have an `Unknown` enum member and catch any failed deserialization so this value can be used rather than failing- add a `BlahText` property to always provide what the actual returned value was  Thoughts?,,,,,,
260066821,1502,Issue,"I like that rather a lot. Otherwise, we‚Äôll continue to hit one-off issues such as these every time a new set of features around issue events are released.-DrewFrom: Ryan Gribble [mailto:notifications.com]Sent: Friday, November 11, 2016 1:56 PMTo: octokit/octokit.net octokit.net.github.comCc: Drew Johnson Drew.Johnson.com; Author author.github.comSubject: Re: [octokit/octokit.net] Event types not covered by EventInfo API appearing in event stream, causing argument exception (#1502)Evidently th new reviews stuff has added some new event types to this API (and probably to webhooks as well)I think it's hard to track this sort of thing with a concrete enum as we don't want to break everytime an upstream event type gets added. Yet making it a string loses some niceties as well.I'd propose we could shoot for a best of both worlds approach involving-   have an Unknown enum member and catch any failed deserialization so this value can be used rather than failing-   add a BlahText property to always provide what the actual returned value wasThoughts?‚ÄîYou are receiving this because you authored the thread.Reply to this email directly, view it on GitHub, or mute the thread.",,,,,,
261426329,1502,Issue,Any thoughts from   -Zuber about this enum approach?,,,,,,
261470505,1502,Issue,That approach makes the most sense.Would be cool if the serializer could phone home on error and open an issue to add the new value to the enum.,,,,,,
261470801,1502,Issue,üëç to -Zuber,,,,,,
261425649,1501,Issue,Hi  sorry for the delay in responding.The builds are currently failing unit test let me know if you need help with it,,,,,,
262420812,1501,Issue,finally understood. they already have 2 parameters which contain pagenation data....sorry for messy commits.,,,,,,
271084563,1501,Issue,"Sorry for the delay, this looks good to merge now!  Many thanks for the contribution, and for your patience :)![LGTM]",,,,,,
271315801,1500,Issue,I believe this is now closed via #1501.,,,,,,
257161324,1498,Issue,excellent spot - thanks!,,,,,,
256991265,1497,Issue,"There's an outstanding convention test failing here:I'm not sure how I feel about the pluralization change on the whole, especially when we made a lot of changes to `IGitHubClient` to drop these...",,,,,,
257063703,1497,Issue,"Yeah, for better or worse the octokit convention is for singularly named clients. It's not really fitting to change just this one item to pluralised form",,,,,,
257065402,1497,Issue,Updated /cc  |  Hmm... looks like some changes are required in ObservableDeploymentStatusClient.cs too... WIP.,,,,,,
257078976,1497,Issue,"Interesting! It looks like DeploymentsClient was moved under Repository back in 2014 and removed from the `IGitHubClient` interface, but inadvertently left behind in the `GitHubClient` concrete class üòù Nice pickup! Hmm... looks like some changes are required in ObservableDeploymentStatusClient.cs too... WIP.No worries, Ive marked `[WIP]` in the PR title - just edit that out when it's ready for review/merging",,,,,,
261915591,1497,Issue,"Just getting back on top of things, looks like this one is good to goMany thanks for the contribution!![LGTM]",,,,,,
256183040,1496,Issue,Hey  What level of access to the organisation/repo do the user credentials you are providing for the API call have?  In order to list out admins you would need to be an owner of the organisation I'm pretty sure,,,,,,
256211766,1496,Issue,"From the [docs] All actions against teams require at a minimum an authenticated user who is a member of the Owners team in the `:org` being managed. Additionally, OAuth users require the ""read:org"" scope.",,,,,,
256212326,1496,Issue,The authenticated user is Site admin and owner of all orgs.. Github version is 2.6.9.... it worked before migrating from 2.4.3,,,,,,
256342718,1496,Issue,The below curl gets me what i want but how can this be achieved via Octokit ? curl -u username:password /repos -k,,,,,,
256348860,1496,Issue,"Yes the [API call you highlighted ] is already implemented in octokit as `client.Organization.Team.GetAllRepositories()`And the reason why the first call you mentioned doesnt work anymore is that the github API only returns limited team information on the ""get teams for repo"" call, as you can see in the [api docs here].  I cant be certain but I think this all changed when the organization permissions were revamped [back in September 2015].The interesting thing is that in GitHub Enterprise this change was in 2.4 so Im not sure why you weren't already running into this.  Perhaps it was only when those organization changes [came out of preview] and then whichever subsequent GHE release (2.5 or 2.6) that made it into?Anyway try out the `Team.GetAllRepositories()` and let us know if that works for you?",,,,,,
256355139,1496,Issue,- thanks that worked.we migrated recently from 2.4.3 to 2.6.9 and the contractor who was working on this task had his contract ended. So been pulled on to this task... Thanks a lot for the help... appreciate it!,,,,,,
255869618,1495,Issue,"Nope, looks like the GitHub API is now using `PullRequest.Comment` to return [Review Comments] rather than comments on the PR itself. I'll ask around and see what's changed.I'm not sure how long this is guaranteed to work, but here's my workaround:",,,,,,
255902933,1495,Issue,Thanks for the work around.  That got me unblocked.,,,,,,
259363587,1495,Issue,But.. I think there's no API which can handle optional parameters in `/repos/:owner/:repo/issues/comments`.[Issue.Comment.GetAllForRepository][PullRequest.Comment.GetAllForRepository]Thanks,,,,,,
259538444,1495,Issue,"I'm not clear what you were looking for in terms of options here - could you elaborate?EDIT: ah yes, I see what's missing. I'll open an issue for this.",,,,,,
261426435,1495,Issue,"Given that #1500 is opened, are we happy to close this one?",,,,,,
263152928,1495,Issue,"I think this is a separate issue to #1500. If this endpoint is now serving up different data, we need to address this as a breaking change (introduce `PullRequest.ReviewComment` and obsolete `PullRequest.Comment` maybe?)",,,,,,
263998817,1495,Issue,"OK so did you get confirmation that this had changed upstream?  I thought for as long as Ive been using octokit it was like this - Eg since `PullRequests` are also/actually `Issues`, the ""comments"" you see on the discussion area were always obtained from getting them from the `Issue` API, and the ""comments"" on the PullRequest API were always the ""review"" comments... even before   all the changes to make code reviews a native/first class concept.  I just want to clarify with  you said this is how you expect it to work, not necessarily that it used to work like this and has since changed, right?I dont disagree that we could rename the `PullRequest.Comment` API cliient to `PullRequest.ReviewComment` but just trying to quantify whether this was an upstream change or just a legacy/confusing name scenario",,,,,,
264007221,1495,Issue,"I just want to clarify with  you said this is how you expect it to work, not necessarily that it used to work like this and has since changed, right?Correct.  The code sample I posted is just my expectation of how the API should work.",,,,,,
266432746,1495,Issue,"OK, since this was just an expectation thing rather than any kind of breaking change, Im going to close this issue out.  Ive also raised #1511 to tweak the naming of `PullRequest.Comment` to `PullRequest.ReviewComment` to make the naming clearer and better aligned with the API docs",,,,,,
253498848,1493,Issue,I approve of this :+1: Though there are other overrides of this as well;,,,,,,
253499814,1493,Issue,"üëç thanks for pointing that out, will get to them soon",,,,,,
253504746,1493,Issue,Done üò∫,,,,,,
254082534,1493,Issue,-Zuber thanks!,,,,,,
254620134,1492,Issue,"Instead of modifying the existing projects, I think I _will_ just add two new projects that target the Xamarin unified iOS API: - Octokit-Xamarin.iOS- Octokit.Reactive-Xamarin.iOSI'll submit a PR soon when it's ready.",,,,,,
254709313,1492,Issue,I'll submit a PR soon when it's ready.So this PR is no longer needed?,,,,,,
254709382,1492,Issue,Correct. I'll submit a new one.,,,,,,
252541234,1491,Issue,"it's been a while since I've looked at our Xamarin Studio support (I'm pretty sure my license expired too), so I'm not quite sure how to proceed here.We've had [Microsoft.Net.Http] as a dependency for a while - it's technically a PCL as well, so I'm not sure whether something has changed and we should target something else for the Xamarin platforms. Why is the dependency resolution choking on Microsoft.Net.Http.2.0.20505 when the package config clearly contains a reference to version 2.2.29?:Check out [the nuspec] as that should be more relevant to the issue here (we don't restrict to a certain version).",,,,,,
252548138,1491,Issue,"I've actually already begun to take it upon myself to convert the csproj files over to supporting the unified Xamarin.iOS APIs. It's mostly just matter of swapping out the project type GUIDs in the csproj's, and then referencing the new targets.I'm working on a fork. I should have a PR ready sometime in the next 24 hours. :)",,,,,,
252548235,1491,Issue,I'll make sure the entire solution is buttoned up before I submit,,,,,,
252624947,1491,Issue,", here's the PR:",,,,,,
301657293,1491,Issue,were you able to fix this? I'd really appreciate it if you would point me to a solution or even a workaround for this.,,,,,,
532194650,1491,Issue,"Closing this out as we've now moved away from PCLs to targeting .NET Standard (we target .NET Standard 1.1).If you are interested in seeing us support .NET Standard 2 or later, please open a fresh issue so we can discuss it further.",,,,,,
252504360,1490,Issue,"Hmm, I might need some help understanding why the integration tests fail.I supplied a username, organization, and token in `Octokit.Tests.Integration.Helper` and the rest seemed to work for me.",,,,,,
252521994,1490,Issue,"these failures appear related to the unit tests - check the mocks locally as they may need to be updated.Also, have you checked the [Slow Tests] section in the CONTRIBUTING docs? That should help you setup your environment for testing.",,,,,,
252619705,1490,Issue,"Hey  I didn't see the Slow Tests documentation, I will definitely give it a try tonight.It's just odd because I did what I feel was an equivalent locally, which passed during tests.I'll let you know how it goes.",,,,,,
254064456,1490,Issue,Good to go.,,,,,,
254709663,1490,Issue,thanks!,,,,,,
252507577,1489,Issue,"Thanks for the PR üëç Adding the `HtmlUrl` is üíé - this is the url to this milestone on github.com and definitely should be included But fields like `LabelsUrl` generally wouldn't be added to octokit.net, since we aim to provide a c# model over the github API, we don't normally expose the internal API hypermedia url links to the end user. Instead we provide access to the [associated API endpoint] through the object model, in this case it's at [`client.Issues.Labels.GetAllForMilestone()`]Given the above, are you cool to drop off that labels field from the PR? If not let us know your use case and we can discuss üòÄ",,,,,,
252583911,1489,Issue,Done,,,,,,
253516754,1489,Issue,"Sorry for the delay, have been having a bit of no home computer time this week :)Thanks for the PR!![LGTM]",,,,,,
252349417,1488,Issue,is that what you have in mind? Or do you prefer another way?,,,,,,
252415294,1488,Issue,+1 on not making a breaking changeThe overload approach you've gone with seems ok to me :+1:,,,,,,
261923055,1488,Issue,Sorry for the delay  This LGTM and the integration tests are üëå plus the revisions make it a non breaking change üòÄ Thanks for the contribution!![LGTM],,,,,,
261927591,1488,Issue,"No problem, thanks for the merge :smile:",,,,,,
253496753,1487,Issue,"I'm working on trying to figure this out.If we come up with something that works, there are a number of other tests that are currently skipped for the same reason of needing admin rights",,,,,,
253503621,1487,Issue,"The main issue I am hitting is generating any sort of traffic.Calling `new WebClient().DownloadStringTaskAsync(...)` does not seem to register as a hit.I see two options:1. Assert `referrers.Count` is 02. Create a browser object, navigate to url, ect, ect.Is there another option I am missing?",,,,,,
253516362,1487,Issue,"one other way could be to create a ""shared"" octokit-test organisation and repo and user, then embed a personal access token for that user into our test code.  This could either be used to run those [RequiresOrgOwner] type tests under, or could also be used behind the scenes to add the user's configured test account to the organization as an owner, so the tests would then work",,,,,,
253717698,1487,Issue,"I'm not sure how that is different then what we already have with the user, org, and access token set in environment variables?",,,,,,
253724405,1487,Issue,A shared organisation that all octokit contributors test account  would be added to (using API key hardcoded in the code base) with appropriate permissions so the tests requiring owner permissions would work (and the data would be real since the repos are existing and not created just for the test),,,,,,
251348433,1486,Issue,thanks!,,,,,,
251078253,1484,Issue,"I'd like to include #1477 if upstream github API fix for create repository call gets resolved before the release ETAAlso I just ran into a minor overlooked thing caused by #1445 today which I've just pushed PR #1485 for, which should be included in the release",,,,,,
251250499,1484,Issue,I've added those two PRs to my checklist,,,,,,
251360900,1484,Issue,I'll open up some tasks for those integration tests I've muted here tomorrow.,,,,,,
251364343,1484,Issue,"Are you still shooting for Thursday release or going to go earlier?Regarding #1477 I checked just now and the behaviour is unchanged.  It's reasonably safe to üö¢ anyway since it just means that allowed merge method fields are ignored on repo creation, and the respective response fields are returned `null` in the response to the `Create()` call as well.  Once github.com is rectified, our Create method and integration test should pass.  Meanwhile the `Edit()` and `Get()` repository methods work fine, so the workaround is to create a repo then use the `Edit()` method to set the allowed merge methods.  I'd like to get support out for configuring those merge methods if we can, since it's a popular feature and it'd be good to support it this quickly after it was anounced.  Thoughts?",,,,,,
251365186,1484,Issue,"yeah, still shooting for Thursday. I'll look over #1477 in the morning and check the tests are good to go.",,,,,,
251365513,1484,Issue,"If the `Create()` method is still no good, we could back out those changes if you aren't  happy to release it in that state while waiting for github API fix.  It will still be useful to release the `Update()` and `Get()` Repository methods since the functionality can totally be exercised with them",,,,,,
251365766,1484,Issue,"cool, I'll throw some feedback in that PR to see if we should partially ship it",,,,,,
251385166,1484,Issue,"Turns out it's a doco error and the create method isn't going to support the feature at this time, so I'll fix up that PR tomorrow",,,,,,
251530944,1484,Issue,#1477 is updated and good to üö¢,,,,,,
252127767,1484,Issue,"Oops, missed this yesterday due to other commitments. I'll push this out this afternoon.",,,,,,
252136444,1484,Issue,Published:- -,,,,,,
252278973,1484,Issue,![],,,,,,
250975866,1483,Issue,"Hi  thanks for the heads up ‚òù But the one you highlighted looks ok to me? It's an internal function, and inside that function the only await call DOES have `ConfigureAwait(false)` on there already? Happy for you to send a pull request for any you find to discuss/review further",,,,,,
251004118,1483,Issue,"![]Yeah, I think this is a necessary evil of `await` for library code - while`CloneHttpRequestMessageAsync` has it's own `await` and `ConfigureAwait` usage this doesn't mean callers know about it - it only sees `Task`. I'm concerned that your code using `.Result` - which will block the current thread - doesn't reflect reality. Are you able to provide a small sample WinForms app which uses `async void` or equivalent, so I can see this behaviour for myself?",,,,,,
251007362,1483,Issue,"Okay, now I'm confused. Using `.Result` allows resolving the task for a non-asynchronous application like mine. If I don't call `Result`, the code will simply continue to run without the task necessary terminated.Whether you call `.Wait()` on the task or use `.Result` directly, this will block the current thread until the task has completed. This is different to how `ICriticalNotifyCompletion` (the interface which `.ConfigureAwait(false)` returns) works around scheduling continuations. Nop, I cannot provide any `async void` that will not work, since if I create an async method, the UI will not be blocked.I'm not sure I follow - if you're `await`ing on the result of a task, it will be made available to you when it's ready. Like this:I'm not clear on the behaviour you're seeing - is it deadlocking, or just blocking the current thread?",,,,,,
251012142,1483,Issue,It's a deadlocking. The thread is deadlocked with the UI thread.This is what I needed to hear. Thanks.If you're not interested in submitting a PR I'll add this to my task list for the week.,,,,,,
251012750,1483,Issue,"single-line is preferred, yes",,,,,,
250954766,1482,Issue,excellent spot! Thanks!,,,,,,
250402775,1480,Issue,Hey . I try to `FixProjects` and get this,,,,,,
250422530,1480,Issue,"How are you executing FixProjects?  Are you up to date with latest master?  [This change] to `build.cmd` bootstrap script updated the nuget restore command to grab a later version of FAKE that brought dotnet core tasks.  It was 14 days ago so I assume you already must have that commit, but from the error message you're getting it looks like FAKE doesn't recognize `DotNetCli` tasks which would indicate you arent on that later version that the bootstrap script should be updating to?",,,,,,
250424331,1480,Issue,"Mmhh, but i'm currently up to date with master",,,,,,
250426512,1480,Issue,"i have looked in tools folder an it seems that i still have fake version 4.28 installed. How can get update fake. Normaly `build.cmd` should do this, right?",,,,,,
250427706,1480,Issue,"Ok, i've got it. I have renamed the `FAKE.Core` folder in tools and then run the build script again. Now it works. It seems that `nuget.exe` doesn't override the existing version.",,,,,,
250428854,1480,Issue,"~~mmh, but now there are untracked files for the `FAKE.Core` Folder. How can i exclude this folder? It seems that the exclusion in `gitignore` is not recognizing this new folder.~~",,,,,,
250429671,1480,Issue,I don't have delete the renamed folder üò∏,,,,,,
250685245,1480,Issue,"Hi , how would we named [this]. ??",,,,,,
250724527,1480,Issue,"Naming things is always hard üòÄ what you've suggested sounds fine Although you probably know me well enough to know that I always have an opinion :grinning: so if discussion is wanted over naming of the request/response model classes, my 2c is that ""Project""  is already a sufficient enough entity to name everything with so I probably would use ""Project"" ""ProjectCard"" ""ProjectColumn"" rather than ""RepositoryProjectXxx"".  For example a pull request, issue etc all belong to a repository but we don't call them ""RepositoryPullRequest"" ""RepositoryIssue"" That's just my thoughts, not saying you have to rename everything (unless you agree with my assertions)",,,,,,
250726161,1480,Issue,Although you probably know me well enough to know that I always have an opinion üòÄI know üòÑ üò∏ . But i wasn't sure because there are sometimes classes which be called different. For eg. and on the other side there is `RepositoryIssueRequest.cs`. So i agree with you that `Project`sounds better then `RepositoryProject`. So i think will rename them.,,,,,,
250726651,1480,Issue,"Or another examples are `RepositoryInvitation.cs`, `RepositoryTag.cs`, `RepositoryHook.cs`, and there are lot more, mmhhh üòï",,,,,,
250727396,1480,Issue,"Yeah I guess I can only vouch for things since I've been contributing so for anything that pre-dates that I reserve the right to say I wouldn't have named it that, haha üòÇ A note on hooks though - you can have repo or organisation level hooks so in the case at least, it's necessary to denote the type/level of hook. Infact invitations also might exist at both repo an org levels?",,,,,,
250728299,1480,Issue,"Hopefully no one reads this üòú Ok, that make sense. So i agree as long as there are only projects for n<=1 types we call them Project.",,,,,,
255097687,1480,Issue,![keyboard]Phew ... tests are finished. So i think it's time to review.,,,,,,
257078499,1480,Issue,Hey  sorry for not getting stuck into this yet!  It's a busy time of year...Not sure if you saw but some changes were recently announced regarding this preview API.  Do you think it just impacts your endpoints and function parameters or does it also mean the actual calls need to live in a different place?[GitHub Developer Blog - Changes to Projects API],,,,,,
257116083,1480,Issue,"Hi , wow, that's a lot of changes. So i have to step through. Please correct me if i'm wrong1. There are 2 new endpoints `List organization projects` and `Create organization projects`2. The responses and the request of this two are same like for public projects. So i think they stay under the same client `RepositoryProjectsClient` and we name them `GetAllForOrganization` and `CreateForOrganization`3. `/repos/:owner/:repo/projects/:number` endpoints are deprecated and will be removed on 10. November. So i think we should wait for 10. November before we add this feature into client. So we can  already remove these endpoints and only use the new  id endpoints `/projects/:id`Or do you think we should add these changes now and remove them after 10. November? Do we have some work with scopes on client side?",,,,,,
257139499,1480,Issue,"Hey , it was a little late yesterday üò¥ . I just now realize that they completly reorganized the projects api. So i think like you say they need to live in a different place.1. I would create a client `ProjectsClient` with the api calls only for projects.2. Then i would create two new seperated clients for project cards and project columns `ProjectCardsClient` and `ProjectColumnsClient`What do you say?",,,,,,
257143029,1480,Issue,Yep this aligns with th API docs structure so I think it's the way to go. I guess this (significant changes) is the  risk we run when implementing these preview APIs üòÇ,,,,,,
257144405,1480,Issue,"Yeap, but i think it's the right way to add these preview features instead of waiting until they are finished!! Ok then i will rewrite clients and hope that they don't switch back üò∏ But there is still the question if we only implement the new endpoints `projects/.../:id`?",,,,,,
257196238,1480,Issue,"But there is still the question if we only implement the new endpoints projects/.../:id?Yeah definitely only do the new ones, since the old ones will be gone in the next couple of weeks anyway",,,,,,
257508707,1480,Issue,![happygif]üéâ üéâ,,,,,,
257548757,1480,Issue,So ... i have rewrite clients. Things to do is change the tests.,,,,,,
257802692,1480,Issue,"Soo, all is rewritten. Hopefully they don't change api again![fist]üò∏",,,,,,
257808058,1480,Issue,Integration test's all have passed except the one for Organization.  can you please [test],,,,,,
261937848,1480,Issue,Hey  Ive finally got around to pulling this down.  I had to make some changes to integration tests but other than that everything is looking :gem:Any chance you can give me permission to push my change to your branch by ticking the box on the right? ----->,,,,,,
261953547,1480,Issue,", `Edit from maintainers` is enabled",,,,,,
262110719,1480,Issue,"I found an additional problem when adding an issue card to a project column using projectCardsClient.Create.  GitHub wants the word 'Issue', not 'issue' for context-type.    However, in EnumExtensions, it ToLowers the property.  I'm not 100% sure the ramifications, so I'm not submitting a fix.  However, I can confirm that when I remove the ToLower, I can add a card.",,,,,,
262174345,1480,Issue,", thanks for that tip. I can confirm that is if 'issue' is lowercase it returns an error. ,  do you think thats an error by the api? Because in all other api such parameters are lowercase.",,,,,,
262177234,1480,Issue,"I have set `Parameter(Value=""Issue"")`. Now client works.",,,,,,
262177895,1480,Issue,", do you have the chance to push your changes for integration tests. Because i forgot to test to create a card from an issue.",,,,,,
262220606,1480,Issue,"OK ive pushed up the test changes and also updated to latest masterTo explain what i did with the tests:  There is no need to use GHE stuff for the tests as we dont need to create an organization, we can just create projects in the test user's existing organization.  Also had to tweak some of the asserts to only ensure the created projects existed in the returned values rather than the count being 2 (since existing projects may cause there to be more than 2).  I also simplified the helper functions to not pass around an entire repository context object but just the repository Id, and finally fixed a couple of bugs where repository name was being used instead of organization name :+1:All integration tests that are there are passing for me (and you should be able to run them all too) but I guess as you've pointed out, there still appear to be some methods that dont have tests",,,,,,
271093062,1480,Issue,"Hey , happy new year üéâ Seems this is ready to üö¢ ?",,,,,,
271116275,1480,Issue,"Yes, I merged in latest `master` and will just do a final review and integration test run tonight, then it can be merged :tada:",,,,,,
271186333,1480,Issue,Hey  did you check if the Projects API supports pagination?  Currently there are no `GetAll` methods implemented with `ApiOptions` overloads,,,,,,
271193287,1480,Issue,the documentation seems to suggest this is supported :wink:,,,,,,
271210679,1480,Issue,Soooo close!!!!If you can add the `ApiOptions` overloads please  then we can merge it in üòÄ ![],,,,,,
271228181,1480,Issue,I also added `ApiOptions` for `ProjectCards` and `ProjectColumns`.,,,,,,
271267178,1480,Issue,Changes look good :+1:We also normally have integration tests that prove the pagination is working - such as [these ones] for the PullRequest client,,,,,,
272655948,1480,Issue,"Im putting together a new release shortly, just wondering if you want some help with the integration tests for the pagination?",,,,,,
272687016,1480,Issue,"Hey , I'm currently on the road. Tomorrow I add the missing test's so that we quickly can close this PR",,,,,,
279224953,1480,Issue,any updates when this will be added? Just curious.  Thx,,,,,,
279252047,1480,Issue,I thought we were still waiting for more integration tests to be added... I'll need to have a look,,,,,,
316946450,1480,Issue,"Hey so I think ive tidied this one up.  While I was adding the missing pagination tests, I actually discovered there were some new methods and fields that hadnt been implemented back when this was first startedAll the tests are passing, including integration tests but it'd be great if someone can take a sanity check üëÄ before I hit the button?    -Zuber",,,,,,
316955591,1480,Issue,Looks good to me from what I can tell,,,,,,
316958100,1480,Issue,Ditto. Great work getting this back on track :+1:,,,,,,
317214122,1480,Issue,Thanks  for the ground work on this one!![LGTM],,,,,,
317214189,1480,Issue,release_notes:  Implement [Projects API (Preview)],,,,,,
251019516,1479,Issue,:sparkles: gonna pull this in for the release,,,,,,
250349042,1478,Issue,"Unfortunately the [Get the README] endpoint doesn't support providing a path - that's the behaviour we're using in Octokit.The [Get Contents] API supports providing a path, and looks like this in Octokit:However we don't support providing a [custom media type] so you could get the rendered markdown. #593 is the open issue discussing that.",,,,,,
250941703,1477,Issue,"Github support replied and confirmed there was some upstream problems which they've pushed fixes for. With those fixes, the Get and Update integration tests I added are now passing :+1:Still seems to be an issue with Create call which I've asked support to look into",,,,,,
251384486,1477,Issue,"Support reply regarding create method: Turns out that this isn't a problem in the code, but the documentation -- it was originally intended for the feature to be supported by the endpoints to fetch and modify a repository, even though the documentation says it should be supported by the endpoint for creating a repository (the documentation shouldn't have said that). We'll be updating the documentation to reflect this.So I'll remove the create method tomorrow then this PR can be merged",,,,,,
251530463,1477,Issue,"OK this is now good to go, I've removed the `CreateRepository` changes, but left the [commit in the history] incase github do end up supporting it, we can resurrect it",,,,,,
251536177,1477,Issue,I'm impatient and Travis is having issues,,,,,,
250195125,1476,Issue,"While this would take away one of the main pushes I have to learn F#,I think this will lower the bar for new contributors and therefore very welcome.",,,,,,
250376348,1476,Issue,Assigning myself but I hope others can also :eyes: over the changes and get a feel for it all :metal:,,,,,,
261141624,1476,Issue,Yo  check out . If you want to bluejeans / chat about this stuff let me know.,,,,,,
272656220,1476,Issue,Closing this off as it's now been incorporated into #1503,,,,,,
272672209,1473,Issue,Is some one able to give this one a :+1: ?  I'd like to merge it in,,,,,,
272675560,1473,Issue,Do I count? üòÉ Code looks good to me üëç,,,,,,
250393293,1472,Issue,Looks like a nice project üòÄ In the API they say that pagination is currently not supported. But i've tested with two projects and i can paginate (get the `Link` Header)!!??,,,,,,
250393796,1472,Issue,So should we go on with pagination?,,,,,,
250397569,1472,Issue,If it works then may as well include the `ApiOptions` overloads :+1:,,,,,,
250397903,1472,Issue,Ok. I create PR for this,,,,,,
274780152,1472,Issue,Any update on finalizing and when it will be added to NuGet package?  I'm looking forward to this feature.  Great work :+1:,,,,,,
317214223,1472,Issue,thanks for working on this.  Do you know when this will be added to nuget package?,,,,,,
317215970,1472,Issue,"Putting together a new release is next on my list!  In the meantime now this is merged to master, it will be in the nuget packages on our appveyor feed here:",,,,,,
317219330,1472,Issue,thank you,,,,,,
253494136,1471,Issue,Beat you to it üòÉ,,,,,,
248742426,1470,Issue,"Assuming I am understanding what you're referring to, I believe the API field name (and hence the octokit member name) is `StargazersCount` (on the `Repository` class)",,,,,,
248745297,1470,Issue,"Isn't the StargazersCount referring to ""Star"". Take octokit for example, it has  Watch: 123  Star: 1052  Fork: 531""Watch"" is the one I am looking for.",,,,,,
248747937,1470,Issue,"Ah sorry, indeed you are correct There is a `watchers_count` field in the API response that is not currently implemented in octokit.net. It should be a simple change, just adding a member called `WatchersCount` to the `Repository` object Typically missing fields like this are added as people run into them, but I would actually like to proactively add useful missing fields. I started the first step by auditing API response fields that are missing from our response model classes in #1400 (and sure enough, these watcher fields are listed)",,,,,,
249416019,1470,Issue,"Hey so I actually stumbled upon an old issue #699 that explains this `WatchersCount` property was actually deprecated and `SubscribersCount` is the field you want to use for this...  But then `SubscribersCount` field was also deprecated/removed in issue #736.  So apparently the ""correct"" way to retrieve this info is using the ""Watchers"" API `WatchedClient.GetAllWatchers()` instead.Although, since the API response still include the `SubscribersCount` field (showing the correct value of 125 for this repo, for example) and the linked blog in #699 mentions they will be supported indefinitely in API v3, perhaps it would be OK to add the field back in again. or  care to comment on these historic issues?  From my perspective, if `SubscribersCount` is still being returned AND contains the correct value, it was possibly premature to remove it and require additional API calls to get that information?Ive created PR #1473 to add `SubscribersCount` field back, as well as a couple of others that were missing (as per #1400)",,,,,,
249473089,1470,Issue,Assigning to myself to remember and investigate,,,,,,
248498215,1469,Issue,"Hi -work thanks heaps for your contribution!  :grinning: A couple of things for you:### Breaking changes to public interfaces/methodsBeing a public API we do need to be careful about not breaking existing users and the renamed methods in `ApiUrls` class would currently be a ""breaking"" change for people.  Whilst they are just helper methods, given they are `public` we could have users that are using them and as such I believe they would fall under our obligation to not make breaking changes without going through the normal process (see below).It makes sense to rename the existing `ApiUrls.Organizations()` to `ApiUrls.UserOrganizations()` as you've done but technically that means the old name can't be used for the new ""all organizations"" URL since it needs to be obsoleted.  You'll need to use a different name for that one such as `ApiUrls.AllOrganizations()`.### Maintaining naming consistencyWe try to follow a naming convention where `GetAll` gets the given resource, `GetAllForCurrent()` is for the current user, `GetAllForUser()` is for a nominated user etc.  So in this case, `GetAllOrganizations()` should really just be named `GetAll()` since they are in the organizations client already.  I realize you went with this option because the other methods were already just called `GetAll` but infact they SHOULD have been called `GetAllForUser(string login)` all this time... So it would be cool if you could rename `GetAll(string user) => GetAllForUser(string login)` as part of this change, and implement `GetAll()` as your new method rather than calling it `GetAllOrganizations()`.  Any renames would be done following the ""normal process"" outlined below.#### Process for breaking changes:Create the new method/implementation/classes and mark any old ones as We wait at least 2 releases before removing the obsolete items from the code base.  This gives users some notice (in the form of compiler warnings) before things change on them :+1: Let me know if you need any help with this and thanks for stepping up to correct this missing functionality!",,,,,,
248499171,1469,Issue,"Another thing I just realized is that the API docs mentions this ""List organizations"" API method is not paginated like normal methods (pagesize, count etc), and instead just uses the `since` parameter.  So you wont be able to take `ApiOptions` in your method signature, instead you'll need a custom request class with the `Since` parameter.  You can have a look at the `Repositories.GetAllPublic(PublicRepositoryRequest request)` method for some ideas on how to tackle that",,,,,,
249599422,1469,Issue,Hi  Thanks for your time and for the review. I did the modification you have requested.,,,,,,
251191502,1469,Issue,Hi  I have obsoleted the old `ApiUrls.Organizations()` and created the integration tests like you requested.If anything else let me know.Thanks,,,,,,
251260685,1469,Issue,"Thanks -work sorry I hadnt had a chance over the weekend to look at this.  I will try and do it tonight.  Have you actually run the integration tests?  I notice they are flagged as GitHubEnterprise (because they create organizations to then run the tests against, and create organizations is not avaialble on github.com only github enterprise).  For something like a GET call, we could potentially run the test against github.com but I guess that becomes hard since we dont know what organization ID to use as the `since` parameter (and as time marches on, any ID used in the test will start to become further and further back in time, leading to the test retrieving larger amounts of orgs until it eventually times out!).  So probably leaving the tests as `GitHubEnterprise` tests is fine, but we do just need to make sure they actually run succesfully of course :grinning:  I wll pull this down and run the tests etc and get back to you",,,,,,
261929934,1469,Issue,Sorry for the delay on this one üò≠ Ive run the integration tests and made a couple of tweaks and pushed them back up.This LGTM now - many thanks for your PR and particularly working through all the review comments üòÄ ![LGTM],,,,,,
248426118,1468,Issue,"We raised issue #1447 to implement this, and  has done the work in PR #1457  which should be merged soon. So it should be in the next release üëç",,,,,,
248428679,1468,Issue,Awesome! Thanks for the update   üëç,,,,,,
247894254,1467,Issue,Do you mean SSH key?  If so it's at `client.User.GitSshKey.Create()`,,,,,,
249532889,1467,Issue,"Alternatively, `client.User.GpgKey.Create()` is the other ""key"" that the GitHub API supports.Closing this out as implemented.",,,,,,
247487287,1466,Issue,"-jason are you referring to this limit? For requests using Basic Authentication or OAuth, you can make up to 5,000 requests per hour. Unauthenticated requests are much lower (60 per hour), and I highly recommend using authentication for interacting with the GitHub API...",,,,,,
247487689,1466,Issue,"Yes, I think so. How do I get the 5,000 requests per hour? Sorry, totally new to this.",,,,,,
247488277,1466,Issue,"-jason if you're only interested in doing something with your account, I'd recommend creating a [Personal Access Token]() with the permissions it needs. The [Getting Started] guide should then help you get started with Octokit.net.If you want to support other users running your app, you'll need to create an OAuth application so that users delegate permissions to your app and give you a token - instead of storing their credentials. This [sample] walks you through how to integrate this into a web application.",,,,,,
247490361,1466,Issue,"Thanks so much for the link. Looking at the OAuth setup, I am not sure what to put in the Homepage URL and Authorization callback URL since this console application will/might be running in the VM and triggered by task scheduler.",,,,,,
247491129,1466,Issue,-jason if it's going to be a headless task I'd recommend going with a Personal Access Token - but I don't know much about your setup and what data it needs to access through the GitHub API.I'll close this out as those are the two core scenarios for authenticated access.,,,,,,
247499564,1466,Issue,Looks like PAT will do. I got what I needed. Thanks for the pointers and help! Very appreciated. :+1:,,,,,,
246848900,1465,Issue,"This seems plausible according to [the reference source], but I'm not sure why this code shouldn't return an empty enumerable when there are no values in the response:",,,,,,
247013542,1465,Issue,"I'll need to double check. I believe that was the exception and stack trace I was seeing, but I agree that the `.ToList()` should not return `null`.",,,,,,
246530234,1464,Issue,"I'm _really_ not keen to do this, because everything in the Octokit API (ignoring Octokit.Reactive which just wraps it) returns a `Task`. And I'll point to [the documentation] the NServiceBus crew put out explaining why they don't do this either (yeah, they also refer to this project, whatever).But I asked  if this was actually a thing:&mdash; Immo Landwerth () But if people are really into doing this, and are willing to put in the work to migrate things properly - rather than just break the world - then I won't stand in the way.Feels    ?",,,,,,
246530515,1464,Issue,"Breaks literally every piece of software written using Octokit, for literally zero tangible benefits to users of the library. Easy decision.",,,,,,
246531243,1464,Issue,cc    for additional feels,,,,,,
246533001,1464,Issue,"Here is how I see this:- **When deciding on guidelines, consistency trumps virtually everything else**. Developers don't just use one component of .NET, they use a ton of .NET components. So even if an entire component is exclusively async, staying consistent with other components that offer both async and sync APIs helps. It also helps in code reviews because calling a method that is suffixed with `Async` but is not awaited is almost always a bug.- **We do not perform breaking changes**. Sometimes, guidelines come to be after a given API has shipped. That's unfortunate, which is why we have a special support group at Microsoft where we can cry, pet each other's back and drink hoppy beverages to deal with it. But that's how the cookie crumbles.So consistency is important, but breaking people's code just because it doesn't meet certain guidelines is silly and directly interferes with the reason we have guidelines in the first place: making our customers successful. Of course, you _could_ offer additional overloads that are properly named but then your component uses both naming conventions and code base will most likely ending up with calling a mixture. In my opinion, that's even worse because now the async suffix means nothing in Octokit.So I'd be in favor of closing as won't fix./cc",,,,,,
246533948,1464,Issue,"As I recall, the reason .NET has `Async` suffixes all over the place is because the original API was not async, and to maintain compatibility, instead of making the API async-first (as MS wanted), they instead added the `Async` suffix. MS decided not to break the API and every user out there even though an async-first API was their preferred choice.The irony of creating new APIs outside of the original framework (and octokit is not a part of the .NET class libraries, it is an independent entity that has its own identity and API design decisions) and making them sync-first with `Async` suffixes for the async behaviour is, well, ironic?",,,,,,
246535146,1464,Issue,"In my opinion, that's even worse because now the async suffix means nothing in Octokit. thanks for putting it so succintly :sparkles:",,,,,,
246541226,1464,Issue,"The main reason I suggested this was that when starting with the API this completely throw me off. I knew what I wanted had to be async, but I couldn't find any async methods. It's also really inconvenient not instantly knowing you need to put await in front of some code, but have to go look at the signature.As  said this is why coding guidelines are important and when working with multiple libraries it can really throw off a developer. I don't think the reasons you present are correct (it sounds more like rumors and doesn't really fit with other things that were in .NET before Tasks - take a look at what they did to WebClient for instance). It's just as much about readability, eases code-reviews etc. Just because we have async/await doesn't mean multithreading problems gets any easier (besides the less code needed), and it's nice when the code explicitly calls out that there's context switching, it's non-blocking, likely long-running etc.Regarding 's comment: Breaks literally every piece of software written using Octokit, for literally zero tangible benefits to users of the libraryNo. Consistency, predictability and readability of an API is not zero benefit. Secondly as I mentioned, when you provide the new overloads, you [mark the old ones obsolete], and [hide them from intellisense]. That means you won't see the old overloads clouding up intellisense, they'll still work and users gets warnings telling them to move to the new ones. That also takes care of 's worry that we'll have a mix of coding patterns throughout the code. That's quickly taken care off by cleaning up the build warnings.",,,,,,
246546753,1464,Issue,"That also takes care of 's worry that we'll have a mix of coding patterns throughout the code. That's quickly taken care off by cleaning up the build warnings.I'm not an expert in Octokit, but it sounds to me as if this would mean virtually marking all methods as obsolete, which will have significant impact on the consumers. That still seems excessive to me.",,,,,,
246547094,1464,Issue,"That's fair. I knew it was a longshot to begin with, but my OCD just couldn't handle it üòÄ",,,,,,
246564685,1464,Issue,"I'm not an expert in Octokit, but it sounds to me as if this would mean virtually marking all methods as obsolete, which will have significant impact on the consumers. For reference, here's how it would affect Octokit:- 668 public methods returning `Task` - 81 public methods returning `Task`- Of these, 4 are `public async Task`",,,,,,
246568126,1464,Issue,"Oh, and another interesting data point - the earliest commit on this project was from late April 2012, a few months before .NET 4.5 was released. The code was extracted from GitHub for Windows, but that gives you an idea of how far back this decision probably went...",,,,,,
246569033,1464,Issue,Task has been around since 4.0 / 2010 üòú,,,,,,
246576694,1464,Issue,"true, but the new `*Async` APIs in the BCL weren't added until .NET 4.5",,,,,,
246582030,1464,Issue,"Mark every method that return Task as obsolete it means mark Octokit.NET as obsolete (Observable methods are just wrappers). And I think that this is unacceptable for now. Time for such code convention decision is gone for Octokit.  Consistency, predictability and readability of an API is not zero benefit. I definitely agree with that, but not in case of Octokit and Async suffix. Octokit is fully asynchronous library, each method in each client is async. This .NET Framework 4.5 library and it doesn't have any legacy API that uses obsolete asynchronous programming patterns (such as [APM] or [EAP]). So, I think that in case of Octokit Async suffix not so valuable and can be omitted. The main reason I suggested this was that when starting with the API this completely throw me off. I knew what I wanted had to be async, but I couldn't find any async methods. Maybe, it will be nice add remark about lack of Async suffix in README.md with accent on the fact that Octokit is fully async?",,,,,,
246589470,1464,Issue,"This .NET Framework 4.5 library and it doesn't have any legacy API that uses obsolete asynchronous programming patternI don't see how that has anything to do with following the common .NET coding patterns for Task-returning methods, and it is completely ignoring the arguments for postfixing with async that has been stated above that has nothing to do with any legacy .NET.I get the argument that at this point you don't want to change your naming mistake - the ship has sailed and it is what it is..However I don't see how any other of the arguments presented in the entire thread against fixing the naming are valid. Those are all rooted in ""I just don't like it"", but that's the beauty of coding guidelines: They don't care :-)",,,,,,
246630548,1464,Issue,No Async suffix for Nancy. :),,,,,,
246637332,1464,Issue,"While do I see 's point, and I'm a great believer in following style guidelines, I think  put it best, in that not making breaking changes is more important. I certainly don't relish going through my codebases adding `Async` to the end of each call, and I imagine that for really heavy users of octokit this would be a real burden.So yeah,  has a good point, but the ship has sailed on this I think.",,,,,,
246652157,1464,Issue,Not that it's really required but my 2c is definitely in agreement that the üö¢ had sailed on this As  said if someone honestly feels passionately enough about this to make ALL the changes in a non breaking way I'd help get the PR through but I definitely don't intend to do it üòù,,,,,,
246692523,1464,Issue,"No worries. If you do change your mind, I have a code analyzer that'll auto-fix it in one big swoop. I could probably even tweak it a little to keep the old ones and mark them hidden and obsolete, so it would avoid the breaking changes.",,,,,,
246708210,1464,Issue,"I think  said it very succinctly. To prefix all methods (or even a majority) with Async is just rote, it misses the point of the convention. The point isn't to delineate asynchronous methods, it's too delineate deviations from the established api style. The established api style being either synchronous or asynchronous. Given an api with an asynchronous style, the convention should be the other way. For the deviating methods to be suffixed with Sync.",,,,,,
246867510,1464,Issue,"The API style should follow common .net conventions. It's a huge mistake to have different APIs that you use together use different API styles. If this is the ""API style"" for octokit, let me be frank and say it uses the wrong style. Octokit isn't the only API one codes against in an app. But if you're fine with that, so be it. The point isn't to delineate asynchronous methods, it's too delineate deviations from the established api style.Sorry. But no.",,,,,,
246873559,1464,Issue,"Alright, that's enough.",,,,,,
247195986,1463,Issue,nice work!,,,,,,
246108479,1462,Issue,"I'm struggling a bit to gauge how simple the .NET Core has to be.Is the intent realy only to have a .NET Core, no matter how small it is, to build on AppVeyor? Or do we want to try tackling the porting to the existing projects to .NET Core?Thanks!/cc",,,,,,
246211893,1462,Issue,the reason why I suggest getting a trivial .NET Core thing building is that I fear there's lots of integration hassles waiting for us getting this running on both Travis and Appveyor.,,,,,,
246320305,1462,Issue,"For the sake of simplicity, I went with a separate VS solution containing a very simple class library and a unit tests project.It took a few trial and error tries to get it working on Travis CI.",,,,,,
246898227,1462,Issue,Is that a good enough baseline to start with the port? How should we proceed?,,,,,,
246899255,1462,Issue,"I like where this is heading. If it's too hard to run both the original build and this new build (for example, if we hit timeouts with CI), then let's verify we can test the .NET Core project from the command line at least",,,,,,
246930520,1462,Issue,"Sure, I'll bring the existing build targets back. If it's too hard to run both the original build and this new build (for example, if we hit timeouts with CI), then let's verify we can test the .NET Core project from the command line at leastI didn't get this part, sorry. The new build does execute tests, but I'm sure you saw that, so I must miss something.Also, a couple of random questions:- for the time being, are we happy to duplicate source files in the new projects? Having both .csproj and project.json seems to be causing issues with MSBuild wanting more target frameworks in the project.json- if it turns out `netstandard1.1` is all we need, are we happy to have it as the only target?",,,,,,
246985643,1462,Issue,"The new build does execute tests, but I'm sure you saw that, so I must miss something.Yes, I wasn't clear. Am I able to run the same command locally? Or are there other dependencies I need. for the time being, are we happy to duplicate source files in the new projects? Having both .csproj and project.json seems to be causing issues with MSBuild wanting more target frameworks in the project.jsonI'd rather not do this, and the MSBuild issues are similar to what I was seeing a while ago.  if it turns out `netstandard1.1` is all we need, are we happy to have it as the only target?I'm fine with targeting this initially as a new platform, as adding in extra platforms is rather straightforward. My main focus initially is ensuring we support the current platforms in `project.json` as well...",,,,,,
246991744,1462,Issue,"Yes, I wasn't clear. Am I able to run the same command locally? Or are there other dependencies I need.As long as you have the dotnet CLI, then yeah, you can execute the build target to run .NET Core tests. I'd rather not do this, and the MSBuild issues are similar to what I was seeing a while ago.Understood. Will investigate on this a bit more by having a look at the branch you mentioned before. I'm fine with targeting this initially as a new platform, as adding in extra platforms is rather straightforward. My main focus initially is ensuring we support the current platforms in project.json as well...That's consistent with what you said just before.Finally, the build timed out on Travis with both the existing and the new build. Can we kick off a new one without pushing changes to that branch just in case?",,,,,,
247174276,1462,Issue,"As long as you have the dotnet CLI, then yeah, you can execute the build target to run .NET Core tests.Do you think it's worth installing the dotnet CLI locally, like we do for [Rx.NET]?",,,,,,
247177649,1462,Issue,"Hmm.I'd say no. Let's say you're willing to work on the port to .NET Core, you'll need to install .NET Core runtime and tooling anyway. Another argument for not installing it as part of the build is that both AppVeyor and Travis support it, which saves us from installing it ourselves on the build agents.Does that answer your question?",,,,,,
247177767,1462,Issue,all good points üëç,,,,,,
247178883,1462,Issue,Cool.I've just noticed another build started on Travis for [this commit - `use mono 4.2.3 as latest successful builds show this version was used`].Did you start this explicitly or does Travis have a retry mechanism when a build times out?,,,,,,
247179394,1462,Issue,"nope, this is me restarting the build :rage1:",,,,,,
247219682,1462,Issue,This seems to be an upstream problem üòû  Unhandled Exception: System.TypeInitializationException: The type initializer for 'Crypto' threw an exception. ---> System.TypeInitializationException: The type initializer for 'CryptoInitializer' threw an exception. ---> System.DllNotFoundException: Unable to load DLL 'System.Security.Cryptography.Native': The specified module could not be found.,,,,,,
247273485,1462,Issue,"Well that's weird, the last build passed but this one didn't, the only change being to bring back linux again and adding a condition around if the OS is OSX to link libs. could you please restart the build for that last commit when you have some time? And just in case, could you check [the last commit] see if I did something wrong? My bash-fu is not very good.",,,,,,
247295914,1462,Issue,"Great, thanks! üëç  Let's just hope the build won't be too flakey.I'll start working on moving existing platforms to `project.json`. If I understand this right, and if all the current platforms are supported by `project.json`, we could end up with only one `Octokit` project in the solution.Some posts I want to keep as a reference here:- - Thanks again!",,,,,,
247303502,1462,Issue,"that's fine, we can keep an eye on it over time.Thanks for getting started on this!![]",,,,,,
247310488,1462,Issue,"Thanks!I could have squashed all these commits, it's a bit embarrassing to be honest.",,,,,,
247482500,1462,Issue,"I could have squashed all these commits, it's a bit embarrassing to be honest.Eh, it's fine. Onward and upward.",,,,,,
245780324,1461,Issue,"**QUESTION1:** How to get all issues? will return the issues created and assigned to the current user. My psychic debugger thinks you haven't specified any credentials on your `GitHubClient` - the 404 typically occurs when you're not authenticated for a certain resource.Check out the [Authenticated Access] section in the documentation for how to set this. **QUESTION2:** Why does the exception refers to a file that is not on my HDD? C:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Clients\ApiPagination.cs:36These paths are embedded into the PDB files at build time. If you'd like to step through the source, [here's a guide] to getting that working.",,,,,,
245843969,1461,Issue,"Dear  , as you can see, the credentials are present.I have used the 'token authentication' mechanism as you can see on the screenshot.QUESTION1: The Login is equal to 'null', is it the expected behaviour? QUESTION2: From that point, how could I get the login of the authenticated user?INFO: here is the deployed app, note that my issues' list is empty; you might have a different result: []![githubstratex-credentials are present]",,,,,,
246216057,1461,Issue,"aha! This is a permissions issue with your OAuth app - your application is only setup to request `user` and `notifications` scope, but everything issues requires at least `public_repo` scope.![]Once you enable that, you should receive an empty response instead of the 404 error.",,,,,,
246333249,1461,Issue,"Dear   this is correct, I can read the issues of the registered user now!Many thanks!",,,,,,
245780590,1460,Issue,"Yeah, I'm pretty sure this stuff is broken and needs some love  üò¢",,,,,,
245784727,1459,Issue,"Can you provide a failing test here, so we can verify the issue?",,,,,,
245847923,1459,Issue,Please test this.Please find the [entire code].,,,,,,
246262513,1459,Issue,"good catch! The fix of this issue looks very simple and if you need this fix as ASAP just change attribute value on Language enum.So, this one [SearchRepositoriesRequest.cs#L449]should be changed on:Anyway, I made some investigation why integration tests in Octokit didn't catch this issue. It's quite interesting thing! Octokit have integration test for `SearchCodeRequest` [SearchClientTests.cs#L436]: As you can see to create SearchIssuesRequest class the constructor with one parameter is used:The GitHub Search Code Api has some restrictions and [one of them is]: You must always include at least one search term when searching source code. For example, searching for language:go is not valid, while amazing language:go is.So, how this test can be correct in case of this bug with '#' symbol? Answer is simple: this test is correct  but not for C#. Instead of sending search request for C# it is sending request on C language!  in order to use SearchIssuesRequest in right way you have to use the next constructor:and do not use SearchIssuesRequest parameterless constructor that created for correct Json deserialization.I'm going to create PR to fix this bug.",,,,,,
245137808,1458,Issue,![],,,,,,
244342998,1457,Issue,Maybe someone has a better naming for `TrafficeDayOrWeek` üò∏,,,,,,
244724620,1457,Issue,", what about integration tests for this feature. The only thing we can test is that the result is not null :expressionless:. And of course the result count is 0.. Should i do that?",,,,,,
244729170,1457,Issue,"I guess integration tests still prove everything is wired up correctly, even if there aren't any meaningful stats...  I take it we can't point the calls at an existing repository due to permissions?",,,,,,
244730560,1457,Issue,"Yeap, you need to have push access.",,,,,,
247958710,1457,Issue,"Hi , is this ready for üö¢?",,,,,,
248474761,1457,Issue,Hi  Do you think you could add some integration tests then flag them as `Skipped due to requiring admin permissions`.  This way I can at least run these locally (after changing the repostory to something I do have admin permissions on and unskipping the tests) to ensure the functionality is working as intended?,,,,,,
249340138,1457,Issue,"Hey  Thanks for adding the tests - lucky we did because there was actually an issue with timestamps!  üòÄ I pulled everything down and ran through it, and these are the things I changed:- RepositoryId was recently changed from `int` to `long` in #1445 so the `repositoryId` parameters in this new API need to be `long` now too- The `timestamp` field in the Api responses is in unix utc time, and doesn't deserialize into a `DateTimeOffset` directly, causing exceptions on the View and Clone methods when the repository actually had some data to return for these calls- I wasnt a fan of naming the item level classes `View` and `Clone` since they are a bit too generic IMO- I also thought naming some methods `GetAllxxx()` when they don't support pagination we can use the new `[ExcludeFromPaginationConventionTests]` so we can call them `GetReferrers()` and `GetPaths()` which is more inline with what they do (it's not all referrers, just referrers from last 14 days etc)- Integration tests were added for owner/name methods but not for repositoryId methodsAs I was working through things I ended up making local fixes anyhow, so I've pushed a commit that addresses these already if you want to cherry pick it in: If you are interested in how we handle the timestamp thing, basically in other areas of the codebase we have a pattern already, where we add a `long TimestampAsUtcEpochSeconds` field to take the deserialized value (using the `Parameter` override to map it to `timestamp`) and then add a `DateTimeOffset Timestamp` getter property that uses a helper function to convert the unix time into `DateTimeOffset`.  it looks something like this (and you'll see these fixes in my commit):Let me know what you think of my changes",,,,,,
249585360,1457,Issue,"Hi , thanks for your review. I have read on the format of `timestamp`. Is there any explanation why it's this format? And yes, `View` is realy a bit to common üòÅ. The renaiming of `GetAllxxx()` makes sense. I already have this in mind but i don't know wheter it woul be correct. So many thanks for your fixes üëç",,,,,,
249586894,1457,Issue,"And the renaming of the repsitory id's i have forgotten, because i already did this in another PR :sweat_smile:",,,,,,
250199076,1457,Issue,Thanks for another great contribution   üòÄ ![LGTM],,,,,,
250384684,1457,Issue,Many thanks  ![highfive],,,,,,
244216642,1456,Issue,"Awesome stuff!So I can't comment on the fsharp code itself but from an operational sense it appears this task runs and succeeds so thats good!A couple of comments- It might be nice to output the real name of the linqpad sample file somewhere in that build log as the actual task only mentions the temporary file obviously (or perhaps we could make the temporary filenames consist of a randomly generated portion followed by the actual filename like `123abc-1-introducing-octokit.linq`, `123abc-2-releases.linq` etc)- Would be nice to see what does a build failure look like - eg do we see enough info in the output to know what sample was wrong etc?- On this PR you should be able to remove any old code (that skipped test etc) that wont be needed anymore- Finally if you mention the issue you are fixing like this ""fixes #xxx"" in your PR description, the issue will automatically be closed when the PR is merged :+1:",,,,,,
244365947,1456,Issue,"Thanks for the input!Last commits output the original name of the sample before running it through LINQPad and remove the C# test.Regarding the issue ID in the PR description, sorry about that, I'm still struggling with this notion. I thought it was meant to be in a commit message. I'm not sure I can update the PR description now - clicking the Edit button allows me to update the title but now the description",,,,,,
244486995,1456,Issue,"Regarding the issue ID in the PR description, sorry about that, I'm still struggling with this notion. I thought it was meant to be in a commit message. I'm not sure I can update the PR description now - clicking the Edit button allows me to update the title but now the descriptionAh my apologies, I didnt see it in the commit.  That should also close the issue.  Personally i prefer to put it in the PR as people may not read the commit comments and it also adds the github reference link to the PR data... but it's all good!PS you can edit the PR body/1st comment with the pencil icon (as opposed to the edit button which is the title and base branch)",,,,,,
244924073,1456,Issue,did you want to look over the F# code or you happy to merge this based on the fact the new tests do succesfully run?,,,,,,
245133010,1456,Issue,"code looks good, and AppVeyor is running these on PRs now so I'm üëç to merging fantastic stuff, thanks for jumping on this!![]",,,,,,
272671618,1454,Issue,Just having a new year's clean of open PR's - I'd like to either get the wording fixed up as  requested or drop this PR,,,,,,
531060205,1454,Issue,Closing this out due to inactivity,,,,,,
243871977,1453,Issue,Experimentally I've found that i'm actually hurting myself here with `ApiOptions`.  If I forgo pagination and use the overload without `ApiOptions` the same call completes in just a few seconds.  Am I just using `ApiOptions` in some unsupported way here?,,,,,,
243980125,1453,Issue,I think that this behaviour due to StartPage = 0. Did you try change StartPage to 1?,,,,,,
245310356,1453,Issue,good call.  Switching StartPage to 1 fixed the issue.  In general though is this the correct way to approach queries where a large number of issues are going to be returned?  Or if I'm going to process them all in batch anyways should I just query without any pagination?,,,,,,
246874658,1453,Issue,"yeah, silly 1-based pagination üòû  - let me know if there's any way we can make this clearer. If you drop the pagination overload the GitHub API will return 30 entities per response, and when it finds [Link Headers] in the response headers it'll continue to make new requests.If you're not really looking for a specific page of results, and just want stuff faster than the defaults, I'd just set the `PageSize`:",,,,,,
247918232,1453,Issue,"once you know it's 1 based it's pretty easy to use.  I think the only way to make it clearer is to error in some way in the case of a 0 value.  It seems like that would be possible given the structure of `ApiOptions`.  But I've only used this API in a pretty limited fashion, so it's possible I'm not considering valid use cases.   If you're not really looking for a specific page of results, and just want stuff faster than the defaults, I'd just set the PageSize:I was mostly trying to be conscious of now downloading the entire `dotnet/roslyn` issue database in a single go üòÑ.  Paging seemed to be the best way to achieve that.",,,,,,
242557946,1451,Issue,"You would need to use credentials (personal access token) that has access to the private repository, which may not be desirable. If you are determined to use github release files as your file storage then perhaps another way would be to have a public repo that only contains a readme file and release notes etc that you could create/mirror your releases in and have your download msi there etc. You could also have issues turned on in that public repo so your users could raise issues with you",,,,,,
242674855,1451,Issue,Thank you,,,,,,
243673577,1451,Issue,Can I maybe invite you to my private repro can you give me a quick example on how to add credentials (personal access token) so I can download from my private repro,,,,,,
243679697,1451,Issue,there's [an example] in the documentation about passing in a Personal Access Token,,,,,,
243681836,1451,Issue,Thanks just what i'm looking for!,,,,,,
244198770,1451,Issue,Please see attachment is this best way to do token part?[ReleaseInfo.zip],,,,,,
245464007,1451,Issue,that seems fine,,,,,,
243010109,1450,Issue,:sparkles:,,,,,,
240121359,1448,Issue,Thanks for the quick fix!![LGTM],,,,,,
244070294,1447,Issue,"Hi , i would like to take this issue. I would create a new client `IRepositoryTrafficClient`!?",,,,,,
244207976,1447,Issue,"Yep, based on the [API structure] that sounds good, and it would be a child `Traffic` property under the existing `RepositoriesClient` so we would access it like `client.Repository.Traffic.GetAllReferrers()`",,,,,,
240108881,1446,Issue,"BTW, this was recently announced as a breaking change on the [dev blog] as well.",,,,,,
240110584,1446,Issue,"BTW, this was recently announced as a breaking change on the dev blog as well.I saw this thismorning but incorrectly assumed we'd be fine since they were just making some fields not returned in some cases, which happens quite commonly.  Obviously being non nullable int's wasn't too happy though :grin:",,,,,,
239755891,1445,Issue,Sounds reasonable It should be changed in [all the places](‚úì&q=RepositoryId) we use RepositoryId as a parameter too though,,,,,,
239757574,1445,Issue,"Ah, indeed! I'll hunt those down and update.",,,,,,
239793511,1445,Issue,All places that use repositoryId hunted down and fixed...,,,,,,
239951408,1445,Issue,![]I'll pull this in to the next release (not the one currently being prepared).,,,,,,
239973390,1445,Issue,"Since this is an identifier field, it should really be at least an `uint` (they can't be negative, can they?)And no, [`uint` cannot be negative]",,,,,,
239992807,1445,Issue,"changing to `uint` would be a breaking change for every single place changed, whereas `long` will implicitly allow an `int` to be passed so isnt a breaking change in the majority of the places touched in this PR.The only place I can see currently that would be a breaking change is the change to `long` for the `Repository.Id` on the response class and even then only in some cases depending on the consuming code.  We'll need to include something in the release notes on that.",,,,,,
239993118,1445,Issue,to be clear - I'm :thumbsup: on using `long` here due to the implicit behaviour of `int` saving a lot of breaking change. Just wanted to make the behaviour of `uint` clear here üòÄ,,,,,,
240005288,1445,Issue,"Right, uint can't be negative, but I was wondering more about the identifier field itself. The API doesn't return `-1` at any time in identifier fields, does it? Nor does octokit do that to signify some invalid state condition?I'm just curious, we can't change the type sign now since code assumes it for conversion purposes, just wondering of anything is taking advantage of the sign for something.",,,,,,
240037418,1445,Issue,"The API doesn't return `-1` at any time in identifier fields, does it?Not that I've encountered. Nor does octokit do that to signify some invalid state condition?No",,,,,,
240042867,1445,Issue,"‚ú® BTW, thank you for being so consistent about naming things, it was way easier than I thought to fix all the tests! ‚ù§Ô∏è",,,,,,
240044789,1445,Issue,"I knew that consistent naming in repository Id implementation could be useful someday, but I don't even supposed that it would be so soon :smile: Best code practices in action :+1:",,,,,,
244924263,1445,Issue,the release is done now so should be good to rebase this and merge it in.  There might be a couple of new methods added in recent PRs that would have missed the initial `int => long` conversion too....,,,,,,
247192898,1445,Issue,"PR updated against latest master.I was wondering, it's not like I want to have more work, but... this is technically an ABI change. Should I be obsoleting the existing methods that take an int and adding overloads that take a long, and redirecting the int implementations to long as appropriate?",,,,,,
247194131,1445,Issue,"I was wondering, it's not like I want to have more work, but... this is technically an ABI change.This is true, and after the whole discussion in #1464 I'm pondering how often I want to break the API as broadly as this (even if it is still pre 1.0 in semver land, this stuff sucks).Given numeric ids are not going to be a part of the [GraphQL API] and I think we'll be supporting the v3 API for a while, that looming September 2017 deadline is my only concern about getting this in...",,,,,,
247194770,1445,Issue,"This is true, and after the whole discussion in #1464 I'm pondering how often I want to break the API as broadly as this (even if it is still pre 1.0 in semver land, this stuff sucks).Yes, that one got me thinking about the breakage too. Also all the latest obsolete methods that are now gone and caused a bunch of conflicts on my rebase :-P Given numeric ids are not going to be a part of the GraphQL API and I think we'll be supporting the v3 API for a while, that looming September 2017 deadline is my only concern about getting this in...Loooom. Well, I've only got myself to blame on this one, really. I'll add overloads for all the APIs and redirect as needed to avoid breakage. How many versions do obsolete methods usually last for?",,,,,,
247195030,1445,Issue,How many versions do obsolete methods usually last for?We usually leave them around for at least one or two releases.,,,,,,
247325064,1445,Issue,"yep 2 releases is the current agreed ""standard"" for obsoleting things.Just on this - im not getting why the change from `int` to `long` is such a ""breaking"" change.  Won't the majority of cases happily continue to work without any changes even once they take this update?  I think given pre 1.0 we could be flexible on this.  The `Async` method suffixes was a totally different proposition requiring nearly every line of code interacting with octokit to have to be changed.  Conversely with this repositoryId change, there would be nowhere near as many code changes, if any at all?",,,,,,
247327677,1445,Issue,"I agree with . To add to that, these overloads where added in [0.21] which was only the release before last.",,,,,,
247339735,1445,Issue,"It's up to you peeps. As far as the runtime is concerned, int->long is a breaking change at the ABI level, i.e., it'll throw methodnotfoundexception if you get the long version and you compiled against the int version. Since you don't sign the assembly, the runtime is free to provide whatever is already loaded in the domain, which might or might not be the actual specific version that is ABI compatible with what you built against.But, since this is a < 0.x library and you don't sign it, there's no stringent compatibility requirement and it's going to blow up in people's faces anyway in shared appdomain scenarios, so ¬Ø_(„ÉÑ)_/¬Ø",,,,,,
247342302,1445,Issue,"Given its delivered via nuget there wouldn't be any supported way to update to the new version WITHOUT also compiling against it though right? Obviously  can have the final say but based on these points I think we should not worry about it - not a breaking change for almost all use cases - amount of work/churn to obsolete int methods is large - int methods were only recently added anyway, further reducing the target audience that could be affected",,,,,,
247400664,1445,Issue,"Given its delivered via nuget there wouldn't be any supported way to update to the new version WITHOUT also compiling against it though right?Weeeeell actually (:trollface:), bla bla bla signing bla versioning bla runtime loader bla plugin model bla horrible explosion. There's a whole signing/versioning/plugin model discussion on that one and it's not relevant for this case üòÑ When updating the nuget package and compiling against the new version, things should not break at all at compile time because implicit casts for wider numeric types are a thing. There might be silly people out there invoking octokit via reflection, that'll break them (but they probably deserve it? ¬Ø_(„ÉÑ)_/¬Ø)",,,,,,
247497092,1445,Issue,Excellent points . Let's do this.,,,,,,
239776763,1444,Issue,Rather than only including the moving of methods to the branches API it would be good to get the top level branch protection stuff in this release.  It's ready to merge apart from :lipstick: #1407,,,,,,
239777065,1444,Issue,so that's #1441 and #1443?,,,,,,
239777985,1444,Issue,"No, just #1441 .  That's enough to manage branch protections with the new API structure.  #1443 isnt ready yet, and is also just gravy (allows more granular editing of portions of branch protection, but they al lcan be set by the top level methods in #1441 anyway).So yeah id like #1441 in this release if possible :)  Just addressing your comments now",,,,,,
239778409,1444,Issue,:thumbsup:,,,,,,
242071175,1444,Issue,Id also like to include #1450 in this release since its a trivial change but a much awaited feature,,,,,,
243325945,1444,Issue,let me know if there's any other obsoletions I've missed here,,,,,,
243401041,1444,Issue,"I corrected one typo but I've realised I missed obsoleting some of the stuff on the observable interface... also now that the new branch protection methods are implemented we can actual direct users to the alternative/replacement methods rather than just saying those old ones ""will cease to work"".  Ill push a PR to fix up the wording etc now - #1452In terms of the branch protection stuff I dont know if its worth calling it out in the release notes somehow or not, but basically branch protection works fairly differently now (all due to the upstream changes made in github api).Previously:- `Branch` objects inclued a `Protection` field which contained all the branch protection settings, and you could enable/disable branch protection using the `client.Repository.EditBranch()` method (also now moved to `client.Repository.Branch.Edit()`).  Now:- `Branch` objects have a `bool Protected` property, and an additional endpoint is required (`client.Repository.Branch.GetBranchProtection()` to get the actual protection settings (but it throws a 404 exception if protection is not actually enabled so you have to check that `Branch.Protected` flag first).  You edit protection settings using `client.Repository.Branch.UpdateBranchProtection()` and you disable protection using `client.Repository.Branch.DeleteBranchProtection()`Im not sure how to summarize the nicely in the release notes though!",,,,,,
243981817,1444,Issue,Im not sure how to summarize the nicely in the release notes though!I'll give it a shot - thanks for the initial start!,,,,,,
244004348,1444,Issue,This is shipped:- -,,,,,,
239753256,1443,Issue,In the delete method for the `required status checks contexts` the API says it returns an [array]. This is ok if you delete one context. But if you delete more then one context it returns an empty array.  can you confirm this?,,,,,,
239778612,1443,Issue,These naming convention tests fails because i have named methods for example  `GetProtectedBranchUserRestrictions`. Should we rename to `GetAllProtectedUserRestrictions`?,,,,,,
239787442,1443,Issue,"These naming convention tests fails because i have named methods for example GetProtectedBranchUserRestrictions. Should we rename to GetAllProtectedUserRestrictions?I guess you could.  I wonder whether that method ""actually"" supports pagination though.  that convention test just thinks that any method that returns a `List<>` and starts with `Get...()` supports pagination.  Maybe if you make a version that takes `ApiOptions` then see if it actually does paginate when you send up a page size of 1?  Then based on whether it supports pagination or not, we can figure out whether to rename the method so it complies, or whether to modify the convention test to not include these methods",,,,,,
239787636,1443,Issue,But if you delete more then one context it returns an empty array.As long as we correctly deserialized the empty array I think this would be fine/expected.  Does it not work currently or were you just clarifying?,,,,,,
239788305,1443,Issue,It's just for clarifiying.,,,,,,
240960654,1443,Issue,"So, i have tested all the api endpoints and no one support pagination. So  we have to exclude all the new methods from the convention test. Is there any flag we can set to exclude these methods? In the meantime i start to write the unit tests for the new methods.",,,,,,
241162827,1443,Issue,"So in the `GetClientInterfaces()` method in `PaginationTests.cs` I can see it does exclude the `IStatisticsClient` from that list, but in your case you probably dont want to exclude the whole `IRepositoryBranches` client since some methods DO paginate.  So I guess that means you'd have to exclude the actual methods in the test itself, ie where it calls `clientInterface.GetMethodsOrdered()` you could add a where clause to exclude the known methods (or use a new attribute eg `[ExcludeFromPaginationConventionTest]` or whatever)",,,,,,
241731085,1443,Issue,Hi . In my last commits i have created an attribute `ExcludeFromTest` to filter the new methods. I have exclude these methods in `PaginationTests` and in `SyncObservableClients`. Can you also have look of the return types for the observable methods. Because they don't support pagination they have to be for example `IObservable`. Is that correct?,,,,,,
241781172,1443,Issue,ExcludeFromPaginationTestAttribute is better but i use this Attribute also to exclude from `SyncObservableClients`. Should i create two attributes?,,,,,,
241940713,1443,Issue,"As far as I know even if the api doesnt support pagination, you should still have the observable implementation return an `IObservable`Therefore all client methods should comply with the `SyncObservableClients` convention test and there is no need to skip it.~~Im pretty sure even the methods that DO paginate actually grab ALL pages from the non reactive client first, as they call `.ToList().ToObservable()` on them (the `ToList()` forcing the entire enumerable to be retrieved upfront).  So you should be able to do the same thing on these calls.~~Oops... i was wrong on that part but anyway I think in your case you should still be able to force the `List` by calling `client.GetBlah().ToObservable().SelectMany(x => x);` which if you look through the code base there are a few instances of this already (eg in MiscellaneousClient, UserEmailsClient, UserGpgKeysClient, UserKeysClient)",,,,,,
241940910,1443,Issue,"And regarding the attribute, I agree that specific named `[ExcludeFromPaginationConventionTest]` attribute is preferable to a generic `[ExcludeFromTest]` attribute since the latter impies it's excluded from all tests which isnt the case.  Plus gtiven the above comments there is no need to exclude these things from more than 1 test at the moment anyway, so go with `[ExcludeFromPaginationConventionTest]`",,,,,,
242343639,1443,Issue,"Hi , can you please give a feedback. I think this PR is ready.",,,,,,
243086665,1443,Issue,Sorry for the shifting goal posts   but what I did in #1441 with the user and team push restrictions was introduced specific classes rather than just using `List` so I think we need to use those classes in these changes too,,,,,,
243090347,1443,Issue,"That make sense. So you mean instead of ~~returning `Task teams)` we should do this `public Task SetProtectedBranchTeamRestrictions(string owner, string name, string branch, BranchProtectionTeamCollection teams)`",,,,,,
243092146,1443,Issue,No it's not in the return types it's in the request types,,,,,,
243092852,1443,Issue,I have correct my commit.,,,,,,
243093295,1443,Issue,"I have correct my comment.ah cool, sorry :grinning:  Yes :+1: that's what I meant - change the team/user inputs that are `IReadOnlyList` to `BranchProtectionTeamCollection` or `BranchProtectionUserCollection` instead",,,,,,
243102682,1443,Issue,What about `IReadOnlyList` or we don't need this because there is no difference between them.,,,,,,
243109845,1443,Issue,"The specific classes came about because I had a request that needed to take users and/or teams so without them having different types we couldn't provide nice constructor options Contexts is fine to leave as strings, IMO",,,,,,
244071241,1443,Issue,"Hey , is this ready for üö¢?",,,,,,
244215217,1443,Issue,Hey  I'll pull this down on the weekend and go through it :grinning:,,,,,,
244501047,1443,Issue,"OK Ive had a go through this so here is some review comments:I realise youve named things exactly as I mapped out in the issue, but unfortunately I seem to have been inconsistent there in that I called some methods that REPLACE settings as `UpdateBlah` and others as `SetBlah`.   is more in line with terminology used in the rest of the code base, so Im thinking we should rename => `UpdateProtectedBranchTeamRestrictions`  => `UpdateProtectedBranchUserRestrictions`",,,,,,
244671887,1443,Issue,", thanks for your review!!",,,,,,
244934453,1443,Issue,"Hey  great job, a few more comments marked up regarding some `team2` test contexts still not being disposed, and also some xml comments.A couple of other things I picked up:- There are many cases of spurious `/>` at the end of the summary field in xml comment text like this:- There seems to be alot of the `[ExcludeFromPaginationTest]` attributes on methods when I thought only some of the `Getxxxx` methods would need that.  It's currently on Add Delete and Update methods tooAnd now for something a bit more general- As you know the Team/User restrictions only apply to organization owned repos.  So there is actually no need to have `xxxxForOrgRepo` tests for the status check/contexts endpoint tests.  Since there is no difference to running these for an organization vs personal repo.  In the case of the main top level methods I implemented, I did need to test the `UpdateBranchProtection()` method for both personal repos (status checks only) and organization repos (setting status checks AND push restrictions), which is why I had to have tests covering both types.  So I say :fire: the `xxxxForOrgRepo` tests you've got for the status check/context endpoints since we dont want to maintain these tests if they arent actually needed  - On that note, it would be good to include in the xml comments field a mention on the restriction related endpoints ""(applies only to Organization owned repositories)"" like I did on the `ctor` parameters of the `BranchProtectionSettingsUpdate` class, just so that users are informed not to use those methods on personal repos",,,,,,
244939834,1443,Issue,"I ended up fixing up some of the comments/wording related ones, if you want to cherry pick this commit:  :grinning:",,,,,,
244942426,1443,Issue,Very nice üò∏ Thanks!! The undisposed contexts i will fix.,,,,,,
245211534,1443,Issue,", i see that the `GetRedirect` method is coming from your branch. I have removed this method. Is that ok?",,,,,,
245239515,1443,Issue,Those methods were removed in #1458 in master... I think maybe your merge missed those files?  But your later commit seems to sort things out now,,,,,,
245240473,1443,Issue,"Ive succesfully run all the integration tests etc :+1:I think all the comments made have been addressed except for updating the xml comments to say ""(applies only to Organization owned repositories)"" on the restrictions, user restrictions and team restrictions methods",,,,,,
245241678,1443,Issue,"here's one i ""prepared earlier"" if you want it :stuck_out_tongue:",,,,,,
245241693,1443,Issue,applies only to Organization owned repositoriesüôà üëç,,,,,,
245242369,1443,Issue,youre awesome üéâ üòÅ,,,,,,
247958387,1443,Issue,"Hi , is this ready for üö¢. I ask because of preventing and maintaining conflicts if there are changes in master.",,,,,,
248437021,1443,Issue,"Sorry for the delay  :grinning: Ive run through this again, including the integration tests, and it's good to go!  Thanks for your patience![LGTM]",,,,,,
248518912,1443,Issue,üëç üéâ,,,,,,
249544069,1443,Issue,great to see this land :tada: I'll prep a release for it (and whatever else is on `master`) this week...,,,,,,
239214929,1442,Issue,![wow]That's a lot. I will see what i can do if it's ok.,,,,,,
239411389,1442,Issue,Should i wait until #1441 is merged before to start?,,,,,,
239412763,1442,Issue,Yes you should do any changes on top of those changes but you can just branch from my branch (ie don't have to wait for it to be merged),,,,,,
238808688,1441,Issue,"Apart from (possibly) a couple of missing XMLDocs, the code looks good to me üëç",,,,,,
239048846,1441,Issue,Looks good to me!,,,,,,
239565200,1441,Issue,let me know if you want to üëÄ this over or if you're happy for me to merge based on 's review,,,,,,
239736947,1441,Issue,"just gave it a look over, a few little comments but nothing serious:thumbsup: merge at your leisure",,,,,,
239992923,1441,Issue,Ive fixed the comments and :lipstick: just waiting for any suggestions on that comment regarding a nicer `ctor`.  But otherwise this can be merged,,,,,,
242546486,1441,Issue,"OK ive implemented the user and team push restrictions settings be classes derived from `Collection` which means we can now offer nicer `ctors` to better configure those options, rather than having to pass empty arrays etc",,,,,,
242547153,1441,Issue,Also I realise some of the names are pretty verbose (eg `BranchProtectionRequiredStatusChecks`) but that's because most of the simpler names (eg `RequiredStatusChecks`) are still taken by the previous implementation which we've flagged as `[Obsolete]` but still need to keep around for another release or 2...,,,,,,
243027776,1441,Issue,that all seems great :sparkles:,,,,,,
244490302,1440,Issue,"SourceLink support (there's a nice helper for FAKE, but I gather there's a way to do it directly for our scenario)Just on this point, I stumbled upon [GitLink] which sounds like it may do the same thing as what SourceLink currently does.  CAKE has [built-in aliases for GitLink]- [GitLinkRunner‚Äã.Run(DirectoryPath, ‚ÄãGitLinkSettings)‚Äã]",,,,,,
244638527,1440,Issue,"if GitLink gives us the same end result, then I'm fine with switching. I forget the backstory and why they didn't team up with SourceLink way back in the day...",,,,,,
250455003,1440,Issue,"Hmmm so it turns out both SourceLink and GitLink dont support dotnetcore project.json and .xproj files which is a bit of a bummer in terms of our own dotnetcore move (which isnt strictly related to moving to CAKE however I was kind of intending to do it all at the same time)GitLink [aren't planning on doing anything] until project.json goes away (although Im not sure when that actually will occur), and SourceLink were [waiting for upstream depedencies] as of a few months ago which are hopefully now in place so there could be hope there...",,,,,,
261141143,1440,Issue,Yo  and   I'd suggest using `gitversion` to automatically version your releases and generating release notes using `GitReleaseManager` which automatically builds RELEASENOTES/GitHub Releases from closed github issues + github tags. See   and Doing `RELEASENOTES.md` by hand and versioning from it is something I regret and am glad to :fire: in RxUI 7.0+1 on using cake _but_ steal the akavache implementation as it includes release workflows and automatic versioning -  +1 to using GitLink as SourceLink is weird with CRLF's.,,,,,,
261150410,1440,Issue,"Additionally, once netstandard migration is done you can move 100% to appveyor and get rid of travisci.",,,,,,
261424375,1440,Issue,Yep all sounds good.  The cake stuff i was playing with already is using GitVersion [see here]So far i mostly based my cake stuff off [Bddfy cake scripts] but I'll take a look at akavache,,,,,,
301066797,1440,Issue,Closed by #1581,,,,,,
237690394,1439,Issue,"Are you referring to attachments on the issue? There doesn't appear to be any GitHub API method to do this, it seems only available through the webUI",,,,,,
237693130,1439,Issue,"Yes, I wanted to know if there was a way to attach a file via the API like you would when dragging/dropping on the Issue in GitHub website.  Basically, I want to programmatically create an Issue, add some markdown comments and attached a file.  It seems like there would be some type of method to do this.  If Octokit is currently not able to do so, do you know the next steps to take in determining if it possible?  Thx for the help.I came across this, but it appears to perform in web as you mentioned.",,,,,,
237738621,1439,Issue,"I'm afraid this isn't currently supported, and I'm not sure of an ETA for it",,,,,,
237819512,1439,Issue,"Thanks for the info.  If I could ask one more question.... do you mean it is not supported in Octokit or it is not a supported feature in GitHub in general?  Meaning, you don't know of ETA coming with GitHub?  Thanks again.",,,,,,
238063420,1439,Issue,it's not currently a supported feature of the GitHub API,,,,,,
237690673,1438,Issue,"Do you have push access to the repository? The github API docs say that setting labels requires push access and if you don't have that, any labels (and assignees etc) are dropped",,,,,,
237766386,1438,Issue,I do have push access. The token I'm using is a Personal Access Token - perhaps that is not enough?,,,,,,
237770726,1438,Issue,"Could be, depending on what scopes you've granted the personal access token You could also attempt user/pwd just to see if it changes anything Otherwise if you want to post your code sample we can take a look?",,,,,,
237772858,1438,Issue,"Doh, I messed up the permissions so in fact the user didn't have push access to the repo. Thanks for your input.",,,,,,
237752335,1437,Issue,"Looks like all the tests passing, just needs some  üëÄ from someone before merging",,,,,,
237753446,1437,Issue,added to my list,,,,,,
237753599,1437,Issue,"Get in contact with me when you're ready thksOn Aug 4, 2016 11:40 PM, ""Brendan Forster"" notifications.com wrote:   added to my list  ‚Äî You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub , or mute the thread  .",,,,,,
238063509,1437,Issue,"Other than some superfluous whitespace, this looks good to me üëç",,,,,,
238074024,1437,Issue,"whitespace fixed, thanks üòÄ",,,,,,
238164630,1437,Issue,I've run through all the tests locally and it's all üíö  I'm happy with these changes üòÅ,,,,,,
238010649,1435,Issue,All tests are now passing üéâ so this is ready for someone to cast their üëÄ over üòÅ,,,,,,
238025851,1435,Issue,"This is all looking rather üíé to me! Ive run the integration tests too üëç One thing I noticed was a quick count of the ""events"" listed in the timeline API doc (21) is a couple more than values declared in the `EventInfoState` enum (19), so is there possibly another couple of values that need to be added to this enum in addition to the cross referenced one you added?",,,,,,
238033901,1435,Issue,"since version 0.21.1 every ""owner/name"" method has overload that use repository id instead of owner/name pair. Could you add it in your PR? not sure, but I think that now every new clients have to have repostoryId overload for each owner/name method, aren't they?",,,,,,
238051466,1435,Issue,"Thanks , I'll add in the necessary overloads and tests",,,,,,
238051640,1435,Issue,"not sure, but I think that now every new clients have to have repostoryId overload for each owner/name method, aren't they?Good pickup, I actualy realised this myself overnight (the things you think about while going to sleep, lol!)Yes we should be adding `repositoryId` overload of any method that takes `owner/name` (as long as it actually works of course!).I also realised, we should be adding paging support to any `GetAllxxx()` type methods (ie an overload taking `ApiOptions` class, with the default method passing `ApiOptions.None` through to it).  Again, assuming paging is actually supported on that end point of course.",,,,,,
238051767,1435,Issue,"I also realised, we should be adding paging support to any GetAllxxx() type methods (ie an overload taking ApiOptions class, with the default method passing ApiOptions.None through to it). Again, assuming paging is actually supported on that end point of course.Looking at the API docs, it doesn't look like the endpoint supports paging, but I'll do some Fiddlering to see if it might actually support it, just being undocumented.Well, Fiddlering confirms that the endpoint **does** support paging, I'll add that in as well",,,,,,
238059643,1435,Issue,"OK, this should now be good to go",,,,,,
238073738,1435,Issue,"Nice work!  Everything looking good, ill just pull down your branch and run through the integration tests  :+1:",,,,,,
238105559,1435,Issue,"I just noticed missing XmlDoc comments on the 2 new functions added to `ApiUrls.cs` helper class which we probably should add, since every other function in that class has doc tags currently...Once that's done I'm good to merge :grinning:",,,,,,
238108992,1435,Issue,**Pretty** sure that TravisCI failure isn't because of me...looks like that random build failure we've seen before...,,,,,,
238110830,1435,Issue,![LGTM],,,,,,
235856596,1434,Issue,Oh dear!  I saw it mentioned 0.21 was shipping tomorrow so I didn't review it earlier (that was a task for tonight)  :grinning I'll check these amendments out soon,,,,,,
235871660,1434,Issue,"I've run my own ""PR's merged between 2 refs"" code against this release and found another couple of PRs that aren't currently in the list:[PR#1398] Updated git data commit response with signature verification object via [][PR#1402] Fix serialization of enum value attributes via [][PR#1341] Include reactions on issue comments via []",,,,,,
236035370,1434,Issue,"thanks for the sanity check. I called out #1402 in the previous release, and I'll add the others here.",,,,,,
236038600,1434,Issue,"~~Weird, I'll need to look at why 1402 comes up in my query, üòÄ~~I was confused when you said ""previous release"" (I thought you mean v0.20) so all good.  My query was from v0.20.0...master so 1402 coming up is correct, I just failed when seeing what you'd already listed in the release notes :grinning:",,,,,,
236070938,1434,Issue,This is shipped (again),,,,,,
235591832,1433,Issue,"G'day  It looks to be related to those specific users.  In the 108 commits in your comparison, there are 5 commits with `Author == null` (and `Committer == null` when it was the same as author) and all 5 of them are from 3 unique contributors.  Also there are no other commits from these contributors in this comparison range that DO provide Author/Committer details.  In other words, ALL commits from these 3 authors present with this problem.I've confirmed that the actual json response has this field as `null` (ie there is nothing happening inside octokit deserializer, this is coming from the github api itself)You can also see this fact if you look at the commits themselves:, , , , The author is NOT a normal hyperlink to a github user profile, instead it is just the ""display name"" of the author, according to the git commit data:Same in the [commit list] of the repo, we only see the git author name and not the github author's hyperlinked profileIn terms of the GitHub API object model, the items returned in the comparison results are what we call `GithubCommits` that have ""github"" info on them - things like organization/owner, and full ""user"" objects for Author and Commiter (in these cases this info is null).  Then there is also a `Commit` object that is more the pure ""git"" info, which include author/commiter details from an underlying git point of view (so you get the author's Name and Email, but not any github specific info like login)... just like any git client would show.  So if your intention is to generate a list of people who contributed commits, potentially you could go with `commit.Commit.Author.Name` rather than the github login, or possibly the github author.login is null, fallback to using the git author name instead.Now you've raised this here I realise I actually ran into this just the other day on our GitHub Enterprise instance where when I retrieved commits from a pull request not all `Author` fields were populated.  I didn't dig into it too much and just ended up using `Commit.Author.Name` instead... but I think it's likely to be the same thing.Maybe privacy settings on those users or email verification status?  I might ping github support about this to see if there is an explanation",,,,,,
235593694,1433,Issue,"PS I listened to your DNR podcast on cake recently and although I knew it was out there it's motivated me to put it on the todo list to go and check it out!  :+1:  octokit is using fake I dont know how  would feel if I suggested moving to cake, but as a c# guy who doesn't know f# (another todo list item!) I find I have a mental barrier to touching the build scripts :grinning: I havent looked as yet, but I was thinking it'd be cool to have some ""github"" tasks in cake (using octokit.net of course!) if you don't already...  Creating PRs, tags, releases, pulling data for release notes etc.  I guess you could always just use octokit.net from c# but some aliases might be cool",,,,,,
235593903,1433,Issue,"Thank you so much for digging into this!  said... I might ping github support about this to see if there is an explanationIf you could I would really appreciate it.The idea was really to create the list that you can see here:Which is a link to that person's GitHub profile page.  I can certainly fall back to using the Display Name for that user in the case where the Login name isn't provided.   you were the three users that were not included in the list that I generated using Octokit for our blog post.  Are you aware of any issues with your account regarding email verification status, that would stop this being shown.  Or any security restrictions that you have put on our account to stop this information coming through?  Thanks!",,,,,,
235595360,1433,Issue,"said... PS I listened to your DNR podcast on cake recently and although I knew it was out there it's motivated me to put it on the todo list to go and check it out!  :+1: I havent looked as yet, but I was thinking it'd be cool to have some ""github"" tasks in cake (using octokit.net of course!) if you don't already...Woot!  Glad to hear that it helped motivate you to look into it! :smile: We have an Addin for doing some command line Git things.  You can find this [here], but nothing directly against the GitHub API.  Although, we do have support for [GitReleaseManager] which uses Octokit under the hood to allow the generation of a GitHub release with release notes based on Issues/PR's in a milestone, uploading assets into a release, publishing a release, and then closing a milestone, etc,The reason that this question came up was that I was planning on adding support for generating a list of contributors in a release to GitReleaseManager, which I thought would be a useful addition.Would love to hear if you have any other thoughts in this area, or if you wanted to create a Cake.GitHub addin.",,,,,,
235617077,1433,Issue,"There is nothing I'm aware of, I do commit using a few email addresses across a few machines and apps so things aren't always consistent, but my main account email is private and have two-factor auth enabled if that makes any difference?Guess I'm just a :snowflake: lol",,,,,,
235617703,1433,Issue,I do commit using a few email addresses Are all the email addresses [linked to your github profile]?,,,,,,
235619465,1433,Issue,"No they aren't[Edit] I've just added maclean email to my profile, does this fix the link to my profile?",,,,,,
235620336,1433,Issue,"Assuming the email address on the commits being discussed here is one that isn't, that would explain it Ideally you should add all your email addresses you use in git, under your github profile so you get stats for commits made via that email",,,,,,
235639119,1433,Issue,"If it helps, my commit and push was done using the GitHub desktop client for Windows, which is the only thing that works with the corporate network I was on.Going into Options shows that I do have name and email set though.",,,,,,
235651976,1433,Issue,"after associating the emails with the account, should I expect to see a non null in the response of the octokit call?",,,,,,
235652045,1433,Issue,"Ah, but email somehow got set to one I didn't have in my Profile, an omission I have now rectified; alas, too late to make it into Gary's blog post.",,,,,,
235652259,1433,Issue,I retrospectively added you too the blog post :smile:,,,,,,
235710790,1433,Issue,"after associating the emails with the account, should I expect to see a non null in the response of the octokit call?yep!  Once the email address is ""claimed"" the output will contain the expected github `Author`.  As there's nothing to stop this happening on any future commit/author, it's probably a good idea to implement the fallback to `commit.Commit?.Author?.Name` when `commit.Author?.Login` is `null`",,,,,,
235714712,1433,Issue,"said... yep! Once the email address is ""claimed"" the output will contain the expected github Author.Perfect!  I have just confirmed that this is now the case.  I now get the `Author` property populated for both  and .  The only one that is still not populated is  but I am going to assume that this is the same issue.  said... As there's nothing to stop this happening on any future commit/author, it's probably a good idea to implement the fallback to commit.Commit?.Author?.Name when commit.Author?.Login is nullAgreed, I will go that.I am going to go ahead and close this, thanks for all your help!",,,,,,
235810235,1433,Issue,I'm sure my email is the same issue because I did fixes at work with git instead of home.  I'll fix my profile.  Thanks!,,,,,,
235810651,1433,Issue,"said... I'm sure my email is the same issue because I did fixes at work with git instead of home. I'll fix my profile. Thanks!Perfect, thank you! :smile:",,,,,,
235754233,1432,Issue,any feedback on the release notes before I :ship: this tomorrow?,,,,,,
235761492,1432,Issue,"One minor nit, otherwise :+1: to the release notes.",,,,,,
235801715,1432,Issue,This has shipped:- -,,,,,,
235943241,1432,Issue,:tada:![],,,,,,
234733355,1431,Issue,unfortunately we can't set the avatar when [updating the user]. This is still a manual task :cry:,,,,,,
234734840,1431,Issue,Maybe one day.  Thx for the reply.,,,,,,
234585800,1430,Issue,"If you can render HTML in your WPF app (using the WebBrowser control or something like CefSharp), then you can just use Octokit.NET to generate the GitHub-flavoured Markdown directly:I'm not aware of any libraries that support client-side rendering of GitHub-flavoured Markdown, but you can see an old [SO thread] discussing some options.I'll leave this open for a bit to see if anyone else has bright ideas here...",,,,,,
240109570,1430,Issue,"I think you should be able to tweak [Markdig] to render GFM pretty close to what GitHub itself does, if you want to avoid the roundtripping. It supports fenced code blocks, task lists, tables, as well as many other extensions.",,,,,,
279144512,1430,Issue,"Came across this today, but is for UWP.",,,,,,
531737851,1430,Issue,Closing this out due to inactivity.,,,,,,
234510633,1429,Issue,"Interesting question, there's nothing in the github API for git LFS specifically. I'd assume if you really need to do this you'd need to manipulate an actual git workspace using git cmdline or maybe libgit2 As an aside I wouldn't expect dll or xml files to normally be setup to use LFS, it's normally only for huge files compared to typical dll or xml files",,,,,,
234587278,1429,Issue,#NAME?,,,,,,
234845211,1429,Issue,"The file itself. I have tracked .dat, .dat.gz, .xml, .dll for Git LFS. I want to get these files (download the files) to my local computer from the application using Octokit.",,,,,,
423519596,1429,Issue,Any update on this? I'm interested in doing the same thing.,,,,,,
423521712,1429,Issue,"I don't believe this has changed since I last checked. We're limited by what's available and supported in the GitHub API, so I recommend contacting [GitHub Support] about the underlying issue.If we see documentation about this we can then support it in Octokit, we can revisit this.",,,,,,
234240784,1427,Issue,"You can't delete issues on github in any anyway as,  only close them.",,,,,,
234244464,1427,Issue,Thx for info.,,,,,,
234037777,1426,Issue,"Similar to #1425, you can set `HasIssues` when editing the repository through the API to change this behaviour...",,,,,,
234041111,1426,Issue,"Yes, just came across this property.  Thanks",,,,,,
233997264,1425,Issue,"I'm not aware of a way through the GitHub API to script forking repositories. However, if you've already created the repository you can rename it through the API.This [snippet] from -Zuber is an example of doing the rename:",,,,,,
234006234,1425,Issue,That did the trick  Thanks!,,,,,,
233995427,1424,Issue,you would have to repopulate the issues in the new repository after forking,,,,,,
234009243,1424,Issue,"I was able to do this as mentioned, but wasn't sure if there as a call that could do in one attempt instead of individually.  I also had to add the labels and assignees one at time, as well.    Are you saying this is the case or is there a method to copy the entire issue(s) contents (body, labels, assignees, etc.) to new fork at one time?Thanks again for the help.",,,,,,
234036802,1424,Issue,unfortunately there isn't a method to do this all in one API call,,,,,,
233933405,1423,Issue,Changes look good to me!,,,,,,
234354724,1423,Issue,![],,,,,,
233163314,1422,Issue,![],,,,,,
233186075,1421,Issue,![],,,,,,
232445080,1420,Issue,looks good to me!![],,,,,,
232450090,1420,Issue,![awesome],,,,,,
238063707,1419,Issue,Looks like `NSubstitute` now support [.NET Core],,,,,,
238073800,1419,Issue,"Whether in conjunction with this or not, i'd also like to look at moving the builds over to CAKE rather than FAKE...",,,,,,
238140729,1419,Issue,here you go #1440,,,,,,
245232098,1419,Issue,Is anything blocking this issue at the moment? I'd like to help if that's OK.,,,,,,
245254846,1419,Issue,"No, nothing blocking it... it looks like all the dependencies are supporting dotnet core now",,,,,,
245302815,1419,Issue,"Great. I'll start with something to kick off a discussion around it.In the meantime, if you think of anything I should be aware of, please let me know. Thanks.",,,,,,
245325535,1419,Issue,requires VS2015 Update 3 + additional tooling to contribute (you'll be prompted on first open)If we can use visual studio code to contribute to ocotkit - that con  would be addressed. üòÑ,,,,,,
245437855,1419,Issue,"I would also like to contribute to the .NET Core port, so count me in when it all starts :D",,,,,,
245449491,1419,Issue,"As a first step, if someone wants to have a look at getting a simple .NET Core project (name it `Octokit.Next` or whatever) building on Appveyor within our existing build scripts. That should open us up to scaling this out so more people can help out.I've even got a branch [started a while ago which ports one of the projects] with a `project.json` that was working locally.",,,,,,
245508961,1419,Issue,"sweet, thanks for pointing that out.what was the rationale behind defining [several] [netstandard] [targets]? I thought if you build for `netstandard1.x`, then any library targeting `netstandard1.y` where `y >= x` can reference it. Totally possible that I'm wrong, though, as I have very limited exposure to .NET Core.",,,,,,
245784226,1419,Issue,"it was mostly me experimenting at the time with the API surface required to target each `netstandard` flavour, but I was also following what we did with [Rx.NET].And of course I'll defer to [the documentation] around the .NET Platform Standard on this.",,,,,,
254655365,1419,Issue,Hey folks. Can I get a summary or where we're at on this? I may be interested in helping out.,,,,,,
254657019,1419,Issue,"we have an `Octokit.Next` project and tests building in CI. If someone wants to start building against the Octokit source and targeting new platforms they're more than welcome to dive in.I'd recommend using the `include` options in `buildOptions`, rather than copying the same source into the new folder.e.g:",,,,,,
254663517,1419,Issue,"I'm not sure I understand. It would be good if this Next project was at least setup to whatever standard the others are - I have no idea what requirements you have around your build processes, etc. Maybe you could prepare the project, even if it is broken, so people can more readily refactor code?",,,,,,
254669118,1419,Issue,"Appveyor and Travis are already setup to build and run tests for this Octokit.Next project - you can see this in action [here]. Aside for the [requirements] for .NET Core you shouldn't need anything else.[I also started a branch a while ago] to see what sort of source changes were necessary, but that was before we started the `Octokit.Next` stuff so I'd use that only for reference...",,,,,,
254669460,1419,Issue,"the project is relatively vanilla because MSBuild does weird things when you mix `csproj` and `xproj`/`project.json` in the same directory. I also wanted to transition things gradually, without interfering with people who wanted to contribute new features and fixes and might not have the latest tools installed.",,,,,,
254766237,1419,Issue,Unfortunately I do not know enough about VS projects to figure out how to include the Octokit files in the Next project by reference - IE not copied - and still be able to build and view the project as if it were a normal VS project.,,,,,,
255126294,1419,Issue,"An approach I would use is to get rid of all the `.csproj` files and create `project.json` to replace them. Since `project.json` allows multi-targetting, then the solution would not contain as many different flavours of the Octokit project, but only the main one that would be built for several targets.You can find several examples of projects that have been ported to .NET Core, but one  mentioned earlier, having worked on it, is [Rx.NET](Rx.NET/blob/master/Rx.NET/Source/System.Reactive.Core/project.json).I hope this helps.",,,,,,
255310860,1419,Issue,Updates on `.csproj` and MSBuild.,,,,,,
260461128,1419,Issue,"I'll spend some time working on this very soon.My intent is to port the main 3 projects to `netstandard1.1`. Then we'll talk about all the other platforms we need to target and how we'll do it. I quite like how [Rx.NET] was ported, with conditional compilation symbols that map to capabilities more than platforms.I'll create a PR early to open a discussion",,,,,,
261147989,1419,Issue,"Yo.Alright, I had a poke around whilst reviewing 's progress and there's some stuff bouncing around in my head that needs to be discussed before progressing further.First up I think the title of this discussion is incorrect; the focus should not be on porting to netcore - it should be a discussion about what netstandard profile this library should migrate to and how to handle `[Serializable]`Currently, Octokit has separate projects for `net45`, `netcore45`, `mono`, `monodroid` and `Profile259`. This seems strange as there doesn't appear to be any  solid platform specific reasons for doing this apart from `[Serializable]` jankyness with exceptions. All of these platforms could be üî• and converted into a single project that targets netstandard v1.x after converting to the reflection API that was introduced back in the portable class library days - 's PR has initial WIP conversion of the reflection API. From there you can lift the Akavache build/release pipleine; see  AND get rid of TravisCI üéâ  as you no longer need to generate a mono assembly.Another thing that needs discussing is the migration to a newer version of `System.Reactive` that supports netstandard and in doing so might warrant bumping the major depending on how you interpret semver as if I remember right there was some strong naming changes + major version of the dependency was changed:",,,,,,
262125433,1419,Issue,"/  if/when you have some time, could you please take a look at 's comment above? thanks :+1:",,,,,,
262141166,1419,Issue,Had a convo with Oren today about Rx3.0/RxUI - he recommends going to `System.Reactive` v3.1.1 as that won't force `net45` consumers into installing the netstandard lib dependency.,,,,,,
262238003,1419,Issue,IM happy with the approach suggested by  in getting the main 3 projects going on netstandard 1.1 first then looking at what to do next.  I'm also :+1: to the Rx approach of the capability based #ifdefs,,,,,,
263150006,1419,Issue,"the use of `[Serializable]` was more of a correctness thing than anything core to Octokit's behaviour, so don't let that get in the way of anything serious. I think the most interesting dependency is `System.Net.Http` so I think that sets a floor of `netstandard1.1` for which version to target.I think this would affect existing users of `Profile259` (from memory that's closer to `netstandard1.0`) but I'm okay with deprecating that.And yes, I'm :thumbsup: on borrowing your work on the pipeline stuff. I hope  is already all over that :grin:I'm also :thumbsup: to bumping to `System.Reactive` as part of this work - that's probably a good point to semver up to 1.x _finally_.",,,,,,
267457741,1419,Issue,"hello sir! Are you currently working on this? Are you moving straight to the new CSPROJ project format as you go (meaning you'll need >=VS2017 RC or latest dotnet CLI builds)?Also, please note you should drop your reference to Microsoft.Net.Http and instead just depend on NETStandard.Library which brings in System.Net.Http. The Microsoft.Net.Http package is hella old now and won't be moved into the shiny .NET Standard world.",,,,,,
267467810,1419,Issue,"Hi  ,   is doing most of this work and I've been changing our build script over from FAKE to CAKE. As time goes on i think its more and more likely we do jump onto the ""new"" csproj project system. Last I heard there were still problems with the tests/explorer in vs2017 but things change so quickly that may be old info?We'll certainly take your advice on the system.net.http stuff üëçThe main outstanding thing for me in terms of actually getting this dnx build out there is that we previously do source linking in the pdb files and it hasn't seemed that any of the available options (sourcelink gitlink etc) are yet supporting dotnet core projects most of them were also not bothering with project.json and waiting till the new csproj format.  This reminds me I need to go and look at where those guys are at now it's been a few more weeks down the track üòÄ",,,,,,
267468196,1419,Issue,Btw see #1503 for where we are at with this work so far,,,,,,
267468966,1419,Issue,Heads up AppVeyor w/VS2017 is in beta/opt-in. See,,,,,,
267479459,1419,Issue,"Hi  , we only reference `Microsoft.Net.Http` for the `net45` TFM. `NETStandard.Library` is used when targeting `netstandard1.1`, as you can see [here].I'll leave it to  and  to decide whether we make the move to the new `csproj` system with VS 2017 RC. As it's available in AppVeyor, it shouldn't too much of an issue.",,,,,,
267488765,1419,Issue,"the state of the tooling has been an issue for me, and was one of the reasons I deferring the porting work. Ideally I'd love for this stuff to ""just work"" for new contributors who stumble upon this, and having to be on bleeding-edge stuff isn't something that everyone is keen to do.   Are you moving straight to the new CSPROJ project format as you go (meaning you'll need >=VS2017 RC or latest dotnet CLI builds)?Personally, requiring VS2017 when it's still RC doesn't feel great. I know the benefits are there from the tooling side to skip project.json completely, the only concern I have is about how opening these projects in an incompatible version of VS works currently - probably something I can test myself. I'm not really actively working on .NET stuff these days, aside from supporting existing projects and helping them with porting wherever I can, so I'm going to defer to the others in this thread - especially  who has been championing this work - about whether they want to move up to VS2017 sooner.If the infrastructure is there to support the new csproj changes (and it sounds like Appveyor is close to supporting VS2017 bits), then we can make it clearer to end users to go and grab VS2017 Community if they want to get involved. Also, please note you should drop your reference to Microsoft.Net.Http and instead just depend on NETStandard.Library which brings in System.Net.Http. Great to hear :sparkles:",,,,,,
267846260,1419,Issue,"we only reference `Microsoft.Net.Http` for the `net45` TFM.Did I *really* write this? That's embarassing. Point taken, will remove it altogether. Are you moving straight to the new CSPROJ project format as you go (meaning you'll need >=VS2017 RC or latest dotnet CLI builds)?I tried the one-way upgrade over the WE with the latest VS 2017 RC. Didn't go well as the upgrade didn't work when opening the solution. I'll have another look this week. I know  did it for MiniProfiler so I'll have a look at how he got it done.",,,,,,
268700726,1419,Issue,"I'm giving the move to VS 2017 RC a go, could you tell me to which account is the `octokit` organisation linked to in AppVeyor so I can ask them to enable VS 2017 for us? Cheers",,,,,,
268706094,1419,Issue,"it's the `github-windows` account on Appveyor, and if it's something available through the admin panel I can set that for you directly...",,,,,,
268706823,1419,Issue,go post in the appveyor thread linked above and once added you can select from admin panel.,,,,,,
268709329,1419,Issue,"Cheers. I don't think it's available in the UI for now as there's a dedicated thread for people to ask that it gets enabled for their accounts. I'll do it. Thanks again.*Edit: OK, you beat me to it. Thanks!*",,,,,,
268722279,1419,Issue,"/  I have a WIP branch named [port-to-dotnet-core-vs-2017]. I'm waiting for AppVeyor to enable the VS 2017 RC image on the account and I'll create a PR to see if things are running smoothly.A couple of issues I encountered on the way: - `.nuspec` files don't exist anymore and the NuGet package metadata is now stored [in the .csproj] so I had to hardcode the current version in there. We could work around that but I went the easy way until we see if we continue on this path - MSBuild chokes when the NuGet package version contains `-*` as this was done [here]. I removed it for now - Since the new `dotnet` cli doesn't recognise `project.json` files anymore, I transformed `tools.project.json` which we use to install `GitVersion` to [an empty `.csproj`]. I have no idea if that's the way to goAny feedback is welcome!Thanks",,,,,,
365472247,1419,Issue,"we can close this out, right?",,,,,,
365474542,1419,Issue,indeed!,,,,,,
232795814,1418,Issue,:shipit:,,,,,,
231496322,1417,Issue,"someone mentioned something on gitter chat that there may have been some changes to Api rate limits from memory.Have you tried passing an `ApiOptions` to the `GetAll` call and specifying a high records per page size to override whatever the default is?  That way if the default was changed to something lower, but it still allows you to request more per page, you might be OK.In general I was bumping up against some of the same types of issues, where as repositories grow older/larger, our query performance (mainly around generating release notes between any 2 arbitrary points) started to suffer.  I was able to make some efficiency improvements with some of my queries (eg instead of loading all PR's for the repo I used the issue search API to find issues of type PR that are merged between the commit timestamps of the from/to commits I wanted release notes for) and then load those ones with individual  `Get` calls but in parallel... this scales much better in a repo with growing numbers of PRs.So in your particular use case, what is the outcome you are trying to achieve?  There may be ways we can suggest to make your code more scalable as repositories grow larger, rather than always retrieving every single issue event since the beginning of time.  Eg another thing I do for my release notes I need to know the merge commit of the PR's, which you can only find from the ""merge"" event.  Originally I used to get all issue event for the whole repo, but this grew too slow (i didnt run into your issue, just really lengthy query times) so with the above optimisations I now only run this query for the singular issues (PRs) i know i am interested in and by using Tasks to run things in parallel, achieved a pretty scalable query that is only affected by the number of PRs in a release, rather than the size of the repoOr if you are using the issue events to know ""what is happening"" in the repo, then you could instead configure webhooks to hit your service so you get told of each event as it happens, and can process them in the singular context rather than ""all events for the whole repo""Here's a gist showing the approach I mentioned - using parallel tasks to load a smaller set of individual `Get` calls, rather than using GetAll calls.",,,,,,
231610002,1417,Issue,"A couple of questions I have:- Are you capturing the rate limiting information when you encounter this error? I'd love to confirm that is reflecting reality so that clients know when they are able to reconnect to the resource.Here's a quick snippet:- are there other resources you're encountering this on, or is it only [Issue Events for Repository]?",,,,,,
231610802,1417,Issue,"Brendan, I did in fact collect this data in the process of troubleshooting.This is from memory and reflects what I saw on Friday.- - - I did not observe other GetAllFromRepository() calls.When I let the Events GetAllFromRepository() gather without bounds, it will send off ~1100 calls to GitHub, then respond with the error that I saw.Ryan, good questions. I will get back to you when I get into work on Monday.",,,,,,
231820366,1417,Issue,"- we use Octokit to push GitHub issue data into our internal bug tracking system, allowing those who are looking at larger trends within the organization to not have to jump over to GitHub to understand our project.GH issues, comments, and events are used to update our tracking bugs. Because GetAllFromRepository's ApiOptions only cover page size and number of entries, the initial version of the code asked for the entire repo, then parsed the output down to only the updated comments. Not exactly efficient. Our repo is still small enough to make this possible. I was looking at better ways to get the work done before the issue I mention above showed up on Friday.What would be ideal would be to ask only for the comments or events that take place since a certain timestamp (the last hour of comments, for example). It'd be useful to have a similar RepositoryRequest for comments and events as we do for issues.As you point out, some of this could also be done using RepositoryIssueRequest {Since = ...} and just getting events or comments for those issues. However, it'd also be useful to _not_ have the API misbehave and use too many calls for a particular event request.",,,,,,
533882473,1415,Issue,Moving this to #2011,,,,,,
230646085,1414,Issue,A++ WOULD REVIEW AGAIN,,,,,,
230427339,1412,Issue,Can you please post your example code here or in a gist or repo?,,,,,,
230432575,1412,Issue,"Of course the code is copy pasted from :Changes :- "".Dump"" method extension seems to comes from linqPad only so I've deleted lines- I've replaced ""client.GitDatabase.xxx"" by ""client.Git"" since this is obsolete code.- Used a new ProductHeaderValue- used my Entreprise Account line 21- replace line 27 with OAuth token : client.Cred = new Cred(""tokenAsString"");- replaced line 30 with associated mail**Crash on line 38**",,,,,,
230435733,1412,Issue,"Ok so I just had a lucky GuessOctokit is not compliant with ConsoleApp **if consoleApp is buit with 4.6.1**It seems to crash a ""MethodNotAllowed"" exception if i'm targetting 4.5",,,,,,
230452777,1412,Issue,"any idea for the MethodNotAllowed ?Let's say that :- my Entreprise expose Github on : - My account is on : - I created an OAuth token : a12345bcdThe generated request has the following params when it's rejected ::(File Connection.cs line 543) request.BaseAdress :  request.EndPoint : {user/repos} request.Body : ""{\""name\"":\""SampleRepo\""}"" request.Method : ""POST"" request.Parameters : Count = 0 request.Headers[0] : {[Accept, application/vnd.github.quicksilver-preview+json;......]} request.Headers[1] : {[User-Agent, myProductHeaderValue]} request.Headers[2] : {[Authorization, Token a12345bcd]}",,,,,,
230453636,1412,Issue,"there's documentation about enabling source debugging for Octokit here: This will mean you don't need to worry about referencing the source. Octokit is not compliant with ConsoleApp if consoleApp is buit with 4.6.1 It seems to crash a ""MethodNotAllowed"" exception if i'm targetting 4.5Could you confirm which version is the problem?",,,,,,
230454955,1412,Issue,"wich version of what ?I've cloned ""Octokit"" and added a console app INSIDE the solutionthis consoleApp is using framework 4.6.1And this project has a ""Project reference"" to the Octokit.net projectNo tricks, then it will crashMy guess is that the framework 4.6.1 changed BCL for the stack octokit uses (from 4.5)",,,,,,
230457379,1412,Issue,"wich version of what ?Which version of the .NET Framework you are targeting - are you saying that both .NET 4.5 and 4.6.1 are affected?These are the steps that I used in Visual Studio 2015 Update 3 to see if I can understand the issue as you see it:- create a new console application targeting .NET 4.6.1- In NuGet Package Console, run this command: `Install-Package Octokit`- replace the contents of Program with this:- set a breakpoint inside the closing bracket of the `Run()` method- `F5` to run the console app I tested this code against a recent version of GitHub Enterprise and didn't encounter an issue. **Could you confirm that these steps work for you?** No tricks, then it will crash My guess is that the framework 4.6.1 changed BCL for the stack octokit uses (from 4.5)I couldn't find anything using the above repro steps, so I need more information to help troubleshoot further. Given you're not able to catch any sort of exceptions, I fear something isn't right with your installation of VS (or .NET).What about if you had a console app that was just this? Does that also let you handle the error within the debugger?",,,,,,
230472336,1412,Issue,"So ...The fact that I catch nothing is only happening if I use Octokit inside a ConsoleApp 461               KOConsoleApp is 4.5             OKWebApi 461                       OKI can catch any exception without issue in any configuration/plateform or whatever in any project BUT the configuration octokit + consoleApp 461My guess is that there's a segfault or something like that. It seems that VisualStudio unload the AppDomain ""the hardway"".And since octokit is using ""Web"" BCL classes and these one changed ... I think it comes from that**FYI : the oldest framework supported is 4.5.1 and octokit uses 4.5I've moved octokit to .net 4.6.1 it solves this crash****I strongly recommend the move to .net 461 to avoid this kind of behavior since there's been lots of changes in the BCL around httpClient & so on**",,,,,,
230472606,1412,Issue,"For the ""MethodNoAllowed"" issueIt seems that : new ProductHeaderValue(""Octokit.samples"")does not allow me to set a custom values ... it works perfectly until I change it with : new ProductHeaderValue(""abc"")... not always I really don't get it it's like there's a cache but when I got the exception, I play with the user agent and it seems to works again. Like there's a 50/50 chanceI really don't get it",,,,,,
230670423,1412,Issue,"I strongly recommend the move to .net 461 to avoid this kind of behavior since there's been lots of changes in the BCL around httpClient & so onThanks for the suggestion, but I'm very hesitant to drop this compatibility as I have an application that's been using Octokit targeting .NET 4.5 for 2+ years and I've not had any users encounter this issue. ... not always I really don't get it it's like there's a cache but when I got the exception, I play with the user agent and it seems to works again. Like there's a 50/50 chanceThis is interesting, and not something I've seen before. Do you have a stack trace that illustrates the error when this occurs?",,,,,,
232131612,1412,Issue,I'm going to close this out as I'm not sure what the next steps are to resolve this.,,,,,,
230457347,1411,Issue,"I have just been troubleshooting a problem with the GitHub Enterprise management console stuff I'm implementing at the moment, where I was getting hanging tasks in my integration tests... it turns out it's the same problem you are fixing here!  :grinning: (management console uses redirects which as we've seen seems to trigger this behaviour).The good news is, with your fix in place (modified a bit) I no longer get the deadlock :grinning:Your code changes were pretty hard to diff due to moving the functions around in the file.  I actually re-organised it so the `GetSuccessfulResponse` and `CopyRequest` functions were last in the class, which then made the diff line up much nicer and revealed only a few lines of difference.  This let me spot a few places where you are not doing exactly what the old code did which I've highlighted in the review comments.  I fixed these locally, plus fixed up a few async/await type issues and renamed `GetSuccessfulResponse` to `SendAsync` and everything is working :gem: for me now with the problem I was facing.  I added what I ended up with to [this gist] if you wanted to seeThere is still the matter of other failed unit tests around redirects and so on to tackle though...",,,,,,
230461486,1411,Issue,I rewrite the failed unit tests,,,,,,
230642025,1411,Issue,Just throwing myself on as a reminder to sit down and properly understand this change ü§ò,,,,,,
231891224,1411,Issue,have you had a chance to look at those failing tests?,,,,,,
231980952,1411,Issue,Not really. Maybe in the next few days. What i have seen is that we have to completely rewright tests for redirects. Yet they are in `RedirectHandlerTests` but i think we should move them to `HttpClientAdapterTests` because redirecting is now handled directly in there. What do you think?,,,,,,
232133806,1411,Issue,I'll look at those failing tests and see if I can help,,,,,,
232799185,1411,Issue,Hi . I have sit down and think about these failing redirect tests. Here is an approach in which i have move one test into `HttpClientAdapterTests`. Because redirecting is handled by this class. But to translate tests i have to create a new property `RequestMessage` for class `Response` to get access to the `RequestMessage`. What do you think? So this is really a first approach!!,,,,,,
232895338,1411,Issue,I have try to copy these other tests and have find that is not possible to copy them 1 to 1. Because i always have to create new properties for `IResponse` and `IRequest` like `Authorization`. What is the intent for these both classes instead of using `HttpRequestMessage` and `HttpResponse`. Because you anyway translate them into `HttpRequestMessage` like [here],,,,,,
233123590,1411,Issue,"Yeah I dont think we want to add these properties to `IResponse` just so we can ""test"" what request was used.I had a go at re-jigging the tests with the new redirect handling like you've got in this PR.  I found that inside the redirect method, I had to pre-save off the original request's `content` so it could be later added to the request for the redirected Url, as by that stage a `Object has been disposed` exception was thrown when trying to access the original request's content directly.  With this change, and some modifications to the test/mocks I was able to get all the tests passing, except for the `Assert` that tries to verify that same field (`response.RequestMessage.Content`).  If you wanted to take a look at what I did, the commit is here:",,,,,,
233289026,1411,Issue,"Oh man, it's time for holidays :dizzy_face:  I rollback all my comments and add the changes form ryan. Now all should be fine, expect that one failure ryan described Assert that tries to verify that same field (response.RequestMessage.Content).",,,,,,
234713175,1411,Issue,One thing I would like to comment is that we now have two public send methods in `HttpClientAdapter`. Both are asynchronous but one is called `Send` and the other `SendAsync`. Is this ok?,,,,,,
236471613,1411,Issue,"One thing I would like to comment is that we now have two public send methods in `HttpClientAdapter`. Both are asynchronous but one is called `Send` and the other `SendAsync`. Is this ok?This is fine. I'd rather not break this API now, and come back to it when we want to let people provide their own `HttpClient` implementation.",,,,,,
236472122,1411,Issue,"i like where this is heading, and I think this is close to merging in.I'd like to push this out as a release on it's own so we can verify it in isolation from other features being rolled out :metal:",,,,,,
236477459,1411,Issue,"From memory the main issue i found with these changes was that you can no longer ""reach in"" and access the original request message (response.Request. Content)  as it's been disposed. I'm not sure if anything really needs to do this (it was only the integration test that was doing it in our code)",,,,,,
236533889,1411,Issue,"I'm okay with locking that down if it means resolving this redirect issue - it was supposed to be a black box and I'm not really hearing anyone reimplement our `IHttpClient` without significant pain - and they'll likely be not using this stuff anyway.If someone comes up with a good use case for needing to poke the request content after we lock this down, then I'm all ears...",,,,,,
236555428,1411,Issue,this means these changes from  are ok?,,,,,,
238431075,1411,Issue,"yep, those comments are fine. Just a couple of tweaks I think to get this ready to merge.",,,,,,
238624802,1411,Issue,Something I can do to get ready?,,,,,,
238630976,1411,Issue,I guess  talking about his comments in your last commits. If you delete commented/dead code and do something else it can be merged.,,,,,,
238684830,1411,Issue,Thanks for that hint . I thought there where unresolved things because of I'm not sure if anything really needs to do this (it was only the integration test that was doing it in our code)I will asap fix the comments from .,,,,,,
238873899,1411,Issue,"Hey so I pulled these changes down and was going through things one final time and I decided to unskip the failing test from #874 now that we ""should"" be handling redirects properly.  And unfortunately it failed :rage:   The problem was something related to the way I had saved off the content stream from the original request, and the new content still had a reference to that old stream.So anyway, I did some more digging and have come up with a revised implementation that doesn't have issues with content streams and looks tidier too.  With this fix all the existing tests are passing and unskipping the one from #874 now works too :+1:The commit is , if you wanted to cherrypick it  and take a look?",,,,,,
239083719,1411,Issue,"Hi , do you mean test `CanCreateIssueOnRedirectedRepository`? Maybe it is better to clone the request after we get the respone? Only for design",,,,,,
239097253,1411,Issue,"That's the whole problem, you can't get the content stream ad it's been disposed",,,,,,
239107296,1411,Issue,"Ok, that makes sense",,,,,,
239565658,1411,Issue,"were you happy with that change? Can you confirm all the related integration tests are working for you, including the one I unskipped?",,,,,,
239610509,1411,Issue,"All tests including that one you have uncomment work for me. So i think we're done, right?",,,,,,
239696284,1411,Issue,"Awesome stuff, I'll merge this in then",,,,,,
239696303,1411,Issue,Thanks  ![LGTM],,,,,,
239728497,1411,Issue,Thanks for wrapping this up while I was off sick last week.![],,,,,,
239737603,1411,Issue,![noprob],,,,,,
230148008,1410,Issue,Build is failing convention tests due to missing unit test class for `TheCtor` in `RepositoryInvitationsClientTests.cs`,,,,,,
230148929,1410,Issue,"Nice work  !  :grinning:  I've made a few comments on various diffs, and also have some overall comments:### API Calls that return no payloadWith the calls that dont return a payload, you'll note the API docs do actually indicate that a ""success"" is a Http 204 (NoContent).  So that means we can actually implement these calls (`Accept`, `Decline`, `Delete`) return a `Task` and then you can actually get the `HttpStatusCode` and return `true` or `false` accordingly.  There are several examples of this in the code base already, one such example is `TeamsClient.RemoveMembership()` if you want to take a look at how it's done### XmlDoc commentsThere are some cases where the XmlDoc comments are not consistent or mention incorrect return types.  I realise some of this is because the comment you may have copied was, itself, incorrect, but we should aim to have correct comments at leats for new work we are adding.  So instead of `IReadOnlyPagedCollection` you should be saying `IReadonlyList` or whatever the actual return type is.  Also we have been discussing the `` tag from any functions where it is not adding value by having it :+1:",,,,,,
230196458,1410,Issue,"There is some inconsistency with variable naming for the invitation Id (`id` on the Accept/Decline endpoints, but `invitationId` on the GetAll endpoints).  It would be good to have consistent naming for this - either always `id` or always `invitationId`The `` doc comment, since they really aren't adding any value by repeating what the function return value is anyway",,,,,,
230257699,1410,Issue,I think i'm done. appveyor test is failing :sweat:,,,,,,
230263069,1410,Issue,It seems like it timed out on a build step.  I dont have AppVeyor access so unless you have another commit to push we will need to wait for  to give it a kickSo earlier you mentioned you had issues where the invitation email was never received.  Is that still the case or is everything working now?,,,,,,
231332001,1410,Issue,i'm now writing the ~~unit~~ integration tests,,,,,,
231332337,1410,Issue,Is it ok to use the `octokat` account for the invitations?,,,,,,
231334872,1410,Issue,??,,,,,,
231335218,1410,Issue,What's with the default constructor. Should we let the user decide?,,,,,,
231338663,1410,Issue,"So Im running the integration tests from my test account, invitnig my real account and i get no email and no notification on github about being invited.  yet if i explicitly visit the `HtmlUrl` property in the response then it does say ive been invited and i can accept/decline.Yet when i interactively use my test account and invite my real account to a repo, i get an email and the github notifications section shows it there... :confused:This is all on a personal account of my tes repo.  I guess given that comment in api docs about organization repos, we should see if anything is different when using the test user's organization rather than personal repo",,,,,,
231340107,1410,Issue,"Also confirming that yes the permissions only applies to organization repos.  so probably should update the Xml doc comments on the parameter to the `Invite()` method to specify thatPersonal repoOrg repoBut still doesnt explain why the email and github notifications arent received for invites done through the API preview (but they are actually created as evidenced by the invite link working for the invitee, and the collaborators section showing the pending invite from the inviters side)I also tested with the integration test using an organization repository - same situation - my account shows no notification and i get no email, but the invite IS actually in the system",,,,,,
231341275,1410,Issue,For summary: `Add` and `Invite` Methods should have the `permissions` attribute with note `Only valid on organization-owned repositories`. Right?,,,,,,
231362232,1410,Issue,"Oh nice, you decided to tackle #1101 while you're in this area? Thanks! On the topic of the email/notifications not occuring, I contacted github support and they confirm they can reproduce it, they are logging an internal issue, so we shouldn't need to worry about that aspect at least",,,,,,
231452050,1410,Issue,Ah. Right. This I have forgot to tell you :grin:,,,,,,
231572168,1410,Issue,"Nice work on the overloads for `Add()` and `Invite()` to make the permissions parameter optional, since it doest apply to non organization repositories :+1:Looking at that though, since #1387 added an overload to the `Add()` method that takes `repositoryId` rather than `owner` and `repositoryName` parameters, we probably need the same on the new `Invite()` method (as long as it does actually work).",,,,,,
231572270,1410,Issue,"Also as part of the repositoryId work,  was trying to be consistent with always using `name` for the repositoryName parameter rather than previously a mix of `name` `repo` `repoName` `repositoryName` etcSo since he standardised on `name`, are you able to change `repo` to `name` in your `Add()` method?",,,,,,
233057098,1410,Issue,I reduce the integration tests to only receive invitations. Tests for accept and decline not possible yet. Anything more to do?,,,,,,
233118632,1410,Issue,Anything more to do?Integration tests for `Delete()` and `Edit()` ?,,,,,,
233118885,1410,Issue,"Also it seems with the existing integration tests you are inviting YOURSELF to a test repository you created.  And this actually seems to work, with the invite showing up in the system.So given it seems to work to invite yourself, then you probably CAN have tests for `Accept()` and `Decline()`  ?",,,,,,
233120440,1410,Issue,Unfortunately not. I always catch an NotFoundexception if try to decline and accept with the same account. I have tested it with different accounts. There i can accept and decline the invitiations.,,,,,,
233123044,1410,Issue,Unfortunately not. I always catch an NotFoundexception if try to decline and accept with the same account. I have tested it with different accounts. There i can accept and decline the invitiations.It seems to work for me?  Eg this passes:,,,,,,
233581354,1410,Issue,I still don't get this test working :confused: Should i though write these tests although they don't work with my account?,,,,,,
233602356,1410,Issue,:+1: write them and I'll check them my side. What error do you get?,,,,,,
233655002,1410,Issue,"In that try catch block I get an 404 NotFoundException. Later I can send you detailed informations.On Tue, Jul 19, 2016 at 1:15 PM +0200, ""Ryan Gribble"" notifications.com wrote::+1: write them and I'll check them my side. What error do you get?---You are receiving this because you were mentioned.Reply to this email directly or view it on GitHub:",,,,,,
233932975,1410,Issue,"Your test works fine on my side :+1: So if you can also add an ""Accept"" invitation integration test I will double check that too and then I think we are good!Not sure what might be the issue with your 404?  I guess it means the invitation doesnt exist but its strange, in my case I can even login to github with my test account and see the invitation etc.  And there's nothing special about my test account, its just a free account. :confused:",,,,,,
234195679,1410,Issue,If i login i can also see that invitation. But i can't accept or decline it with octokit. But if it works with your account then maybe its not an issue. Maybe someone third should test it.,,,,,,
234197363,1410,Issue,Yep. that Accept test works for me too. Maybe someone third should test it.Yep probably a good idea,,,,,,
234316324,1410,Issue,> Maybe someone third should test it.  Yep probably a good idea:eyes:,,,,,,
234389151,1410,Issue,"Hey  I was pondering why accepting/declining a self invite might work for me and not you... one thing that came to mind is that I currently have my integration test configuration setup to use username and password only (i.e I have not specified an apikey/personal access token in the environment vars).  How have you got yours setup?  If you have an access token defined, try not specifying one, just to see if that makes any difference.",,,,,,
234542806,1410,Issue,![winner]100 points :tada: That's it.,,,,,,
234551329,1410,Issue,Nice one!OK so I reckon this is good to :ship: but let's get a :+1: from  first,,,,,,
234600528,1410,Issue,![Lets do this],,,,,,
234707826,1410,Issue,![LGTM],,,,,,
234709706,1410,Issue,:joy:  That last gif,,,,,,
234848083,1410,Issue,"Just a quick update on On the topic of the email/notifications not occuring, I contacted github support and they confirm they can reproduce it, they are logging an internal issue, so we shouldn't need to worry about that aspect at leastGitHub support notified me recently that they had pushed a fix for this, and I can confirm that emails are now being received when creating invites with octokit :+1:",,,,,,
229809824,1408,Issue,These test failures on Mono don't seem to be related to anything I've done.  thoughts?,,,,,,
229811047,1408,Issue,"We often have inconsistent travis failures on linux and/or OSX. I've restarted them to see if they pass this time, but it would be good for someone who knows that ecosystem to figure out the root cause and if there's something we can do to avoid the failures.  We were tracking them here #1076",,,,,,
229813717,1408,Issue,"Ah, thanks for the info  and thanks for merging !",,,,,,
229211015,1407,Issue,"Yep I was about to post this too üòÄPretty major changes, as previously all protection settings were done via 1 object and the single ""update branch"" endpoint,  whereas now protection is pulled apart into various sub components (enabled,  required contexts, user/team push restrictions)  but overall a much better approach  for the feature :+1:",,,,,,
238771520,1407,Issue,"For complete coverage of all the new API endpoints we will need to add 40 methods!Given that some are only a ""convenience"" (since you can manage everything with the top level endpoints anyway), this issue will cover implementing the following top level methods:And the remainder will be moved to new issues",,,,,,
228595713,1406,Issue,:thumbsup: to relaxing the regex to include `_`\- I did a quick test of other special characters and the only one I could find permitted is a `-`,,,,,,
230267182,1405,Issue,"Looking good!  For consistency, it would be great if you could add an integration test that tests all reaction types, to the original `IssueComment` reaction payload work that was done on previous PR?  :grinning:",,,,,,
230275765,1405,Issue,Do you mean here,,,,,,
230276885,1405,Issue,"Yeah I reckon replacing that test with your one that creates a repo/issue/comment, then adds each reaction type today it, then retrieves them and checks the fields",,,,,,
230789409,1405,Issue,unit tests are failing after merge. should i rollback?,,,,,,
230789920,1405,Issue,Is there something more to do with this request?,,,,,,
230951448,1405,Issue,"unit tests are failing after merge. should i rollback?It looks like some upstream changes needed to have the preview API applied - this is the commit which fixes it for me, feel free to cherry-pick it in:Looking at the integration tests now to confirm this is all that's needed...",,,,,,
230968091,1405,Issue,I'm seeing a few integration tests fail with this exception:- `Octokit.ForbiddenException : Insufficient scopes for reacting to this Issue.`Examples:- `IssuesClientTests.CanDeserializeIssue`- `PullRequestReviewCommentReactionsClientTests.CanCreateReaction`Not sure whether this is related to my setup or something I need to investigate further.,,,,,,
231001211,1405,Issue,i have cherry-pick your commit. test are now passing :+1:,,,,,,
231007642,1405,Issue,These failing integration test was my mistake :hushed:,,,,,,
231058420,1405,Issue,There are still some failing unit tests with missing preview header.  Also I noticed a couple of new `repositoryId` based calls from other merged PRs now also needed the preview header applied.If you cherry pick this commit  it should hopefully get everything green :+1:,,,,,,
231072155,1405,Issue,"~~And here is a commit showing what I meant with tidying up the reaction payloads tests, handling `Get` and `GetAll` methods and covering all reaction types:~~~~Something like this could be done for the other 3 clients (Issues, PullRequestReviewComments, CommitComments)~~Actually ive almost got all of them done, Ill send a PR to your branch :grinning:",,,,,,
231114422,1405,Issue,"I wasn't able to merge your request. So i have to create a branch of yours, resolve conflicts, and then create a pull request internally. Very confusing :confused:. But now all should be fine",,,,,,
231119523,1405,Issue,Not sure what you mean as the PR merged ok?  Anyway hopefully it's all good now. Can you run the new integration tests to confirm they work for you?,,,,,,
231142300,1405,Issue,I think the conflict came from your pull request. Because in the meantime i have made a change in my branch:see_no_evil: Tests run perfectly!!,,,,,,
231327769,1405,Issue,woohoo!![LGTM],,,,,,
231328546,1405,Issue,:tada: :tada: ![funny],,,,,,
228597708,1404,Issue,"Code looks good, a couple of questions:- do we want to make this available under `GitHubClient`?- is it worth writing up some docs around this? Even just a quick sample?",,,,,,
229815584,1404,Issue,"do we want to make this available under GitHubClient?Under the current design of the code, turns out to be not so easy. And you might not want the probe to use the same credentials registered with the GitHubClient anyways. We could try it the way it is for now and change it if we hear anything from people. is it worth writing up some docs around this? Even just a quick sample?Sure!",,,,,,
245400699,1404,Issue,I finally got around to adding the proposed ctor.,,,,,,
248501284,1404,Issue,"Thanks  , i've just pushed a couple of commits to this branch to suppress the code analysis rule violation that failed the build, and also tidied up the `ctor` doc and getting-started example.Once the builds are passing i'll merge this in",,,,,,
227579046,1403,Issue,"Yeah I ran into this myself yesterday.  Unfortunately looking at the [API docs example] shows that the GitHub API really only returns a couple of Url's (Html, Diff, Patch) for the Pull Request, and not the entire object which would indeed be handy.In my case I ended up using the Search Issue API to get a list of PRs for a specific repo that were merged in a specific date range, THEN i fired off concurrent async calls to load those subset of PR's individually.  This still turned out to be much faster than loading all PRs for the repo with the single `PullRequest.GetAllForRepository()` call (as under the covers, that pages through multiple results).  Also the GetAll call will get slower as the repository grows, whereas the search + parallel PR load is a bit more constrained since the commit (date) ranges (in our case at least) are for only a handful of 2 week iterations rather than the entire repository so it doesnt get that much worse on larger repositories, and then the actual number of PRs we have to load are a much smaller number and again, not going to be AS impacted by growing repository.  Plus running them in parallel helps with speeding them up :grinning: I also get the commits of each PR, the comments of each PR and the merge commit of each PR.  These all require separate calls as well, but doing it in parallel takes the edge off.  It ends up taking a few seconds to get all of the above information (which we use to create release notes).I can post some example code if it's helpful",,,,,,
228595637,1403,Issue,"Seconding what  said - this is a limitation of the server-side, and unfortunately due to us sharing models this is giving consumers false hope that it should be available...",,,,,,
228622727,1403,Issue,sharing modelsDo you think we should have some cut down models named something like `PullRequestStub` or `IssuePullRequestInfo` for these cases?,,,,,,
228627376,1403,Issue,"that's what i'm leaning towards, but I need to think more on how we can make this maintainable because it could be a lot of work to migrate and keep in sync...",,,,,,
268690129,1403,Issue,Yeah I kept wondering why things like Comment count were always 0 for PRs. Kind of frustrating that I have to make additional calls for each PR I'm interested in... kind of blows away the rate limit with the amount of data I'm crunching!,,,,,,
227509882,1402,Issue,Any ideas why .net core does not have method `GetField()`?[],,,,,,
227516395,1402,Issue,I actually can not test if this work with .net core.,,,,,,
227568567,1402,Issue,"It's weird though as this should have worked I thought...  Surely this isn't the first time we have an enum with an overriden value on a request message? Maybe it's `[Parameter(Key=)]` that is required, rather than `[Parameter(Value=)]`It would be good to make that integration test loop through all enum values and ""create reaction"" for each one of them, that would have picked this up in the beginning. I thought we already did that, or at least made the integration test use the enum value that did have the custom override value, but perhaps I'm thinking of the ""Get reaction"" payload and not the create reaction one",,,,,,
227652721,1402,Issue,"I have tested all variations `[Parameter(Key = ""+1"")]`. But if you step trough the serialization process and thenso maybe this is really the first time this happens or i'm wrong :confused:",,,,,,
227663863,1402,Issue,There are also problems when converting back to enum. In `SimpleJsonSerializer.cs` `-1` becomes `1`because of And `+1` is converted to `Minus1` :weary:,,,,,,
227664590,1402,Issue,Maybe we should use hardcoded strings for `ReactionType`?,,,,,,
227690960,1402,Issue,"so maybe this is really the first time this happens or i'm wrong :confused:So there are a fair few other occurences of `Enum`'s on request classes that have `[Parameter(Value = ""xxx"")]` attribute.  Did you want to test these through the serializer to see if they also have the problem?Here's a couple but there are more than these[`MilestoneSort.DueDate`][`SortDirection.Ascending`][`SortDirection.Descending`][`DeployTask.DeployMigrations`][`PullRequestSort.LongRunning`]",,,,,,
227696561,1402,Issue,Here is maybe another solution. For example if you have `+1`  how `Enum.Parse` should parse it to theright value?,,,,,,
227710454,1402,Issue,In think i know where the issue comes from. All the enums with parameters are used Requests which inherits from `Requestparameter`. For example MilestoneRequestIn the Apiconnection call you see `request.ToParametersDictionary()` which internally use reflections to get the parameter attributeIn `ReactionsClient` we pass `reactions` as a normal parameterwhich is serialized bySo the solution for this first problem is to inherit `NewReactiion` from `RequestParameters` and change the Api call for all reaction clients. I have tested this and it works as expected.The second problem is if you get a payload which is serialzed. This only happens at one place.So here i think the only solution is from my last commitSo if you dont't do this and you have a parameter like `+1` you never know if `Enum.Parse` parse it to right enum value.Please correct me if i'm wrong,,,,,,
227923734,1402,Issue,"Although the `ParametersDictionary` approach does fix things, I guess my thoughts are that since a change is needed in `SimpleJsonSerializer` on the `Deserialize` side anyway, we may as well also fix it in the `Serialize` side.  But I don't think it's necessary to write that logic yourself, as there is a `.ToParameter()` extension method in `EnumExtensionMethods` that already handles retrieving the custom parameter if present, otherwise uses lowercase string.  So something like this works, and then we dont need `NewReaction` to inherit `RequestParameters`:",,,,,,
227974776,1402,Issue,`p.ToParameter()` works perfectly :tada:,,,,,,
228289317,1402,Issue,Can you look on my last commit. Maybe someone has another solution. (Maybe simpler).,,,,,,
229798428,1402,Issue,![selfie-4],,,,,,
229863053,1402,Issue,![200 1],,,,,,
227087057,1401,Issue,"I've added the Verification object inside Commit and not directly under GitHubCommit according to the API.Also, I don't know whether we should create a class for the `signature` and `payload` fields, so I've just marked them as strings for now. Please let me know if they should get their own classes.",,,,,,
227143952,1401,Issue,looks like you need to adjust your tab settings as most files are showing whitespace/alignment issues,,,,,,
227147646,1401,Issue,"Also,  has a PR at #1398 that is aiming to add this verification info to the `Commit` class as part of the `Git Data => Commits` client, so you should probably wait nutil #1398 is merged, then the accepts header and verification classes etc will already be there.  Then this PR just needs to set the preview header on the Repository commits calls and add the unit and integration tests etc.",,,,,,
227204091,1401,Issue,"Yeah, I recently started using Xamarin, so didn't noticed the tabs/spaces. Will fix it after #1398 is merged. Thanks.",,,,,,
228635453,1401,Issue,#1398 has been merged,,,,,,
230146569,1401,Issue,"Still got merge conflicts on this one, also dont forget about the tab/space issues :grinning:",,,,,,
228939077,1400,Issue,1,,,,,,
317701818,1400,Issue,"Is there any progress on getting some of these fields added? I'm currently having to work around the non-existent ""before"" field in PushEventPayload, for example.",,,,,,
317716575,1400,Issue,"no progress per se, this wasn't a list of things to implement as many of them aren't desired/required (due to being API url fields or previously deprecated fields etc). It's great you've found one that should be added!  would you consider sending a PR to include it? Thanks",,,,,,
317719585,1400,Issue,"Sure, I can do that at some point this week. Also, I was wondering why, when accessing the Events API, the ""deleted"" field is not included in PushEvent payloads. I'm not talking about Octokit in particular, I mean the actual Events API payload, which I assumed would return the same payload as the event delivered through i.e. a web hook?",,,,,,
317722395,1400,Issue,I'm not sure what the actual reason is for that upstream API behaviour/design but I do see multiple references in the API docs saying that the push event is specifically different payload between the webhook and the events API I guess that confirms its expected behaviour but if you wanted your know WHY you could perhaps try contacting github support and asking?,,,,,,
317729836,1400,Issue,"Okay, thanks a lot, I'll see what I can find.",,,,,,
337923824,1400,Issue,"We were looking at using the `distinct` field on commits specifically (to cut down on processing). There's a bit of weirdness there in that it's on the webhook commit response, but not on the GET /commit response, and as best I can tell OctoKit uses the same model for both. Would that be a nullable bool (seems easier to add from a 'I could make a PR for this' standpoint)? Or would it need to be split out into two models, one for commits from the API & one for commits from a webhook payload?",,,,,,
338044877,1400,Issue,"How different are the response payloads?  Would be great if you could post an example commit json response from both cases so we can see how many fields aren't returned. You're right in that generally we use the same model for the same thing (eg a `PullRequest`) eventhough some API responses (eg a `GetAll` type request) don't include all of the fields that are returned from a single object `Get` request.It sounds reasonable to make this field nullable (and perhaps any others that are in the same boat) rather than splitting out a new object model, unless there are heaps of discrepancies",,,,,,
338402413,1400,Issue,"I compared what I get from a saved webhook (`push` event vs from the api) and added the results/diff in [a gist].Key points:- webhook uses `Id`, commit uses `Sha`- webhook has lists of files affected, api does not (and requires generating a diff)- webhook his a `distinct` field, commit doesn't (which makes sense given `distinct` is only valid at that point in time)- api has info about the tree/parents of the commit, and the webhook doesn't(It turns out that I had actually been using a reimplemented model locally which was how I've been parsing pushes in the first place).I think the worst difference is that it uses different property names to refer to the same thing - like `id` vs `sha`.",,,,,,
338429798,1400,Issue,"Maybe we should consider adding an attribute to properties that contain mappings of potential names for the deserializer.For example, Although this will only work if the type is the same",,,,,,
469156815,1400,Issue,"so , how do we do these  missing fields? any plans?",,,,,,
469182250,1400,Issue,"Hi ,There aren't any plans to add every extra field en-masse because some of them could be being deprecated and so on... But certainly if anyone comes across a field that is provided by the API but not defined in octokit.net it can be added to the response models via a pull request. Is there a particular missing field you've encountered?",,,,,,
469190529,1400,Issue,"ok,got it.",,,,,,
229626803,1399,Issue,"Hi  , i would take this issue.",,,,,,
229727968,1399,Issue,"Hi   i'm almost finished with this issue. There is one strange thing with this api. I have create an integration test to send an invitation. The callback from the api ist fine, but it sends no invitation (email). I have tested this also with a real example. Can you confirm this behavior?",,,,,,
229806894,1399,Issue,it'd be much easier to investigate the behaviour when the code is handy - let's look into that after opening the PR...,,,,,,
226896530,1398,Issue,"looking good, just a few little things to clean up. Love that integration test üòç",,,,,,
226909842,1398,Issue,:+1:  for review. Fixing this.,,,,,,
227425516,1398,Issue,"I'll let  hit the button since he reviewed this one, but it looks good to me",,,,,,
227426390,1398,Issue,Right.. thanks for the review. :smile:,,,,,,
228596556,1398,Issue,thanks for waiting for me. Just that one comment and I think this is good to go!,,,,,,
228618636,1398,Issue,thanks for waiting for me yeh no worries. i already knew your absence when i saw your tweet about your off for a week :wink:,,,,,,
228628588,1398,Issue,"looks good, thanks for this!![]",,,,,,
228657541,1398,Issue,![200],,,,,,
228536560,1397,Issue,"Great stuff  I couldn't spot anything missed, I also pulled down your branch and ran all the integration tests succesfully.  You've also fixed up plenty of other things like missing integration tests for the existing owner/name methods and even fixed a couple of bugs with the old code too :+1:",,,,,,
228536603,1397,Issue,![LGTM],,,,,,
228537091,1397,Issue,thank you for positive feedback :+1:,,,,,,
226658205,1396,Issue,The Fiddler thing has been noted before in #874,,,,,,
226762237,1396,Issue,"This is because if you rename an repo or change the owner you get an `301 moved permanently`. In  `Octokit.Internal.HttpMessageHandlerFactory` we set `AllowAutoRedirect = false`I have tested to set this to true, and voila, i get an response which contains the new owner.   can you say which consequence it has to set this to true.",,,,,,
226868020,1396,Issue,"OctoKit is [setting `AllowAutoRedirect` to `false`] on the `HttpMessageHandler`, and then [wrapping it with another handler] which [handles the redirection explicitly].It appears that `RedirectHandler` is causing the problem somehow.  If I set `AllowAutoRedirect` to true and remove the `RedirectHandler`, the problem goes away.What's the reason for using `RedirectHandler` instead of using the built-in redirection handling?",,,,,,
227155784,1396,Issue,"It must have something to do with the new Request.It only works for the first time. If you call it again, then you end in an error. But If i cancel all pending requests for `_http` before you send a new request it works.I don't know why but it seems that the first redirect request is not completed succesfully. I will try to find out why.",,,,,,
228646570,1396,Issue,"What's the reason for using `RedirectHandler` instead of using the built-in redirection handling?From [MSDN]: The Authorization header is cleared on auto-redirects and HttpWebRequest automatically tries to re-authenticate to the redirected location. Because of how the GitHub API hides private resources and returns a `404 Not Found`, we need to be a bit clever here and set the `Authorization` header explicitly.",,,,,,
229335961,1396,Issue,The only fix for me is to call `_http.CancelPendingRequests()` after you get the response. Because for any reason i don't know there is still a request pending which maybe has the same signatur or anything else. I have no idea.  what do you think.,,,,,,
230150549,1396,Issue,"For reference, here's [the source] for `HttpClient.CancelPendingRequests()` - looks like it's just cleaning up a cancellation token.",,,,,,
230284350,1396,Issue,I think it has to do with the following [line]. It seems that there is the same request sending twice. But i don't know why because we are building a [new request object] :sweat:,,,,,,
230419058,1396,Issue,"i have create pull request #1411. There i put the logic for redirects outside of the delegating handler. Because for any reason if delegating handler sends the same request twice, and this is not possible. The other solution is to cancel alle pending requests see my comment below.",,,,,,
230643047,1396,Issue,thanks for digging into this! I've made a note to look at that PR when I get a spare moment...,,,,,,
226635016,1395,Issue,I've cleared  tags here.,,,,,,
229540511,1395,Issue,Tests are good. Just need to remove the empty `` elements.,,,,,,
230576898,1395,Issue,done!,,,,,,
226635322,1394,Issue,I've cleared  tags here.,,,,,,
229535611,1394,Issue,Tests are good. Just need to remove the empty `` elements.,,,,,,
230578208,1394,Issue,done!,,,,,,
226635653,1393,Issue,I've cleared  tags here.,,,,,,
229554680,1393,Issue,Tests are good. Just need to remove the empty `` elements.,,,,,,
230579502,1393,Issue,done!,,,,,,
226636851,1392,Issue,"no need to clear  tags, they are clean.",,,,,,
228539751,1392,Issue,![LGTM],,,,,,
226637214,1391,Issue,"No need clear  tags, they are clean.",,,,,,
228538945,1391,Issue,Looking good!  ![LGTM],,,,,,
226637452,1390,Issue,I've cleared  tags here.,,,,,,
228573069,1390,Issue,"This one is good, except for the `` tags",,,,,,
228883125,1390,Issue,done :+1:,,,,,,
226638522,1389,Issue,I've cleared  tags here.,,,,,,
228897364,1389,Issue,This one still has the empty `` tags on ALL your PR's it will make it faster to get these merged,,,,,,
228901825,1389,Issue,done! I'll try to clear all returns tags in RepositoryId PRs.,,,,,,
226638723,1387,Issue,I've cleared  tags here.,,,,,,
229540694,1387,Issue,No tests to worry about here. Just need to remove the empty `` elements.,,,,,,
230146016,1387,Issue,No tests to worry about hereI can't remember why there aren't any integration tests with this change.  The commit history shows they were added but then reverted but I can't find any comment/discussion as to why.  Can someone jog my memory?,,,,,,
230148889,1387,Issue,excellent point! I left that note in here to just indicate whether I'd looked at the tests as part of reviewing. Perhaps  has found something which means those tests aren't possible?,,,,,,
230149254,1387,Issue,Yeah I know there were some cases (like the activity one requiring  user other than the one running the tests etc) but cant find mention of anything specific to the collaborators stuff.  Will wait for  to advise,,,,,,
230586526,1387,Issue,",  not sure why I did that (revert integration tests), it was made accidentaly  I guess. Anyway, now it is fixed. Also, I removed  tags.",,,,,,
233166840,1386,Issue,"It could be closed, all overloads were added.",,,,,,
226639847,1385,Issue,I've cleared  tags here.,,,,,,
229554058,1385,Issue,Tests are good. Just need to remove the empty `` elements.,,,,,,
230580157,1385,Issue,done!,,,,,,
226183489,1384,Issue,could you rerun Travis and assign RepositoryId milestone here?,,,,,,
226640068,1384,Issue,I've cleared  tags here.,,,,,,
230580864,1384,Issue,done!,,,,,,
226183560,1383,Issue,could you rerun Travis and assign RepositoryId milestone here?,,,,,,
226183585,1383,Issue,could you rerun Travis and assign RepositoryId milestone here?,,,,,,
226640252,1383,Issue,I've cleared  tags here.,,,,,,
229537503,1383,Issue,Tests are good. Just need to remove the empty `` elements.,,,,,,
226639052,1382,Issue,I've cleared  tags here.,,,,,,
226056836,1381,Issue,"This HTTP request seems to work for me:Which corresponds to this code with Octokit v0.20:But both of these queries don't return results, which seems to be the same as the web result mentioned above. Swapping in `dotnet/corefx` for the repository entry then returns 571 results.Not sure what I'm missing here , let me know if I've missed something...",,,,,,
226061218,1381,Issue,"OK, debugging a bit more, it looks like the issue is I'm actually searching the `adamcaudill/Psychson`.  The web interface redirects this to `brandonlw/Psychson`, but the API is giving the failure I describe.  Is there a way via the API to check if the user (or repo) ID has been changed?",,,,,,
226062942,1381,Issue,"Yep, I see the same failure now. Is there a way via the API to check if the user (or repo) ID has been changed?Octokit.net follows these redirects directly - but the search endpoints doesn't give us that context. If you hit the endpoint you should receive a 301 with a response like this:And then a GET gives you the new repository name:",,,,,,
226359524,1381,Issue,"Closing this out as a limitation with the search endpoint (and not something we can fix in the client).On the upside, [it's been acknowledged]",,,,,,
225867839,1380,Issue,"please rerun it, Travis fails again :cry:",,,,,,
226638297,1380,Issue,I've cleared  tags here.,,,,,,
230651563,1380,Issue,"Tests look good, just need to :fire: the `` tags here",,,,,,
230891051,1380,Issue,done!,,,,,,
226637993,1379,Issue,I've cleared  tags here.,,,,,,
230666117,1379,Issue,This one also needs to :fire: the `` statements...,,,,,,
230899144,1379,Issue,"I've worked on your remarks, please review it whenever possible :+1:",,,,,,
225785755,1377,Issue,Pending any feedback on the words from  or  this is good to go.Aiming to do it early Wedneday AEST so I have the day to monitor it in case something unexpected occurs...,,,,,,
225865462,1377,Issue,"Pending any feedback on the words - ""Add Migrations API for Enterprise instances"".    This is a bit ambiguous as the API does work on github.com and GHE.  Also this is a preview API so may as well mention that, since it's mentioned on various other items.  Suggest rewording to ""Add Migrations Preview API"" or ""Add Migrations Preview API for migrating repositories to GitHub Enterprise""- The details on #1139 has via ryangribble but should be via -Zuber - Looking at #1139 again I think we also may have made a breaking change (renaming GetAll() to GetALlForCurrent without obsoleting the old metho?)- I also recall us having other changes where we `[Obsoleted]` stuff but I can't track them down at the moment!",,,,,,
225967119,1377,Issue,"Just a couple minor nits  on the release notes. Otherwise, this release is exciting!",,,,,,
226017079,1377,Issue,"thanks for the feedback, I'll incorporate that once I'm done with breakfast.",,,,,,
226029723,1377,Issue,I'll do another pass over the PRs merged to see if I can find other notable `[Obsolete]` changes - I think #1224 is relevant here,,,,,,
226036155,1377,Issue,:ship:ed- -,,,,,,
225778770,1376,Issue,":+1: thanks for this, I was scratching my head being unfamiliar with cross platform stuff",,,,,,
225855017,1376,Issue,Thanks! I've rebased my PR.,,,,,,
225789063,1375,Issue,please rerun Travis whenever possible :+1:,,,,,,
226637706,1375,Issue,I've cleared  tags here.,,,,,,
228540731,1375,Issue,"This one is good, apart from the `` tags :+1:",,,,,,
225739767,1374,Issue,"do you have a example of the failing test? I came across this a while ago, and I thought I wrote up an issue but perhaps I didn't...",,,,,,
225739831,1374,Issue,"Ah, I did: #1251",,,,,,
225788713,1374,Issue,Closing this one in favour of #1251 - I'll add some notes in there about what I've found recently...,,,,,,
225789039,1373,Issue,please rerun Travis whenever possible :+1:,,,,,,
226636543,1373,Issue,I've cleared  tags here.,,,,,,
229136135,1373,Issue,I've burned  tags üëç,,,,,,
229324581,1373,Issue,Tests are good. I'm just wrestling with the code comments (again).,,,,,,
229499509,1373,Issue,I've fixed all stuff except docs :+1:,,,,,,
229801117,1373,Issue,":heart: Ok, I made a comment on the `Id` thing. If you fix up the docs, I'll merge this if  is :+1: on the code changes (I didn't really look at that).",,,,,,
229820395,1373,Issue,"I've opened #1409 to do the naming changes in the future - I'm sure I've merged a PR with this change already, so let's come back after.",,,,,,
225789029,1372,Issue,please rerun Travis whenever possible :+1:,,,,,,
226636360,1372,Issue,I've cleared  tags here.,,,,,,
230587757,1372,Issue,I've removed  tags here.,,,,,,
226636168,1371,Issue,I've cleared  tags here.,,,,,,
230666992,1371,Issue,Code and tests look good. Just gotta :fire: the `` statements.,,,,,,
230891627,1371,Issue,done!,,,,,,
226635924,1370,Issue,I've cleared  tags here.,,,,,,
228549486,1370,Issue,"Some of the integration tests are failing for me, I think because you have hardcoded the RepositoryId to 252774 but since the tests are creating a repository on the fly I think you will need to use `_context.Repository.Id`",,,,,,
228553886,1370,Issue,"I've fixed integration tests and removed  tags, please check this out :+1: I hope that I've fixed all issue places.",,,,,,
228888786,1370,Issue,I've fixed all remarks üëç,,,,,,
226634728,1369,Issue,I've cleared  tags here.,,,,,,
230667553,1369,Issue,Tests and code look good. Let's just :fire: the `` statements in here.,,,,,,
226634444,1368,Issue,I've cleared  tags here.,,,,,,
229278730,1368,Issue,Tests are good. Just some tweaks to the documentation and this is good to :ship:,,,,,,
230583624,1368,Issue,done!,,,,,,
225414554,1367,Issue,please add RepositoryId milestone mark here too :+1:,,,,,,
226634196,1367,Issue,I've cleared  tags here.,,,,,,
229147075,1367,Issue,I've removed  tags here.,,,,,,
226633777,1366,Issue,I've cleared  tags here.,,,,,,
230979153,1366,Issue,"Merge conflict aside, just :fire: the `` tests here and I think this is good to merge...",,,,,,
231919837,1366,Issue,done!,,,,,,
225336381,1365,Issue,"If I look at the deployments API, the response does not contain any of the new information. Is that correct?Try changing the `GetAll` methods to also include the new preview Accepts header, it could be the documentation wasn't updated fully because normally the extra information is also returned in payloads when specifying the preview header",,,,,,
225357554,1365,Issue,"Should I also be adding the fields added to the `NewDeployment` and `NewDeploymentStatus` clases to the `Deployment` and `DeploymentStatus` classes? I do get returned values for these new fields in the HTTP response, so I could map them.",,,,,,
225364248,1365,Issue,Yep! Sounds good,,,,,,
225855444,1365,Issue,I've updated the PR with some tests.,,,,,,
225860318,1365,Issue,"it's looking pretty good :grinning:  There are a couple of failed convention tests if you check the build results, due to mutable properties (a couple of fields you added have a public setter rather than protected) which need to be tidied up.And other than that, it'd be really awesome to see the existing integration tests for [Depoloyments] and [DeploymentStatus] updated/added to ensure these new fields are functioning correctly against the real github API.  If you havent already set yourself up for integration tests, check the details in the [CONTRIBUTING] guide (namely, create a separate test account on github.com so you don't impact your real account, and use the provided powershell script to configure your integration test settings).Looks like there are already a range of integration tests so it could just be as simple as enhancing some of them to assert that key fields are actually populated rather than just `Assert.NotNull(deployment)` and so on",,,,,,
225861568,1365,Issue,I'll get on it!,,,,,,
226414650,1365,Issue,"The builds are now successful :) I have also added integration tests for the newly added properties, except for the `AutoInactive` property which isn't returned by the API.",,,,,,
226741352,1365,Issue,"except for the AutoInactive property which isn't returned by the API.Just to clarify this statement - are you saying this is an issue, or just meaning that it isnt meant to be returned (since it sounds like it''s more a field on the update request, not on an actual deployment or DeploymentStatus itself?)",,,,,,
226741665,1365,Issue,"As far as I can tell, it makes sense to not return that field as it appears to be intended for use only when creating/updating.",,,,,,
226744304,1365,Issue,"Yep agreed, just wanted to clarify you meant that too :)Ive done a final review and also pulled your branch and run the integration tests etc... This is :gem: and ready to go... congratulations on your first octokit contribution!",,,,,,
226744381,1365,Issue,![LGTM],,,,,,
226750731,1365,Issue,Great! Thanks for the help.![Hurray],,,,,,
225737700,1364,Issue,"it'd be nice to add an integration test to [`MilestonesClientTests`] to verify these new properties are deserialized correctly, but aside from that this is looking good!",,,,,,
225739140,1364,Issue,"Thanks for feedback.  I was thinking I should have added tests based on the contribution notes, but didn't know exactly where being new to this repository.  I will review what you mentioned and try to add soon.",,,,,,
225739407,1364,Issue,"lots of the existing tests are written in the ""arrange-act-assert"" pattern, so feel free to steal from them if you're looking for guidance...",,,,,,
225757745,1364,Issue,"I added a test using [BlobClientTests] as example.  Did not verify Creator property, but left a TODO comment.  If you know of a similar test to verify User, let me know and I can update.",,,,,,
225782675,1364,Issue,"so what you've got there is actually a unit test, that is providing a hardcoded json framgent and testing the deserialisation logic only.  This is great, but what  was referring to was adding an integration test (a test that actually runs against github.com) to [the MilestoneClientTests ].  There is already a test there [CanRetrieveOneMilestone] that you could just add some more asserts to, to prove that your new fields are being returned correctly.eg:In relation to your unit test, to check the value of the creator property you would just do something like `Assert.Equal(""shiftkey"", response.Body.Creator.Login);` and so on",,,,,,
225783907,1364,Issue,"As general comments on this change, I'm :+1: for including useful fields like `HtmlUrl` `UpdatedAt` and even `Id` for a milestone (and various other objects/models)... but I'm not sure about things like `LabelsUrl`.  Simply because those fields are API hypermedia links (eg in this case, the API url to get the labels for this milestone).  Since octokit already provides that information via interfaecs and clients (eg the `IssuesLabelsClient.GetAllForMilestone()` call), Im not sure we need to include this field on the `Milestone` object itself.  Or more to the point, if we do include `LabelsUrl` then we should include all the other `xxxUrl` fields (like events, starred, followers, following, gists, etc).   might have an opinion on this, but my 2c would be to remove `LabelsUrl` from this change...",,,,,,
226033093,1364,Issue,"After reviewing/learning more about the API structure, I think I agree with  on removing LabelsUrl.  It is nice to have the property included, but logic is already in place for IssuesLabelsClient.  I will remove and commit soon.  I originally added similar to others since it was returned in the JSON.",,,,,,
226315791,1364,Issue,"Ive just commented on how to tet the `Creator` property in your tests.Other than that, you just need to update latest master into your branch and we should be good!",,,,,,
226371846,1364,Issue,"well, i've completely screw this up.  your suggestions worked on the user for test.  something went weird when merging and last file changes are not showing up.  many reverts/tries on my branch trying to understand more about VS/Git.  any thoughts on steps to address... it is clear one of my first few times on this :frowning:",,,,,,
226453122,1364,Issue,"So looking at your fork of the repo, it seems you merged your change into the master branch in YOUR fork, and wherever you sent this PR from doesnt actually exist anymore (did you delete your fork and re-fork it or something?  Or just delete the branch it used to be on perhaps?).  Anyway, I think you're going to need to close this PR and recreate it, once youve moved your work to a suitable branch.  At least the work you did is not lost though!  :grinning: Im not sure how much you've already read or not, so dont be offended if Im telling you something you already know, but as a contributor you have a fork of this repo under your own user space (this is referred to as `origin` and then you have this main repository (referred to as `upstream`).  Your local clone on your system will already have an `origin` remote pointing at your fork, and you should add an `upstream` remote pointing here (if you haven't already).You should never make any changes in your master branch, instead you need to [Sync your fork with upstream] to keep your master inline with master here.  To do any work, you cut a branch from latest master, make your changes on that branch.  Always keep that branch up to date with master here (eg if we merge another PR before yours, you should pull master into your pending branch and your PR will update accordingly).  Eventually you send a PR from your fork/branch to the master branch here.  **Only when that PR is merged** should you then sync your master with upstream master (ie you should never push your changes into master on your side yourself, your master should only ever be synched with `upstream/master`Im not sure about Visual Studio git GUI specifically, it may make it possible for you to just deal with `upstream/master` directly, and not have to really worry about `origin/master` much at all.  When teaching people git I tend to encourage consistent initial use of the basic command line commands, to gain the underlying understanding of what is actually happening.  Then we move to GUIs - a religious and contentious space :)  My personal preference is SourceTree but there are many options - GitHub Desktop, Git Extensions, and even VS2015 as you've mentioned (just make sure you're on the very latest Update and also add the GitHub Extension for some nice sugar when dealing with GitHub).Anyway, what we need to do to fix you up is:- Add your upstream remote if you dont already have it- Move your changes to a branch and push it to your fork- Reset your `origin/master` to `upstream/master` and force push it to your fork- Ensure your branch is up to date with `upstream/master`- And then of course raise a new PR for this milestone workThen you should be :gem:Off the top of my head, these would be the commands to do this, forgive any typos/syntax errors :grinning:- Add your upstream remote if you dont already have it- Move your changes to a branch and push it to your fork- Reset your `origin/master` to `upstream/master`- Ensure your branch is up to date with `upstream/master`Then you can raise the new PRHope that helps?",,,,,,
226630457,1364,Issue,"I really appreciate the info.  Like you mentioned, I have the changes so I can add later.  I'm going to go ahead and close the PR and review your notes (and more about Git terminology).  I'll circle back soon and attempt another PR when ready.",,,,,,
225784443,1363,Issue,please rerun it too :+1:,,,,,,
226633490,1363,Issue,I've cleared  tags here.,,,,,,
230976201,1363,Issue,Just :fire: the `` tests here and I think this is good to merge...,,,,,,
231917623,1363,Issue,done!,,,,,,
226633025,1362,Issue,I've cleared  tags here.,,,,,,
230978332,1362,Issue,Just :fire: the `` tests here and I think this is good to merge...,,,,,,
231917823,1362,Issue,done!,,,,,,
225784247,1361,Issue,please rerun this too :+1:,,,,,,
226632704,1361,Issue,I've cleared  tags here.,,,,,,
228949097,1361,Issue,"Tests look good, just some wording to clean up in the docs and removing the empty `` elements...",,,,,,
229159062,1361,Issue,"I've done it, please check this out whenever possible :+1:",,,,,,
225783941,1360,Issue,it is looks like here another bug in travis build.,,,,,,
226632268,1360,Issue,I've cleared  tags here.,,,,,,
230977314,1360,Issue,Just :fire: the `` tests here and I think this is good to merge...,,,,,,
231918090,1360,Issue,done!,,,,,,
225099976,1358,Issue,"Any missing properties are not likely to be intentional, more so just historic or accidental. Would you be happy to send a pull request that adds the property?",,,,,,
225154402,1358,Issue,"Yes, I'll look into the PR.",,,,,,
225158078,1358,Issue,Great!  Let us know if you need any help :+1:,,,,,,
271316040,1358,Issue,I believe this was closed via #1489.,,,,,,
225783657,1357,Issue,"please rerun travis here, it fails again because of seg fault.",,,,,,
226631811,1357,Issue,I've cleared  tags here.,,,,,,
230975632,1357,Issue,Just :fire: the `` tests here and I think this is good to merge...,,,,,,
231918440,1357,Issue,done!,,,,,,
226631343,1356,Issue,I've cleared  tags here.,,,,,,
230668880,1356,Issue,Tests look good. Just some guard clauses that was previously overlooked and :fire: the `` tags and this is good to go!,,,,,,
230896372,1356,Issue,"I've add only 2 new guards, but I think it would be a breaking change, because of initial method implementations:What do you think? Should I add null checks?",,,,,,
230933766,1356,Issue,"What do you think? Should I add null checks?I think we should be consistent here with how we accept `null`s. We've been favouring throwing when someone passes a `null` for the request arguments, so I think we should do the same here.",,,,,,
231925426,1356,Issue,"I agree with you, just I remember that there was other such case in codebase that allow pass null as correct parameter and we left it without additional null checks because of breaking changes (cannot find it right now). Anyway, I'm going to fix this in next 1-2 days :+1:",,,,,,
232546737,1356,Issue,done!,,,,,,
224659052,1355,Issue,could you review it and merge? Or we are have to waiting while  review this too?,,,,,,
224827269,1355,Issue,I've fixed all remarks,,,,,,
224876342,1355,Issue,Looks good :+1:,,,,,,
224571403,1353,Issue,":+1: tested locally and confirmed the field is populated on Get of a single issue (not on list multiple issues though, but that is down to the API)Just waiting to get travisCI passing then ill merge this",,,,,,
224574210,1353,Issue,release_notes: Added `ClosedBy` property to `Issue` response object,,,,,,
226630847,1352,Issue,I've clear  tags here.,,,,,,
228906521,1352,Issue,I've removed  tags here.,,,,,,
228947469,1352,Issue,"there seem to be some failing tests in here, not sure if that's on your radar...",,,,,,
226630354,1351,Issue,I've cleared  tags here.,,,,,,
226676432,1351,Issue,":thumbsup: to the new integration tests, even they're all still skipped...",,,,,,
224554455,1350,Issue,"That's right. `ClosedBy` Attribute is missing. , is there any reason why this attribute is missing. Otherwise we can added to `Issue.cs`. As an aside, `Reactions` are also missing.",,,,,,
224555816,1350,Issue,"No reason for it to be missing...  just historical really,and evidently nobody has raised it/needed it until now",,,,,,
224670280,1350,Issue,"Thanks!  And great work on Octokit.From: Ryan Gribble [mailto:notifications.com]Sent: Wednesday, June 8, 2016 5:30 AMTo: octokit/octokit.net octokit.net.github.comCc: Larry Brader lbrader.com; Author author.github.comSubject: Re: [octokit/octokit.net] How do I get an Issue ""closed_by"" data? (#1350)Closed #1350 via #1353.‚ÄîYou are receiving this because you authored the thread.Reply to this email directly, view it on GitHub, or mute the thread.",,,,,,
224735882,1349,Issue,duplicate of #1350,,,,,,
226629825,1348,Issue,"I haven't changed XML docs here, so lets it stay as is.",,,,,,
226676127,1348,Issue,:thumbsup: to the added integration tests,,,,,,
223947689,1347,Issue,"I'm still not satisfied with naming of TeamRepositoryUpdate. Any other suggestions?You could go with `AddTeamRepositoryRequest` or `RepositoryPermissionRequest` or something like that...Also it would be nice to specify the AcceptsHeader for this preview functionality, like I did on #1319 so that this functionality works on GHE 2.5 (before the preview period had ended).  This also would save the need to add the `Put` overload on `Connection` class etc at this time...",,,,,,
224242078,1347,Issue,", is there something more to do or is this fine?",,,,,,
224270437,1347,Issue,It would be good to add integration tests for the new parameter? You can use repositorycontext and teamcontext helpers to create repo/teams for the test then they'll be removed when the test finishes,,,,,,
224276304,1347,Issue,Something like that?,,,,,,
224426455,1347,Issue,"Yep that's on the right track... although what if the test user's organisation has no teams created?Similar to the `RepositoryContext` There is also an (incorrectly named!) `EnterpriseTeamContext` helper that can create a team on the fly and then destroy it when it goes out of scope.  Using this would make the test more reliable and not require any specially configured test organisation.  Another thing that I like to do in integration tests is not only assert the returned object from that update call, but actually make a ""Get"" call (in this case, something like `client.Team.GetAllRepositories()` and check the returned repository in there also indicates the permission level you requested was infact correctly applied.As an aside, while you're at it you could rename that `EnterpriseTeamContext` class and helper method to `TeamContext` rather than `EnterpriseTeamContext` since they are not actually GitHub Enterprise specific... Im not sure why I named it that!",,,,,,
224563094,1347,Issue,"argh sorry  I gave you a bit of a bum steer on that TeamsContext thing, it actually is hardcoded to use `EnterpriseHelper` class under the covers which means it uses a different set of test environment variables etc.  Ive made some changes locally to rejig the integration test helpers so that they can be agnostic to whether github.com or github enterprise is being used.  Ill send a PR to your branch in a minute that will hopefully sort everything out! :grinning:",,,,,,
224572932,1347,Issue,Congrats  on your first merged octokit Pull Request!  We really appreciate the contributions :grinning: ![LGTM],,,,,,
224573276,1347,Issue,:tada: :smiley:   many thanks for your help!!,,,,,,
226629590,1346,Issue,"no need to update , they are empty.",,,,,,
226652985,1346,Issue,"are you able to rebase this branch? There's a lot of changes in here which seem unrelated to the initial PR, and make reviewing much more tedious...",,,,,,
226695795,1346,Issue,done :+1:,,,,,,
228537658,1346,Issue,"This one is good to merge, once the empty `` tags are removed :+1:",,,,,,
228538097,1346,Issue,"Actually, since the methods in this client already had empty `` tags, I don't think this  needs to be addressed in this PR since you didn't clear the tags.  Another PR can clean this up",,,,,,
226675308,1345,Issue,:thumbsup: to the additional integration tests hereJust that last bit of docs changes and this is good to go!,,,,,,
226889560,1345,Issue,"ugh, merge conflicts :cry:",,,,,,
226925941,1345,Issue,"sorry, missed this! Fixed :+1:",,,,,,
228574638,1345,Issue,"This is looking good, however it would be nice to have a class level variable in the tests to hold the repositoryId rather than having ""magic"" numbers 22718025 and 7528679 sprinkled throughout the tests?",,,,,,
228574793,1345,Issue,although  I suppose it's no different to hardcoding the owner and name like the existing tests do... it just feels less intuitive when it's an `int`,,,,,,
228634756,1345,Issue,I'm happy to go through and clean those tests up independent of this work,,,,,,
226140303,1344,Issue,this is looking really good - just a few pointers on the documentation while we're in here updating things. I think once we settle on the reviews for the first couple of these PRs that it should really fly through!,,,,,,
226144048,1344,Issue,"it is looks like I have to review all 26 existent repositoryId PRs to fix XML documentation things, because I've used similar pattern to write docs. So, I'm going through it as slowly and methodically as possible do it :+1:  But, firstly, I want add repositoryId PRs  for new Reactions clients (they are simple and small :+1: ) I think once we settle on the reviews for the first couple of these PRs that it should really fly through!I glad to hear that :+1:  Let's do this :smile:",,,,,,
226266130,1344,Issue,"I've updated XML docs according your remarks. Please review it whenever possible and if all ok, I'm going to pass through other PRs and update their docs.",,,,,,
226627021,1344,Issue,"I've cleared XML docs here. I suppose I should clear  in every PR that I've done for repository id, because they are similar these ones.",,,,,,
226675720,1344,Issue,üëç to the additional integration tests here,,,,,,
223946193,1343,Issue,Looks good!  I've made a few comments,,,,,,
223958215,1343,Issue,"Thanks , I've pushed fixes for your comments.",,,,,,
224574506,1343,Issue,"sorry  , this just needs a rebase/merge due to some other PR's I merged (probably just `AcceptHeaders.cs` changes)",,,,,,
224574806,1343,Issue,"No problem, I'll do that soon",,,,,,
224582682,1343,Issue,Rebased and ready for review again,,,,,,
224599753,1343,Issue,"Cool, I just sent a PR to your branch to bring your `GpgKeyContext` class inline with the other context helpers we just tweakedalso found the integration tests you added were failing sometimes... turned out there was a missing `await`",,,,,,
224720905,1343,Issue,![LGTM],,,,,,
224579475,1342,Issue,"This one is ready to merge in, can I get someone to :eyes: over this and :+1: if it looks alright?",,,,,,
223758157,1341,Issue,"RE: renaming `IssueCommentReactions`, perhaps just naming it `Reactions` is better? I know #1335 is adding a `Reaction` model, but that is different to this one...but is it going to get confusing?  thoughts?",,,,,,
223758382,1341,Issue,Yeah naming things is hard (tm) :trollface: Perhaps this one in the response payloads could be called `ReactionSummary` since it has counts of each type and the a TotalCount etc.,,,,,,
223949644,1341,Issue,Looking good... I guess we'll wait on #1335 for the `AcceptHeaders` value...,,,,,,
223952273,1341,Issue,"Yep, or I could add the `AcceptsHeader` in this PR (which would cause a slight merge conflict in #1335), but it looks like #1335 is almost ready for a merge so I have no problem with waiting üòÑ",,,,,,
223954567,1341,Issue,"yep I was gonna say you could just add that here too, if you go by the same name as #1335 it wont be much of an issue",,,,,,
225804223,1341,Issue,üéâ look at all those üíö builds! Clearly 's `mono` fix worked üòÅ,,,,,,
226053462,1341,Issue,#1335 is now merged so you can merge/rebase and update your accepts header usage whenever you're ready :+1:,,,,,,
226055218,1341,Issue,üëç will do it tonight,,,,,,
226100599,1341,Issue,PR updated to use new `AcceptHeaders.ReactionsPreview` instead of local variable. Just waiting for üíö üíö from the running builds,,,,,,
226107021,1341,Issue,"Just waiting on this to go green, everything else is :gem:",,,,,,
226108381,1341,Issue,Fantastic stuff !![],,,,,,
226112416,1341,Issue,"Oh, you are too kind sir! üòÑ",,,,,,
223510050,1339,Issue,I'm going to hold off on reviewing this until we get #1335 merged in.Also cc,,,,,,
223623190,1339,Issue,Oh wow :sparkles: this is awesome work!,,,,,,
223629257,1339,Issue,Thank you üòÑ  What do you think where to place `AddAssignees`?,,,,,,
223630301,1339,Issue,"So I was :thought_balloon: about this last night too before I saw this! My vote is `client.Issue`, purely because of how the [API ]is set up and I'm assuming that's the first place users would look.Very curious to see everyone else's thoughts though, my second vote was `Assignees`",,,,,,
223633671,1339,Issue,Ok. Then I place the method under Issue. Is there something more to do?,,,,,,
223673710,1339,Issue,"I'll take a look over it, and make any comments I might have :question: on but I'll leave all final merges, decisions, etc to  and co.",,,,,,
223736471,1339,Issue,"These 2 new calls actually belong under the `AssigneesClient`.  The API documentation [here] shows existing calls like ""List Available Assignees"" and ""Check Assignees"" which are implemented in this client already, so now these 2 new preview methods ""Add assignees to issue"" and ""Remove assignees from issue"" have been added, they should be added to this `AssignessClient` as well, not to `IssuesClient` directly.I also am not sold on having a special `IssueAssignees` class that inherits `Issue` and adds the new `Assignees` property.  There are plenty of other examples where a particular field is on a response object and can sometimes be `null` depending on which API call was made or other factors... but we dont want to have too much split in the object model and have all these special objects that extend the base one and just add one field.  So I would suggest simpy adding the `Assignees` property to `Issue` model object.  The new assignees field is also going to be returned on the [""Create an Issue""] and [""Edit an Issue""] calls on IssuesClient, and I'd actually be quite surprised if it also wasn't going to be returned on the ""List Issues"" and ""Get a single issue"" methods.  The API docs don't indicate they have the preview functionality at the moment but it could even be a missed API doc update... or perhaps they really dont return the new field now, but surely in the future it must be planned (why wouldnt you want to know multiple assignees details when listing issues?!).  Therefore if we include `Assignees` on the `Issue` object, we wont need to change anything in the future if thoe calls do start returning the infoOn a side note, I've got some local changes done for the Create and Edit issue calls, I might send a pull request to your fork  and then you can pull them into this PR?",,,,,,
223737594,1339,Issue,"I'd actually be quite surprised if it also wasn't going to be returned on the ""List Issues"" and ""Get a single issue"" methodsOK so I just did some poking... I added `Assignees` field to the `Issue` model class, and added the new preview header to the `IssuesClient.Get()` and `IssuesClient.GetAllForRepository()` calls and the new field IS populated in the response object :tada:   So definitely go with including this on the base issue and we can also set the accepts header on the Get/List calls.     could you possibly find out if an API docs update was missed for the Get and List issues calls supporting the new multiple assignees and taking the preview header?",,,,,,
223743963,1339,Issue,Ok. Then I roll back and add the `Assignees` property to Issue class. In the meantime i added method to remove assignees,,,,,,
224741389,1339,Issue,"Hey  looking good :+1: , I've marked up some comments.  #1335 is the priority to get over the line first though...",,,,,,
226147366,1339,Issue,"this is looking really good. I focused on the integration tests just now as I plan to go on a bender cleaning them up and getting them working better/quicker, but I'll give the rest a pass tomorrow.",,,,,,
229866490,1339,Issue,"I still need to come back and ponder on the changes to serialization here. Apologies for the delay.Oh, and there's a merge conflict here too  üò¢",,,,,,
231397033,1339,Issue,"I want to search for issues assigned to a particular user. Currently, using `RepositoryIssueRequest`, an issue will only be returned if the user is the first assignee on the issue. If the user is the 2nd, 3rd, 4th assignee, etc. the issue will not be returned. Will this PR fix that?",,,,,,
231408854,1339,Issue,"OK, strike my last comment. Issues are returned regardless of whether the user is the first assignee or not.It was actually a filter in our code that excluded the issues, since it was examining `Issue.Assignee` which is indeed the first assignee.I've worked around it for now, and I can see that this PR adds `Issue.Assignees` so all is good.",,,,,,
234722356,1339,Issue,I would come back to this issue and have one question. In the `IssuesClient` it is possible to add `Assignees` in the `Create` and `Edit` method and also to get assignees in payloads for `Get` methods if we add the preview header for multiple assignees. But it is also possible to get a `reactions summary payload` if we add the accept header for `reactions`. So now the question how to add multiple `accept headers` for that calls?,,,,,,
234738985,1339,Issue,"What if we change `accepts` from `string` to `array`. This is certainly not the last time where we have to add multiple `AcceptHeaders`, right?",,,,,,
234742610,1339,Issue,"The preview period for multiple assignees is [over now], so I guess in this specific situation it's not an issue anymore It's still a valid question though, but the idea of adding all those overloads to take `string[]` in what is already a large number of overloads etc, I'd say it should only be done when/where necessary, assuming it actually works",,,,,,
234768359,1339,Issue,"Thanks for that Info :thumbsup: So I will remove that accept headers. And I correct my comment from yesterday. Maybe it it's ok in such a situation where we have to add multiple accept headers if we do something like this `AcceptHeaders.X + "","" + AcceptHeaders.Y`",,,,,,
235864192,1339,Issue,and  do you think that's ready for :ship: ? Because it sounds really important,,,,,,
261971841,1339,Issue,would be great to have this one in...,,,,,,
262766555,1339,Issue,"Agreed.  After chatting with  we agreed to let my label changes go in, although as mentioned above,we want to add a `RemoveLabel()` helper function on `IssueUpdate` to remove a single label from the list, so users aren't ever needing to directly manipulate the list contents.  Are you ok to do that   ?",,,,,,
262772152,1339,Issue,"Hi , that's ok",,,,,,
266365800,1339,Issue,"Hi , any news?",,,,,,
268691145,1339,Issue,Can we add support for multiple-assignees in PullRequest.cs as well? It ought to be basically the same as the change for Issue.cs.I desperately need this change for my app! üòÑ,,,,,,
268775912,1339,Issue,"As far as the GitHub API is structured, PullRequests are the same as Issues regarding core concepts such as retrieving comments, assigning, labeling etc.  There is no separate API for PullRequests for these things, you actually just use the Issues API to do them for PullRequests tooSo the good news is your change is already done.  The bad news is we STILL havent merged this, sorry!  I have xmas holidays after tomorrow and will definitely get ontop of the couple of PRs I need to review ;)",,,,,,
268852924,1339,Issue,"I think the `Octokit.PullRequest` type needs to be modified to have the new property, no? E.g. when I call `gitHubClient.PullRequest.GetAllForRepository(owner, name)` and get back an `IReadOnlyList` I need that property, no?",,,,,,
268970252,1339,Issue,"yes I see what you're saying although the github API docs don't show that field on pull request objects. It might be an undocumented case I guess we can poke github.com and see if the field is in the response It's the same as labels and comments, eventhough they apply to PR's you get them from the issue call",,,,,,
268980277,1339,Issue,I have tested and the get response contains the assignees field and the comments count. It doesn't contains labels. What currently not works is to add assignees against the pull request api.,,,,,,
269366052,1339,Issue,are you saying the data for multiple PR assignees isn't even on the wire?,,,,,,
271093520,1339,Issue,", i think that adding multiple assignees for pull requests is yet not supported by the api. Maybe we should merge this one and open a new PR??",,,,,,
271116205,1339,Issue,"As you say, the actual setting of multiple assignees can only be done via `Issues` API but at least the `Assignees` property is returned on PR's so we can add that field to `PullRequest` response class.  That is fine to be done on another PR to save making further changes on this one.  I'll do another/final review of this PR and look to merge it tonight",,,,,,
271291180,1339,Issue,are you able to tick the box to enable me to push commits into this PR?  I've done some testing of this and written a couple of integration tests and also found that a couple of changes were needed to actually make this work!,,,,,,
271547081,1339,Issue,"Thanks, Ive pushed up a few commits - added integration tests for `IssueUpdate.Assignees` usage- fixed issue where `Assignees` and `Assignee` can't both be specified on the request.  API docs indicate `Assignee` is deprecated, so I have `[Obsoleted]` this field, and stopped including it in `Issue.ToUpdate()`- I also ended up implementing the `Assignees` field on `PullRequest` response object since it was quick/easy are you able to review my changes and confirm the integration tests are running for you?",,,,,,
271803193,1339,Issue,", integration tests work for me.",,,,,,
271860992,1339,Issue,Wow this has gotta be one of the longest PR's we've had in ages but I think we are finally done!Thanks  we got there in the end üòÅ ![LGTM],,,,,,
271862691,1339,Issue,Good things come to those who wait üò∏,,,,,,
272467695,1339,Issue,Would it be possible to cut a new release with this?,,,,,,
272545096,1339,Issue,"Yep, hope to have a new release out soon!",,,,,,
223512099,1338,Issue,thanks for adding in the new test. This will go out with a release early next week! :metal:,,,,,,
223735554,1337,Issue,"there's some weird/inconsistent test failures here... is it a similar case to what occured in #1169 where `Args.ApiOptions` is used instead of `ApiOptions.None` causing issues with parallel running unit tests?Quote from   So I don't know the full answer here for the runtime quirks when running tests but I can at least recommend we don't use Args.ApiOptions (the wrapper around NSubstitute's assert helper Arg.Any()) unless you're asserting, instead of ApiOptions.None (which is the Octokit model).  Not sure if we need to do anything else here, but something to be mindful of...",,,,,,
223736197,1337,Issue,"yep, you are right, I've found 2 places where Args.ApiOptions used instead of ApiOptions.None üëç",,,,,,
223741824,1337,Issue,"Alright, ready for review _finally_...",,,,,,
225697328,1337,Issue,I'd like to run through the integration tests today and get this stuff ready for release. Are we cool with merging this?,,,,,,
223248026,1336,Issue,"this looks good, add in that new integration test and this is good to :ship:",,,,,,
223250411,1336,Issue,"please rerun Travis, it failed again :cry:",,,,,,
222502180,1335,Issue,"Some nitpicking on the tests, but otherwise looks clean enough.I just have some an itch to try and make a generic solution, but I don't think it will end up looking too nice.(something along the lines of the urls being based of a type param...)",,,,,,
222675071,1335,Issue,"Thanks for showing us a standalone reactions client implementation :+1:In terms of ""Naming Things"" currently this has `CreateReaction()` and `GetAll()` methods which to me seems inconsistent...  Im thinking we should either use `Create()` and `GetAll()` or `CreateReaction()` and `GetAllReactions()`So I guess to decide betweeen the this standalone API implementation vs h #1325 implementation, we can look at what the usage would be like:Which has a nicer feel to everybody?",,,,,,
222675487,1335,Issue,also another thing is the `GetAllReactions()` method will probably need to implement the `ApiOptions` overload to support [the pagination work] that is almost complete,,,,,,
222676641,1335,Issue,:+1:  for implementation A.  This seems to be the cleanest option.,,,,,,
222678759,1335,Issue,"I personally prefer A, but don't mind B that much. do we really gain by having `Issue.Comment` and not `IssueComment` though? I see that that is how it's done on the `Repository` client, but since we are dealing with a small limited set of methods it might make sense for it to sit directly under `Reactions`.",,,,,,
222683231,1335,Issue,"do we really gain by having Issue.Comment and not IssueComment though? I see that that is how it's done on the Repository client, but since we are dealing with a small limited set of methods it might make sense for it to sit directly under Reactions.Yep I wondered the same myself :)  Either would be fine",,,,,,
222683747,1335,Issue,Ive labeled the 3 options A B C now - can you guys just clarify what you meant by first/second implementations?,,,,,,
222688200,1335,Issue,updated -> A,,,,,,
222690361,1335,Issue,Which has a nicer feel to everybody?A,,,,,,
222692835,1335,Issue,Updated A,,,,,,
222706219,1335,Issue,do you mean `client.Reaction.CommitComment`? Another suggestion `client.Reaction.Commit.Comment`. Same for `client.Reaction.Issue.Comment`. I think it should be more structured. e.g In future maybe it's possible to create reactions for commits. Then you have `client.Reaction.CommitComment` and `client.Reaction.Commit`. What do you think? Or i'm too picky üò∏,,,,,,
222708956,1335,Issue,"Cool we shall go with A thenIn terms of naming the actual clients, I think it should be singular on the ""entity"" and plural on the ""Reactions"" part.  eg `CommitCommentReactionsClient` `IssueReactionsClient` etc.  If people disagree and think it should be plural on both, that's OK... but at the moment there is inconsistency eg: (this has singular ""Comment"") (this has plural ""Comments"")Also just note this is the name of the class.  For the name of the variable we always do singulareg",,,,,,
222712559,1335,Issue,"do you mean client.Reaction.CommitComment? Another suggestion client.Reaction.Commit.Comment. Same for client.Reaction.Issue.Comment. I think it should be more structured. e.g In future maybe it's possible to create reactions for commits. Then you have client.Reaction.CommitComment and client.Reaction.Commit. What do you think? Or i'm too picky :smile_cat:I do see the appeal of it being more structured but in this case my vote would be on not creating nested/empty clients that only contained subclients.  I dont think reactions would be likely at a commit level, and they will never be on a PullRequest object, since a PullRequest is an Issue in API terms, for things like comments/title/body... so the IssueReactions will already handle putting reactions on PRs...So I would probably go this way:and in terms of class names",,,,,,
222713716,1335,Issue,"Ok. Then if it's ok for all I would create the remaining Clients.On Tue, May 31, 2016 at 7:49 AM -0700, ""Ryan Gribble"" notifications.com wrote:  do you mean client.Reaction.CommitComment? Another suggestion client.Reaction.Commit.Comment. Same for client.Reaction.Issue.Comment. I think it should be more structured. e.g In future maybe it's possible to create reactions for commits. Then you have client.Reaction.CommitComment and client.Reaction.Commit. What do you think? Or i'm too picky :smile_cat:I do see the appeal of it being more structured but in this case my vote would be on not creating nested/empty clients that only contained subclients.So I would probably go this way:and in terms of class names---You are receiving this because you authored the thread.Reply to this email directly or view it on GitHub:",,,,,,
222716527,1335,Issue,Ok. Then if it's ok for all I would create the remaining Clients,,,,,,
222951465,1335,Issue,I'm done with the remaining clients and the deletion method.,,,,,,
222963329,1335,Issue,it looks like some of the new tests are failing on CI - are you able to have a look at them and run them locally? It should be debuggable from the VS Test Explorer.,,,,,,
222966456,1335,Issue,"I have run them locally. Test explorer says `NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:    GetAll (u.ToString() == ""repos/fake/repo/comments/1/reactions""), ""application/vnd.github.squirrel-girl-preview"")Actually received no matching calls.Received 1 non-matching call (non-matching arguments indicated with '*' characters):    GetAll(*repos/fake/repo/comments/42/reactions*, ""application/vnd.github.squirrel-girl-preview"")` Here is the line of code `connection.Received().GetAll u.ToString() == ""repos/fake/repo/issues/comments/1/reactions""), ""application/vnd.github.squirrel-girl-preview"");`What's wrong with it? Should i hardcoded the uri?",,,,,,
222968502,1335,Issue,the ID you're using in the test (42) doesn't match with the ID in the expected URL (1),,,,,,
222969376,1335,Issue,oops :see_no_evil:,,,,,,
223009005,1335,Issue,this is getting close! We just have a couple of convention tests failing as some classes are missing a constructor test: Octokit.Tests.Conventions.MissingClientConstructorTestClassException : Constructor test class is missing Octokit.Tests.Reactive.ObservableCommitCommentReactionClientTests. ... Octokit.Tests.Conventions.MissingClientConstructorTestClassException : Constructor test class is missing Octokit.Tests.Reactive.ObservablePullRequestReviewCommentReactionsClientTests.Each of these classes should have an inner test class to ensure the constructor is being tested:,,,,,,
223010469,1335,Issue,I take care of it,,,,,,
223013605,1335,Issue,there's also a couple of missing test classes for the new observable clients:- `ObservableReactionsClientTests.cs`- `ObservableIssueReactionsClientTests.cs`- `ObservableIssueCommentReactionsClientTests.cs`,,,,,,
223015328,1335,Issue,Thanks for the hints. I will carry out this ASAP,,,,,,
223026724,1335,Issue,Sorry for forgetting the unit Tests :fearful:,,,,,,
223265574,1335,Issue,The Travis build failures are due to missing files?,,,,,,
223268557,1335,Issue,Do you know what files are missing? I'm not so familiar with travis,,,,,,
223269607,1335,Issue,if you run this command from the root of the repository it should synchronize the files to the necessary `csproj` files: .\build FixProjects,,,,,,
223270401,1335,Issue,FixProjects doesn't synchronize anything.,,,,,,
223270861,1335,Issue,Maybe it has to do with your comment on ``,,,,,,
223271217,1335,Issue,Did you mean i should removed this reference?,,,,,,
223273188,1335,Issue,I'm really not sure what `xbuild` is getting confused at here. I'll test it out on one of my VMs and see if I can understand it...,,,,,,
223291680,1335,Issue,"I've opened a PR to get this build fix into your branch I think there's some other things around files that we'll need to get back to, but for now this should get us back to CI green...",,,,,,
223347172,1335,Issue,Are there any issues with appveyor?,,,,,,
223356721,1335,Issue,"yes, there's a minor issue right now:",,,,,,
223943413,1335,Issue,"This is looking really good, I think the only thing left is integration tests?",,,,,,
223944227,1335,Issue,Looks good. I will ad some more integration tests and then i think we are ready.,,,,,,
224202292,1335,Issue,can someone tell me why travis-ci sometimes work and sometimes not :sob:,,,,,,
224205632,1335,Issue,I guess nobody knows it. Here is #1076 where such fails are logged.,,,,,,
224211401,1335,Issue,this most recent one was due to a lovely little error inside `glibc`:,,,,,,
224558044,1335,Issue,"There is actually an issue #1350 where the `closedBy` Attribute is missing in `Issue.cs`. I have also seen that the `reactions` attribute is also missing if you request an single issue. So i came to the question should reactions are only get by `client.Reactions.Issue.GetAll()` or should is also be possible to get them by requesting a single issue. Same for `CommitComments`, etc",,,,,,
224564550,1335,Issue,"There's #1295, #1296, #1297 and #1298 to add `Reactions` to the various payloads.",,,,,,
224565308,1335,Issue,:see_no_evil: Thanks,,,,,,
224570395,1335,Issue,"well, it's fun being on the ""bleeding edge"" !!!GitHub API changes blog [today announced] a change to the payload received when creation reactions...instead of only the `UserId` in the response, they now inlcude a full `User` object in the response.  So we'll need to change that in `Reaction.cs`",,,,,,
224597118,1335,Issue,Todo: change tests,,,,,,
224737982,1335,Issue,"the new changes look good, you'll just need to merge or rebase on latest master after some other PR's were merged",,,,,,
224874875,1335,Issue,"2 integration tests failed for me when creating comments on issues, need to use `Number` rather than `Id` field of `Issue`.  Ive also highlighted a couple of grammatical/typos in xml comments",,,,,,
224878349,1335,Issue,Sorry for the grammatical errors,,,,,,
225034627,1335,Issue,"No need to apologise!  :grinning: There was actually a few more places I found, I sent a PR to your branch. Once that's merged I think we are :gem: and ready to merge!",,,,,,
225336511,1335,Issue,I dont know what is up with TravisCI i've retried like 10 times and always gets the same error.  But it's not anything to do with this PR specifically since other PRs are getting the same error.  So either it's something that's been merged to master (pretty sure I havent merged anything that didnt pass all builds though) or else travis has some kind of consistent issue...  Any ideas  ?,,,,,,
225739532,1335,Issue,"not sure, gonna look into it today now I have some bandwidth",,,,,,
225740811,1335,Issue,I can see a bunch of failures with the common thread being the use of Mono 4.4.0 - which came out a couple of weeks ago.Looking into whether I can choose a specific version and verify this is a regression...,,,,,,
225747632,1335,Issue,I'm pretty sure  is The ~~Hero~~ Fix We Need Right Now‚Ñ¢,,,,,,
225789955,1335,Issue,:smile_cat:,,,,,,
226053351,1335,Issue,"With the 0.20 release üö¢ 'ed and the travis issues resolved, it's finally time to merge this puppy!Good work  congratulations on your first major contribution!  It's been a bit of a drawn out one this time around but hopefully it's been a good experience üëç ![LGTM]",,,,,,
226098133,1335,Issue,:tada: :tada: :tada: ![200] definitely!! It's so much fun to work on this project.,,,,,,
222491818,1334,Issue,"BTW- I tried switching an issue from using the CSV list to using multiple assignees instead, but our automation didn't pick it up, so I'm guessing that Octokit/the API only respects the first person assigned to the issue. Or something like that.",,,,,,
222493027,1334,Issue,"The code I pointed out is for the query, of course. I could also just retrieve all issues, and look through the list of assignees, but it seems like that list is also not yet exposed. `Octokit.Issue` only has a singular `Assignee` property.",,,,,,
222493121,1334,Issue,you are correct in that support isn't there.I haven't had a chance to review all the areas where it's needed (I'm trying to wrap up the pagination release right now) but I'd love to see this happen.cc   - we were discussing this just after it was made public.,,,,,,
222493324,1334,Issue,"by chance, do you know if the API exposes it yet? I guess I could drop down to bare metal temporarily, depending on how soon you think Octokit might get his.",,,,,,
222493859,1334,Issue,"I'll defer to  and  to talk about their urgency for this being implemented, my focus is currently on other things at the moment...",,,,,,
222554866,1334,Issue,"Changes were only announced a few days ago so yeah, not implemented in octokit just yet! üòÄ These are the details of the API changes if it helps:Listing and creating and editing issues has new ""assignees"" parameter but there isn't any mention of the search API behaviour although you would hope it would now return an issue where the user was among the multiple assignees. You need to set the custom accept header to enable the preview mode so hopefully once that's specified, the search query may work as you want. Otherwise you'd have to grab all (open?) issues then query over the assignees",,,,,,
222605631,1334,Issue,"thanks very much for the info. Very useful. We don't have enormous urgency to support this in our automation so we may just wait for this to come out of preview (and be supported in Octokit) but in the meantime, if we do experiment with it, we'll report back and let you know how we get on.",,,,,,
222605828,1334,Issue,we're usually keen to get preview support into the APIs (we've not been burned by this yet) so expect it before GitHub drops the preview support and makes it part of the official API...,,,,,,
222660715,1334,Issue,"yeah sorry if that was misleading, from my observations such features sit in ""preview"" for a looooong time, so we definitely look to expose the preview functionality in octokit.net as soon as we can :grinning:",,,,,,
223328873,1334,Issue,Looks like  will start working on this in the next few days so hopefully you'll have this very soon üòÑ,,,,,,
231376456,1334,Issue,has any progress been made on this?,,,,,,
231378740,1334,Issue,"I believe so, there's an open PR by another contributor that adds this. I'm not sure what the status of it is, looks like it's bumped against some architectural issues and it's not finished yet. Work is ongoing at .",,,,,,
231384210,1334,Issue,"looking back through this issue, I don't think I've been specific enough about my use case, and I'm not convinced that #1339 supports it.I want to search for issues assigned to a particular user. Currently, using `RepositoryIssueRequest` an issue will only be returned if the user is the _first_ assignee on the issue. If the user is the 2nd, 3rd, 4th assignee, etc. the issue will not be returned. Can you confirm that #1339 will fix this?",,,,,,
231396638,1334,Issue,That is a very good question. I think it's best if you post this use case in #1339 so that everyone is aware of it.,,,,,,
231409184,1334,Issue,"thanks I did so Also, it turns out my immediate use case is solved already, without requiring changes to Octokit:",,,,,,
268691291,1334,Issue,"Per my latest comment at , I think this should also include adding this for PullRequest (and not just Issue).",,,,,,
222345451,1330,Issue,"So what we are going to do here?For the sake of simplicity, let's open a separate issue to talk about the integration tests and what we should do there (your notes seem accurate) and focus on the API changes in this PR.",,,,,,
223006564,1330,Issue,"This looks good, just that merge conflict to sort out...",,,,,,
223063939,1330,Issue,"I going to handle this merge conflict tomorrow, not have access to PC at this moment (I had a 2 day trip to Moscow in US embassy to get visa, so tomorrow I'm going to be home and I will fix that üëç )",,,,,,
223225308,1330,Issue,"I've rebased this one, just plesky travis failed again. Please merge it whenever possible :+1:",,,,,,
222279060,1329,Issue,This all seems reasonable. I'm in transit today (again) but I'll give it a closer look tomorrow when I'm jetlagged.,,,,,,
222345347,1329,Issue,Fantastic stuff ! Thanks!,,,,,,
221850033,1328,Issue,thanks  you are pumping these out in such a short time now! and so consistent :grinning: ![LGTM],,,,,,
221718688,1327,Issue,"I don't believe so... You can download an archive of the entire repository at any specified reference (branch, commit, tag etc)  in zip or tar format, using the [`client.Repository.Content.GetArchive()`] calls, but that's a copy at a point in time, not the entire repo including history and commits etc. If you want to do an actual git clone, I think you'd have to look into libgit2 or shell out to the git cmdline",,,,,,
221722859,1327,Issue,Alright. Thank you for the response.,,,,,,
221740348,1327,Issue,Seconding what  said - it's not something Octokit or the GitHub API supports.,,,,,,
221634404,1326,Issue,Thanks. I'll close the old one.,,,,,,
221847806,1326,Issue,:shipit:,,,,,,
221558657,1325,Issue,"Overall looks pretty solid to me.out of curiousity, -hal is your test account?",,,,,,
221559940,1325,Issue,"Jap,-hal is my ""now"" my testaccount. I have run the integration tests :smile:",,,,,,
221560295,1325,Issue,When I first started contributing to octokit.net I did the same thing :laughing:,,,,,,
221563753,1325,Issue,:tada: Looks great!!although someone with more experience than me like  should also have a look,,,,,,
221564799,1325,Issue,"Thanks!! If this looks good i will continue on reactions for other types like issues, ...",,,,,,
221860594,1325,Issue,"Hi  many thanks for your first contribution!  In general everything looks pretty good.  I do have an outstanding query with  on the corresponding issue #1302, regarding his proposed design/location of these reaction calls as it seemed like putting them under each section (comment, commit, pull request, issue section, etc) is not inline with the github API docs/structure which I thought was a general goal/rule in octokit,net to stay as close to the official API as possible.But in the meantime while we wait for an answer, we can work through the changes you've submitted and I'll highlight a few minor consistency/nitpick type things to get you familiar with contributing to the project :+1: Also as an FYI, when working on PR if you mention the magic words ""fixes #1302 in your PR body, then when we merge the PR it will automatically mark the issue as closed... so it's a good habit to get into :grinning:",,,,,,
221862857,1325,Issue,Hi . Many thanks. I'm very excited to make my first pull request for a project :smiley:  In the meantime i have created a new standalone ReactionClient where i implement a Delete Method like in #1303. Should i create a new branch and make a pull request. Or should i wait until this pull request is closed or adopted?,,,,,,
221867059,1325,Issue,"Feel free to discuss any of the feedback if you don't agree!  I try to give detailed feedback around things, simply to get contributors into the groove of our approach/thinking.  Sometimes this may come across as critical but that's not the intention!  We appreciate all contributions and are very keen to work with you to ensure you have good experiences contributing to open source dotnet projects :grinning:",,,,,,
221867910,1325,Issue,Ok. I will do this in the future. Thanks for all the suggestions,,,,,,
221868625,1325,Issue,"PS, with the ""fixed #1302"" tip i mentioned, even if you add that now (by editing your PR body) it will close the issue when the PR is merged.",,,,,,
222079126,1325,Issue,"Another thing i would like to discuss. So far we have a request client `NewCommitCommentReaction` and a response client `CommitCommentReaction`. Would it not be better to have one request and one response client (eg `NewReaction`, `Reaction`) for all the different types? Because in the reactions doc [](url) response and request are always the same for types.",,,,,,
222079904,1325,Issue,"yeah, I don't see the point in duplicating all the types here where they're structurally the same...",,,,,,
222084886,1325,Issue,Any ideas for naming `EnumReaction`??,,,,,,
222123584,1325,Issue,"ReactionType was my suggestion. That matches the terminology in API docs too... Also the more we go through these specifics (request response types are common across all, there's only a single delete method for any reaction etc), the more I reckon it makes sense it all lives under a top level ""Reactions"" client. If you're happy to do it, I'd love to see a PR providing that option so we can see how it feels",,,,,,
222124275,1325,Issue,Ok. Then i will start on this. I leave a comment for this topic #1302,,,,,,
222151420,1325,Issue,Is there any experimental branch where i can create pull requests?,,,,,,
222302848,1325,Issue,Well all PR's are experimental until they are merged or abandoned so feel free to raise a PR for whatever you want,,,,,,
223002657,1325,Issue,Closing this out in favour of #1335 which is going for the standalone client approach.,,,,,,
221549118,1324,Issue,Have you got a github enterprise instance to run the integration tests against or would you like me to do that?,,,,,,
221550043,1324,Issue,"No, I haven't. Unfortunately, I don't know a lot of about enterprise integration test procedure, so do it at your discretion :smile: Anyway, if there is exists an possibility to provide me test enterprise credentials for period of GSoC, I think that I could run and debug enterprise integration tests by myself :+1:",,,,,,
221856338,1324,Issue,"Anyway, if there is exists an possibility to provide me test enterprise credentials for period of GSoC, I think that I could run and debug enterprise integration tests by myself :+1:[GitHub Enterprise] is a version of GitHub that an organization hosts on their own servers (either on prem or cloud).  They do have a free 45 day trial though, so potenitally you could spin one up if you have AWS or Azure credit, or enough hardware at home for the minimum spec (16GB RAM).  But it really isn't necessaryI've pulled your stuff down and ran all the integration tests, you've just got one issue which ill highlight",,,,,,
221882673,1324,Issue,"GitHub Enterprise is a version of GitHub that an organization hosts on their own servers (either on prem or cloud). They do have a free 45 day trial though, so potenitally you could spin one up if you have AWS or Azure credit, or enough hardware at home for the minimum spec (16GB RAM).Thank you for good explanation, now I really get it. But it really isn't necessaryIf so, I really hope that there are not so many clients that should use Enterprise API (throughout my GSoC) :smile:",,,,,,
223004812,1324,Issue,Gonna merge this in and we can come back to that open question about running the tests cc,,,,,,
223123962,1324,Issue,"I think it's ok creating the orgs, my test ghe instance already has a number of random organisations created from other tests I'd written previously... They don't really affect anything and anyone running integration tests on ghe should be using a dedicated  dev instance anyway",,,,,,
221543154,1323,Issue,:clap:,,,,,,
221542952,1322,Issue,Great work :+1:,,,,,,
221547452,1321,Issue,:gem:,,,,,,
223884735,1320,Issue,"Hi , ~~is there any option to try this out. Because i dont have access to github enterprise.~~ And second question, is there someone still working on this issue?",,,,,,
223901046,1320,Issue,"This one doesn't require GitHub Enterprise (i take it you already realised that based on the strikethrough text)I recently pushed up #1342 which addresses #1319, but I haven't done anything on this issue yet, so feel free to take this if you want!",,,,,,
223904722,1320,Issue,:+1:,,,,,,
221226900,1318,Issue,"I'm going to fix that, but I can't use standard approach ""create new method, fix all usages, mark old methods by Obsolete attribute"", because in this case type of parameters is equal (string). So it will be breaking change in this case. In what way it should be fixed?",,,,,,
221245488,1318,Issue,"So this is an inconsistency but not actually a ""problem"" currently right?  Because inside the Observable implementation it does pass the correct order of parameters through to the normal client.Id be tempted to say that although inconsistencies are annoying, we shouldnt make a breaking change just to order the parameters in the observable client the same as the normal client...",,,,,,
221251214,1318,Issue,"Yeah, all worked :smile: ! I'm not insisting on fixing in any case, just I was wonder :scream_cat:  when I found it. And yes, breaking changes are very bad, but I thought that since version of Octocit.NET is far from 1.0 and maybe users are ready to breaking changes, so it can be fixed as far as it was located.",,,,,,
221253358,1318,Issue,Let's not break this yet. We've got a few things we should clean up that are far more urgent than this...,,,,,,
221286535,1318,Issue,"If so, I don't mind if it would be closed :+1:",,,,,,
222050727,1318,Issue,I'm happy to leave it open.,,,,,,
221242227,1317,Issue,"good pickup although I also see that variables inside the test are named `hooksCount` and so on, so probably should fix up those other copy/paste errors where ""hooks"" is used, at the same time?",,,,,,
221243087,1317,Issue,"good remark, fixed :smile: !",,,,,,
221227819,1316,Issue,"Tests are passed, but Mono SIGABRT fails again.",,,,,,
221255446,1316,Issue,"Looking good, ive made a few comments.BUT the big thing that's bothering me is... if the underlynig github API appears to not actually support pagination for these methods, then we can't implement the `ApiOptions` overloads as it would give users the misconception that they could request paginated results.   might want to chime in on this, but my thoughts would be that we shouldnt implement this, until/unless it turns out to be a github API issue that is later resolved...",,,,,,
221301105,1316,Issue,"all remarks were fixed, thanks! SIGSEGV again :cry:  I want to add that [Statistics] do not support pagination as I mentioned in #1305, also I opened an issue #1315 for further discussion, but maybe it is overkill and we can solve this question here.",,,,,,
222049753,1316,Issue,"Looking at the docs for [Get Contents], you have these headers returned:![]![]Apologies  - I really don't think it's worth implementing this, and I should have caught it when opening the original issue...",,,,,,
222049872,1315,Issue,"Let's not worry about this one - because of the nuance of serving up a directory versus serving up a file, I don't expect pagination to be added here anytime soon.",,,,,,
221121377,1314,Issue,"Not sure I understand the problem completely, but here's a quick brain dump:- the commits in a PR cannot be changed while under review - to change existing commits you need to rewrite the branch directly and push, which will then sync the PR on GitHub- when the PR is synced (aka updated) you could verify the commit messages for the commits to be merged, and then set a failed commit status for the tip of the branch - see [these docs]- you could programmatically merge a PR and specify the commit title/description - see [these docs]- there is a `pull_request` webhook event named `closed` that you can use to know when the PR was merged (it'll have a property `merged=true` set). But this even occurs after the merge.",,,,,,
221124566,1314,Issue,"hi shiftkey,Thanks for the quick response!  I understand the the commit message inside the PR can't be changes.  What I want to do is tack on a string to the pull request merge commit message.Right now in GitHub website when I click on the merge pull request button my commit message for the merge is prepopulated with ""Merge pull request #5 from ragnarok513/test"".  If my branch name was named Bug-123-urgent_issue_with_homepage, I want to parse out the text ""Bug-123-"" and prepend it to my merge commit message so that my merge has this message ""Bug-123-Merge pull request #5 from ragnarok513/test""",,,,,,
221127429,1314,Issue,"Some context for you....My users are going to be directed to use the Github website to initiate and complete pull requests.  I have a webhook that enforces that the pull request must also have my custom labels attached before merging.  I need to also enforce that the pull request commit message starts with something like ""Bug-123"".  I didn't find a capability to validate the pull request commit message so my alternate idea was to prepend the commit message with part of the branch name",,,,,,
221131532,1314,Issue,Unfortunately that sort of web hook (enforce merge commit message) isn't available currently. I'm not sure of alternatives aside from what you've mentioned above...,,,,,,
221241189,1314,Issue,"one other suggestion i have is that by using the commit status API and protected branches features, you can effectively ""stop"" PR's from being merged if the status checks havent passed.  You could potentially set a status check as pending that will never be passed, thus stopping the users from merging PRs on github.com web site.  Then you provide them with your own tool/script/webUI that will set the required commit status to PASS and then merge the PR for them (customising the merge commit message to your requirements in the process)",,,,,,
222051860,1314,Issue,"I like that idea. Some people might not, but if you're looking for process then it's the easiest way to lock it down...",,,,,,
222290145,1314,Issue,"Yeah commit statuses and protected branches offer great flexibility from ""carrot"" based suggestions to ""stick"" based enforcement depending on individual teams/repos needs",,,,,,
222345114,1314,Issue,Closing this out as I think we've covered a bunch of alternatives to the proposed requirements.,,,,,,
220953041,1313,Issue,"Hi -hal ! I see you haven't implemented Observable version of new methods. Unfortunately in this case CI cannot be passed successfully. Also you have to add new unit tests for Observable client, as far as new integration tests for new methods.",,,,,,
220955427,1313,Issue,Ok. Thanks for the notes. I will add this asap.,,,,,,
221193860,1312,Issue,",  all errors were fixed, please merge whenever you have time :smile:",,,,,,
221289761,1312,Issue,all remarks were fixed!,,,,,,
221542068,1312,Issue,Cool looks good!,,,,,,
220996569,1311,Issue,üëç,,,,,,
220765271,1310,Issue,"~~ ,  I think that something wrong with Travis CI or AppVeyor. As in #1308, some tests that worked before, now are broken. For instance, in the last build log Octokit.Tests.Reactive.ObservableGistsTests+TheGetAllStarredMethod.RequestsTheCorrectUrlWithSince is failed without reason. And my new methods (RequestsCorrectUrlWithApiOptions) not working too. It looks like some bug on NSubstitute.~~Errors are fixed, they were the same as here #1308 (copy-paste hell :smile: )",,,,,,
220919093,1310,Issue,",  all errors are fixed, just another mono SEGENV error. Please, merge whenever possible.",,,,,,
220769716,1309,Issue,"when you mean details, what exactly are you looking to get out of the API? Also, a similar question was asked in  and we walk through some options there...",,,,,,
220795703,1309,Issue,I had actually seen that question and formulated the above code based on that.I am mainly looking to get the commit stats (which seems like a pretty small piece of data) without having to make a separate `Commit.Get` request for each individual commit returned from `Commit.GetAll`. This seemed like an inefficient way to get a small piece of data associated with all commits.I thought my question differed from the one you referenced since that question is requesting to get deeper file information associated with every commit so it was understandable that a separate `Commit.Get` was required.I came up with this question when I noticed the `GitHubCommit.Stats` property was `null` when accessing directly from the results of `Commit.GetAll`.Thanks for the response!,,,,,,
220800226,1309,Issue,"I came up with this question when I noticed the `GitHubCommit.Stats` property was null when accessing directly from the results of `Commit.GetAll`.Yeah, unfortunately the response for `GetAll` doesn't have the stats or files changed in a commit - here's the [example payload].If you're aggregating the stats for a range of commits, what about if you were to compare two commits, like this?This isn't as granular as checking each commit, but might work for your scenario...",,,,,,
221116418,1309,Issue,"That's an interesting approach. I am actually just looking to output a simple list of most recent commits and minor details on each commit. I felt the commit message, commit date, and commit stats would provide a good snapshot for a commit, which is why I was surprised commit stats were not in the commit payload you referenced. Thanks for the help.",,,,,,
221118798,1309,Issue,"the short version of the long story is that `GetAll` becomes expensive to execute when you have to dig into the underlying tree/s and blobs and work out the changes between it and the parent commit, for each commit in the range of history.Closing this out for now. Best of luck!",,,,,,
590109402,1309,Issue,"Adding stats should be an option on the request, now I have to make a separate request for each commit, putting extra load on your servers and making my process slower.",,,,,,
220599176,1308,Issue,"Somehow these tests are working on my machine from time to time and do not work on CI at all. I've tried to understand what is wrong with RequestsTheCorrectUrlWithApiOptions test case, but I haven't saw any errors. It's looks like multithread error somewhere and at this moment I can't find out where it is.It is failed test and it should work but it don't.",,,,,,
220602263,1308,Issue,can you try defining the test as `public async Task` to see if that addresses it at all?,,,,,,
220654437,1308,Issue,"yeah, I fixed that, it's my misspell. But anyway, the tests failed. As I see there is must be call received by ApiConnection Substitution. And these tests is working on my PC for now. But CI cannot pass them. I really confused such situation..",,,,,,
220918339,1308,Issue,",  I've fixed errors in tests, accidentally I've used Args.ApiOptions instead of ApiOptions.None and it gives strange result: in parallel tests falls, but in single thread they executed successfully. I found this info [`Unit Test fails on Run All but not on Run Selected Tests with all selected`] and fixed this error. So, now all tests are passed.",,,,,,
220996014,1308,Issue,"Cool, nice find!  I'll review these tomorrow",,,,,,
221094806,1308,Issue,"I've fixed errors in tests, accidentally I've used Args.ApiOptions instead of ApiOptions.None and it gives strange result: in parallel tests falls, but in single thread they executed successfully. So I don't know the full answer here for the runtime quirks when running tests but I can at least recommend we don't use `Args.ApiOptions` (the wrapper around NSubstitute's assert helper `Arg.Any()`) unless you're asserting, instead of `ApiOptions.None` (which is the Octokit model).Not sure if we need to do anything else here, but something to be mindful of...",,,,,,
221095971,1308,Issue,"Changes look good on my end. I'll let  chime in, otherwise I'll merge it after my talk is done tomorrow.Thanks !",,,,,,
221165919,1308,Issue,"Not sure if we need to do anything else here, but something to be mindful of...Yeah, definitely no any changes have to be done in such situation, it is just interesting behaviour that blowed my mind for 2 days :smiley:. Maybe it would be useful information for someone :+1:",,,,,,
221284126,1308,Issue,all remarks were fixed :+1: SIGSEGV again on Mono :cry:,,,,,,
221543571,1308,Issue,"Pesky travis!  All :gem: now, thanks!",,,,,,
220584200,1307,Issue,",  please review these PR whenever possible, it's done.",,,,,,
220584947,1307,Issue,üëç,,,,,,
220300509,1305,Issue,"I'll have a proper thorough look at this on the weekend But I just wanted to say that I'm wondering from a high level release management perspective, if it might be a good approach to get the ApiOptions pagination work finished first, then cut a new octokit release (as there a number of fixes/changes that would be good to get released), prior to embarking on the large changes to implement the repositoryID overloads.  I'm definitely not saying you shouldn't work on these but I'd be keen to get a release happening soon. Perhaps we don't need all ApiOptions done and perhaps it doesn't matter if some repositoryID changes are in that release either, although it also does seem clean to think that the next release would have all the ApiOptions pagination in it, then the next release all the repositoryID changes",,,,,,
220307895,1305,Issue,"yes, you're definitely right! I also think that ""ApiOptions"" release should be deliver before ""repositoryId"" one.Maybe it is would be useful, here is the list of clients that should get ""repositoryId"" overloads through GSoC 2016. I've marked items that have already ApiOptions overloads, added issue link with [WIP] prefix if issue has been grabbed by someone and just added link to open issue if there is nobody is working on this one, **bolded** items haven't pagination support:- [x] Collaborators #1170 (IRepoCollaboratorsClient, IObservableRepoCollaboratorsClient)- [x] Comments ~~#1262~~, #1310 (IRepositoryCommentsClient, IObservableRepositoryCommentsClient)- [x] Commits #1173 (IRepositoryCommitsClient, IObservableRepositoryCommitsClient)- [x] **Contents** #1174 (IRepositoryContentsClient, IObservableRepositoryContentsClient)- [x] Deploy Keys #1175 (IRepositoryDeployKeysClient, IObservableRepositoryDeployKeysClient)- [x] Deployments #1151 (IDeploymentsClient, IObservableDeploymentsClient)- [x] Forks #1176 (IRepositoryForksClient, IObservableRepositoryForksClient)- [x] **Merging** (IMergingClient, IObservableMergingClient)- [x] Pages #1304 (IRepositoryPagesClient, IObservableRepositoryPagesClient)- [x] Releases #1169 (IReleasesClient, IObservableReleasesClient)- [x] **Statistics** (IStatisticsClient, IObservableStatisticsClient)      ~~There is no issue, but I think that it should be added because of IStatisticsClient.GetContributors(string owner, string repositoryName) method?    Am I right?~~       It's looks like [Statistics] do not support pagination at this time. The [query ] returns whole statistics instead paginated results. It is similar to #1315.- [x] Statuses #1150 (ICommitStatusClient, IObservableCommitStatusClient)- [x] Webhooks #1177 (IRepositoryHooksClient, IObservableRepositoryHooksClient)I think that I could do these issues with ApiOptions before work on repositoryId overloads, as far as I can.05/28/2016All items from this list are done.",,,,,,
220141394,1304,Issue,can I get a :thumbsup: here before I merge this in?,,,,,,
220152913,1304,Issue,"Looks pretty good, although I didn't see integration tests that actually test the pagination... Is that because there isn't a suitable repo that has enough responses?",,,,,,
220226097,1304,Issue,it's because anything related to Pages requires the account to be an administrator of the repository:,,,,,,
220229162,1304,Issue,"Yeah I saw the existing test was skipped, I guess I was just questioning whether there should still be the pagination test written, then also skipped? The code changes look fine though so üëç if you aren't concerned about the missing test",,,,,,
220230158,1304,Issue,good point. I'll add the test so we don't forget it and then close this out...,,,,,,
227149409,1303,Issue,fixed by #1335,,,,,,
220724279,1302,Issue,"HI Shiftkey,i'm working on this feature for commits, issues, .... Is this Ok?",,,,,,
220763133,1302,Issue,"-hal that's fine, thanks for the heads up!",,,,,,
221858767,1302,Issue,"I have a question over the proposed implementation of these reaction calls.  In the github API docs, these all sit underneath a top level ""Reactions"" section... so wouldnt that mean for octokit.net we should be creating a new `ReactionsClient` with the various methods under that, rather than adding `CreateReaction()` methods under each of the Repository PullRequest, Commit, Comment etc clients?",,,,,,
221868432,1302,Issue,"I'm not locked into the approach that I've chosen, so I can be talked off this ledge.There's a couple of places in the API documentation where the structure doesn't reflect the underlying resources (for example, Pull Requests) and this one I'm pushing back on for a couple of reasons:- it's new code and also a preview API- the new endpoints build on existing resources- for context, having these alongside existing clients might make more sense than bundling them all togetherI can see from the documentation side how it's easier to group these new methods together, however it didn't feel natural to me when I was comparing it to how things are currently structured.Thoughts?",,,,,,
221968704,1302,Issue,"Documentation wise I swing either way, but for implementations - definitely feel each client that needs reactions should have such a method. One idea that I have no idea if it's feasible as I'm not checking code is to have an interface that defines the reaction methods and then clients that expose that will provide specific implementation",,,,,,
222068392,1302,Issue,So then each client should also have a get method. Right?,,,,,,
222069334,1302,Issue,I've grouped up all the open issues under the `reactions` label:,,,,,,
222100515,1302,Issue,"That's what's getting me a bit unstuck though...  The delete method deletes ANY reaction, so it doesn't seem good to duplicate that on all the commit pull request issue issue comment etc clients. But having delete sitting out on it's own under a Reactions client isn't intuitive either. This is why I was questioning why we wouldn't just parallel the official documentation structure and have it all under ""Reactions"" client Are there precedents where octokit doesn't align with the API docs currently? There are plenty of things we could move around and group together that would make more sense but we haven't done so (i assume because that diverges from the API documentation layout) I'm really not phased either way I just like to clarify my own understanding of our guidelines/decisions to follow",,,,,,
222122121,1302,Issue,"For me the api not feels (I dont find a better word for it) naturally. If you look at the api docs, there are root objects like gists, repositories, issues **and** reactions. All except reactions ( i exclude labels because i dont understand why they stay under issues. For me labels are also root objects because i can get and create labels for repositories and labels for issues. But this belongs to another discussion) implement the same schema. `repos/owner/issues` -> `repos/owner/issues/comments` `repos/owner/issues/event` and then comes reactions `repos/owner/issues/comments/reactions`. Why not `repos/owner/reactions/issues` `repos/owner/reactions/issues/comments` or `repos/owner/reactions/repositories/` and so on. So for this i'm with . But i don't want (in germany whe say ""to offend on sb. toes"" :smile: ) because im very new to this. But this would maybe the way i would do it.",,,,,,
222277237,1302,Issue,:thumbsup: to bringing it all under the root `Reaction` class. I'll go through and clarify those issues now.,,,,,,
222302795,1302,Issue,üëç,,,,,,
227149281,1302,Issue,fixed by #1335,,,,,,
225136579,1301,Issue,I'd like to give this a try :),,,,,,
225159079,1301,Issue,"Hi , this one is actually implemented on PR #1335 which is about to be merged, sorry!But there are some other ""Reactions"" related work not yet done, mostly the ones to include reaction information in the responses for Issues, PullRequestReviewComments etc#1295, #1296, #1297 and #1298 has #1295 covered in PR #1341 , but the other 3 havent yet had any PRs pushed up...There's also #1249 that hasn't been picked up yet, which looks quite interesting!",,,,,,
225159869,1301,Issue,"Ouch, not the best of choices on my part :) I'll look at one of the other issues.",,,,,,
227149336,1301,Issue,fixed by #1335,,,,,,
227149372,1300,Issue,fixed by #1335,,,,,,
225343138,1296,Issue,", i take this issue and #1297 and #1298 if this ok. But I will wait of merge #1295 because of `ReactionSummary`",,,,,,
227149704,1296,Issue,are you still planning on doing #1296 #1297 and #1298 ?,,,,,,
227176565,1296,Issue,Oops :see_no_evil: Of course!!! I didn't recognized that #1341 was merged. Thanks for the update,,,,,,
219724923,1295,Issue,"I'd love to see this land with some preview support. As it looks like the reactions model are the same shape whether it is for issues, issue comments, pull requests or review comments we can roll this out gradually. The first PR can add the model, set the preview header and add some tests - and the others can follow.I've renamed this task to focus on issue comments, and I'll open tasks for the other areas.",,,,,,
223741831,1295,Issue,Hey  that's awesome! Just a heads up that some other related changes are occurring in #1335 (for creating and deleting the reactions)... For this issue you'd want to use the same `ReactionType` enum created there etc,,,,,,
223750133,1295,Issue,I'll get a start on this and add in a few `TODO`s to use the `AcceptHeaders.ReactionsPreview` property being introduced in #1335,,,,,,
219359392,1294,Issue,![],,,,,,
219220881,1293,Issue,"I'm not sure how we can optimize this ""all files and then all commits"" scenario but there's a few optimizations I can think of. Apologies if this doesn't compile, I'm writing it from scratch.First, you can grab all the files which exist on a given branch like this:Then, you can query for all commits associated with a given file:It's still time-consuming, but now the number of requests necessary is `(1 + file count)` instead of `(1 + commit count)`.",,,,,,
219222311,1293,Issue,"Thanks a lot. That was the other idea I had but didn't know how to implement. It works, with a change on how you get the file paths:Thanks again for your help and fast response!!",,,,,,
219222455,1293,Issue,"Oh yes, silly me - the tip commit doesn't reflect the whole tree, just the files changed in that commit!I'm glad the rest helped though!",,,,,,
219237876,1293,Issue,"It's an octodecimal hypermobius?On May 14, 2016 8:21 AM, ""dimitrisTim"" notifications.com wrote: I am trying to get every file that has been changed in a repo, by every commit. Then I store the files in a list, so that I can count how many times every file has been changed. Code:  var commitsAll = await client.Repository.Commit.GetAll (Owner, Name); foreach (var com in commitsAll) { var commit = await client.Repository.Commit.Get (Owner, Name, com.Sha); var files = commit.Files; //get changed files for every commit foreach (var f in files) { if (!fileNames.Contains (f.Filename)) fileNames.Add (f.Filename); //add the filename in a list fileCounter [fileNames.IndexOf (f.Filename)]++;  However, if the number of commits is high (let's say 1000), this method is totally slow and useless. Any thoughts?  ‚Äî You are receiving this because you are subscribed to this thread. Reply to this email directly or view it on GitHub",,,,,,
219964223,1292,Issue,"Tests look good, just that one typo and this is good to go.",,,,,,
219966341,1292,Issue,fixed,,,,,,
218962123,1291,Issue,"all remarks are fixed. Could you merge it, please?",,,,,,
219945818,1291,Issue,",  could you merge it please? I want to start implement my GSOC proposal goal and this PR is the important part of it :pray:",,,,,,
219957450,1291,Issue,apologies for the delay!,,,,,,
219958646,1291,Issue,"all fine, thanks! :smile:",,,,,,
218074544,1290,Issue,"Could anybody merge it if there is no problems?/cc ,",,,,,,
218130685,1290,Issue,The builds failed after recent rebase?,,,,,,
218131620,1290,Issue,yes and don't have any suspicions why it failed...I've figured out - OrganizationMembersClient.cs is missed during rebase I don't know why :dizzy_face:,,,,,,
218136911,1290,Issue,looks like `OrganizationMembersFilter` and `OrganizationMembersRole` are also missing,,,,,,
218140321,1290,Issue,Hope it is fixed in the last commit. Merge/rebase always makes my cry :cry:  ![-],,,,,,
218169895,1290,Issue,"a couple of unnecessary introduced changes, but aside from that this looks good. :heart: seeing the inlined URLs being extracted!",,,,,,
218185263,1290,Issue,seeing the inlined URLs being extracted!Without it I can't properly generate new urls to access API by repo id :smile: Hope it would be merged as far as possible in order I can pull out these new urls.,,,,,,
217116885,1289,Issue,-matei thanks for checking!,,,,,,
217000126,1288,Issue,"Welcome and thank you!I'd like to offer some pointers that will help get the ci build green and the PR merged. 1. Some tests where impacted as the expected url has now changed. (when I am back in front of a proper machine I will try and link to them)2. The new method should be added to the IEventsClient interface. 3. IObservableEventsClient should also be updated, as well as the implementing class. If I can help in any way, just let me know.",,,,,,
217008445,1288,Issue,"Yeah, realised that after I submitted it that I broke the tests, and then saw everywhere else it was impacted. I'll fix it after.",,,,,,
217049736,1288,Issue,"no problem, it's what the tests are there for!",,,,,,
217050285,1288,Issue,"Alright, test should be passing and code should be working now in the normal and observable classes. Let me know if it's all good.",,,,,,
217055355,1288,Issue,"release_notes:**Breaking Change:** `IEventsClient.GetAllForRepository` was incorrectly retrieving issue events before this release. Use the new `IEventsClient.GetAllIssuesForRepository` method if you still require issues, or continue to use `IEventsClient.GetAllForRepository` if you require all repository events...",,,,,,
217057329,1288,Issue,thanks for the contribution!,,,,,,
217057972,1288,Issue,"And as it's your first contribution to Octokit, we should celebrate!![]",,,,,,
217082923,1287,Issue,"Travis-ci falls again, please rerun it whenever possible./cc  ,",,,,,,
214796864,1284,Issue,"Hi, Thanks for reaching out... I haven't runtime tested this as I'm not at a computer currently, but if you have a look at the [API docs] for the search user call and the example json response, it doesn't return a full `User` object (with the properties you are wanting), it only appears to return a smaller subset of information. Unfortunately if you need those fields it looks like you'll need to load the full User using the [`User.Get()`] call, passing the `login` field from the search result.",,,,,,
214801144,1284,Issue,"thanks!I did not notice that in API docs and expected to see full objects.Looks like this is not an issue at all. I will try your approach, thanks.",,,,,,
214671713,1282,Issue,"All checks passed, pls review PR whenever possible./cc ,",,,,,,
213374777,1280,Issue,:shipit::heart:,,,,,,
213385794,1280,Issue,LGTM!,,,,,,
220928901,1279,Issue,"Hi, ! Are you going to continue your work on this issue in near future :smile:? Just in order to do #1120 pagination support milestone should be done, so if you are not going to continue in near future I'm mark this one to do by myself :smile:",,,,,,
220950130,1279,Issue,"I know this is getting stale, but I'm really swamped right now between my exams and GSoC. I'll probably complete this after 5th. If this needs to be done before that, go ahead. Otherwise, I'll do it later.I'm sorry for the delay.",,,,,,
220953709,1279,Issue,"thank you for fast response, I've marked this issue in my notepad. Anyway there is a lot of other ""pagination support"" issues that should be done before, so there is chance that I can not make it in time before 5th June :smile:",,,,,,
220958834,1279,Issue,"Good. I hope you complete all of these fast enough, but if there's too much work, I'd hop in. :+1:",,,,,,
221634635,1279,Issue,This has been completed in #1326.,,,,,,
212652320,1274,Issue,"it's hard to review these changes, but Im grasping at straws to find anything major here üòÄ",,,,,,
212652752,1274,Issue,"thanks for the :eyes:, I think there's a bunch of new test coverage here I can do but given how many overloads there are I'm trying to keep this as focused as possible.",,,,,,
212689156,1274,Issue,I also took some time out in 1b2d009e3a33b966fa78e0b3b8883a7863797bd6 to document the return values from the API. Let me know if you have any feedback on the words.,,,,,,
212689558,1274,Issue,"Lots of the pagination endpoints here require you to have org access, so rather than getting too bogged down in pagination I'm going to skip those tests.",,,,,,
212699267,1274,Issue,"I also took some time out in 1b2d009 to document the return values from the API. Let me know if you have any feedback on the words.I noticed you are using `<seealso cref=""""` when most other cases in the code base are using `<see cref=""""` - is there any reason for using one over the other?The wording sounds reasonable although I wonder whether the effort involved to doc all return values is worth it, since they are pretty self evident... and it then sorta means we have to go and add them to allll the rest of the codebase.  I guess the same could be said for doccing most parameters in general though and if we didnt do it then we would have no doc anywhere.  Does this mean you intend us to start the process of docing return value on everything from now on?",,,,,,
223028056,1274,Issue,Can I get a :thumbsup: here before I close this out?,,,,,,
211829011,1273,Issue,There's a couple more places where you've accidentally referred to a class in the wrong assembly and thus not found the right client interface classes :grinning:,,,,,,
211853646,1273,Issue,", you're absolutely right! Fixed!",,,,,,
211752746,1272,Issue,",  I think it is ready to review and merge after travis restart.",,,,,,
211763678,1272,Issue,"this is great, and I'll queue up some unrelated test tweaks that I found while reviewing for when it's time to ship! Thanks!",,,,,,
210113464,1271,Issue,"The error message itself suggests something is interfering with the TLS handshaking that your computer and `api.github.com`. This often occurs when the client isn't able to validate the certificate it gets from the server. If you have a look at the stack trace for that error it'll likely be deep inside the bowels of `System.Net.Http` stack - way beyond anything that Octokit can control.My gut feeling is that this is still certificate related - browsers will often look at their own certificate store (sup Firefox) rather than defer to what is installed with the OS (which is what .NET does).üåµ üåµ üåµ **WARNING: DANGER ZONE** üåµ üåµ üåµ What I'd like you to do is tweak the main part of the program to do this:You can then view at the certificates that were received as part of the handshaking and see what the error is that you're receiving. But do not keep this code around once you find the problem - you should fix it and then cleanup this code, as bypassing SSL/TLS handshaking is crazy dangerous in general.",,,,,,
210493587,1271,Issue,"Well, I did this, but breakpoint can not be hit - I get an exception before this line is executed.",,,,,,
210591715,1271,Issue,"Just a wild guess, but can you try opening `api.github.com` in VS's internal browser?It may be informative if it is a certificate related problem, AFAIK.",,,,,,
210684392,1271,Issue,I get an exception before this line is executed.It's hard to say without more information what's happening here.  Accessing GitHub API via browser works OK.Which browser?,,,,,,
210783938,1271,Issue,"I can not reach [this url] from inside VS: I tried IE 11 and Chrome, both OK.However, Firefox gives me this:",,,,,,
211435876,1271,Issue,"Thanks everyone for helping, I found the cause of the problem.It was ESET Antivirus bug, that blocks all HTTPS requests until explicitly allowed.Chrome an IE were in exclusion lists, so they work OK.",,,,,,
209680446,1270,Issue,"-Zuber I think this is a good thing to do, but I'll leave it up to someone who is brave enough (and knows enough reflection) to dive into this and make it work broadly (think methods versus properties and interfaces versus all implementations available).",,,,,,
211870646,1270,Issue,Hi! I'm grabbing this one up if it's ok with you.,,,,,,
211838158,1269,Issue,"this is another one where im pretty much waiting for you or  or someone ""official"" to provide some feedback/help, if you can add it to your list :grinning:",,,,,,
220590121,1269,Issue,"just a gentle reminder about this PR üòÄ  I know you've been travelling etc, I've been a bit preoccupied with some other things recently myself, but should be ready to get back into finishing off the enterprise api's now, pending advice/feedback on what I'd found with this PR",,,,,,
239758407,1269,Issue,"apologies again for the delay on this - the approach seems fine, added a few commentsDigging into the original PR comment:#### API Uri'sI'm fine with isolating that rewriting behaviour as near to the Management Console functionality as possible. We might have a better idea for handling it down the track.#### AuthenticatingAlso fine. [Just something we need to live with, it seems.] The irksome thing is that the password is essentiall in clear text on the end of the Url but im not sure if that's really any different to it being in the HTTP headers for regular calls anyway...If you're using HTTPS and everything is setup correctly on the server, after the [initial handshake] between server and client the contents of requests (whether it's the request line or the `Authorization` header) are considered encrypted.#### What the heck is up with parameters containing json strings?!!Gosh that's some beautiful API design :trollface: If anyone is able to show me how to get this working in a more ""normal"" way for octokit where the request object is serialized using the builtin `SimpleJsonSerializer` in the normal pipeline, I would love to see what I missed bercause I feel like I tried so many attempts and still couldnt crack it without going the form encoded route.Pretty much all of Octokit's serialization has been built off the assumption you're serializing an object to the request body. This is outside that sandbox, so I think we're stuck for now. If SimpleJson is all you need, perhaps we could make the serializer a first class feature on the client, so the code might look like this:I'd need to think about what that might break in terms of testability by baking it into `ApiClient`, and what other scenarios this would help us cover. Also, are there more scenarios where the JSON sent needs to be wildly flexible beyond our simple serializer attributes? Perhaps this won't be worth investing in...#### What the heck is up with the time handling?!!I'll just leave this here:![]Okay, now to actually be constructive.- When sending a value as part of the request, it sounds like we should be able to send an ISO 8601 string, right?- When receiving a value as part of the response, why bother being clever with the parsing? Just serve it up as a string, if the API is going to try and be clever with what it presents.I've ask the team about this API and whether others have felt the same pain.#### Specifying ""when"" parameter in EditMaintenanceMode()These all seem fair. I'd perhaps drop `FromChronicString` in case it does get obsoleted, but that's a minor feel.#### MaintenanceModeStatus as an enum#### Added environment var for management console password for integration tests:thumbsup: to both",,,,,,
239789418,1269,Issue,thanks for the comments.  Ill revisit this soon with those comments in mind and see what a fresh perspective brings.I think I've already got a branch somewhere where I at least used the serializer to build the JSON string but from memory I still couldnt get it to be accepted in the request body and had to go with the URLEncoded approach.,,,,,,
240091827,1269,Issue,"OK I think all comments have been addressed I've also changed the request object side of things so the structure matches what the API expects, and I can use `SimpleJsonSerializer` to build the json string.  The usage is now `new MaintenanceUpdate(new MaintenanceUpdateDetails(true, ""next tuesday at 5pm""))` - the nested class isn't ideal but that's how the API object needs to be (ie top level item name `maintenance` that then contains the `enabled`/`when` attributes).I still need to UrlFormEncode the request rather than have it in the request body, so Ive made a new class similar to `RequestParameters` that helps with this and can be used on future ones too (eg the management console settings API).  So at least it's now using a consistent/standard approach to generating the encoded parameters and using the SimpleJsonSerializer too",,,,,,
245143082,1269,Issue,Rebased and assigned to  for review :trollface:,,,,,,
533881551,1269,Issue,Moving this to #2010 to see if we can actually land this,,,,,,
221306877,1268,Issue,"Hi ! Are you going to return here and continue the work on this issue?:smile: If no, please send a message here, I will assign it for myself :smile:",,,,,,
221883289,1268,Issue,"I guess this PR can be closed for now :+1:/cc ,",,,,,,
222267228,1268,Issue,"Oooo i totally forget about it, sorry about that  , thx  you are the man :+1:",,,,,,
209752620,1267,Issue,:shipit:,,,,,,
208515569,1265,Issue,"In the test, I specifically compared a commit with itself since the test only cares whether the property is filled correctly or not, it is not testing whether the internal computation is correct or not.:thumbsup: nice work!",,,,,,
208516486,1265,Issue,thanks for submitting this! I literally have no feedback to give aside from this:![thumbs-up-jackie],,,,,,
594495560,1263,Issue,"This is mentioned in the docs:  Information about the site and the builds can only be accessed by authenticated owners, even though the websites are public.",,,,,,
220299899,1262,Issue,"Hello ! I'm working on #1120 and as part of this feature I should add overloads toI(Observable)RepositoryCommentsClient. But it's depends on this feature too, could you come back and finish this feature?:smile:",,,,,,
221165313,1262,Issue,",   this one can be close for now :+1:",,,,,,
221239177,1262,Issue,Replaced by #1310,,,,,,
207897607,1261,Issue,"In order to pass the `since` `DateTimeOffset` parameter as long with the `ApiOptions` parameter to some of the `GetAll*` methods, An overload to the `GetAndFlattenAllPages`method that accept both a `ParametersDictionary`and An `ApiOptions`seems to be missing !should i add it as an extension method to the `ConnectionExtensions`class ?or do something like this ? :",,,,,,
208034570,1261,Issue,"your needed `GetAndFlattenAllPages` changes seems like it'll overlap with what's been done in #1247 (in particular ). We're close to getting that sorted, so if you can hold off on that until we merge you should be able to pull in those changes...",,,,,,
208034752,1261,Issue,"Ok, got it (y)",,,,,,
209762219,1261,Issue,"conflicts resolved, ready for review/merge :}",,,,,,
209868873,1261,Issue,"this is getting close - the namespace changes are the only real blocker, but those new test helpers are an interesting question...",,,,,,
211130547,1261,Issue,"one more thing and this is probably not the right place to ask, but haven't you guys thought of better implementation to the `ArgumentNotNullOrEmptyString`method so you won't pass the parameter name each time ? using reflexion may be ?",,,,,,
211130815,1261,Issue,Or using something like this:or this ain't worth the effort ?,,,,,,
211133484,1261,Issue,"not really, but rather than using reflection I'd recommend switching our usages over to `nameof(arg)` from C# 6. We migrated to VS2015 a while ago, and now that things have settled down I think we can hit the switch on using features like that...",,,,,,
211136648,1261,Issue,"that's what i 've tried at first but using `nameof`inside a method will always return the name of the method's parameter's name  instead of the passed parameter name : here will return always ""value"", and i couldn't find a hack around that :/",,,,,,
211137130,1261,Issue,"you need to do it up a level, e.g.",,,,,,
211137890,1261,Issue,"i guess, there are no escape from passing 2 params then",,,,,,
211137926,1261,Issue,correct,,,,,,
211149941,1261,Issue,What about extension methods? (other than being ugly :wink:),,,,,,
211177886,1261,Issue,"-Zuber  What about extension methods? Extension methods are just syntactic sugar on top of regular methods, so I'm not sure how they'd get around the same problems as mentioned above. However I'd love to be proven wrong if it helps make things more readable...",,,,,,
211317670,1261,Issue,"aside from the merge conflict, I think this is good to go!",,,,,,
211318163,1261,Issue,"-Zuber feel free to move this discussion about `Ensure` out to a fresh issue, if you want to explore it further...",,,,,,
211549101,1261,Issue,conflicts resolved.,,,,,,
211575615,1261,Issue,looks like a new convention test is in your way:See #1246 for more information,,,,,,
211599977,1261,Issue,fixed,,,,,,
207705921,1260,Issue,The GitsComments ClientS here don't test the gistId against null or empty string in any of the other implemented methods (+ some missing tests).This is out of the scope of this PR. Should i add them in here anyway ?,,,,,,
208043471,1260,Issue,This is out of the scope of this PR. Should i add them in here anyway ?This is fine. I'm happy with this PR as-is so I'm going to take this in right now. Thanks!,,,,,,
208175061,1259,Issue,Conflicts resolved.,,,,,,
208307510,1259,Issue,"excellent, thanks!",,,,,,
207481663,1258,Issue,"I believe this is just a typo - note the `d` that's included on the C# property:  does not contain a property for the ""merge_base_commit"" field. The closest it has is ""Merge**d**BaseCommit"", however it always returns ""null"".With Octokit we map properties using conventions, which would explain what happened (or didn't happen) here.We have a bunch of tests around compare in [`RepositoryCommitsClientTests.cs`] but I can't see us verifying this property explicitly...",,,,,,
207483374,1258,Issue,I also thought it was something simple. Thanks for the quick response !,,,,,,
207484178,1258,Issue,I can help to co-ordinate a hotfix release (currently there's a lot of new features on `master`) if someone is interested in tidying this up in a PR:- add the new property- mark the old one as obsolete- add a test to verify this behaviour,,,,,,
207564481,1258,Issue,", no promises on the delivery time, but I will see what I can do during the weekend. Just a quick question: when the typo is fixed, does parsing (and the correct value filling in) happen automatically or do I need to update the parse logic as well?I am an Octokit consumer, but am very new to how Octokit internally works. Sorry if the question is obvious.",,,,,,
208041579,1258,Issue,"Just a quick question: when the typo is fixed, does parsing (and the correct value filling in) happen automatically or do I need to update the parse logic as well?No need to worry about changing the parsing logic - for reference it's [this component] that does the deserializing and [this is the magic rule for mapping properties from C# to JSON]",,,,,,
207399326,1257,Issue,"Could you add a comment to #1115 about migrating that package, and any other details about why this package is considered obsolete? We've been talking about .NET Core support for a while, and that bit of information sounds useful to us...",,,,,,
232329712,1256,Issue,"Hey,I'd like to give this one a shot.From the looks of it, what has been done in #1398 can be reused.Cheers",,,,,,
232412599,1256,Issue,sounds good!,,,,,,
226423538,1254,Issue,i want to grab this one :smiley:,,,,,,
207482309,1253,Issue,sounds good!,,,,,,
217127810,1253,Issue,"What should be the course of action: adding a new property and modifying all references to it? (In this scenario, what happens with the old property?)Or renaming `Keys` to `GitSshKeys` directly?",,,,,,
217705572,1253,Issue,"Because it's easierOn Thu, May 5, 2016 at 6:19 AM, Radu Matei notifications.com wrote: What should be the course of action: adding a new property and modifying all references to it? (In this scenario, what happens with the old property?)  Or renaming Keys to GitSshKeys directly?  ‚Äî You are receiving this because you are subscribed to this thread. Reply to this email directly or view it on GitHub",,,,,,
217705766,1253,Issue,I don't really understand your comment.What is easier?,,,,,,
218405572,1253,Issue,"-matei  when it comes to deprecating properties and types we should follow this pattern:- mark the existing property or type as `[Obsolete]` so that it's easier to find all references- add in a new property or type with the correct name- update all usages internally to point to the new method - add a comment to the `[Obsolete]` to indicate what needs to be done (i.e. use the new property)This means we don't break existing consumers when they update, and we indicate what needs to be done to migrate...",,,,,,
223780493,1252,Issue,"If no-one else has already picked this one up, I'll jump on it.",,,,,,
223782044,1252,Issue,"OK, so the [blog post] specifies the preview header as `application/vnd.github.cryptographer-preview` while the [GPG Keys doco] specifies the preview header as `application/vnd.github.cryptographer-preview+sha`...so the question is, which one is correct? I'm going to go with the one from the doco for now to get started.",,,,,,
224197741,1252,Issue,"both worked for me, but given History‚Ñ¢ I'd recommend using `application/vnd.github.cryptographer-preview` here.I'll speak to the team to confirm this is right and get the docs addressed.",,,,,,
224199391,1252,Issue,"cheers, I'll update my PR later tonight",,,,,,
225789168,1251,Issue,Here's some example events that I've found which break our current code for parsing activities...- A subscription event:- A mentioned event:- A head ref deleted (associated with a PR?):- A PR has been closed (this one was merged):,,,,,,
225789299,1251,Issue,"I think we need to review and/or revamp this area of the code - there's lots of values here that don't seem to be deserializing correctly even after you hack around the missing field that triggers the crash, so perhaps we need to rethink how to go about this...",,,,,,
251542657,1251,Issue,"I've disabled the integration tests around this code in 0f90d20e3015d7e405160f9348544c7dd5ac16b0 - if someone wants to start digging into this, I'd look at getting those running again.",,,,,,
272694448,1251,Issue,"Just as an FYI I tried unskipping the tests originally skipped in #1374 (that issue was closed in favour of this issue)... and found that they are now passing.  Not sure if that is ALL the impacted tests that are being talked about here, or just some... See  for the tests that have been unskipped",,,,,,
319853663,1251,Issue,"I've been digging into the Events/Activity area recently and found that #1490 fixed the problem that this issue was tracking, so closing it out",,,,,,
206895287,1250,Issue,"Nice pick up on the broken link, although your change is still linking to shiftkey/octokit.net fork rather than octokit/octokit.net ??",,,,,,
225162926,1249,Issue,I'll try and have a go at this.,,,,,,
227029154,1249,Issue,Fixed by #1365,,,,,,
206637622,1248,Issue,"For reference, `ConfigureAwait(false)` is what libraries such as Octokit need to do when doing async/await internally, and we know we don't need the ""context"". You can read more about this stuff from [this MSDN link]",,,,,,
206760409,1248,Issue,"as I found myself refactoring in some of the Enterprise API clientsNot sure what you were referring to, I only saw the mentinoed `async`/`await`/`ConfigureAwait(false)` changes... But everything looks :+1:",,,,,,
206909024,1248,Issue,I just wanted to call out that I was able to drop some usages of `async` / `await` and there might have been a reason to keep them around...,,,,,,
206920365,1248,Issue,"ah cool, there was no reason to them I think at the time I didnt really realise that if you are just `await`ing the call and returning it anyway, yuo can just remove the `async` and `await` and simply return the `awaitable` call.  There's only the odd few cases where we do something with the response before returning.All changes on this PR look :+1: to me",,,,,,
207509037,1248,Issue,release_notes: added `ConfigureAwait(false)` to numerous locations to prevent deadlock scenarios for ASP.NET and WinForms users,,,,,,
206469227,1247,Issue,"I require some help in implementing the `GetAndFlattenAllPages` overload that i have implemented. I don't think if it is correct.Also due to this, the `IObservable GetAll(string owner, string name, CommitRequest request, ApiOptions options)` function doesn't return a list and am not able to write a test for it.Also, where to mention  `ApiOptions.None` and where to mention `New ApiOptions()`. I mean how to know the difference, because someplaces i find one and some places the other.",,,,,,
206924434,1247,Issue,"Also due to this, the `IObservable GetAll(string owner, string name, CommitRequest request, ApiOptions options)` function doesn't return a list and am not able to write a test for it.See [this example] for mapping the observable into a list. Also, where to mention `ApiOptions.None` and where to mention `New ApiOptions()`I think we should stick to `ApiOptions.None` for the ""default"" values wherever possible, unless you want to test how specific options are used in tests. I couldn't find a usage of `new ApiOptions()` - could you elaborate?",,,,,,
207228830,1247,Issue,"So the problem that I am facing is that `await  _repositoryCommitsClient.GetAll(string owner, string name, CommitRequest request, ApiOptions options).ToList()` wasn't working previously, (as the example you have mentioned suggests but it's function calls pass through the same set of functions, ie, `connection.GetAndFlattenAllPages)`And I am unable to figure out what can be done to make it work. :grin:",,,,,,
207391399,1247,Issue,have these failing tests been committed to this PR yet?,,,,,,
207793936,1247,Issue,"Yeah, i have commented them.But i'll change that and then commit it again so that you can see it properly",,,,,,
208021573,1247,Issue,you need to add `using System.Reactive.Linq;` to the top of the tests class to get the awaiter to work...,,,,,,
208034350,1247,Issue,thanks !!got it working. :smiley:,,,,,,
208048397,1247,Issue,is the task list up to date? This seems to be close to closing out...,,,,,,
208048490,1247,Issue,"yeah, added the unit tests too.but there are no unit tests for the remaining methods of the `RespositoryCommitClient`",,,,,,
208048854,1247,Issue,but there are no unit tests for the remaining methods of the `RespositoryCommitClient`This is fine. Let's get those last couple of feedback items addressed and we can close this out.,,,,,,
208049932,1247,Issue,Have made the final set of changes which you said.Please take a look.,,,,,,
208050688,1247,Issue,Changed the class name too.,,,,,,
208056966,1247,Issue,"Ugh, I made that test fail. Let me understand what the right answer is here...",,,,,,
208062087,1247,Issue,Sorry for such a small mistake.Takes a whole lot of time to find and correct them. :cry:,,,,,,
208077100,1247,Issue,thanks!,,,,,,
206257300,1246,Issue,From my perspective this is :gem:! I've checked all the added `Ctor` tests are `new`ing up the correct client :+1: very thorough and consistent! My only comment is the way you locate the assembly by using `EventsClientTests` type. There's nothing special/significant about that type so I'd rather some alternative way of finding the assembly either by name or a more common/top level class or something like that,,,,,,
206262461,1246,Issue,", thanks, I am very glad :+1: I am agree, the way I've located the assembly is smell a little bit :smirk:. I found that way here: I'll think a little bit and will try to deliver more common way.",,,,,,
206358328,1246,Issue,"I'll think a little bit and will try to deliver more common way. I wasn't aware this is how some other convention tests are doing it, they were before my involvement.  To me it would ""seem"" nicer to locate the assembly using the top level types like `IGitHubClient` `IObservableGitHubClient` and for tests `GitHubClientTests` rather than `IEventsClient` (what's so special about events client since it seems to be used EVERYWHERE in the convention tests  ?? :grinning:)But from the perspective that this is already being done elsewhere, I won't bikeshed over this!",,,,,,
206430218,1246,Issue,"Yeah, I'm agree about GitHubClientTests, it is looks very good for this purpose :+1: . Fixed!",,,,,,
206432853,1246,Issue,"Cool! I wonder whether we should change all the other Convention tests over to using those top level types too instead of `EventsClient`/`ObservableEventsClient` etc (perhaps in another PR, or perhaps on this one if it is reworded to ""Add convention test for Ctor constructor and tidy up other convention tests""...",,,,,,
206443744,1246,Issue,"I wonder whether we should change all the other Convention tests over to using those top level types too instead of EventsClient/ObservableEventsClient etc (perhaps in another PR, or perhaps on this one if it is reworded to ""Add convention test for Ctor constructor and tidy up other convention tests""...I've marked it in my notes ""Tidy up conv. tests"", so it would be my next PR :+1: By the way, I've found some incosistency in method's name that test constructor, I going to add additional check for that, if nobody minds :smile:",,,,,,
206940132,1246,Issue,"(what's so special about events client since it seems to be used EVERYWHERE in the convention tests  ?? :grinning:)I cannot recall why - but it goes way, way back to 2375a16aa05e0bb7211d089b43b9ced1a97af45d. :thumbsup: to using `IGitHubClient`",,,,,,
206940423,1246,Issue,"I've marked it in my notes ""Tidy up conv. tests"", so it would be my next PR :thumbsup: to addressing our other usages after this PR lands",,,,,,
208002290,1246,Issue,"In order to deliver more consistency I've added new convention check. Now each test class ""TheCtor"" should have method EnsuresNonNullArguments that test a client constructor against null arguments. Please take a look.",,,,,,
208061411,1246,Issue,"Aside from the merge conflict and the suggestion above, this is ready to merge! :metal:",,,,,,
208176273,1246,Issue,what I can do in order to fix merge conflict?,,,,,,
208249667,1246,Issue,"Maybe rebasing can help, try this:To be on the safe side, try this on a temp branch forked from the main first.",,,,,,
208267999,1246,Issue,", great thanks, rebase passed.",,,,,,
208274401,1246,Issue,This looks odd as it contains commits from other PRs also. Did you update master from the main repo before rebasing?,,,,,,
208275811,1246,Issue,", yes, I did. Is it an error?",,,,,,
208279806,1246,Issue,"I don't completely understand what happened here, as this PR contains commits from other PRs also. But as there are no conflicts, maybe it will auto-resolve once merged. I think someone with experience can help out,   ?P. S.: You should look into the failing builds so it can be merged quickly.",,,,,,
208291951,1246,Issue,"I don't completely understand what happened here, as this PR contains commits from other PRs also. I think this is due to me squashing the PRs yesterday when doing the merge. This wasn't intentional, however I do like how it's simplified the history...EDIT: I'm also not 100% sure this branch is correctly rebased (otherwise you wouldn't see the `Merge branch 'master' of  into` commits in this branch). I'm about to :airplane: so I'll sanity check this when I land...",,,,,,
208316581,1246,Issue,"I think  needs to update `upstream/master` or ensure they're using the right remote for the rebase - my psychic debugger thinks that an earlier `master` was used here, which would explain the commits we're seeing here...",,,,,,
208321687,1246,Issue,"Unfortunately, I can't say what I did exactly, because it was my first ""git rebase"" at all. Now I am not so sure that I did right ""git pull"" from upstream before rebase. Can I do something that can help fix this situation?There were some errors after rebase (not about merge, but about push), so I searched errors over internet and tried to fix that.",,,,,,
208370721,1246,Issue,"There were some errors after rebase (not about merge, but about push), so I searched errors over internet and tried to fix that.That maybe because you need to `--force` a push after a rebase (as you have effectively changed the history).",,,,,,
208405568,1246,Issue,", I going to use --force next time, thanks!",,,,,,
211246663,1246,Issue,"I've revert rebase and repeat it again today. Please, check this out whenever possible :smile:",,,,,,
211295852,1246,Issue,just that one comment  about the cleanup and this is good to go. I'll hold off on other merges so that we can get this in!,,,,,,
211303800,1246,Issue,"thank you, all remarks were fixed. Ready to merge, I guess :+1:",,,,,,
211303974,1246,Issue,"yes, just waiting on CI to pass",,,,,,
205923350,1245,Issue,oops look like i did some thing wrong and haven't pushed required changes,,,,,,
205949030,1245,Issue,thanks for starting this off. I added a couple of comments to help us complete this feature and verify we're doing everything right...,,,,,,
205949756,1245,Issue,thanks for guiding me. Sure we wil complete this one :+1:,,,,,,
206288616,1245,Issue,hi  i am doing changes in integration test. when i ran build i saw that integration test were actually not running(skipping) because of some error OCTOKIT_GITHUBUSERNAME and OCTOKIT_GITHUBPASSWORD environment variables are not set.how can i make sure my test are passing? do i need to make a separate testing account for this?thanks.,,,,,,
206361148,1245,Issue,"how can i make sure my test are passing? do i need to make a separate testing account for this? thanks. yeah you should create a test account because the integration tests do things like create repos and other things.  Generally they try to clean up after themselves where possible, but definitely you want a separate test account to do this under.Refer to the integration test sectino in [Contributors Guide] for information about how to run the tests (essentially there's a powershell script to help you define those environment variables)",,,,,,
206366254,1245,Issue,i will test these against testing account but i am pushing some changes could you please review these especially `header` functionality? i am not sure how this header parameter functionality works. i am stuck at this one need little help.,,,,,,
206381193,1245,Issue,sorry for incomplete commits this smartgit github client really has some weird behavior :angry: doesn't always add all files to staging area.,,,,,,
206413242,1245,Issue,"Im not in a position to pull your code down and run it myself just now, but eyeballing your changes, yes that looks correct in specifying the accept header on the `ApiConnection.Put` call.  The real test is whether your integration tests succeed, and the merged PR was squashed rather than merged!However on the unit test mock verification you shouldnt use `AcceptHeaders.xxxxx` there (instead hardcode the expected header string) - we want the unit test to independently verify the implementation code, so we dont want to ""share"" that `AcceptHeaders` helper between implementation and tests (otherwise a bug/typo in the helper class will still pass the unit test!).  Same way we manually check the Url that is called rather than use the `ApiUrl` helper method :grinning: Regarding the integration test assertion, is there also a way to verify the commitTitle specified was correctly applied?",,,,,,
206420690,1245,Issue,"thanks for the code review :satisfied: yes i need to test these on testing account now.Regarding `AcceptHeaders.xxxxx` in unit test, you explained very well i need to pass header as string in parameter :+1:",,,,,,
207423138,1245,Issue,i have configured my test account for integration test by running script in `scripts\ configure-integration-tests.ps1` now i am getting some other errors from `Octokit\GitHubClient.cs` . i thinks my username and password is not updating from script. how can i resolve this?![capture11],,,,,,
207424804,1245,Issue,i am stuck in this testing phase :disappointed:,,,,,,
207429605,1245,Issue,"looking at those errors, I think something wasn't set correctly. You can run the same script again to view and update the values that the tests need.",,,,,,
209726564,1245,Issue,Just putting this back to `WIP` until we can confirm the integration test setup script is correct.,,,,,,
211834228,1245,Issue,"Hey , I'd definitely like to ensure these new GitHub features make it into the next octokit release so if time is an issue for you to get back onto this (totally understandable!) just let me know if you want someone to pick it up from here :grinning:",,,,,,
211916053,1245,Issue,yes i have been busy for last days and last time i remember i was stuck on integration test setup and i wasn't sure where to add parameter(header) in post request so i stopped working on this :tired_face: got  tired. you can assign this to someone else. Really sorry i could not made it.,,,,,,
211920868,1245,Issue,"If you want to keep working on it you're more than welcome to! It looks like you were at the point where we needed you to confirm your integration test settings...  Easiest way is just to close visual studio, rerun the powershell script and ensure they are all set correctly, then have another go at running integration tests",,,,,,
211924894,1245,Issue,i made a test account and set the script against testing account but after setting up the script i was getting these errors. why these test are failing? most of the test in `PullRequestsClientTests.cs`are failing..they made me annoyed  :smiley: an exception is thrown from connection.cs file. something is not setting up or there is some thing wrong in response :confused:  ![octokit2],,,,,,
211928826,1245,Issue,also when i build project in visual studio 2015 i get this error also ![octokit4],,,,,,
212149818,1245,Issue,"some of the integration tests depend on the account being in a certain state - I've tried to keep it as runnable as possible for everyone, but differences do creep in which means they can fail.If you want to focus on just your test, I'd suggest running it from in Visual Studio.",,,,,,
216910425,1245,Issue,unit tests + convention tests build is passing locally but not here? :confused:,,,,,,
216919444,1245,Issue,"Your has conflicts with `master`, and that's why the CI builds are not running. Try to rebase your branch.",,,,,,
216921551,1245,Issue,still not building?,,,,,,
216922687,1245,Issue,What did you do exactly?,,,,,,
216923635,1245,Issue,i did only this `git rebase master` and all that happened as you can see above :D,,,,,,
216925570,1245,Issue,Did you updated you master from upstream first? You have to do that as that will fetch all the latest commits made in the main repo's master. Then you have to do the following to resolve conflicts:Let me what happens after doing the above steps. :+1:,,,,,,
216934307,1245,Issue,on step 4(`git rebase --continue`) i am getting this. :confused: ![capture00],,,,,,
216935913,1245,Issue,"Did you resolved the conflicting files and then did `rebase --continue`?Remember, you have to keep performing `rebase --continue`, conflict resolution and `git add .` till all the commits are rebased successfully.",,,,,,
216941496,1245,Issue,i think something terrible has happened to my source tree. i added and resolved all conflicts iteratively but still `appveyor` is showing :x:,,,,,,
216952881,1245,Issue,"I tried rebasing your branch on my own in my fork. As you can see below:Unfortunately, there are some changes also in the commtis made by others which are already merged in `master`. So, what I would suggest is, that you note down the `sha`s of the commits you have made, the ones listed in the image (but in your fork). Then do the following:Let me know what happens then.",,,,,,
216956226,1245,Issue,"And if there are any conflicts while `cherry-picking`, resolve them and commit too.",,,,,,
216984001,1245,Issue,sir first i would to thank you so much for your time and efforts :+1: i think this pr has gone to some fatal condition.. appveyor build is generating some strange errors :laughing:,,,,,,
216985687,1245,Issue,i have to redo this in a single commit. maybe it will solve the problem.,,,,,,
217078408,1245,Issue,"The reasons of those errors are the diffs which are inserted into the files on conflicts. I also think that a new PR may be better or if the conversation here is relevant, you can go actually delete your branch locally and then recreate it from the latest upstream master, and then re-do your work on top of it. And finally, do a force push.",,,,,,
219687814,1245,Issue,i want to get back on this. i have free time for a while :smile: . I need a little help.regarding passing the `Header` in put request i think i need to pass it in `PullRequestClient.Merge` . This merge method returns `PullRequestMerge` model object. In return statement the put method takes 4 input arguments. The one which confuses me the 3rd parameter `string twoFactorAuthenticationCode` Should i pass null here? or dummy text or i should update the position of parameters in overloaded `put` in `IConnection` class so that make `Accept Header` third input parameter and leave `twoFactorAuthenticationCode` without initializing it.![capture1],,,,,,
219722693,1245,Issue,The one which confuses me the 3rd parameter string `twoFactorAuthenticationCode` Should i pass null here? You can specify `null` fine here. or i should update the position of parameters in overloaded put in IConnection class so that make Accept Header third input parameter and leave twoFactorAuthenticationCode without initializing it.Don't reorder the parameters as part of this PR. I'm not really sure why `twoFactorAuthenticationCode` is so pervasive in the `IConnection` signatures but let's avoid that for now...,,,,,,
220277104,1245,Issue,could you please review changes i have made especially for `Accept` header?Integration tests are not working for me. so i have tested it on creating new project and using access token. it works fine for me and squashes more than one commit into a single commit. kindly if you pull this code and run the integration test by yourself so that it could be verified that it is working as it  intended to be :smile:,,,,,,
220338236,1245,Issue,Really sorry for that... i accidentally add all the files to staging area without observing closely...i will fix this and push new changes..sorry again if this made you angry..,,,,,,
220339281,1245,Issue,"I'm not angry, I just like to delete code whenever possible :fire:",,,,,,
220341236,1245,Issue,I'm happy with that integration test - let's wrap this up and get it merged!,,,,,,
220399804,1245,Issue,done.,,,,,,
220547613,1245,Issue,"excellent, thanks!",,,,,,
220547840,1245,Issue,![],,,,,,
220656278,1245,Issue,"as always thanks for your code review and guidance :+1: you guyz helped me to finish it to end. sir you taught me how to resolve merge/rebase conflict rightly,appreciate your efforts.",,,,,,
220660496,1245,Issue,"Glad I could help. You don't need to call me ""Sir"", we're all here to help each other. And I'm happy this PR is finally merged. Keep up the good work. :+1:",,,,,,
207012136,1244,Issue,"So I like the CoreFx coding style with a few extra changes. Let me elaborate:- We use `_camelCase` for internal and private fields and use readonly where possibleThis is helpful to understand context quickly when dealing with large, complex classes with lots of internal fields and variables. But I don't feel Octokit is at that stage (nor should it be aiming for that). We have lots of small classes composed together, and for the most part the fields we use can be made `readonly` which is the big headache with mixing fields and local variables (accidentally setting a field instead of a variable).So I'd simplify this to **""We use `camelCase` for internal and private fields and use readonly where possible""**- We always specify the visibility, even if it's the defaultAgain, this is a noise versus value thing for me. I like removing `private` wherever it comes up as that's the default visibility.I'd change this to **Specify the visibility unless it is private, in which case it should be removed**",,,,,,
207136172,1244,Issue,"So do you think it's feasible to essentially have our own copy of that md file, with our preferred tweaks, then reinforce it with convention tests? Eg it should be easy enough to have tests that make sure `private` visibility is not specified and variable names never contain underscores",,,,,,
207152136,1244,Issue,so I'm pretty sure I can adapt the `.vssettings` file from corefx to address those two. And I guess the R# rules file. I think those alongside with adding this to CONTRIBUTING.md (or something similar) should be good enough.I'll let others chime in here before I do anything about it.,,,,,,
205623455,1243,Issue,"This is kinda interesting because if you look at the actual [API response data] it doesnt include any information about the repository that we even COULD populate into octokit.  There is a `repository_url` field, that is not currently deserialized into the octokit.net response models for `Issue` but then if you were happy to parse a URL field there are already plenty (`Url`, `HtmlUrl`, `CommentsUrl`, `EventsUrl`) to choose from...Although your suggestion makes sense from a usability point of view, it doesn't seem appropriate for octokit ~~to make multiple API calls behind the scenes~~ (edit: im not even sure there IS an api call that can tell you the repo an issue came from?!), nor do we want to ""invent"" fields on entities that arent actually returned from the API ( will correct me if I'm wrong on this, as I do think we have a couple of calculated fields here and there...)The [Search API] is the same - it doesn't include org or repo information on the returned issue responses.It's weird when you think about it, since exactly as you've pointed out, whenever dealing with ""`Issue`"" objects, you no longer easily know where they came from!I guess at the moment I'd tend towards calling `GetAllForOrganization()` then parsing the repo from the `Url` or `HtmlUrl` field, rather than calling ""GetAllForRepository()"" on each of the 51 repos...",,,,,,
205624421,1243,Issue,"Url parsing is what I meant when I said there's no _easy_ way to tell which repo an issue came from. ;)Also I agree it doesn't make sense for octokit to do another API call behind the scenes, since I was trying to avoid excess API calls to begin with.I guess the problem then is at the API layer and maybe this problem could be elevated to them?",,,,,,
205632131,1243,Issue,"yeah maybe  or  can escalate that one internally, though I guess any of us can also send github commentary/request like this externally tooI agree with your sentitment although id say ""there is no ~~easy~~cringe-free way"" since parsing the url is ""easy"" just makes us cringe hehe :trollface:",,,,,,
205769439,1243,Issue,"A quick test indicates `repository` should be available at the `GetAllForCurrent` endpoint. I'd need to test `GetAllForOrganization` as well but don't have the right setup to confirm this right now:Whether we should bake this into Octokit.NET however, I'm not so sure. It might be considered undocumented behaviour...",,,,,,
205850196,1243,Issue,"Ah I should have thought about that as I encountered similar things (eg fields present in responses that aren't shown in the doco) like on GHE when ldap is enabled, user/org responses contain an ldap_dn field I reckon if it's in the json response we can put it in octokit. Worst case it ends up null if the field is ever not there anymore but it seems extremely unlikely that would happen?",,,,,,
205917203,1243,Issue,"So I had a chat with our API team about this and it's just a documenation oversight. For v3 of the API there should be a `Repository` property off of the root `Issue` - now, whether we can (or _should_) use the existing one or not is something for us to check out.",,,,,,
205918401,1243,Issue,Updated issue to clarify what needs to be done and mark it as up-for-grabs,,,,,,
218665522,1243,Issue,One thing to pay attention to is that requesting a specific issue will not return the `repository` key.How would you suggest we deal with this?,,,,,,
205521330,1242,Issue,"Outside of the larger conversation of when to stop sending the preview header, I chatted with a few folks about this here and verified that nothing will break if the preview header continues to be used after the feature has shipped. Any media type that is not supported or no longer supported will default back to `application/vnd.github.v3+json`. That being said, I'll leave the conversation around how to handle preview features in Octokit.NET to  and  as they may have some preferences around that.",,,,,,
205533596,1242,Issue,"Useful info thanks. Perhaps we could treat it like obsoleting items where we remove things a number of releases after they are no longer supported/needed.  Eg we could decide the latest octokit will only support (for example) the last 2 GHE feature versions, and base such removals on that. Although I guess if there's no harm in sending them ""forever"" that gives the widest possible support with the least effort :grinning:",,,,,,
205372321,1241,Issue,which version of Mono?,,,,,,
205373638,1241,Issue,Trying to find out now (I'm not having the issue) will report back when I find out.,,,,,,
205451396,1241,Issue,Updated the Mono package and it now works. Thanks.,,,,,,
205624100,1240,Issue,"Just wondering if you're aware you've got 2 separate github accounts involved here...  is what you're logged into github.com as, but all your commits are coming from  :grinning:",,,,,,
205655387,1240,Issue,"Yes, that might be an issue that need to be reported, the thing is that i am sending commits from **vs**, and even though i am logged in as , the commits keep coming as  (another Github account i've created once for testing purposes ) To fix this mess i am guessing that i need to merge the two accounts, not sure how to do that, you can probably save me the googling time :^3",,,,,,
205664946,1240,Issue,"not sure about being logged in from VS but its all down to the email address associated with the commits.  All I do is have a couple of email addresses (eg work and personal) both associated with my one github account and things work fine that way.  Im not sure in your situation with the added complexity of one of those email addresses already belonging to ""another"" github user (ie your 2econd account).  Perhaps if you change that account's email address first, then add both email addresses to your main account.  Alternatively, just change your VS settings so the email address is the right one and not worry about the historic commits (although its always nice to have all your commits against your own account so the contributors page is accurate!)",,,,,,
205668783,1240,Issue,"Yes, changing the email in the **vs** settings pane did solve the issue, thx... it would be great if i can change the author of the older commits as well, is there an easy way to do that ?",,,,,,
205765811,1240,Issue,"it would be great if i can change the author of the older commits as well, is there an easy way to do that ?[You should check your email addresses defined on GitHub as well]",,,,,,
205811218,1240,Issue,Yes that did it (after deleting the other github account )..thx,,,,,,
205908742,1240,Issue,"just did a pass over all the files in this PR, mostly focusing on the test changes. Looking good!",,,,,,
206927584,1240,Issue,It looks like a `.swp` file was committed in c32dfbec13ae7212b99ba451176822194dddc500 - are you able to remove that from the history?,,,,,,
207120302,1240,Issue,It looks like a .swp file was committed in c32dfbe - are you able to remove that from the history?done.,,,,,,
208035667,1240,Issue,Just one more little bit of cleanup that was missed. I'll verify the tests later this week as I'm on terrible internets right now...,,,,,,
208047551,1240,Issue,"Oh, and that merge conflict :cry:",,,,,,
208051391,1240,Issue,"Yy, my bad ...I believe that's because i touched ReleasesClientTests in [7f93dad], should i undo the changes on that file ?",,,,,,
208052989,1240,Issue,up to you - I'd suggest just merging `master` in again...,,,,,,
208059900,1240,Issue,"that should do it, right ?",,,,,,
208065506,1240,Issue,just this one comment,,,,,,
208069074,1240,Issue,done.,,,,,,
208076864,1240,Issue,Cross-referencing  again to remind myself about digging into that...,,,,,,
208076873,1240,Issue,thanks!,,,,,,
205388332,1239,Issue,just added a task to ensure the files are synced across all the projects,,,,,,
207755601,1239,Issue,The Travis Linux build is failing. Can you please review?,,,,,,
208034252,1239,Issue,LGTM :thumbsup:,,,,,,
208042004,1239,Issue,Should I add some integration tests using one of the repos from  ?,,,,,,
208050397,1239,Issue,don't worry about it. I think this area of the codebase is rather boring and unit tests are good enough coverage for the error code handling...,,,,,,
208280712,1237,Issue,Can be closed now.,,,,,,
205043589,1236,Issue,hi  hope you are fine. this one looks easy i want to do this one :smile: but regarding the tests i will certainly bother you when i will implement this :grinning: and :+1: for clean and nice instructions.,,,,,,
205230510,1236,Issue,:+1:,,,,,,
220547966,1236,Issue,Implemented in #1245,,,,,,
205047535,1235,Issue,Just a heads up: #1238 has a fix for the Travis issue - feel free to cherry-pick 8ec4bf388c674c1ce5f09f8c8ad88a470ce7f4d9 so you can verify this PR is still correct,,,,,,
205432603,1235,Issue,"Revealed a bug with an existing field `GitHubServicesSha` not being deserialised properly, added a fix to this PRIt's weird that this is failing - the UpperCamelCase to upper_camel_case looks like it should work here but perhaps I'm missing something. Anyway, happy to take this in here...",,,,,,
205477188,1235,Issue,"this all seems great :sparkles: just the little message which is really, really minor",,,,,,
205501406,1235,Issue,"It's weird that this is failing - the UpperCamelCase to upper_camel_case looks like it should work here but perhaps I'm missing something. Anyway, happy to take this in here...I think the capital H in ""GitHub"" was causing it to be looking for `git_hub_services_sha` rather than `github_services_sha`But yeah in any case, it was `null` before this change, but is now populated correctly.  And it's a greeat example of why integration tests should check all fields and not just selected fields :grinning:",,,,,,
205510371,1235,Issue,"I think the capital H in ""GitHub"" was causing itAh yes, that makes sense :skull:",,,,,,
205510491,1235,Issue,![],,,,,,
204770264,1233,Issue,I don't think we need PCL. Let me check that and get back. I have been really busy with work and haven't had a chance to look at these issues.,,,,,,
204857573,1233,Issue,The link is dead and there aren't any files. Could you try removing the pcl reference from the script and try it without that?,,,,,,
203793481,1231,Issue,Can we add inconsistencies like this to be resolved in FormatCode command? Automating this will remove any inconsistencies introduced by humans. Is something like this possible?,,,,,,
203794260,1231,Issue,"Guess after we choose name convention for these classes, we can add additional checks in Conventions test rather in FormatCode. Anyway, it would be very cool to have such additional check.",,,,,,
203795357,1231,Issue,"Checks like this are in theory possible, _but_ would require a lot of hard coding (not that that is a bad thing, just something to keep in mind).And I second 's suggestion that they go into `Conventions` and not `FormatCode`",,,,,,
203870746,1231,Issue,"Yep considering we aren't ""making"" people run the format code step, nor is there an easy way to enforce that, adding things to convention tests would be the preferred option",,,,,,
204015073,1231,Issue,"Can we add inconsistencies like this to be resolved in FormatCode command?There's no real project-specific rules defined in [`Octokit.CodeFormatter`] and writing Roslyn analyzers is a bit tricky if you're not familiar with the concepts. Guess after we choose name convention for these classes, we can add additional checks in Conventions test rather in FormatCode.This feels a bit easier to add and will be caught earlier.",,,,,,
211309956,1231,Issue,Closing this after the work done in #1246. Please open a new issue if there are further ideas about this.,,,,,,
205047553,1230,Issue,Just a heads up: #1238 has a fix for the Travis issue - feel free to cherry-pick 8ec4bf388c674c1ce5f09f8c8ad88a470ce7f4d9 so you can verify this PR is still correct,,,,,,
205405964,1230,Issue,", all checks, pls, check this out whenever you want :)",,,,,,
205409264,1230,Issue,thanks!,,,,,,
203372961,1229,Issue,Nice work! :+1:,,,,,,
202914256,1228,Issue,"A few things off the top of my head:- Have a test that uses a label starting with a hyphen and exclude it  - Codifies the reasoning behind having that separate list- Can a username also start with a `-`?  - If so, excluding issues by a given user would also necessitate a similar constructEdit:Real bran-fart this time: If a number of filterable items can start with a `-` (meaning to actually filter you'd need to do a `--`), maybe make a `.Not` property that contains a nested `SearchIssuesRequest`? (I know crazy idea but you only live once or something)",,,,,,
202932905,1228,Issue,"Thanks for the feedback :+1: Unless Im missing something, I dont see anything in the API docs about being able to ""negate"" any of the other filter types though...The only thing mentioned is labels (`-label:labelname` vs `label:labelname`) and keywords (specifying `NOT fish` instead of `fish` as the search term). Have a test that uses a label starting with a hyphen and exclude itWith the way it's been implemented the label name doesn't really matter.   I have a unit test that checks when 2 labels are specified in `NotLabel` we get the expected `-label:label1` `-label:label2` arguments.  Also I added an integration test that searches octokit.net repo for ""up-for-grabs"" labelled issues and a 2nd search for NOT ""up-for-grabs"" labelled issues, then checks to make sure the lists are unique",,,,,,
202938311,1228,Issue,"It works on (almost) anything > Have a test that uses a label starting with a hyphen and exclude it  With the way it's been implemented the label name doesn't really matter. I have a unit test that checks when 2 labels are specified in NotLabel we get the expected -label:label1 -label:label2 arguments. Also I added an integration test that searches octokit.net repo for ""up-for-grabs"" labelled issues and a 2nd search for NOT ""up-for-grabs"" labelled issues, then checks to make sure the lists are uniqueWhat I was trying to say was have a test that looks for a label that starts with a `-` so as to show that it is legal for a label to start with that char, and it will not be treated as negation if such a label exists.Not showing that `NotLabel` will exclude it, but that Label/Term will include it",,,,,,
203034866,1228,Issue,"-Zuber be careful, the repository issue search on the website is likely to be a bit different to what's available through the API. Someone asked me a while ago about this and I'm pretty sure `-label` doesn't work through the API when looking at repository issues, for example. regarding your question about the properties, an alternative might be `ExcludeLabels`. Personally, I don't think that users should need to know or care that you need to do a `-` prefix, so this is a good direction to head.",,,,,,
203094079,1228,Issue,"- :embarrassed: guess I just assumed the api was being dogfooded. - as someone who wrote (albeit a simple one) a query language, hiding syntax behind human readable properties is A Very Good Thing‚Ñ¢",,,,,,
203415531,1228,Issue,"- rebased on latest master- renamed `NotLabels` to `ExcludeLabels`- I also tidied up an inconsistency that was irking me.  We refer to pull requests as `PullRequest` pretty much everywhere in octokit.net - except the `IssueTypeQualifier.PR` enum value.  So to maintain consistent naming and terminology, Ive added `IssueTypeQualifier.PullRequest` to that enum and flagged the `PR` value as `[Obsolete]` so it can be removed sometime down the track :smile:   guess I just assumed the api was being dogfooded.It could well be that the API accepts more options than the doco says, but for now Im thinking of just implementing what the doc says (where `labels` are the only things that can be excluded).  Although Im thinking perhaps for future proofing (If it does turn out that lots more fields can be negated or even the fact that it's likely in the future more fields would be able to be), I could perhaps move to having a new class to hold all the exclusions (and thus refer to them as normal names like `Label`).Thoughts?  Is collecting any exclusions under a sub class, preferable to ending up with multiple properties like `ExcludeLabels` `ExcludeAuthor` `ExcludeMentions` `ExcludeTeam` and so on?",,,,,,
203432457,1228,Issue,"Although Im thinking perhaps for future proofing (If it does turn out that lots more fields can be negated or even the fact that it's likely in the future more fields would be able to be), I could perhaps move to having a new class to hold all the exclusions (and thus refer to them as normal names like Label).That is pretty much what I was trying to say with this :arrow_down:, and your example implementation is nicer :smile:  Edit: Real bran-fart this time: If a number of filterable items can start with a - (meaning to actually filter you'd need to do a --), maybe make a .Not property that contains a nested SearchIssuesRequest? (I know crazy idea but you only live once or something)",,,,,,
203432914,1228,Issue,"It could well be that the API accepts more options than the doco says, but for now Im thinking of just implementing what the doc says (where labels are the only things that can be excluded).Sounds good to me, I just wanted to bring up such a possibility",,,,,,
203965890,1228,Issue,"OK so ive just pushed up a change that has moved the exclusions fields out into a subclass, as discussed above.  So they are now accessed via `SearchIssuesRequest.Exclusions`egRegarding which fields are supported, I did some poking at the API and determined that it actually does support quite a few fields in ""exclusion"" syntax, in addition to the mentioned ""`label`"" field.So the following fields have been implemented in the Exceptions parameters:- `Author, Assignee, Mentions, Commenter, Involves, State, Labels, Language, Status, Head, Base`  These were all tested and work correctly - integration tests are added to assert this.  Although not mentioned in the docs (except `Labels`), these do seem useful (ie to search for items where Assignee is not me, or shiftkey is not mentioned etc)The following fields were not implemented for exclusion for listed reasons:- `Type,In,No,Is`  These failed integration tests, API doesnt support negating these- `Created,Updated,Merged,Closed,Comments`  These date/range fields already support greater/less than and ""between"" syntax, so having an exclusion option doesnt really make sense so I didnt attempt to implement/test- `Team`  I didnt get time to find a suitable repo that has teams being  in issues, to run integration tests against- `User`  Not tested.    Does it make sense to do a search for something in all repos EXCEPT those owned by a user or organisation?- `Repos`  Not tested.    Does it make sense to do a search in all repos EXCEPT some specified?Thoughts? Will definitely need some guidance from  and  on thisOn the one hand it seems prudent to only implement the mentioned `label` field for exclusion and ""dangerous"" to implement something that isnt listed in the API docs.  But on the other, being able to exclude by author, target branch etc have real life beneficial use cases, and the API clearly does support them (and the integration tests will detect if they ever cease to work)...",,,,,,
209517605,1228,Issue,"Created,Updated,Merged,Closed,Comments These date/range fields already support greater/less than and ""between"" syntax, so having an exclusion option doesnt really make sense so I didnt attempt to implement/testI would say to yes implement (assuming support) as some users may find it easier conceptually to use `.Exclusions` (BTW great job on naming)Might be open to doing a PR into this PR for those fields. User Not tested. Does it make sense to do a search for something in all repos EXCEPT those owned by a user or organisation? Repos Not tested. Does it make sense to do a search in all repos EXCEPT some specified?I vote for yes as I have done both in the past.One example that covers both is looking for something .Net Core related - but not in anything from Microsoft & Microsoft related repositories.",,,,,,
209729617,1228,Issue,Cool... i didnt actually even test/probe those options to see whether api accepts excluding them or not... i will look into it since those use cases do sound reasonable,,,,,,
211837520,1228,Issue,"Hey  just a reminder that I'm waiting on some input from your good self before I take any next steps :grinning: I know you've been on the road etc, hoping that since you've assigned this to yourself it is somewhere on your list to get to :crystal_ball:",,,,,,
211861744,1228,Issue,"I haven't forgotten, just been digging myself out from under work since I got back to Oz last week and needed a bit of mundane work to take a break. I'll pick this up tomorrow.",,,,,,
212376876,1228,Issue,"looking over the recent questions: The following fields were not implemented for exclusion for listed reasons: - `Type,In,No,Is`   These failed integration tests, API doesnt support negating theseWorks for me. - `Created,Updated,Merged,Closed,Comments`   These date/range fields already support greater/less than and ""between"" syntax, so having an exclusion option doesnt really make sense so I didnt attempt to implement/testYep, I like this too. - `Team`   I didnt get time to find a suitable repo that has teams being  in issues, to run integration tests againstThis is fine. We'll cross that bridge if we have to. - `User`   Not tested.     Does it make sense to do a search for something in all repos EXCEPT those owned by a user or organisation?Happy to kick this can down the road until someone comes looking for it. - `Repos`   Not tested.     Does it make sense to do a search in all repos EXCEPT some specified?I guess if you wanted to offload more of the search work onto the API. But again, really edge case. :boot: this for now.",,,,,,
212387272,1228,Issue,"Changes look good, integration tests are working fine on my end.I'm happy with the direction, happy to give it another look now that I finally got around to answering your questions...",,,,,,
212653396,1228,Issue,"Thanks  ill tidy up those few things raised and rebase etcThere was also I guess 2 other things I just wanted a specific üëç  from you on: I also tidied up an inconsistency that was irking me. We refer to pull requests as PullRequest pretty much everywhere in octokit.net - except the `IssueTypeQualifier.PR` enum value. So to maintain consistent naming and terminology, Ive added `IssueTypeQualifier.PullRequest` to that enum and flagged the `PR` value as `[Obsolete]` so it can be removed sometime down the track :smile:and Similarly, the ""missing metadata"" search option, ive called the class property `No` to match the query property in API docs `no`, and gone with `IssueNoMetadataQualifier` as the enum name. Open to better suggestions...",,,,,,
212653843,1228,Issue,:thumbsup: to `PR` -> `PullRequest` - and :heart: for doing the obsoletion already:thumbsup: for `No`,,,,,,
214044965,1228,Issue,"All feedback addressed, merged latest master and bashed Travis until it finally got a green run!",,,,,,
215623191,1228,Issue,+:100: nice work!,,,,,,
202773358,1226,Issue,"Looks good, we also normally have 2 unit test methods, to assert these (non null and non empty)  checks, have a look at other examples (sorry I'd link you one but on my phone üòÄ)",,,,,,
202877060,1226,Issue,"I've added new ObservableAssigneesClientTests. Pls, take a look.",,,,,,
202937605,1226,Issue,:+1: :+1: :+1: :+1: :+1:,,,,,,
202499454,1225,Issue,excellent pick up! üëè,,,,,,
202681766,1224,Issue,one small item to draw attention to is this questionAs per my reply on #1194 I suggest we should just :fire: the `ApiExtensions.GetRedirect()` method,,,,,,
202726505,1224,Issue,done,,,,,,
202838061,1224,Issue,"Oops, it looks like there is one more reference in `ApiConnection` and `IApiConnection` with `GetRedirect()`The problem is, the concrete implementation was made obsolete 111 days ago, but the interface member hasnt been marked obsolete at all! :sob: But if we have to keep this, then it means we have to keep the `ApiExtension` one around as well, but that seems kinda pointless since the `GetRedirect()` will never actually get a HTTP 302 response anyway and thus will always throw an exception what do you reckon to :fire:ing [`IApiConnection.GetRedirect()`], eventhough it wasnt marked obsolete?  Note that the concrete implementation, as well as multiple other places regarding Redirects and ArchiveLinks HAVE been obsolete for 100+ days",,,,,,
202844238,1224,Issue,:sob: That's what I get for pushing my machines RAM too hard. The error in VS hadn't show up by the time the commit was pushed....I'll wait for 's response (may have to wait until after #build :smile: ) and follow his recommendation,,,,,,
202990790,1224,Issue,"what do you reckon to :fire:ing `IApiConnection.GetRedirect()`, eventhough it wasnt marked obsolete? Note that the concrete implementation, as well as multiple other places regarding Redirects and ArchiveLinks HAVE been obsolete for 100+ daysI'd be breaking my own rule here, and covering over an oversight of mine. Let's add the `[Obsolete]` to the interface and leave it alone for this release.",,,,,,
207921180,1224,Issue,"so -Zuber just chasing up on this one, I take it you are good to rebase to latest master and also tackle the redirect methods according to 's comments",,,,,,
208374769,1224,Issue,"I'm good to do the work, but on the road ATM. Will attempt to get to it in the next day or two",,,,,,
209676240,1224,Issue,rebased and updated code with regards to `.GetRedirect`.Would love if I could get some :eyes: on the changes to make sure that the changes are correct.,,,,,,
209721382,1224,Issue,This all seems good to me.  anything else to add here?,,,,,,
209729468,1224,Issue,All good!  I love that feeling of cleaning things up :grinning:,,,,,,
209729510,1224,Issue,![LGTM],,,,,,
202743012,1223,Issue,"I've done some refactorings, pls, check this out whenever possible./cc",,,,,,
203250261,1223,Issue,"I've fixed all remarks, pls take a look.",,,,,,
203375405,1223,Issue,Looks OK to me and ive retried the travis build.  Will leave to  to bring this one home since he had raised specific points,,,,,,
205413523,1223,Issue,LGTM![],,,,,,
201345193,1222,Issue,These are definitely being used.,,,,,,
201345667,1221,Issue,"Thanks! In general I'd rather we just clean these up as we go along. Unused `using` statements don't hurt anything. Having said that, this definitely appeals to my OCD tendencies so I'll allow it just this once! :smile:.",,,,,,
205436231,1218,Issue,Just rebased this due to a merge conflict.  can I get a :thumbsup: here?,,,,,,
205512238,1218,Issue,"Just rebased this due to a merge conflict.  can I get a :thumbsup: here?Given the tests are passing, I wasn't going to look too deeply, but I did notice that the title of commit and PR ""ensure observable method calls overload with ApiOptions"" isnt actually evident in the code changes - which are only tidying up whitespace formatting and changing the mock asertion to ANY dictionary rather than empty dictionary.Im assuming the actual change to call the correct overload was already in master, and the rebase is hiding that here?  Should the PR be reworded to ""tidy up/tweak test"" ?:+1: in any case as clearly things are working, so this is more just a wording excercise :grinning:",,,,,,
205588167,1218,Issue,"yeah, looks like #1212 also touched these files. Given the difference is now minor, I'll skip it.",,,,,,
200963591,1214,Issue,"excellent, thanks!",,,,,,
200958244,1213,Issue,Made the changes. Take a look.,,,,,,
200973532,1213,Issue,looks like some tests need to be updated,,,,,,
200981143,1213,Issue,"Yeah, I was doing that.Also, shouldn't there be a change [here] too, like the one that you suggested.",,,,,,
201073135,1213,Issue,you're right - I'll correct that and open a separate PR for it...,,,,,,
203064954,1213,Issue,"this is looking good.We don't seem to have any integration tests for the `RepositoryPagesClient`, but that seems to be covered by the `ObservableRepositoryPagesClientTests` tests. Would you mind adding that in now, at least just for the new `GetAll` methods we're adding here?",,,,,,
203354389,1213,Issue,I have added the integration tests as you said. Please take a look.,,,,,,
203375947,1213,Issue,I changed the description to Options to change the API responseAnd i guess it should be same.,,,,,,
203377713,1213,Issue,I have removed the whitespaces. Actually I copy pasted the description from the function above and therefore the whitespace crept in everywhere.Please take a look.,,,,,,
203405154,1213,Issue,"Looks good now.  Yeah I realise often these little inconsistencies are already in the files, but whenever we are touching files I like to clean whatever we can up as we go :+1:",,,,,,
203437170,1213,Issue,Why are there no integration tests for the methods in the `RespositoryPagesClient` ?I have added the tests for the `GetAll`what about the remaining methods.,,,,,,
203451210,1213,Issue,"There is some code at places which is not covered by tests. I have encountered this situation in the TeamsClient also, so I think we should add tests wherever they are missing.",,,,,,
205481202,1213,Issue,Why are there no integration tests for the methods in the `RespositoryPagesClient`?Probably something that was missed at the time. Given this is a read-only interface it should be easy to use the Octokit.NET repository (or something similar) and craft some simple tests to get our coverage up...,,,,,,
206121732,1213,Issue,So should i do the honors and include them too ? :grinning:,,,,,,
206361529,1213,Issue,You know the answer's gonna be yes :grinning:  We always like moar tests,,,,,,
206445082,1213,Issue,So should i do the honors and include them too ?![],,,,,,
207794968,1213,Issue,"I have added some tests for the functions.Please take a look.Also is there a way to check `GetLatest` returns the latest build, because i couldn't find a way.",,,,,,
207866127,1213,Issue,"Ive made a couple of minor comments.  Also it seems like there are no unit tests for `Observable` client. Also is there a way to check GetLatest returns the latest build, because i couldn't find a way.Im not too familiar with the `Pages` side of things, I'll have a look but it could be as  you say, no way to know if it's truly the latest or not.  As long as you are calling the right endpoint etc (as verified by unit tests) you have to trust the github api will return latest when we ask for it :grinning:",,,,,,
208042434,1213,Issue,"looks like there's some limitations with accessing the Pages API based on the [docs]:  Information about the site and the builds can only be accessed by **authenticated owners**, even though the websites are public.This is going to cause headaches, and perhaps we need to do this setup:- create the repository - publish something to `gh-pages`- check build staus- teardown the repositoryThis will likely mean most of the tests here are excessive...",,,,,,
208063696,1213,Issue,So i should remove those `excessive tests` and then maybe open up a separate issue to create this setup ?,,,,,,
208065099,1213,Issue,"that sounds great! Leave one test with an `""[IntegrationTest(Skip= ""These tests require repository admin rights - see  for discussion"")]` so we can link to the related discussion...",,,,,,
210125183,1213,Issue,How do I know that appveyor is running/skipping the test that i mentioned to skip ?,,,,,,
210138500,1213,Issue,it's defined in AppVeyor's config file -,,,,,,
219980995,1213,Issue,"I'm not sure what the current state of this PR is, so I'm moving this to #1304 so I can merge this new code in (with the skipped test).",,,,,,
200951799,1212,Issue,this looks like it's progressing nicely :metal:,,,,,,
201703324,1212,Issue,Hi  I need some help/codeReview with the IntegrationTests part pls,,,,,,
203098139,1212,Issue,"I added a bunch of suggestions to your initial tests, what you have there is rather close",,,,,,
203915808,1212,Issue,"I've implemented your suggestions, thx man (y)",,,,,,
204019995,1212,Issue,"almost there, just that one last test to update!",,,,,,
205042513,1212,Issue,"excellent, I'm going to hit the big green button now. Thanks for the contribution!![]",,,,,,
205070178,1212,Issue,"WooooHoo... Look mom i made it to master, ...Thx to you  ![panda]",,,,,,
200391460,1211,Issue,"After adding ApiOptions overload to the methods, we change the implementation of the old method to just call the new one with ApiOptions.None. Why don't we just write one method and use default values of ApiOptions.None?, I am agree with such approach, it could be very convenient, because instead of 2 method in interface we will have only one with default parameter. Since there are not so many overloads were added, we can do refactor easily at this stage.Unfortunately, we can't use not compile-time constant as default parameter for method. So, the next code will be irrelevant:Also, we can't use null as default value for ApiOptions, it cause unnecessary null checking inside internal code. So, we use new ApiOptions() as default value of options parameter and we should use ""the old good"" overload without any C# syntax sugar.",,,,,,
200447113,1211,Issue,"I'd rather not introduce optional parameters here for fear of [versioning issues] down the track, and also for having to write code like this inside the implementation:",,,,,,
200448784,1211,Issue,"I agree on this for null values, but according to current implementation, if we keep the default value `ApiOptions.None`, we wouldn't need to write the `??` syntax and the non-null check. Are there any other problems which will arise due to this?",,,,,,
200472313,1211,Issue,"the link  provides points out some of the potential compatibility issues with optional arguments. They were designed for COM interop, not for public APIs.Another benefit of having overloads is with the optional parameter approach you can't distinguish between the case where the user passed in a null value explicitly by mistake, or if they left it out.For example, the following is a mistake and should throw an `ArgumentNullException`. Clearly the programmer made a mistake.They either should set `options` to something, or just omit that argument. Having two overloads makes that clear.",,,,,,
200475954,1211,Issue,"I read the article, it made clear the intentions and problems which arise due to optional parameters. I guess I was just being nostalgic due to my C++ experience.Thanks to both of you.",,,,,,
200517665,1211,Issue,"nostalgic due to my C++ experienceHeh. I've never had the experience of being [nostalgic for C++]. :wink:I was glad to move on. Out of curiosity, what about C++ makes the optional parameters different?",,,,,,
200538878,1211,Issue,what about C++ makes the optional parameters different?Nothing. It was at the time when I only knew C++ and less code seemed better. :disappointed:,,,,,,
200953217,1211,Issue,"in response to your second question: Secondly, modifying the test for the overloads requires you to check for `Args.ApiOptions`, neither `ApiOptions.None` nor `Arg.Any(ApiOptions.None)` work. Why is that so?Because `ApiOptions.None` is just a plain old instance of `ApiOptions`, testing for a specific instance is tricky. You _could_ check it has the default values set, but as the whole purpose of the class is to just carry around values, I didn't really focus on it here.Our helper  `Args.ApiOptions` is just a wrapper around `Args.Any()` - if you wanted to test for specific values on `ApiOptions` you could use `Arg.Any o.Page == 2)` to make this clearer. I'll leave it up to you how far you want to take this...",,,,,,
200955896,1211,Issue,Thanks for clearing that out.Sidenote: I know this is off-topic but I've sent you an email. Can you please check? :pray:,,,,,,
200957983,1211,Issue,I can't see anything interesting in my inbox,,,,,,
201112682,1211,Issue,Is my proposal really that boring?,,,,,,
201373607,1211,Issue,"apologies, that's not what I meant. I saw the stuff about your proposal but couldn't find anything else...",,,,,,
201384749,1211,Issue,"I'm sorry if it seemed inappropriate, I was just kidding. Anyway, now I've uploaded the final proposal on GSoC website. Hope you like it. :pray:",,,,,,
203077118,1211,Issue,"Aside from adding some new tests, I could only find one little thing of feedback. Looking good !",,,,,,
205509458,1211,Issue,"Although, there are plenty of existing cases of naming class variables with the underscore, and its also as per the [CoreFx coding style] which  mentoned we are generally following...  My take is, as long as the PR has made the class consistent (ie all cases of private members are using underscore notation) that it is OK and actually means we are standardising towards the coreFx standards.In this case there is only 1 private variable so the change does look isolated but at the same time, it IS consistent (as the entire file is now using underscore notation).  Although the entire PR is not consistent because the regular client integration tests have 2 cases of local class variables which werent converted to underscore notation (only the reactive client tests were).  So personally I'd say I am happy with moving any instances to underscore notation where they exist, as long as all instances are done in the PR... but I dont presume to override 's request :grinning: just proividing my 2 centsMy personal preference is to use the underscore, which is also something that resharper suggests, and as mentioned the coreFx coding style also defines.  Similar to that other discussion and blog post by  between `string.Format` and `String.Format` I think the conclusion was, no point fighting everyone over your personal preference - if we can just point to some other standard then it's generally a lot less effort :grinning: Perhaps if this change is reverted then we can have a meta discussion to talk about how seriously we adopt the CoreFx style or not etc?",,,,,,
205569314,1211,Issue,"okay, I'll bite :grin:You're right, this isn't a blocker. And it's only one situation. But I'd like these PRs to focus on adding the `ApiOptions` overloads wherever possible so I can get the release out as soon as possible. That's why I'm calling out coding style things in these PRs. My personal preference is to use the underscore, which is also something that resharper suggests, and as mentioned the coreFx coding style also defines.This is one place I don't like the R# defaults, let alone the CoreFX coding style, as I feel it adds unnecessary noise to the code - and not everyone runs R#.Happy to have a discussion on this and where my thoughts are at. I'd also remove all usages of `private` for example, as that's considered the default behaviour for visibility...",,,,,,
205625883,1211,Issue,But I'd like these PRs to focus on adding the ApiOptions overloads wherever possible so I can get the release out as soon as possible. That's why I'm calling out coding style things in these PRs.Makes sense... I'll raise a meta discussion about coding styles for further deliberations :grinning:,,,,,,
205910802,1211,Issue,I won't hold up merging this for the single change. Let's hash it out in that related issue.,,,,,,
200410909,1210,Issue,"In general, each of these should be individual pull requests. However, in this case, the PR is small enough I'll allow it. :smile: I'll let  take a look and merge it.",,,,,,
200424158,1210,Issue,"Yep, I thought about separate PR for each type of changes, so I'm going to create small PR in further, because all changes are small and quite simple. There are some common code cleanups that I want to provide.",,,,,,
200454740,1210,Issue,"Can you make the list in the first comment a to-do list? Or if everything is done, ignore this.",,,,,,
200456965,1210,Issue,", everything is done.",,,,,,
200464953,1210,Issue,"I have some reservations about the `SimpleJson` changes, mostly due to that file being an external dependency we pull in. Are you able to revert that change?",,,,,,
200467967,1210,Issue,"I have some reservations about the SimpleJson changes, mostly due to that file being an external dependency we pull in. Are you able to revert that change?Good catch! Yes, we don't want to change that file. That breaks NuGet's ability to detect if there are any changes or not when upgrading the package.",,,,,,
200469544,1210,Issue,Changes has been reverted. I'll exclude that file from Resharer's analysis.,,,,,,
200942420,1210,Issue,"excellent, thanks!",,,,,,
199797315,1209,Issue,:+1:,,,,,,
199930447,1208,Issue,"I would love to remove all namespaces from unit and integration tests. They really don't serve a purpose for our tests. Namespaces are useful for libraries that you reference in order to disambiguate class names. But you never reference a set of unit tests for your own code. At least, we don't need to support that if you do for some wild reason. :stuck_out_tongue:",,,,,,
199931305,1208,Issue,Would you be open to one fat PR that rips out all namespace parts lower than what matches the project? Or shall I split it up?,,,,,,
199934561,1208,Issue,Split it up. I worry that one big fat PR will cause problems for everybody else. :),,,,,,
200468964,1208,Issue,Just a heads up - removing the namespaces is likely to cause a whole bunch of indenting changes to the test suite. It's a minor nuisance but things like `git blame` will then be full of lies...,,,,,,
202003089,1208,Issue,"~~What do you mean by `indenting changes`?~~Based on my next comment I think I understand what you where saying,",,,,,,
202009438,1208,Issue,An example of what things look like now is do you want to just drop the `.Clients` or drop the namespace altogether (like :arrow_down: )?,,,,,,
202123313,1208,Issue,"-Zuber that's exactly the issue, and why I kinda put it aside when I started finding these üò¢",,,,,,
202775396,1208,Issue,IMO I would do the first option. having a namespace that matches the project name does not create noise (at least to me) - and that is what is included in the default.Is there a setting that prevents VS from tacking on namespace parts to match the file system?,,,,,,
203024258,1208,Issue,Is there a setting that prevents VS from tacking on namespace parts to match the file system?[Unfortunately it seems to be R# only],,,,,,
211611391,1208,Issue,"I am voting for leaving a namespace that matches the project name, but dropping any further levels.Files that currently have **no** namespace can stay that way.I would also include adding a test to `Conventions` to the PR.   any feedback please?",,,,,,
211832022,1208,Issue,"It's very unfortunate because not even thinking about files where extra namespace levels were added due to folder path, we seem to have a real mix of unit and integration tests where some files have a namespace and others have none.  My OCD wants things to be consistent, particularly now it's been brought to attention (:trollface:) , but yeah im not sure if the code/indentation churn is worth it... I would also include adding a test to Conventions to the PR.Pretty tough to do when there is inconsistency in the files.  Or are you saying the convention test would ""pass"" if there is no namespace OR a namespace matching project, and would only fail when a namespace was present that didn't match the project?",,,,,,
211906649,1208,Issue,Yeah I meant the the test should only fail if there **is** a namespace and it doesn't match the project,,,,,,
217105842,1208,Issue,"So how do we reach a consensus on this, so I can either code or close?",,,,,,
217116807,1208,Issue,#NAME?,,,,,,
199784181,1207,Issue,I'm pretty sure this was something I was tracking as part of auditing everything in  but I'd need to remember just what past me was doing there...,,,,,,
199785835,1207,Issue,"Yeah, I've had the email for that issue pinned since it was opened - because some day I will download the code and do a real review :laughing:",,,,,,
199806742,1207,Issue,"I just did a quick search through the code base and found a few properties of clients that are not singular These 2 are also potenitally ""awkwardly"" named, although the property name does match the API doc, and im not sure if a ""better"" naming for these ""action"" based -ing words exists!",,,,,,
199814789,1207,Issue,"These 2 are also potentially ""awkwardly"" namedIMO The _client name_ is a bit off. If our gospel is the API docs, they should beEither way `Watch` and `Star` can also be adjective-iy sowould not be so jarr**ing** ( :stuck_out_tongue_closed_eyes: ) IMOIn the same vein the `StarredRequest` class name feels off to me",,,,,,
205321287,1207,Issue,"The Migration API has an internal Enterprise Migrations client, so that causes troubles if I follow this. As I can't name both of them `Migration`, so I have named the internal one as `IMigrationsClient Migrations` and `IMigrationClient`. The only difference is the plurality. What should be done in such a case?[Here] is the explaination by .# Keeping this aside, I feel that since we follow the GitHub API, should we also make clients nested as in the docs and make the sub-clients as internal namespcaces. This will also solve the problem of Migrations API as we can then have something like `Octokit.Migration.IMigration Migration`, keeping them singular. Is something like this even possible?",,,,,,
199785419,1206,Issue,"Pretty clear cut, may as well merge these ones quickly :grinning:",,,,,,
199777888,1205,Issue,"Have I open issue for each of them? Or I could create just PR without appropriate issue?Save time, just go straight to the PR - especially for things like cleanup and/or refactoring.",,,,,,
199797141,1205,Issue,:+1:,,,,,,
199801943,1204,Issue,is this OK or is there another way you'd prefer to guard against this?I'm a bit üëé on the guard clause as-is but I'll sleep on it - or we can discuss it in a separate PR.Everything else is :gem:,,,,,,
199814697,1204,Issue,"I'm a bit :-1: on the guard clause as-is but I'll sleep on it - or we can discuss it in a separate PR. Yeah it was a bit clunky due to code analysis not allowing combining a `Uri` and `string` and also the `StartsWith()` needing to have `StringCompareInfo` set etc.I'm not a huge fan of the guard either... but given that we aren't running integration tests against github enterprise it pretty much means that we could break any ""normal"" call from working against GHE if we miss that innocuous leading slash when reviewing PRs.  Other things I considered were doing something in the `FormatUri()` extension method, or having a convention test that checked the endpoint Uris in `ApiArls.cs` helper class... but in both cases that didn't protect against a contribution that doesnt use the helper class or extension method (assuming we dont pull up the contributor in the PR and ask them to use the helper class and extension method).  Then we have the other situation of any consumers of octokit that are using the `client.Connection.Get` etc methods, and passing in their own endpoint Uri.  Perhaps we dont need to ""stop"" them since they can fix their code (although whether they would know that the HTTP 406 is because the Uri fragments got eaten due to a leading slash, and not being able to easily debug right down into the guts of the octokit plumbing, it would lead to much hair pulling!!).But yeah my main concern was the fact we can inadvertently break API methods from working on Enterprise and it doesnt get picked up in tests or at runtime.  We could throw an exception I guess (again, that's too late if we've shipped the release though!).  So that's how I came to the conclusion that there doesnt seem to be a reason NOT to trim leading slashes off.  The check that it isnt an AboluteUri is needed because when dealing with multple paginated calls, the subsequent requests have the full absolute Uri in the endpoint...",,,,,,
200998956,1204,Issue,"I'd love to script out something so we can verify all these URIs are correctly formatted, rather that bake that behaviour into `HttpClientAdapter` which may go away if we move to having `HttpClient` at our core. I think we could probably hack something quick and dirty together with reflection to cover ourselves...",,,,,,
202685375,1204,Issue,"OK ive reverted the change in `HttpClientAdapter` for now, and will just push this PR in with the correction to the URI'sWill raise a new issue for the  script out something so we can verify all these URIs are correctly formattedpart...",,,,,,
202995826,1204,Issue,thanks!,,,,,,
207537742,1204,Issue,release_notes: `RepositoriesClient.GetAllPublic()` failed on GitHub Enterprise usage due to incorrect `Uri` formatting,,,,,,
199797813,1203,Issue,:+1:,,,,,,
199653596,1202,Issue,"nope, this is fine to log - I'll leave this as an easy contribution for someone to get started on...",,,,,,
199654418,1202,Issue,Let me take care of this. :smiley:,,,,,,
198588507,1200,Issue,"I'm neutral on this.On the one hand, I think code coverage is a questionable metric for code quality. Fowler [sums it up nicely] in that it should be used to look for untested code, not as a general metric.On the other, if someone thinks it's worth setting up, they are welcome to explore options and see how Octokit integrates with this. Ultimately I'm more interested in finding the code that isn't covered by tests, than the statistic itself.",,,,,,
198588697,1200,Issue,Setting this to a meta discussion.,,,,,,
198456979,1199,Issue,Tests for Linux (Mono) aren't passed for some reasons...,,,,,,
198651079,1199,Issue,Tests for Linux (Mono) aren't passed for some reasons...Unfortunately there are some sporadic TravisCI failures... we are tracking them here: #1076 I kicked it off again and has passed now.  Thanks for your efforts in getting things nicely consistent in the codebase!![LGTM],,,,,,
197794007,1198,Issue,"Other than my comment (which is more a question really) it LGTM! I have one question about integration tests for (Observable)AuthorizationsClient. There are no any integration tests for these clients, so should I add it?My (non-maintainer) opinion is - if the tests follow existing conventions and coding styles - test away.",,,,,,
197858055,1198,Issue,"I have one question about integration tests for (Observable)AuthorizationsClient. There are no any integration tests for these clients, so should I add it?My vote is yes!  Ideally we want to have unit and integration tests for everything.  Some older stuff doesnt have that coverage, but the next time we touch something in that area, ideally we would also add the tests for that client, at a minimum implementing the tests for the methods you've touched (eg in this case the `GetAll()` method, but if time allows writing ""full"" tests for all of the methods in that Client would be great as it will increase our coverageSometime soon I'd like to write something that will highlight the clients/methods that dont have unit or integration test coverage, and raise issues in the repo for them to be implemented",,,,,,
198204679,1198,Issue,Seconding everything  just said above...![],,,,,,
198240838,1198,Issue,I added new integration tests in last commits./cc,,,,,,
199605670,1198,Issue,Looking awesome now :grinning: And thanks for taking care of those additional tests on the previously implemented ApiOptions clients as well.Great job !![LGTM],,,,,,
218210124,1197,Issue,:sparkles: I'm excited to see this added. We want to signal to people that they are welcome to contribute and that we care about having an inclusive welcoming environment for all contributors.,,,,,,
218429807,1197,Issue,:shipit:,,,,,,
218837157,1197,Issue,should the email address be support.com?,,,,,,
218874073,1197,Issue,"I'd love it to be more specific than that, so that it goes directly to the right people",,,,,,
218889494,1197,Issue,"I'd love it to be more specific than that, so that it goes directly to the right peoplePlease don't make it go just to me. :stuck_out_tongue: What did you have in mind?",,,,,,
218974189,1197,Issue,something like `conduct+octokit.net.com` but I need to bug some people internally to ensure we're all on the same page before confirming it...,,,,,,
242117953,1197,Issue,bump,,,,,,
247504313,1197,Issue,"Yeah, this fell off our radar due to Other Priorities‚Ñ¢.I'm taking next week off (computer-free) so I'll pick this up when I'm back.",,,,,,
271299055,1197,Issue,"Bumping this; would be nice to actually get it in.For the sake of merging this, could it make sense to use `support.com` for now and add a follow-up issue to add a more specific e-mail address when one is available? Seems like a quick win to get this in; plus, you know that someone will be manning the e-mail there.If you want to give them the ability to filter, maybe using an e-mail trick like `support+octokitnet+conduct.com` could do what you're looking for? Would still go to support but they'd be able to route based on the `to` address.",,,,,,
271303579,1197,Issue,I agree it'd be nice to merge this in.  Obviously GitHub staffers will need to make the call about what email address to use (and whether we can use support.com for now)...  ping,,,,,,
271414935,1197,Issue,Updated the guidelines to use a real email address. Aside from some logistics work on my end this is ready to merge. Over to you .,,,,,,
271415518,1197,Issue,üéâ,,,,,,
197735297,1196,Issue,"~~I think you applied the patch for it in the same branch of another PR. You should have created another branch for this PR, as it will unnecessary show the old commits.~~ Done.It looks good otherwise. :+1:",,,,,,
197764159,1196,Issue,"Actually i removed the changes from the previous pull request and opened a new PR so that changes can be merged quickly, as suggested by  .",,,,,,
197766463,1196,Issue,"yep, but I'd rather just deal with the single commit - instead of all the preceding commits.Here's a way to reset this branch to just contain that commit:",,,,,,
197827228,1196,Issue,Thanks !! .Made the changes accordingly.,,,,,,
198651032,1196,Issue,"Apart from fixing the mentioned issue, this commit also seems to have applied some whitespace/bracket reformatting across a number of files.  This isn't necessarily a problem but I do like to see it explicitly mentioned in your PR comments, if you've done something like that, firstly to give an indication that it's a deliberate action on your part, and not some inadvertent/unintended action that you weren't even aware of... and secondly so that you can give your reasoning/justification as to how you made the change and why etc... (eg did you run something over the entire code base and these were the only files that weren't ""in spec"" or otherwise how come ""only"" ~20 files are affected?)",,,,,,
198687589,1196,Issue,"I ran this command too **./build FormatCode**Actually i was not hoping for so many changes because i was hoping other contributors would be knowing this and i read it from the gitter chat group. Plus, last time you had to point out a lot of stuff (the tiny nitpicks), therefore i used the above command.I ll mention it from next time what all changes i am making. :grin:",,,,,,
199085908,1196,Issue,"I generally don't obsess over everyone running `FormatCode` as part of every pull request. For me, it was there to run periodically to ensure everything was up to (a) standard.As you can see, all it caught here was a bunch of excess whitespace - so this is minor thing for me. I'm not going to stress about this too much. Thanks for being on top of it!",,,,,,
199249284,1196,Issue,"I'm not going to stress about this too much. Thanks for being on top of it!All good!  My approach with such ""off topic"" changes is I'll normally question them if the PR author didnt mention them themselves...  If they do mention it, then they aren't ""off topic"" anymore and thus no need to question!And yeah, I hadnt actually seen the FormatCode build command until I was poling around the other day too... perhaps it should be added to the contributors.md.  Not as a ""you must run this"" but more so as a ""if you want to, here it is""",,,,,,
199515984,1196,Issue,captured in #1201,,,,,,
197601871,1195,Issue,"welcome!To be perfectly honest, the only bits of feedback I have are minor - this is really nice work!One suggestion - if you wanted to add another integration test where you:- create a repository- make a commit through the API, get the new SHA- verify the SHA from this new endpoint matches what you got earlierI think that'll give us enough coverage for this endpoint to close this out.",,,,,,
197603757,1195,Issue,"Thanks , I'll make the changes that you've suggested :+1:",,,,,,
197620489,1195,Issue,Great first contribution :clap: I agree with  regarding adding verb for `GetSha1()` and the extra integration test (look around for other examples that use the repository context helper to create a repo for the test then automatically clean it up afterwards)... I've also raised one minor nitpick on consistency/wording in the tests,,,,,,
197744826,1195,Issue,:clap: Nice stuff!Welcome to OSS :smile:,,,,,,
197746109,1195,Issue,"I've made the changes you both have suggested.Are you happy with the integration test approach? I've used a similar approach to other tests in the same class, that is to use `CreateTheWorld` to create repo & commit. Get the Sha1 and compare that it hasn't changed.",,,,,,
197764301,1195,Issue,I've updated `CreateTheWorld` to return a `Task` and compare it against the `GetSha1` and the class `TheSha1Method` methods should be async,,,,,,
199257767,1195,Issue,"This looks good!  But I noticed there are no Unit or Integration tests for the `ObservableRepositoryCommitsClient`.I realise this was like that before this PR... Some parts of the code base (particularly observable implementations) don't have tests around them, but as we touch these areas ideally we should start to correct that problem.  Without tests there really could be something lurking in there making the observable implementation not work and we dont want to find out from end users if possible!So at a minimum, I'd like to see tests added for the Observable `GetSha1()` method that has been added... And ideally - tests for ALL the methods in this observable client could be added!  :grinning:If you have a look at some existing examples of Observable client unit and integration tests you will find that the unit tests of observable would have a `CallsIntoClient` type test (that checks the underlying regular client method is called with appropriate args), as well as `EnsuresNonNullArguments` and `EnsuresNonEmptyArguments` tests as appropriate (depending on what parameters the call takes and whether they have checks for nulls/empty string).  Also a test for the `Ctor` guarding against a null client argument.Im not sure where  stands on integration tests for observable clients - given that alot are missing, and it's pretty much only ever calling the regular client anyway... perhaps all we need are unit tests for observable clients... But in my contributions I do typically add integration tests, I pretty much copy/paste the regular client test, modify it to use the observable client and also like to write it as per below, so it's obvious the item is an observable (eventhough you could simply `await` it inline).  This is just personal preference.",,,,,,
199440231,1195,Issue,"I've added unit and integrations tests for the `ObservableRepositoryCommitsClient`, specifically the `GetSha1` method.",,,,,,
199503629,1195,Issue,"Im not sure where  stands on integration tests for observable clients - given that alot are missing, and it's pretty much only ever calling the regular client anyway... perhaps all we need are unit tests for observable clients...This is essentially my views - if the implementation is just calling the `Task`-based API, then additional integration tests for the `Observable`s are just doubling up. But yes, :thumbsup: to additional unit tests.",,,,,,
199606698,1195,Issue,"Oops!  Looks like just a minor issue there with the ""NotNull"" test checking empty strings, and the ""NonEmpty"" test checking nulls!  If you can just fix that up we are good to goAlso given 's comment let's ditch the integration test for the observable implementation, since it's just calling the real client anyway.  SORRY!",,,,,,
199708673,1195,Issue,No problem - I've removed the integration test and updated the unit test. I've learnt a lot about the codebase and how to contribute with this PR and you guys haven't scared me off either :grin: so I'm going to pick up some more `up-for-grabs` :smile:,,,,,,
199717724,1195,Issue,this all looks good! I can't wait for the next one.I'll let  have the final word.,,,,,,
199783493,1195,Issue,"I've learnt a lot about the codebase and how to contribute with this PR and you guys haven't scared me off eitherGreat to hear!  Bring on the next one, this one LGTM![LGTM]",,,,,,
197803110,1194,Issue,"Alright, quick brain dump:- as Octokit is being used in many places, we should be `[Obsoleting]` before removing any APIs.- the `[Obsolete]` comment should indicate what the caller needs to update- for the most part, the code should continue to work while obsolete  - `allowAutoRedirect` is one exception I can think of, but as we're all-in on redirects then I can live with thatThe $64000 question of course is ""how long should these be obsolete for before removing them?""I might be being totally arbitrary here, but **2 releases** feels like a good number - just in case callers happen to skip a release. We've been rather slow with releases lately (~1 month and ~2 months between the last three releases) but if we get moving to a more frequent cadence of releases (hint: yes, we should) then we can re-evaluate this and perhaps move to a time-based approach.",,,,,,
197804386,1194,Issue,"brain fart: Should we include the release in the obsolete message? (the release that is current when the change is made || a reviewer can just say - add in ""in release x.x.x)",,,,,,
197804613,1194,Issue,"but 2 releases feels like a good numberI agree, but for devil's advocacy do accepted (& actually used) guidelines exist for this kind of thing?",,,,,,
197814120,1194,Issue,"Should we include the release in the obsolete message?Maybe? Having the release number there may mean they'll go and read the release notes - but perhaps the details in the message are enough for them to understand... I agree, but for devil's advocacy do accepted (& actually used) guidelines exist for this kind of thing?""It depends"" is really the best answer I can come up with, and this probably comes down to support lifecycles. On one hand, $vendor may need to support obsolete features in an API until the next major release. On the other hand, some OSS library may choose to ignore SemVer and arbitrarily introduce breaking changes because move fast and break stuff.Technically we're pre-1.0 so SemVer is not very opinionated about this, but I'd favour being more conservative in general. In my mind 1.0 is having GitHub v3 API support covered and some necessary infrastructure changes in place - but we can _act_ like post-1.0 right now with respect to obsoleting changes...",,,,,,
197818924,1194,Issue,"Sounds good to me.I have some Real Life‚Ñ¢ to take care of, and then I will try and post back with a sorting of `Obsolete` methods based on release",,,,,,
199810285,1194,Issue,"So given that theres a pretty massive gap between the ones that are 200+ days since obsoleted, and a bunch sitting at around the ~80-100 mark... we should be pretty safe to remove all the really old stuff?:fire: theseAnd keep the following for nowHappy with that approach for .20 release?",,,,,,
199815147,1194,Issue,"Happy with that approach for .20 release?If the answer is yes, I would like to do that PR",,,,,,
200469467,1194,Issue,"Happy with that approach for .20 release?Yes, very happy",,,,,,
202014873,1194,Issue,"ApiConnection.GetRedirect() depends on IConnection.Get(... allowAutoRedirect)It currently did this: `return connection.Get(uri, null, null, false);`.Should I just drop the last param?",,,,,,
202142122,1194,Issue,-Zuber I think we should drop usages of the `allowAutoRedirect` parameter and possibly remove it - if that's already been marked as obsolete...,,,,,,
202679069,1194,Issue,"Im thinking that we should just :fire: the `ApiConnection.GetRedirect()` function, since it was the only place that was using that Get overload anyway.  I realise it was in my list to ""keep"" but at 110 days since obsolete, and given we are already removing the `Connection` related redirect flag (which isn't honoured anyway) I'm voting we sharpen the axe and just :fire: all 3 ?",,,,,,
196806269,1190,Issue,", I have one question about integration tests for IObservableUserEmailsClient. In aa3ce0d you're added test ReturnsDistinctResultsBasedOnStartPage for IObservableReleaseClient.How can I implement such tests for IObservableUserEmailsClient and IUserEmailsClient? I use my fake github account for integration test and there is exists only **one** email.",,,,,,
197059052,1190,Issue,"yeah, email addresses are tricky. Let's not worry about integration testing pagination on those.EDIT: the big reason why I'm conservative here is that we're assuming some state about the user's account that may not be true between contributors. It's easier to do this with repositories we create in tests, or public repositories with some known state, so I'm happy to just keep tests which depend on user's data simple.",,,,,,
197072023,1190,Issue,"Just a query regarding adding the additional overload to `Connection.GetResponse()` and changing the `ApiOptions.None` to a Singleton implementation.  Since these weren't in 's example implementation I'm wondering whether they should be included here or not.  There are already lots of overloads on GetResponse etc so we should only add them if absolutely necessary.  Im not sure if in this case it was necessary or just a convenience?Similarly with the singleton for ApiOptions.None - performance improvement is surely negligible and not really a major concern.  The other point about unit testing... we have plenty of examples of `Model` classes that need to be compared in Unit Tests and some discussions have occured around implementing `IEquality` for Model classes or using extension/comparison methods etc.  Im not sure that the singleton approach for this one specific edge case (so that you can use object equality of `options == ApiOptions.None`) is worth it?I defer to  for opinion on both matters, I am mainly coming at it from the point of ""if this is the first time we are introducing something"" it should be thought about in the context of the whole project and not just this PR",,,,,,
197081415,1190,Issue,"Since these weren't in 's example implementation I'm wondering whether they should be included here or not.Unless there's a compelling reason to add them I'd like to remove these changes.The big issue with introducing the `ApiOptions.None` singleton is that `ApiOptions`'s properties are still mutable - potentially introducing strange behaviour if you happen to mutate the global instance - so I'd rather it just return a new instance each time you `get` a value.The alternative here is to remove the setters so you can enforce read-only values, but the necessary `ctors` to support this felt more verbose so that's why I ended up here.",,,,,,
197164554,1190,Issue,"yeah, email addresses are tricky. Let's not worry about integration testing pagination on those. Tnx, I removed unnecessary tests.I am fully agree with you about ""ApiOptions"" Singleton (especially, mutability breaks Singleton approach) and ""GetResponse"" overload. Both of these changes were made in order to implement needed unit/integration tests.I removed Singleton and overload of ""GetResponse"" extension. Also I rewrote necessary tests a little bit.",,,,,,
197166146,1190,Issue,Those changes look good. Added a couple of comments around the integration tests.I'll get  to have another look once those are addressed.,,,,,,
197170812,1190,Issue,just an FYI - there's no need to  me in these PRs and comments unless there's a specific question you need answered from me - I get the notifications either way :grin:,,,,,,
197171089,1190,Issue,"Ohh, sorry for that! I don't know that GitHub so smart. I not going to do that in future!",,,,,,
197328745,1190,Issue,"Ive reviewed the changes and it's looking pretty good!  My ""consistency is king!"" OCD shone through a little though sorry :grinning:To explain where that's coming from: on a code base such as this one, consistency and clarity are very important - they enable new contributors and users/consumers to more easily gain an understanding as to how octokit works.  There will often be a better or more efficient way to write test code - however if you're going to be the ""first instance"" of deviating from the general approach adhered to within a class/file (or in an ideal world even an APIclient or the whole codebase!), it should be intentional and communicated.  So I guess what Im saying is, lets definitely try to keep consistency within the same file, if not the whole API client (and ideally code base!)",,,,,,
197333762,1190,Issue,Thanks for going the extra mile to address my consistency nitpicks!![LGTM],,,,,,
197334786,1190,Issue,"Thanks for going the extra mile to address my consistency nitpicks!, Thx for your patient and detailed explanations! :+1:",,,,,,
196365683,1188,Issue,"Since I'm already implementing the Migrations API, should I take this up after I am finished with that?",,,,,,
196541242,1188,Issue,"Certainly, but it's definitely best to get one over the line before working on the next.l :grinning: Infact, I haven't yet started on #1024 which would be a higher priority IMO, if you wanted to knock off some of that coding :stuck_out_tongue_winking_eye:",,,,,,
196637600,1188,Issue,"Sure, I'll try to make it production-ready ASAP.",,,,,,
196173326,1187,Issue,"Hey  - nice pickup!  However,  is actually already tackling a revamp of the CONTRIBUTOR doc in #1145",,,,,,
196201124,1187,Issue,"Yep, this has been merged in #1145",,,,,,
196536764,1186,Issue,Hi  We'll typically hold off from reviewing PR's until the CI builds are passing... You should be able to click through and see what caused the failures :grinning:,,,,,,
196800220,1186,Issue,The CI builds are passing now. Review and merge whenever you want to. :smile:,,,,,,
197063640,1186,Issue,"Integration tests passing, no issues with the code - this is just great! Thanks !![]",,,,,,
197153901,1186,Issue,Should I now start the bulk changes for Pagination Support?,,,,,,
197159374,1186,Issue,"let's not rush through these - we're discussing some API changes in #1190, and doing reviews per-client is easier for us to ensure we don't miss anything...",,,,,,
197160559,1186,Issue,"Okay, as you say, but may be we can try a few similar ones?",,,,,,
196144575,1185,Issue,The build passed the checks here i guess.Take a look at the unit and integration tests.,,,,,,
196174285,1185,Issue,"Hi  , could I suggest that you reword the pull request title and description to contain a little bit more details about what it's about?  You certainly want to link to the issue #896 but also would be good to say a few words here about it so everyone doesnt have to click through to the issue to see what this PR is about.eg something like this:Title: Implement Lock/Unlock functionality for IssuesDescription: This PR implements the locking and unlocking funcitonality for Issues Fixes #896 Also includes Unit and Integration TestsAlso from a quick look, this pull request includes your changes for ther other PR about ItemState/ItemStateFilter etc, which makes it hard to review the diffs in isolation.  Ideally you would either do the work on separate branches, or once one PR gets merged, you can merge master into your branch and we will then see the ""true"" differences in this PR",,,,,,
196208919,1185,Issue,"Changed the title. Sorry for the trouble. Actually i did branch out this issue, but it turned out that i branched it from my master branch which consisted of the previous bug(which i hadn't branched).If you could take the trouble of going through the other PR first, then it could solve the issue.",,,,,,
196225424,1185,Issue,I found that this [function] was not correct.So corrected that too in the same PR.Hope that it is fine.,,,,,,
196539055,1185,Issue,"given it's not related to this feature, a separate PR would be nice for a couple of reasons:- we can review it separate to this- given it's a simpler change, it's likely to get merged in quickerI'll leave it up to you whether you'd like to extract that to a new branch.",,,,,,
196540581,1185,Issue,I ll open a separate PR.,,,,,,
197072682,1185,Issue,Just noting for reference that the status of this PR is- Waiting for #1140 to be merged and then have this PR's commits tidied up (due to this PR being built ontop of #1140)- Waiting on  to split out the test fix for `UpdateIssue` to another PR and remove the commit from this one,,,,,,
197728051,1185,Issue,I was waiting for #1140 to be merged.But now i have opened a separate PR for the UpdateMethod function correction.,,,,,,
201003087,1185,Issue,this looks like it contains work from #1140 (open) and #1196 (merged). Are you able to rebase the branch so that this only contains the work related to the locking and unlocking of issues?,,,,,,
202324213,1185,Issue,I have made the necessary changes. Please take a look.,,,,,,
202824333,1185,Issue,"Should i rename the reactive function also ?Because then it's usage would be like client.Lock(owner, name, 1);Currently its like  client.LockIssue(owner, name, 1)",,,,,,
202826678,1185,Issue,"Yes you should rename it too.  In integration or unit tests, you are directly referencing the `IObserableIssuesClient` which might be what is throwing you off here...Remember that ""regular"" users of octokit will be accessing both the standard or observable clients, through the ""proper"" heierarchyeg",,,,,,
202828103,1185,Issue,"Yeah, forgot that :grin: will make the changes.",,,,,,
202830896,1185,Issue,"Also dont forget you've got merge conflicts so either merge master into your branch, or rebase your branch on master and force push",,,,,,
202841704,1185,Issue,Looks like you're ontop of the test failures which is :+1: Ive highlighted a couple of REALLY minor consistency issues around naming unit tests (now the methods have been renamed),,,,,,
202848885,1185,Issue,The changes are made successfully. You can now finally take a look. :grinning: ----EDIT----travis CI failed because of a system failure,,,,,,
203075405,1185,Issue,this is getting closer - just added some things that I found while trying to get the tests to run...,,,,,,
203177974,1185,Issue,"Regarding the actual implementation of Lock and Unlock methods (which are API PUT methods that return a 204 response on success) I suggest we should implement them similarly to  [OrganizationMembers.Publicize()]In other words, check for that 204 response and return a `Task` to indicate success",,,,,,
203326287,1185,Issue,"Right now, I will try to implement the  Delete(Uri uri, object data, string accepts)And then later on we can open up a new PR.Is that Fine ?And please review the implementation of the Delete method. I was somewhat confused on how to do that.Also should I implement the Lock/Unlock methods as suggested by   which would return",,,,,,
205034941,1185,Issue,Just a gentle reminder to go see the changes that i made in this PR.,,,,,,
205228054,1185,Issue,Also should I implement the Lock/Unlock methods as suggested by  which would return  Task` accordingly.  Link to existing example: [OrganizationMembers.Publicize()],,,,,,
205986431,1185,Issue,"I'm happy with the integration test now passing, and the minor stuff remaining can be sorted out later.Thanks !",,,,,,
206123100,1185,Issue,:+1:,,,,,,
198649459,1182,Issue,Implemented in PR #1190,,,,,,
223251749,1180,Issue,This was fixed in #1336,,,,,,
212859961,1179,Issue,The mentioned methods are obsolete and marked for removal. And `User.Keys.*` are advised instead. Do we still need to add the ApiOptions overloads to these or #1183 will suffice?,,,,,,
213167889,1179,Issue,"you're right, let's skip this",,,,,,
211766332,1177,Issue,Can be closed now I guess.,,,,,,
211212522,1176,Issue,Can be closed now.,,,,,,
224564288,1176,Issue,",  It is hard to say why, but this client does not have ApiOptions overload at this moment. Please reopen it , I'll deliver ApiOptions overloads here as far as possible.",,,,,,
220585227,1175,Issue,Done in #1307,,,,,,
222049783,1174,Issue,Closing this out as the underlying API doesn't support pagination.,,,,,,
208280408,1173,Issue,Can be closed now.,,,,,,
221096061,1172,Issue,Fixed in #1310,,,,,,
223268404,1171,Issue,I'll see if I can open this PR today and hopefully wrap up this release this week :metal:,,,,,,
211324925,1169,Issue,I guess here only one method should be updated.GetAll method is already implemented.,,,,,,
211596695,1169,Issue,:thumbsup:,,,,,,
211817645,1168,Issue,Parking this one because of a bug with the API for `GetAllForSubNamespace`:,,,,,,
469847668,1168,Issue,"Just tested this again, and it seems that this bug is still around üòû",,,,,,
222311890,1164,Issue,This method was fired by 0a0829d5,,,,,,
211780686,1162,Issue,[`GetAllEmoji`] doesn't support pagination. I'll need to figure out a way to exclude that when it comes time to verify this.EDIT: and neither does [`GetAllGitIgnoreTemplates`],,,,,,
211785882,1162,Issue,"Actually, dropping myself from this as `MiscellaneousClient` doesn't use `IApiConnection` here - just `IConnection` - and this doesn't have any of the `ApiOptions` overloads available.Come back to this after all the others are done.",,,,,,
223250392,1162,Issue,As [`List All Licenses`] also lacks pagination this really isn't feasible to implement (or hack around). Closing it out.,,,,,,
222077781,1161,Issue,Fixed in #1312,,,,,,
221548285,1159,Issue,"sorry, I forgot ""fixes"" magic word in PR :dizzy_face:  Can be closed for now :+1:",,,,,,
221548572,1159,Issue,Fixed by #1321,,,,,,
208275820,1155,Issue,Can be closed now.,,,,,,
208754054,1154,Issue,Can be closed now.,,,,,,
208275725,1153,Issue,Can be closed now.,,,,,,
208275650,1151,Issue,Can be closed now.,,,,,,
208339951,1151,Issue,"Fyi for anyone not aware of this github feature, if when you mention an issue in PR, you use words like ""fixes #1151"" or ""resolves #1151"" ""fixes #issue"" then the issue is automatically closed when PR merged. So including those words in your PR will avoid needing to manually close out issues üòÅ",,,,,,
208368790,1151,Issue,"I know about that, but that didn't work if the PR opener doesn't have appropriate access rights to close the issue. Maybe I'm wrong, I don't know for sure.",,,,,,
208411367,1151,Issue,"tnx, I will do that in future. For some reasons I've used ""refers"" instead of ""fixes"" :smile:  As far as in [github blog post] nothing mentioned about rights, I guess auto close should work.Maybe you confused with this: [Closing issues via commit messages]?",,,,,,
208515262,1151,Issue,"I know about that, but that didn't work if the PR opener doesn't have appropriate access rights to close the issue.I don't believe this is the case. Please mention `Fixes #XXX` in the PR title.",,,,,,
208753903,1150,Issue,Can be closed now.,,,,,,
199783881,1149,Issue,Fixed in #1198,,,,,,
196061565,1147,Issue,"are you able to crack open `HttpResponse` response and see what it has set? I'm pretty sure there's some implementation differences between release assets on GitHub.com and GHE, so I'd love to know more about your setup...",,,,,,
196078523,1147,Issue,"Hey  When using the ""own `HttpClient` method and the `BrowserDownloadUrl` this is the succesful `HttpResponse` when the repo is PUBLIC And this is the `HttpResponse` when repo is PRIVATEIs that enough information?  This is just printing `?response` in the immediate window.  I obfuscated a couple of things like server address, org/repo and access token...If there is a better way to ""crack open"" the `HttpResponse` let me know what you meant :grinning:",,,,,,
196082202,1147,Issue,"yeah, that's more information - I was hoping for something more instructive than a `HTTP 500` but that's fine, I can work with that. I'll test on another GHE service to see if I can trigger the same thing with a private repository.",,,,,,
197011893,1147,Issue,Github enterprise 2.5.2 was released overnight and the release notes mention this  Downloading a release asset from a private repository with the Releases API failed with an internal server error.Sounds hopeful! I will retest and advise...,,,,,,
197044292,1147,Issue,Updated my test GHE instance to 2.5.2 and verified that downloading release assets on private repositories now works fine.  It works as expected using both approaches outlined in my first post - ie Octokit's `Connection.Get(assetUrl ...)` on the Api URL and using a custom `HttpRequest` to hit the `BrowserDownloadUrl`)Closing out this issue!,,,,,,
197059221,1147,Issue,that's great news!,,,,,,
196087192,1146,Issue,"Me right now:![] We could add the concept that a comment made on an issue/PR with specific wording, can ""set"" what the release notes should say for that issue.I like this - I'm fine with reading all the issues for this syntax - we can also look at the author to ensure it's someone trusted (whatever that means) If not present it could either fail the release notes process, or fall back to using the actual issue title For example, if the issue is ""Error xxxxx when loading my public repositories"" we might make a comment sayingYeah, the PR titles often need a bit of love. I wouldn't fail the process here. Just grab the title and use it as a placeholder, e.g. `""CLARIFY: Error xxxxx when loading my public repositories""` this could be even further extended for example if there was a comment for ""breaking changes"" then I'm still not settled on a syntax for breaking changes in the release notes (I'd rather explain things in a human friendly way), so perhaps we should just use a label to flag PRs that have breaking changes and see what happens next? Should every PR be associated with an issue or do we need to handle release notes sometimes being for a PR item and other times being for one (or more) fixed issues via a PR?Let's not assume every PR has an issue associated with it. The IDs I use in the release notes are for the PR, as the contribution is the thing I care about here. So let's continue down that path. For each PR/issue we can get the commits/authors so we can continue the tradition of  each author against that line itemIf we're going to script this, we should look at the author of the PR commits as well as the person who opened the PR. If  wants to mention anybody who ""assisted"" even if that was reporting an issue or taking part in review/discussions, we could also build up a list of commenters on all the PR's in a release then have a general ""thanks to the following who were part of helping with this release"" or something similar at the end of the release notesYES. I'd love to shout out to people who helped with reviewing. Let's do this! Do standalone commits (ie commit on master that wasn't associated with a pull request) need to be handled?Nope. I want everything to go (including my stuff) through a PR, even if it's trivial.One little thing that I don't have a good answer for is how multiple PRs can span a feature. But let's cross that bridge later.",,,,,,
196103966,1146,Issue,"One little thing that I don't have a good answer for is how multiple PRs can span a feature. But let's cross that bridge later.I guess you are referring to here to a large body of work (eg implementing your API Pagination changes) that is implemented via multiple PRs?  In some ways I wonder if just having each PR be listable is ok - eg ""Added pagination support to xxx client""  ""added pagination support to yyy client"".  Is there a need to group these together?  if so some possibilities would be:- use more feature labels - like feature-pagination and then that allows you to further group the PRs under the features area, into higher level features (eg pagination in that case)- use a single issue for the parent feature and link to it in the multiple PRs- use an optional milestone to relate multiple PRs - if milestone is set you can group or consolidate PRs for that milestone into their own subsection (or single line item with comma separated PR numbers)",,,,,,
196113942,1146,Issue,"Is there a need to group these together?Perhaps, perhaps not. Here's a recent example from `v0.19`: Add support for Visibility and Affiliation to repository search - #1096, #1132 via , The first PR was to implement the feature, and the second was to address a regression that was introduced not caught during review. I didn't feel that the second PR warranted it's own line as it was within the context of the same release.That's kind of how I feel about the upcoming pagination PRs - having a separate entry for each PR feels noisy, and I'd rather roll it all up into one item to summarize.Out of those suggestions, the milestone one actually feels the best fit - I'll have a bunch of issues which are all linked to that initial feature, and I don't want to publish this release until it's all merged. We could look for a milestone and group items in that way separate to all this - or just ""squash"" together the PRs and contributors into a single item...Thoughts?",,,,,,
196454091,1146,Issue,"That's kind of how I feel about the upcoming pagination PRs - having a separate entry for each PR feels noisy, and I'd rather roll it all up into one item to summarize.Agreed.Also, I think we should only look at PRs for release notes comments. It'll reduce the number of times we might have double notes (issue and associated PR) and it keeps us in the discipline of always submitting a PR for changes.I don't think we need to worry about ""trusted"" authors. Instead, when we review a PR that should have a release note, we can simply edit any comment that has the release note to fit what we want. In fact, the release note should be part of the review and we should encourage PR submitters to try and articulate what the note should be and then we can edit it if it needs editing.BTW, I :heart: where this is going. When we come up with something good here, I'll want to use it on every OSS project I'm on. :smile:",,,,,,
196464553,1146,Issue,"This all looks lovely :sparkling_heart: Maybe once a syntax is decided on, you can make an pullrequest_template?edit: Oh and the actual script/code should be a separate repo IMO",,,,,,
203383943,1146,Issue,"for anyone who hadnt seen: I dont know if I want to tackle fsharp at this point though LOL so I may just contribute cerebrally :grinning: Having a look at what  has produced so far I think we could benefit from adding a new label (in addition to `feature` and `bugfix`) to group up all of the recent items around fixing inconsistencies and tidying things up - something like `code quality` as the label nameI also think we can start ""decorating"" the PR's with the special comment to set what the release notes text for that PR should be, as the raw list is all over the shop :sob:.  Ideally we will do this as we go, but for this time around I'll go back to all the merged PR's and add it.  The tool will need to find the latest appropriate comment and use that text if found, rather than the PR title if on.At this stage I think we should keep it simple and just have the comment match a regex like `^release_notes:\W*(?.*)$` (using `SingleLine` option and taking the match group ""notes"")",,,,,,
195906511,1145,Issue,Stopping here to let this sit and hopefully gather feedback.Otherwise I'll merge it in a couple of days...,,,,,,
195933821,1145,Issue,"Looks good!  I've marked up a few grammar errors, broken links etc :grinning:",,,,,,
196174970,1145,Issue,:shipit:,,,,,,
195777606,1144,Issue,"6 integration tests I made are failing(All in OrganizationHooksClientTests.cs). I think this is because authenticated user has to be an admin of the organization being managed and OAuth tokens require the admin:org_hook scope.Need some help, i can't figure out how to go about it. EDIT- Octokit.Tests tests I added are passing",,,,,,
195861243,1144,Issue,"Hey  thanks heaps for the contribution!  Ive done a first pass review and made several comments... Hopefully you don't think Im being overly picky!  This is a fantastic contribution and in general you've nailed all the key elements - eg standard and observable implementations, great unit and integration tests, added any new files to all the csproj projects and so on.  In terms of the feedback ive commented - most are around tidy up things like whitespace and I also highlighted a couple of things around consistency in naming/doc - eg http vs https on API doc links, or using `organizationName` rather than `org` for the parameters.   I realize that there are already some instances of inconsistencies within octokit in these areas but I guess my approach is when adding new work to try to conform with the ""majority"" consistency, and then hopefully we will also start to tackle the minority items that are inconsistent.  You also seem to have made a couple of inadvertent edits to the csproj files around nuget package version and app.config binding redirects etc.To address a couple of specific things:- Your comment about integration tests not running - it looks like you're setting ""octokit"" org in the test fixture, whereas you should be using a specific integration testing organization that you setup for yourself (accessed via the `Helper` class).  I made a more detailed comment in the location where this was being done- With unit tests, when there are parameters that are being checked for empty strings as well as null (eg `Ensure.ArgumentNotNullOrEmptyString(organizationName)`) you should add a unit test that verifies that.  So in your case, you've added the `EnsuresNonNullArguments()` unit test, but you could also add a `EnsuresNonEmptyArguments()` test that checks the exceptions are thrown when `""""` are passed in for the various arguments that shouldn't be allowed (such as the `org` name).  If you search the code base, there should be some other examples of that if you need to see.- Your [PleaseReview] comments about NotNull assertions on HookId are not required, as hookId being an `int` can never be `null` :grinning:",,,,,,
195861950,1144,Issue,Thanks for the review. I'll make these changes as soon as possible. It may take a few days as I have my mid-sem exams in the next week.,,,,,,
195937606,1144,Issue,"neither appveyor or travis builds seemed to fire on this one?  The fact this is a change about organization hooks and had the ""octokit"" organisation mentioned in integration tests, hopefully is just a co-incidence!  :grinning:",,,,,,
196088087,1144,Issue,"uh, that's, neat! Will have a look....",,,,,,
196089423,1144,Issue,"I was able to re-send the webhook to AppVeyor but the Travis integration doesn't have that option. Oh well, it should trigger when the PR is next synced...",,,,,,
199651431,1144,Issue,"Sorry for the delay. I have made the changes1. Changed organizationName to org2. Added EnsuresNonEmptyArguments() in OrganizationHooksClientTest.cs3. Fixed the problems in integrationTests I added for org webhooks after adding the test account4. And other changes as asked by  About the csproj and app.config changes, there was a problem in the test runner in my VS. It wasn't showing any tests. So, I updated all the Nuget Packages(It was a solution on stackoverflow), it still didn't work. I guess the update made those changes. There was a merge conflict when I commiting this time in the csproj, I have replaced these files with the one in master.There are references to the documentation in https. Do you want me to change them all?The integration tests have been skipped for OrganizationMemberClientTest, and the reasons given are ""Admin/Member filter doesn't work unless the requester is an organization member"" ,""TwoFactor filter can't be used unless the requester is an organization owner"". These problems will come in org webhooks too, unless one is the admin of the org the tests will fail, so should I skip them?One Of the integration test is failing. Test Name: Octokit.Tests.Integration.Clients.OrganizationHooksClientTests+TheCreateMethod.CreateAWebHookForTestOrganization.  The reason it is failing is that the 'active' value I send is false, but in the created hook active value is true. I guess this is a problem in the GitHub API.Also the value of secret is returned as 'HMAC hex digest of the body, using the secret as the key' I guess( there are ******) instead of the secret, so I have commented the assert to check the value of config, and remove the secret for now. This test will pass if we change the active to true in assert check, but that won't be right!! :grinning:",,,,,,
199652026,1144,Issue,The travis-ci build is passing this time!! :grinning:,,,,,,
319020237,1144,Issue,"Did the organization hooks client get removed at any point, or did it never make it into Octokit? It appears that GitHubClient.Organization.Hooks no longer exists...",,,,,,
319483314,1144,Issue,Hi  this PR was not completed and thus hasn't been merged,,,,,,
489489765,1144,Issue,"So this will allow me to see if GitHub posts to a webhook I want to GitHub application to have to do specific stuff (like checking if the issue that posted to it has a specific label, is a pull request, edits specific files) and posts in it's status/checks?Currently I got a untested and unrunnable ruby CI that I am not sure will work and I am moving it to .NET Core to C# that I know a lot more on.",,,,,,
531770928,1144,Issue,Assigning myself to see if we can rebase this on top of `master` and address those conflicts,,,,,,
531771821,1144,Issue,I also see #1884 has been opened and might be closer to merging,,,,,,
531772337,1144,Issue,"After a quick glance at #1884, I'm going to close this PR out in favour of the newer as it seems ready to review.",,,,,,
251511280,1143,Issue,"If that's ok I want to contribute on this one.About how to do it,  I think that the simplest is to add an `EncodingType Encoding` property, potentially add the corresponding constructors and remove the `SerializeAsBase64` attribute on `Content` property.And if you want to avoid any breaking change on this, deal with the base64 in the existing constructors.What do you think?",,,,,,
251541520,1143,Issue,go for it - there might be some things to catch when serializing/deserialzing but I'm happy to review things and ensure a smooth transition,,,,,,
269095756,1142,Issue,happy to write this up as I just used it and it seems pretty straightforward.Do you have a preference for where it should live in the docs? Wasn't sure if it makes sense to devote an entire markdown doc to it or to throw it into `getting-started.md`.,,,,,,
293200098,1142,Issue,Noticed this issue was fixed in #1524,,,,,,
195285104,1141,Issue,"The build is failing for other projects, do I need add all the files there too?",,,,,,
195335880,1141,Issue,"Yeah, you have to run the build script locally, with ""FixProjects"" target - this adds any new files added to octokit project, to the other mono/core/etc projects Instructions in the [contributors doc]",,,,,,
195895808,1141,Issue,"So I was reading the documentation about this feature and it turns out I was incorrect in saying you need github enterprise for this API These API calls cover the process of extracting repositories from github.com or github enterprise,  that can later be imported into github enterprise. The API is in preview mode only and on covers the export side, there doesn't appear to be anything on import side yet. Also this preview API isn't yet available on github enterprise as of latest 2.5 version (according to docs at least)  so at the moment it seems only possible to do against github.com (usually new features make it into the next ghe feature release so I'd expect to see them in 2.6, potentially with the import side implemented as well or possibly not) Good news is this means you should be able to do all the testing and integration tests etc yourself",,,,,,
195900379,1141,Issue,"Thanks , I will try my best. And I'd would still need your and others' help.",,,,,,
196239179,1141,Issue,Can anybody tell me why `CanBeDeserialized()` test is failing?Stack trace:![canbedeserialized]It fails here:![constructorcache],,,,,,
196313358,1141,Issue,"Hey  Great job getting a good head start on this :grinning:  Implementing a whole new ""client"" is a pretty maojr job, so there are quite a few things we'll need to cover to get you over the line!  We really appreciate your contribution so please don't be put off by the following feedback, I'm trying to make it as detailed and explanatory as possible so that we can quickly get you into the ""mindset"" of an octokit developer :rocket:#### API Client StructureWe try to structure the API clients in octokit to be inline with the GitHub API.  If you have a look at the sidebar in the API docs, the `Migrations` client lives under a menu item called `Migration` and does not belong under the `Enterprise` API.This means, you actually need to create a ""IMigrationClient"" that lives in `IGitHubClient`, then a `IMigrationClient` that lives in `MigrationsClient`.  Yes this is confusing since there is Migration->Migrations and also confusing since the docs refer to it as the `Enterprise Migration API`, but we live and die by the API structure in the sidebar, therefore when using Octokit we should match that structure.  eg `client.Migrations.Migration.Start()`As an aside, it looks like this Migration/Migrations API actually got moved to this top level location late February, previously it was under the `Organizations` API.  I see there is also a new `Source Import` API under `Migration` that I will raise an issue for shortly!#### Naming things (TM)If you have a look at some other `Client` APIs for inspiration, you'll see there are some naming conventions in Octokit which should be consistent.  For example, since it's the `Migrations` API, you wouldnt call the `List Migrations` method `GetMigrations()` (since that would be `client.Migration.Migrations.GetMigrations()` !!! ).  We normally name the ""list"" methods `Get()` (for a single instance) `GetAll()` (for all instances) and `GetAllForCurrent()` (for all instances for the current user, when it's something a user can own, like repositories, publickeys etc.  So i'd suggest the names for the methods in this API should beStart a migration: `Start()`List of migrations: `GetAll()`Status of migration: `Get()`Download migration archive: `GetArchive()`Delete migration archive: `DeleteArchive()`Unlock repository: `UnlockRepository()`#### Order of MethodsIn a similar line of thought, I personally try to have the ""order"" of the method calls in my client, match those shown in the API.  So in your case, you've listed them as Status, List, Start, Download, Delete, Unlockwhereas the API docs list them in a slightly different order Start, List, Status, Download, Delete, UnlockPersonally I'd prefer to match the order to the API docs as it makes it easier to review and check for completeness etc :grinning:#### Other Notes- Dont forget to set the custom accepts header to enable this preview functionality, otherwise it wont actually work when you do it ""for real"".  Have a look at the `AcceptHeaders.ProtectedBranchesApiPreview` as an example on how to do this.  Basically you will add a new entry into that `AcceptHeaders` helper class, then on your API methods you will need to pass that accept header to the `ApiConnection.Post/Get/Delete` methods  ![image]- With your serialization problem, the tiniest little things can sometimes cause so much trouble!!!    If you have a look at all other `Response` model objects, you will notice they have a default/parameterless constructor!  That's all your problem boils down to... 1 line!  haha :sob:     Internally the `SimpleJsonSerializer` builds up that `ConstructorCache` and in your `Migration` class, it can't find a constructor to use, since you only provided one that takes all the parameters!  Adding a default constructor should get you past this hurdle!  `public Migration() { }`.  Same issue will be with your `StartMigrationRequest` request object.  If you want to have a unit test that tests the deserialization, it will need a default ctor",,,,,,
196327542,1141,Issue,"Thanks for the detailed feedback. I was also eagerly waiting for someone to get me into the ""mindset"". Now that I know much better about the philosophy of Octokit, I'll adhere to it. ... Migrations client lives under a menu item called Migration and does not belong under the Enterprise API. This means, you actually need to create a ""IMigrationClient"" that lives in IGitHubClient, then a IMigrationClient that lives in MigrationsClient...Thankfully, it came up before running `.\build.cmd FixProjects`I know it my fault that I didn't first checked the docs, but since you said an Enterprise instance is needed for this, I just assumed it is a part of Enterprise API. I'll keep this in mind in the future.Also, a question, does it mean we have to create an IMigrationsClient and an ISourceImportClient (may be in the future) inside an IMigrationClient and that will go under the IGitHubClient? Naming things (TM) and Order of methodsI was having a hard time Naming Things (TM), its now cleared now, and I'll follow the conventions from now on. :+1: ---And, I was about to ask where to put the AcceptHeader, thanks for clearing that out. If you have a look at all other Response model objects, you will notice they have a default/parameterless constructor! That's all your problem boils down to... 1 line! haha :sob:**That was such a nightmare. Thank you so much.** :100:",,,,,,
196335808,1141,Issue,"Thank god, it came up before running .\build.cmd FixProjectsIndeed!  We have an [open issue #1092] suggesting to make ""FixProjects"" build task remove items from the slave projects, if the items no longer exist on disk... we've all ""been there"" when we rename something and have to go hacking around in those other projects to set the world right again.  Unfortunately I am too chicken to tackle the F# build script to see what's involved in doing that! Also, a question, does it mean we have to create an IMigrationsClient and an ISourceImportClient (may be in the future) inside an IMigrationClient and that will go under the IGitHubClient?Yep!  I think this is the first time they've given us 2 such similarly named things as parent/child, but the structure is a ""Migration"" entry, with ""Migrations"" and ""Source Import"" under that.  So although it's a bit odd to have `client.Migrations.Migration.GetAll()` etc, that's what they've come up with, so that's what we'll implement :grimacing:",,,,,,
197854741,1141,Issue,"The GitHub API docs list the Migration->Migrations API as the ""Enterprise Migrations API"", but does not list it under the Enterprise section, so should I add into a new section for Migration or let it stay in the Enterprise section?",,,,,,
197855256,1141,Issue,"Yeah, I mentioned earlier it is confusing since they doi call it the ""Enterprise Migrations API"" but with octokit.net, we base the Clients class structure on the API structure (as shown in the sidebar on the doc site) and not the name... so `GitHubClient.Migration.Migrations` is what you should go with (and similarly move all the models, tests etc out of the `Enterprise` folders)",,,,,,
197856839,1141,Issue,"Also from a consistency point of view, in the Client interfaces and implementations you've got method parameters on separate linesWhereas to be consistent with the existing Clients in the code base, they should be",,,,,,
197860365,1141,Issue,"Thanks. As the GitHub API docs says.And, I just put them on the next line to improve readability because of long parameters list. But project's conventions are more important, I'll change them. Should I change this in the tests also?",,,,,,
197861271,1141,Issue,"Should I change this in the tests also?I was only referring to the method declarations, and the test methods dont take any parameters so it;s not applicable to those...",,,,,,
199642200,1141,Issue,"The GitHub API docs refer the Migrations API as the ""Enterprise Migrations API"", so while I will keep it out of the enterprise directory, should I prefix it with Enterprise or not as ... we live and die by the API structure in the sidebar, therefore when using Octokit we should match that structure. So, what should I do?",,,,,,
199795537,1141,Issue,"So, what should I do?The mentions of ""Enterprise Migrations"" is only at the landing page for the parent ""Migration"" page.  Everywhere else shows ""Migrations"" - eg the URL, the sidebar, the actual page title etc.  This seems to be the first example I can find where the ""title"" of an API as shown on it's parent's landing page is not consistent with it's name in the side bar and on it's own page!This API was already only recently moved/relocated to this spot, so I assume this is it's new home now, and if anything it may be losing the ""Enterprise"" nomenclature... Perhaps  or  can get the inside word on whether this is being renamed ""to"" or ""away"" from ""Enterprise"" Migrations API on it's parent page?This is the only place it's called ""Enterprise Migrations""Everywhere else it's just ""Migrations""I think your latest revision is great though - `IMigrationClient` being the top level parent, and `IMigrationsClient` being the lower level migrations API.  The amusing thing is that due to our policy in octokit of naming the API client property in the singular, we still end up with `client.Migration.Migration.GetAll()` :sob: But I do think the way you've got it now is the most consistent and inline with the standards set throughout octokit (rather than breaking the singular property naming rule or calling it EnterpriseMigration eventhough its not called that in most places in the doc)...  so Im happy with how it's ended up!",,,,,,
199795942,1141,Issue,This PR is looking great now!!!  Great effort on the testing coverage and everything is looking nicely consistent and thorough!  :+1: I think there's just the one indentation issue with the json in the model test... and the fact that other PR merges have caused you to be out of date with master which you'll need to rebase or merge (sorry!)Ill pull this down and run through the tests etc myself in the next couple of days,,,,,,
199826482,1141,Issue,"I still have to write the integration tests, though. I'll try to get them done as soon as possible.",,,,,,
202322902,1141,Issue,"I've added the integration tests but I have a couple of questions:- The `GetArchive()` test is failing. Maybe it is returning a string and I'm doing something wrong. Can you please look into it? [Here] is the API method, see if needs modification.- The DELETE based end-points throws ""Accept header error"", but how do we specify the preview header in the DELETE methods, all the other preview API's also doesn't specify it in their DELETE method.",,,,,,
202927237,1141,Issue,ill pull your stuff down and have a look through it in the next couple of daysthanks!,,,,,,
205272870,1141,Issue,"Hey  , sorry for the delay in getting to this one.  Ive made a number of comments against file diffs for you to go through which should give you some pointers.Regarding the integration tests, there are a few things here:- they currently are creating a lot of migration requests - eg almost every test is requesting a migration of all repo's in the configured organization.- they also assume the organization HAS repos which potentially may not be the case...- the download archive method - I think you cant download the archive until the migration status is ""exported"".  I had to add a while loop to that test, sleep for a few seconds and check the status again (using `GetMigration`) until it reported ""exported"" and then I was able to call the DownloadArchive function.  - the DownloadArchive API call issues a redirect to the download link for the archive, andoctokit automatically follows redirects.  In my case at least, this was an 80+MB file (as i had a clone of octokit.net repo in my test organisation) and took a few minutes to downloadFor the tests to be succesful and efficient we cant rely on or pre-suppose any existence of data, beyond the information provided through integration test setup (ie user, password, apikey, organization).  So ideally we want to create whatever data we need for the tests, and wherever possible we want to clean up after ourselves as well (eg who wants to have 100s or 1000s of repos in their test org, because they ran the test a number of times).  Luckily we have some examples in octokit of doing this, and some helper classes and methods to help you out :grinning: We want to use the ""CreateTheWorld()"" type approach, that we are using in some other ingration tests (a good one to look at is `MergingClientTests.cs` .  We'll essentially have a single test class for this `MigrationsClientTests` with a constructor that will setup all the data it needs (eg repositories, content in those repositories and kick off the migration).  Then you will have the normal test methods you've already written for the other methods, and finally implement `IDisposable` and clean up after ourselves where we can (eg we can delete the repos but we cant really stop the pending migrations, however it could be that deleting the repos deletes those migrations anyway, we'll have to see).  It shouldnt be a big deal anyway since the API docs say that any created migration archives are removed after 7 days anyway, so the main thing for me is that our test repos get removed once we're done.We have helper classes for `RepositoryContext` and an extension method on `IGitHubClient` that can create these temporary repositories, and they implement `IDisposable` which will then delete the repositories on github.com when the tests wind up (well more precisely, when your test class Dispose() method calls Dispose() on the contexts).  You can steal/borrow some code from the `CreateTheWorld()` implementation in MergingClientTests.cs to populate those repos with a couple of commits/content so they arent empty... and the last thing to do in the constructor phase, is actually initiate the migration request (since all the other test methods need a migration to be requested).Then have your normal test methods, to run through the `Get`, `GetAll`, `DownloadArchive` (remembering to check/wait for appropriate exported status) and `UnlockRepository` test methods, against that list of created/known repositories.  (although the usual approach is a separate test class per method, in situation like this I reckon it's OK to make all the test methods in the one class, so they can use the contexts setup in the constructor.  Another option would be to have the test method classes, inherit the base class, so they can access the contexts... either would work.Implement `IDisposable` on the test class, so you can override `Dispose()` and explicitly dispose the contexts (which will delete the repositories from the user's test organization on github.com) and will hopefully leave things mostly tidy over many test ezxecutions.I've knocked up a [quick gist] to demonstrate what I'm talking about.",,,,,,
205315397,1141,Issue,"Thanks a lot for the thorough review, I'll get back to you once I fix all these issues.",,,,,,
206364005,1141,Issue,"Also question for  ... should the `status` field be implemented as an enum in octokit?Im thinking yes, since we have things like `ItemState` as an enum, eventhough the api returns that as a text field.  In the case of `Migratoin` `status`, the API docs do specifically list all the possible values, so using an `enum` would be the way to go?",,,,,,
206445737,1141,Issue,"should the status field be implemented as an enum in octokit?I like this, as judging by the documentation it should have a finite set of values.",,,,,,
209340731,1141,Issue,"I've re-implemented the integration tests using the **world-building** approach. All the tests are passing except `GetArchive()`, that must be because that end-point actually redirects to the `tar.gz` archive, and since Octokit is configured to auto-follow redirect, it never actually gets a `string` in the result. What should I do here? Download the file and give it to the user or restrict the auto-redirect?Whichever may be the case, I'll need you help implementing it.",,,,,,
209356885,1141,Issue,"i believe other download URLs like the files on ""Releases"" API will follow the redirect and download the file so Id assume similar can be done here.  I've not looked into it deeply myself but if you have a look at the Releases API i think there would be some similarities there",,,,,,
209362492,1141,Issue,"Other API such as ""Releases"" actually return an object which contains a `download_url`, but this end-point directly downloads a file using a redirect. Now, there are two options:- Either download the file ourselves by setting the content-type as `application/x-gzip` and setting the return type as `Task`.- Or do not follow the redirect and return the URL returned in the `302` response and letting the user download the file itself whichever way they want.",,,,,,
211343370,1141,Issue,"I noticed that there is a `GetRedirect()` method on `ApiConnection`, which serves our exact purpose but doesn't have an overload which takes the `accepts` parameter. But it is marked obsolete as Octokit now follows redirects automatically, so what should be done?Also, I noticed that `ApiConnection` is actually able to get the complete file, but it stored inside its `IApiResponse.HttpResponse.Body` property, whereas the `Get()` method returns the `IApiReponse.Body` property which is null. So, while Octokit has the ability to download raw files, it can't be utilised as the `Get()` methods only return the deserialized objects.  Can you clarify on what should be done?",,,,,,
211598787,1141,Issue,"I noticed that there is a GetRedirect() method on ApiConnection, which serves our exact purpose but doesn't have an overload which takes the accepts parameter. But it is marked obsolete as Octokit now follows redirects automatically, so what should be done?This was a decision made a while ago when repository redirects were added. We decided to make the client behave the same and never surface `301`/`302` responses to the consumer - simply follow these and return the content at the end. So, while Octokit has the ability to download raw files, it can't be utilised as the Get() methods only return the deserialized objects.What sort of raw object are we talking about here? I ask because for our repository archive downloads, we return a `Task` which the user then converts into the expected archive format.",,,,,,
211726416,1141,Issue,"our repository archive downloads, we return a `Task` which the user then converts into the expected archive format. Thanks for clearing that out, so it means I should return the archive as a `byte[]` and let the user decide how it wants to save it?",,,,,,
211755961,1141,Issue,"I think that's the best way to do it here, but I haven't delved deeply into this PR (apologies!). With the repository archive endpoint, the user can specify the format to download too (ZIP or TAR) - is that an option here as well?",,,,,,
211757680,1141,Issue,I don't think so as the API only mention the response as `application/x-gzip`. I'll let the user decide then.,,,,,,
211757997,1141,Issue,if there's no option then the xml-docs should just explain the details to the user. Keep it simple!,,,,,,
211818174,1141,Issue,"I've changed the `GetArchvie()` to return a byte array and I've also tested it manually by saving it to a file and it contain the repos defined in the migration, so everything works fine now.This is complete, AFAIK, you can now review and merge. Let me know if I've missed something.",,,,,,
211865246,1141,Issue,Should I add `ApiOptions` overloads (for pagination support) to this client as well?,,,,,,
211872579,1141,Issue,"Sounds good, but how about raising a separate issue and doing it on a new branch/PR so we can get this one over the line without any bigger changesim just reviewing this one now...",,,,,,
211895731,1141,Issue,Sure. I was trying to implement that and I am confused on many points so it's better to open a new PR.,,,,,,
213120755,1141,Issue,"hey  it's looking pretty good and the integration tests run ok for me.  Only have 2 items of feedback:- The skipped integration test - we dont really want to have tests flagged as Skip as generally it indicates ""something wrong"" or needs to be addressed.  I think in this case, just remove the whole `[IntegrationTest]` attribute from that guy, and treat it like a helper method (eg like `CreateTheWorld()`)- When creating the `RepositoryContext` items you should use the helper function to give them a timestamped name.  This way each time the test runs it has unique names for the repos, and has no chance of clashing with repos that might already exist (eg from a previously failed test run or anyting else).  So basically just change those 3 repo creations to use the helper function like this:",,,,,,
214194823,1141,Issue,Can you please restart the Travis build?,,,,,,
218469646,1141,Issue,sorry for the stuff around but can you get this up to date with master again please and we can merge it in?,,,,,,
219794251,1141,Issue,"Sure, I'll get to it as soon as I get some time off my exams.",,,,,,
220342255,1141,Issue,"The Linux build is failing, maybe a mono issue. Please, look into it. :pray:",,,,,,
220588790,1141,Issue,"This looks good now...   did you want to confirm you were happy with the ""raw"" byte array return or shall I just hit the buttonedit actually sorry it's showing merge conflicts, not sure if this is due to other PR's merged or there were still conflicts after your rebase Sorry  can you rebase again?",,,,,,
220610728,1141,Issue,"Yeah, another PR has been merged since my rebase. Fixed.",,,,,,
221243572,1141,Issue,I'm going to merge this in as it's been a long hard slog for you !Good work on implementing a brand new API from scratch!![LGTM],,,,,,
221258835,1141,Issue,"It was a great experience, I hope to contribute more in future.Thanks a :100: to both of you. It wouldn't have been possible without you.",,,,,,
222050859,1141,Issue,![],,,,,,
195862599,1140,Issue,"so after having a look at the changes on the PR I have to say that I am backflipping a little on what i said in the issue #1082 !!It looks like almost all usages of `ItemState` only allow values of `Open` or `Closed`.  Eg issues, milestones and pull request objects, as well as the `NewXXX` and `UpdateXXX` Request classes for these.  It doesn't really make sense to me, to use an enum called `ItemStateFilter` (that s described as being used for search filtering) on all of these objects and new/update message classes.  It looks like pretty much the ONLY place that seems to allow `All` as an option to `State` is the List Issues/Milestones/Pull Requests type calls.So Im wondering if perhaps we should:- Keep `ItemState` enum but flag the `All` value as `[Deprecated]` (to be removed in future)- Keep using this `ItemState` enum on all the existing places such as `Issue` `Milestone` and `PullRequest` objects and the `NewXXX` `UpdateXXX` request classes for them- Introduce the new `ItemStateFilter` enum, allowing `open,closed,all` and use it only on the `XXXRequest`` classes that are used for the ""list"" methodsThat means less ""overall"" change, and the more sensible approach that `ItemState` is used for actual items and creating/updating them... whilst the `ItemStateFilter` is used when listing them",,,,,,
195925920,1140,Issue,"So basically, just reverse the names of the enum !! :P",,,,,,
195930305,1140,Issue,"Yep pretty much, and `[Obsolete]` the `ItemState.All` item",,,,,,
195946051,1140,Issue,"But then we come back to the same issue, that the user who is using octokit doesn't get all the issues on using ItemState.All",,,,,,
196063388,1140,Issue,"But then we come back to the same issue, that the user who is using octokit doesn't get all the issues on using ItemState.AllI'm not sure I follow?   The search API would no longer take ItemState as an option (it would be ItemStateFilter)  so they wouldn't be able to specify it anymore?",,,,,,
196142922,1140,Issue,I have made the changes. Take a look.,,,,,,
196320910,1140,Issue,"hi , as with the other PR it would be great if you could give this one a nice title and description when you can!  :grinning: In terms of your latest changes, Im still seeing several uses of `ItemStateFilter` where I dont think they are valid.To recap: allows values Open, Closed, All and is used on operations that can accept all 3 values - namely the ""List"" calls under Issues, Milestones, PullRequest API clients(eg `client.Issues.GetAll(new IssueRequest(State: ItemStateFilter.All))` allows only Open and Closed (with ""All"" being marked `[Deprecated]`, to be removed next release) and is used on operations where only Open or Closed are valid states.The Search API client is the example that triggered this issue to be raised, eg `client.Search.SearchIssues(new SearchIssuesRequest(State: ItemState.Open))` however there are also several other use cases, such as updating an Issue/Milestone/PullRequest and creating a Milestone where the state can only be open or closed.  Your latest changes show `IssueUpdate` `MilestoneUpdate` `NewMilestone` and `PullRequestUpdate` classes as all using `ItemStateFilter` but shouldn't they be using `ItemState` since only `open` and `closed` are valid values for all of these?",,,,,,
196444820,1140,Issue,Thanks for clearing that out. I got a little confused.I have made the necessary changes.Take a look.And i hope you like the title. :grinning:,,,,,,
196531141,1140,Issue,Looking really good!  Down to very nitpick type comments now... Ive flagged a few whitespace and XmlDoc tidy upsThe TravisCI build failure on linux was an environmental issue and not related to your changes... I've given it a kick - im thinking since this is a breaking change anyhow (replacing `ItemState` with `ItemStateFilter` on the `xxxSearch` Request objects)... perhaps there is no need to `Obselete` the `ItemState.All` value and we can simply remove it as part of the breaking change.  There shouldn't really be anyone using `ItemState.All` on Issue/PR/Milestone update/create anyway since it isn't a valid operation (not sure how the API handles it if requested actually!).  Do you agree with not needing to `Obsolete` `ItemState.All` ?,,,,,,
196543606,1140,Issue,I made the changes specified by you.Thanks for helping me out !! :smile:,,,,,,
196545065,1140,Issue,thanks for working on this. I'll have a look over it in the next day or so and see if I can answer your questions as well...,,,,,,
199258123,1140,Issue,"Just a reminder  I was waiting for your guidance on whether the `ItemState.All` needs to be obsoleted, since it's already a ""breaking change"" replacing `ItemState` with `ItemStateFilter` on any place that All was ever a valid option anyway... im thinking since this is a breaking change anyhow (replacing ItemState with ItemStateFilter on the xxxSearch Request objects)... perhaps there is no need to Obselete the ItemState.All value and we can simply remove it as part of the breaking change. There shouldn't really be anyone using ItemState.All on Issue/PR/Milestone update/create anyway since it isn't a valid operation (not sure how the API handles it if requested actually!). Do you agree with not needing to Obsolete ItemState.All ?",,,,,,
200916947,1140,Issue,"haven't forgotten about this, aiming to get to it today",,,,,,
200993065,1140,Issue,"looking over this change, I'm :thumbsup: to just removing this as it'll be covered by the breaking change",,,,,,
201375803,1140,Issue,"Just one more code comment to tidy up and I think this is good. how does this read for the breaking changes documentation: Decoupled request and response models usage of `ItemState` enum due to API rules. When querying for issues, milestones or pull requests these now use `ItemStateFilter`, and response models continue to use `ItemState`.",,,,,,
201401746,1140,Issue,Which one ?The one you mentioned in the diff ?,,,,,,
201403544,1140,Issue,"correct, this one",,,,,,
201404335,1140,Issue,Will remove the quotation marks right away.,,,,,,
202324774,1140,Issue,Made the changes.Take a look.,,,,,,
202486231,1140,Issue,over to you ‚úä,,,,,,
202675325,1140,Issue,"Hi guys, sorry for the delay I had a little break over the long weekend :)It's looking great now ... Ive marked up a couple of (final!) comment tweaks, and also noted that as per above, no need to `[Obsolete]` the `ItemState.All` option anymore - just :fire: it",,,,,,
202854263,1140,Issue,I have made the necessary changes. Take a look.,,,,,,
202875011,1140,Issue,"And with that, I think we are done with this one!  Thanks for persisting through all the nitty gritty review :laughing: ![LGTM]",,,,,,
203470393,1140,Issue,The more I am able to improve octokit the better. :grinning:,,,,,,
207538856,1140,Issue,release_notes: Add `importers` field to `IMiscellaneousClient.Meta` response,,,,,,
229798903,1140,Issue,"it seems this fix didn't make it in to the **Breaking Changes** section of the release notes (I realised as it broke a couple of my scripts after I upgraded to latest), mind having a look and adding it in there?",,,,,,
229859552,1140,Issue,"ugh, yep, missed this one.Thanks for letting me know, I'll edit the GitHub release to include that change...",,,,,,
229859992,1140,Issue,"For reference, I added this comment to the GitHub release: `ItemStateFilter` has been introduced to separate it from the search APIs, which still use `ItemState`. This affects `IssueRequest.State`, `PullRequestRequest.State` and `MilestoneRequest.State`. You'll need to rename any enum usages from `ItemState` to `ItemStateFilter`. can I get a :thumbsup: that this matches with what you were seeing?",,,,,,
229861902,1140,Issue,I was using `RepositoryIssueRequest` but it inherits the `State` property from `IssueRequest` so all good.,,,,,,
194727351,1139,Issue,"Just me being pedantic, but now the method has been renamed, can we also please rename the unit test classes?eg `class TheGetAllMethod` should now be `class TheGetAllForCurrentMethod` [here] and [here]Also AppVeyor build seems to be throwing a Code Analysis CA1024 error MSBUILD : error CA1024: Microsoft.Design : Change 'IUserKeysClient.GetAllForCurrent()' to a property if appropriate. [C:\projects\octokit-net\Octokit\Octokit.csproj]Im not sure why the method name `GetAll`didnt trigger it but `GetAllForCurrent`does, but you can suppress it (varoius examples through the codebase like [here]",,,,,,
194747437,1139,Issue,"can we also please rename the unit test classes?:thumbsup: Im not sure why the method name `GetAll` didnt trigger it but `GetAllForCurrent`does, but you can suppress it I forget the exact reasons, but I gather FxCop just doesn't like methods without parameters (even though these return something more complex than a value)...EDIT: nevermind, [MSDN] has my back: A public or protected method has a name that starts with Get, takes no parameters, and returns a value that is not an array.",,,,,,
194750387,1139,Issue,That doesn't explain why it didn't trip the error previously when called GetAll though does it?,,,,,,
194751316,1139,Issue,"it does not, no...",,,,,,
195341700,1139,Issue,Hmm the build failures look like they couldn't talk to nuget.org at the time... I kicked off the Travis build again and that's now passed. Don't think I have access to do the same on Appveyor,,,,,,
195906423,1139,Issue,I'm on it,,,,,,
195931063,1139,Issue,"This all looks good to me. I'll let  hit the big green button on it (it won't go out in v0.19, but that's a minor thing).",,,,,,
195934056,1139,Issue,![LGTM],,,,,,
207537888,1139,Issue,release_notes: Renamed `IUserKeysClient.GetAll()` to `IUserKeysClient.GetAllForCurrent()`,,,,,,
194666035,1138,Issue,A lot of new names this time around!! Noice!!,,,,,,
195932704,1138,Issue,This has been published to NuGet:- -,,,,,,
194651430,1137,Issue,":+1:Another suggestion that can make the release notes generation more automatable is that you can add a comment to an issue or PR that will define what the release note item should say.For example, an Issue might say ""Error is thrown when XYZ happens"" but you want the release notes to say something else, so you make a comment release_notes: XYZ could throw an error in some cases, this is now fixed!The release notes generation process now just needs to see if a PR or issue has this ""release_notes"" comment on it and use that instead of the title.  Could even fail the release process if any item it needs to include, doesnt have this ""field"" on it.  You can also ""lock it down"" so that only certain user's comments will be seen as valid ""release_notes"" text and so on.This can then be maintained as we groom/merge PRs and close issues etc, so the actual process of creating release notes doesnt involve any rewording or massaging and can eventually be fully automated",,,,,,
194653822,1137,Issue,"this sounds like a grand idea! I've got the code lying around which I used to create the starting point for this release, but let's try out including the summary for the next release.",,,,,,
195058072,1137,Issue,:+1: to all of this.,,,,,,
195058452,1137,Issue,thanks for the speedy replies. I'll close this out when I've updated the labels. did you want to open an issue for the release notes stuff so we can hash out how that might work separate to this?,,,,,,
195085576,1137,Issue,did you want to open an issue for the release notes stuff so we can hash out how that might work separate to this?Yep Ill do it (over the weekend) :grinning:,,,,,,
195087236,1137,Issue,"all good, I've plenty to keep me busy anyway :wink:",,,,,,
195211801,1137,Issue,Added a reaction (kudos BTW - awesome work!!).I really like 's proposal. Wonder if we want to incorporate some other tools though - ala,,,,,,
195212311,1137,Issue,-Zuber I'm leaning towards something simple because of two reasons:1) I built the basic flow out as Octokit API calls in about 5mins2) This feels like a nice use case for Octokit,,,,,,
195227277,1137,Issue,I also removed `enhancement` (any issues tagged with this are now tagged with `feature`) and removed `api-cleanup` - there was one issue and that's now tagged as `up-for-grabs`,,,,,,
195229068,1137,Issue,A bit more cleanup - `post-v1` has been removed (I'll bring in a `v1` tag as we get close to API completion) and I've added `meta` to indicate open discussions (things that aren't quite issues).,,,,,,
195232107,1137,Issue,"Alright, time to end this labelling spree...",,,,,,
194649789,1136,Issue,but has not been ported overIsn't it [this call] `UserKeysClient.GetAll()` ? (which I did port over in #1112 ),,,,,,
194651120,1136,Issue,"ah, so there's a convention we use here to indicate when a method depends on the current user - we call the method `GetAllForCurrent()` and don't pass in any parameters...",,,,,,
194652998,1136,Issue,"ok cool, so this task can be simplified to simply renaming `GetAll()` to `GetAllForCurrent()` on- `UserKeysClient`/`IUserKeysClient`- `ObservableUserKeysClient`/`IObservableUserKeysClient`- And the unit and/or integration tests for the above",,,,,,
194654099,1136,Issue,looks good to me - I've updated the title to reflect the work necessary,,,,,,
194665394,1136,Issue,I'd like to take this one. Will do it now.,,,,,,
194115377,1135,Issue,:+1:,,,,,,
193684154,1134,Issue,"I had a quick look at this and here's a test that reproduces the issue:The solution however is a bit more complicated. Checkout out the [API docs]:- `milestone` - `integer` or `string` If an `integer` is passed, it should refer to a milestone by its number field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.![]",,,,,,
193713856,1134,Issue,"Thank you, seems I misunderstood their docs.added extra logic to get milestone numberNow it works.",,,,,,
193417191,1133,Issue,The failing tests seem to be due to the fact that they pass in `Substitute.For()`.I am attempting to debug further to try and understand what the fix should be.,,,,,,
193420813,1133,Issue,"Yes, in fact it is because of it. I tried passing an actual object of `SimpleJsonSerializer`, and the test passed.Can we pass an actual object, instead of a substitute?",,,,,,
193424548,1133,Issue,"That would have to be the call of  or  as they should be more familiar with what exactly is going on in the test.And the truth is, it does not make sense for that change to be breaking the test anyways so I would vote for some more investigation first.",,,,,,
193425684,1133,Issue,I'm ok with whatever you want to do. Can you tell me where should I look into to learn further more about this?,,,,,,
193426314,1133,Issue,I'm honestly not sure myself...Do you know if there is a way to set a breakpoint within the lamda on line 322?,,,,,,
193427279,1133,Issue,"I don't think we can break at one condition, but if we break down the compound `&&` condition into several lines, we can surely put breakpoints on each one of them.",,,,,,
193429016,1133,Issue,"That gave me an idea, I'll get back to you in a bit.",,,,,,
193443885,1133,Issue,TL;DR use the substitute also for setting up the data.[Instead of this] I wrote this:,,,,,,
193445283,1133,Issue,"It is a clever trick, but due to lack of experience, I can't say whether we should use this or not. , feedback?",,,,,,
193552106,1133,Issue,"Hey  thanks for contributing the fix and this is a great opportunity for you to gain experience in the area of open source contributions and familiarity with mock based unit testing! :)The purpose of the Octokit.net unit tests is to verify expected behaviour but run totally self contained locally (ie not calling out to any github.com api calls and the like).  So the `NSubstitute` mocks are used to mock out any of these expensive/external API calls so that the tests run quickly and against controlled data.Mocks help us achieve the Unit Testing ""Arrange, Act, Assert"" pattern.  - Arrange is where we setup our input data and configure our mocks  (ie, ""when you receive a call that looks like this, reply with this data"") - Act is where we make the call we are actually testing- Assert is where we then use our mocks or the returned data to make various assertions about what we expected to happen (which throw an exception and fail the test if the conditions we test for didnt occur)  (ie, ""assert that when I called the `Users.GetAll()` client call, the underlying httpConnection received a `Get(...)` call with parameters that contain specific values we wanted (like the expectedUrl, input parameters etc)""So anyway, the reason those tests are now failing is that the substituted `IJsonSerializer` is now correctly passed through thanks to your fix, meaning that down in the guts of constructing the http call to the API, the ""data"" of the response body is null (because the substitute hasnt been configured to return  any data when `Serialize()` is called on it).  This means that the Assert on `httpClient.Send()` is failing, since it did not receive a call that matched what we specified (specifically, the body data is now null rather than it being """" as expected)-Zuber 's example is setting the expected body data to be the (null) return of the mocked serializer... which does make the test pass, however I would probably recommend instead to configure the mock to return the data we want since that is more in keeping with the unit testing approach and would also be applicable in other situations where we had a ""real"" body instead of a `new object()` as in this case.  We can also add an assert to ensure that the `IJsonSerializer` `Received()` 1 call to `Serialize()` thus proving it was correctly passed through.Does that give you enough information  to tackle correcting the failing unit tests yourself?To give an example of how I would probably fix these unit tests (explanatory comments like this aren't required, im just adding them to walk you through what's happening):",,,,,,
193555128,1133,Issue,"To follow up on 's summary, if they're not testing the actual serialized result (which I'm pretty sure is most of them) we can just simplify things to indicate that we don't care. For example:Or you could drop the `req.Body` verification - but I favour some correctness here if you think it's relevant to the test...",,,,,,
193560509,1133,Issue,"thanks for explaining :bow: It did filled some gaps in my knowledge. And, now that I understand the project better, I can tackle the problem at hand. thanks. I will surely first try to keep the correctness intact as much as possible. Let me get back to you.Just to be sure: I should try to configure the object's substitute in a way that `httpClient.Send`'s `IRequest` param expects it to be, so that it correctly mocks the current situation?",,,,,,
193649680,1133,Issue,"I tried to change the substitute, but the point is `IReuqest` doesn't enforce any restrictions on the `Body` param except being an `object`, and I think that's ok because the failing tests are the one which check for general HTTP requests. So, -Zuber solution seems enough.Anything else should I add?",,,,,,
193655053,1133,Issue,"Personally I do prefer to either do like I did and declare the body and the expected serialised data (even if blank) or do like  and indicate you don't care to check the body at all Anyway, just give it a go however you think and push up your changes and we can have a look",,,,,,
193656275,1133,Issue,"I was very tired last night and not paying attention to the point raised by  , namely that no mock was set for the `Serialize` call.Personally I would mock that call and test that body == data in order to not leave holes in the test. You can not always know what edge case will be protected against by having that in the test.",,,,,,
193689307,1133,Issue,"I have applied -Zuber 's fix to the failing tests. Now the question is, how to better mock the request body?",,,,,,
193690604,1133,Issue,[Follow 's recommendation],,,,,,
193722117,1133,Issue,"... IJsonSerializer is now correctly passed through thanks to your fix, meaning that down in the guts of constructing the http call to the API, the ""data"" of the response body is null (because the substitute hasnt been configured to return any data when Serialize() is called on it). This means that the Assert on httpClient.Send() is failing, since it did not receive a call that matched what we specified (specifically, the body data is now null rather than it being """" as expected)  -Zuber 's example is setting the expected body data to be the (null) return of the mocked serializer... which does make the test pass, however I would probably recommend instead to configure the mock to return the data we want since that is more in keeping with the unit testing approach and would also be applicable in other situations where we had a ""real"" body instead of a new object() as in this case...I tried substituting the `new object()` with something like:which does passes the test, but as  said, I don't how it will provide checking mechanism for other types of request (as this is a simple Patch request, we are simply passing in a plain `object`, but what about other cases where body will be different)?How should I mock the `object` being passed to the `connection.Patch()` or to `serializer.Serialize()`?",,,,,,
193730561,1133,Issue,"You shouldn't need to mock the object being passed in.You want to do something like:which is setting up the mock `IJsonSerializer` to use the `SimpleJson` impl.**Warning** I do not know if the above works, but I believe that is at least the correct concept.",,,,,,
193732311,1133,Issue,"But then again won't it be the same as before, when directly `SimpleJson.SerializeObject` was being called instead of the interface's `Serialize()`? I mean, we won't be ""mocking"" the body.P.S.: When I tried it, the tests were failing. :cry:",,,,,,
193791079,1133,Issue,does the test I posted earlier work for you?  what about the variant   posted?,,,,,,
193793487,1133,Issue,"'s variant works , but not yours",,,,,,
193819326,1133,Issue,"'s variant works , but not yours's is fine to go with.  But just for completeness sake... mine should work too!  Did you replace the entire `RunsConfiguredAppWithAppropriateEnv()` test with my test from above?  It passes for me!",,,,,,
193838957,1133,Issue,"I currently don't have access to my system, so I'll make the changes later, but it should work just fine.",,,,,,
193858332,1133,Issue,I ran your test exactly as above and get the following :(,,,,,,
193963774,1133,Issue,"-Zuber that sounds like you dont actually have the ""fix"" from this PR in place?  It also shows that my test asserts the Serializer passed in is actually used, whilst the other tests didnt actually check this.  Whether this is something these particular tests SHOULD test (or whether it should be covered off by another test) is up for debate though :)",,,,,,
194121878,1133,Issue,"Martin Fowler has a great post about using mocks and stubs. In general, I prefer [state based testing over interaction testing]. With Octokit.net, sometimes that's really difficult by the nature of what we're doing.But in this case, I'd be fine with passing the actual seralizer because it's return value is deterministic. However, I'm also fine with the format that  and  proposed.",,,,,,
194122339,1133,Issue,"It is deterministic because we are passing `SimpleJson` as serailizer and we know its result, but what if the user passes a different serializer (maybe with a different serialization strategy). I'm not sure, but s it possible?",,,,,,
194138819,1133,Issue,- hanging my head. I am going to sleep for a month or so and then I'll come back :),,,,,,
194139946,1133,Issue,#NAME?,,,,,,
194141960,1133,Issue,"No, I wasn't paying enough attention and reporting false findings, thats all.",,,,,,
194273306,1133,Issue,"No, I wasn't paying enough attention and reporting false findings, thats all.Hehe, we've all been there.  Pretty funny you did all the right stuff on the tests, but forgot to actually implement the fix that started the entire PR!  :laughing:",,,,,,
194275906,1133,Issue,"Thanks for your work  and good discussion by all :)Despite using the `SimpleJsonSerializer` for the tests, I feel like now you've added the mock to check that the passed in `ISerializer` is actually being used, that gives us some good coverage if a consumer ever does want to use their own `ISerializer`",,,,,,
194276230,1133,Issue,![LGTM],,,,,,
194311796,1133,Issue,Thanks everyone. -Zuber,,,,,,
193187626,1132,Issue,"LGTM, but I would say there should be a check/manual set to default for the `type` parameter if either `visibility` or `affiliation` are set.just my 2¬¢",,,,,,
193563713,1132,Issue,"With this change, won't there still be an issue if you set a non `Default` value for visibility or affiliation, since the `Type` property still has a value specified that will cause a parameter item to be sent through?So you'd either have to add your `ParameterValue("""")Default` option to `Type` as well or perhaps another approach is to make the enum properties on `RepositoryRequest` be nullable, that way when they arent specified they wont set anything in the parameter array?egWhichever way it's done, I agree with -Zuber it would be useful to check the `RepositoryRequest` in `GetAllForCurrent()` and throw an error if ""invalid"" combination is specified by the consumereg:Perhaps  can advise between the preference of adding a `Default` enum element (that has a blank property value causing nothing to be specified) vs allowing nullable properties?Also when I'm adding functionality to Octokit, I always try to add tests as well, so that from now on we can assert that this problem never re-appears down the track.In this case I would add unit tests to cover:- `RepositoryRequest` - when null (in my example) or `.Default` (in your example) is specified for each property, that corresponding parameter name does not appear in the parameter dictionary created by `request.ToParametersDictionary()` - `RepositoriesClient.GetAllForCurrent()` throws the expected exception when incorrect combination of flags is provided",,,,,,
193627776,1132,Issue,"Perhaps  can advise between the preference of adding a Default enum element (that has a blank property value causing nothing to be specified) vs allowing nullable properties?I'd rather these be optional parameters as that's the precedence we have for handling values that may be set. And as per the docs, there's [documented] default behaviour here for all these values if they're not set:I have some concerns that I should have raised earlier. Consider this scenario:This is a valid object to create, however it will fail during the request. Do we guard against that, or just bubble up the exception to the user? There's an escape hatch we have to override `RequestParameters.ToParametersDictionary` and verify that a valid set of parameters are provided - and throw otherwise.Anyway, :thumbsup: to throwing more unit tests into this area - `RequestParameters` is very important, and I'd hate to introduce something unexpected here.",,,,,,
193795112,1132,Issue,I made the properties nullable instead of Default enum parameters and added unit tests for RepositoryRequest ToParamatersDictionary.,,,,,,
193818439,1132,Issue,Nice work on the parameter array unit test :)While we're here I wonder if we should tweak the `DebuggerDisplay()` on `RepositoryRequest` since it doesnt list the Affiliation or Visibility properties plus it outputs field names for the other fields that can now be blank?,,,,,,
193827450,1132,Issue,"Yeah, I was thinking about `DebuggerDisplay` too yesterday.:)For null values, shoud we output something like `Visibility: ` or remove the property from the output?",,,,,,
194278282,1132,Issue,"For null values, shoud we output something like Visibility:  or remove the property from the output?I think the way you've done it is good (if the values are null, don't mention them at all).LGTM - I'll just wait for a +1 from  before merging",,,,,,
194588178,1132,Issue,Looks good to me! Thanks !![]And thanks -Zuber  for helping out with the review!,,,,,,
193162077,1131,Issue,thanks!,,,,,,
193162257,1130,Issue,Fixed by #1131,,,,,,
193162675,1130,Issue,:+1:,,,,,,
193119245,1128,Issue,Sorry about this...,,,,,,
193119051,1121,Issue,I'd love to hear a bit more about what you're trying to do. Please have a read of [this section] of our README and open a new issue with some more details...,,,,,,
193025073,1120,Issue,"Some initial thoughts:- the `/repositories/:id/` is not included in the response payload for a repository, e.g.  or - the only place I can find a mention of this is in the [search results API]- I can see `octokit.rb` has support for passing an `Integer` [here]. I can't see an equivalent for `octokit.objc` but perhaps I'm not looking in the right spot. If one desires to build an application that is resilient to change (e.g., repositories changing names, changing owners, owners changing name, etc.) then the application should be built against the repositories API rather than the repos API.This should be covered by the [API supporting redirects] which Octokit now follows correctly.   This is still not great though as it can race and lead to very unexpected behavior if you are in the middle of a complex transaction (spanning multiple API calls) when the repository moves out from under you.I'd love to hear more about this scenario and what you're looking to build here. With most of our operations (whether returning a task or an observable) we're interested in getting the data as soon as possible. If that scenario isn't suitable for your use case, perhaps there's something we can be doing in Octokit to address this.",,,,,,
193027652,1120,Issue,"Unfortunately, I am pretty sure that repository redirects can be subverted by new repositories and new users.  If I create `Zoltu/Foo`, then rename it to `Zoltu/Bar`, I can then create a new `Zoltu/Foo`.  If someone tries to go to `Zoltu/Foo` before I created the new `Zoltu/Foo` they will correctly be redirected. If they try to navigate to `Zoltu/Foo` after I create the new repository though they will be taken to the new repository.To make matters worse, in the case of a name change a malicious user can actually mount an attack.  Lets say `Google` decides to change their name to `Abc` within the GitHub organization.  If they don't have the foresight to also create a new user to reclaim the `Google` name then a malicious user can create a user named `Google` and copy all of `Google`'s repositories over from `Abc`.  Now they can inject subtle backdoors, security holes, etc. into every repository and anyone who is going to `Google/Foo` (because they have a bookmark or old link in a blogpost etc) they will instead get `Google/Foo` + evil code.See: You are right, the `/repositories/:id` endpoint is not documented well, and I am not sure why that is.  I can only assume it is because most users are familiar with the `owner/name` nomenclature and having a second endpoint with an `id` that no one ever sees could be confusing to new API users.As for what I am doing in my project, I am maniuplating repository objects via the GitHub API, primarily because library support for the GitHub API is superior to library support for the git protocol (which is a separate can of worms).  In this case, interacting with a git repository via Octokit from an application is significantly easier than trying to use something like libgit2 (or any of the wrappers around it), especially when you want to work with the repository in-memory (not clone to disk).The most important bit for my scenario is that I am saving repository references in my own database for extended periods of time that would make my application susceptible to the above type of attack.  At the least, I would need to save the `id` and resolve it to an `owner/repo` before doing any real work (which occurs over the span of about a minute).  This would limit the surface area of an attack down to a small enough window of time that it is no longer an immediate problem.Perhaps as a middle-ground, there could be a single method in Octokit that allows me to resolve an `id` into a `owner/repo`?  I believe at the moment I am going to have to manually hit the API (without Octokit) in order to do that resolution before proceeding to use Octokit.",,,,,,
193034434,1120,Issue,"thanks for the extra information - and yes, there are certainly ways to subvert the process.I had a chat with one of the API team just now and he told me that we intend to support `/repositories/:id` (even if it isn't documented) in the long term. I think I'm going to spin this out into a GSoC task for someone who is interested in contributing - unless someone else wants to claim it...",,,,,,
193189401,1120,Issue,I've opened this up as a potential GSoC activity over in,,,,,,
193543914,1120,Issue,"Hi , So I stumbled into this while browsing through the GSoC idea list, and yes I am interested in working on this. I have done C# programming for the past few years (in Unity3D, to be specific). I am fairly new to this project, though. Are there any ways, may I ask, that I could catch up with the project other than reading through the repo?Thanks! I really appreciate it!",,,,,,
193557333,1120,Issue,"have a look at our documentation -  - it's not 100% covered, but will give you an idea of the basics. Also, the open pull requests for the repository will give you an idea of what's in flight and how we work...",,,,,,
193560648,1120,Issue,Thank you sir! I appreciate it!,,,,,,
193825276,1120,Issue,"Hello.While i was browsing the ideas list for GSoC i came across your project and i'm interested in working with this project. I've done some work in C# in the past years, some of it as a junior developer for some small to mid companies and also some internships in order to get my bearings on what's to come when i'm finished with my degree. That asides, i'm fairly new to the project as well and i'm now on the process of reading the docs and i've got the project migrated to my machine.Also i'm currently checking the easy-fix items listed and see if i can help out any way. I think that's a good idea on how to connect with the project and see it's inner workings.",,,,,,
194968692,1120,Issue,"Hello, ! I want to implement this idea during GSoC 2016. I know that application period starting since 15 March and I will send my proposal after this date with usage of application form, but I have done some investigation of this task right now.I think that we could create overloaded method that use repository Id as main parameter for each method that use owner and repo name as their parameters. This is  example:I found about 29 client interfaces in Octokit project that use owner and name of repository parameters, so we could create overload for each of theirs methods (I have counted about 175 methods in these interfaces).I think that usage of such overloads is more preferable  than creation some kind of abstract concept of Repo (as was suggested by  in first message), because we get more simple and clean interfaces.So, my proposal is create overload for each method that use owner and name parameters now and create test case for each of them.",,,,,,
195071163,1120,Issue,that all sounds reasonable,,,,,,
195076249,1120,Issue,:+1:,,,,,,
224547350,1120,Issue,"This post describes the work I've done for the GSoC 2016. Here are presented all PRs that I've created in order to add support into Octokit.NET for lookup by repository Id throughout GitHub APIs. I'm going to send the link to this post as work product submission for final evaluation of GSoC 2016. Here are additional links:- [Octokit.NET 0.21] - first release of Octokit.NET with the repository Id support. Here is a cite from release notes:    > This release adds support across Octokit.net for providing the repository Id  > rather than a name/owner pair. The repository Id does not change when transferring  > ownership of a repository, and is more robust for API callers. This work  > was lead by  as part of Google Summer of Code 2016.- [Merged repository id PRs] - the link on merged PRs that I've created during GSoC 2016.I want to say big thank you for all people that help me during GSoC period, especially for my mentor . :+1: :pray:  Also I want to say big thank you for  for help in review and merge of so big amount of PRs. :+1:  :pray:Full list of clients that were changed during GSoC 2016:- [x] Collaborators #1387 (IRepoCollaboratorsClient, IObservableRepoCollaboratorsClient)- [x] Comments #1344 (IRepositoryCommentsClient, IObservableRepositoryCommentsClient)- [x] Commits #1345 (IRepositoryCommitsClient, IObservableRepositoryCommitsClient)- [x] Contents #1348 (IRepositoryContentsClient, IObservableRepositoryContentsClient)- [x] Deploy Keys #1351 (IRepositoryDeployKeysClient, IObservableRepositoryDeployKeysClient)- [x] Deployments #1352 (IDeploymentsClient, IObservableDeploymentsClient)- [x] Forks #1356 (IRepositoryForksClient, IObservableRepositoryForksClient)- [x] Merging #1346 (IMergingClient, IObservableMergingClient)- [x] Pages #1357 (IRepositoryPagesClient, IObservableRepositoryPagesClient)- [x] Releases #1370 (IReleasesClient, IObservableReleasesClient)- [x] Statistics #1371 (IStatisticsClient, IObservableStatisticsClient)- [x] Statuses #1360 (ICommitStatusClient, IObservableCommitStatusClient)- [x] Webhooks #1361 (IRepositoryHooksClient, IObservableRepositoryHooksClient)- [x] Blobs #1362 (IBlobsClient, IObservableBlobsClient) - [x] Assignees #1367  (IAssigneesClient, IObservableAssigneesClient)- [x] Commits #1366 (ICommitsClient, IObservableCommitsClient) - [x] DeploymentStatus #1368 (IDeploymentStatusClient, IObservableDeploymentStatusClient) - [x] Events #1375 (IEventsClient, IObservableEventsClient)- [x] Issue Comments #1379 (IIssueCommentsClient, IObservableIssueCommentsClient)- [x] Issues #1380 (IIssuesClient, IObservableIssuesClient)- [x] Issue Events #1373 (IIssuesEventsClient, IObservableEventsClient)- [x] Issue Labels #1393 (IIssuesLabelsClient, IObservableIssuesLabelsClient)- [x] Milestones #1392 (IMilestonesClient, IObservableMilestonesClient)- [x] Notifications #1390 (INotificationsClient, IObservableNotificationsClient)- [x] Pull Requests #1394 (IPullRequestsClient, IObservablePullRequestsClient) - [x] References  #1391 (IReferencesClient, IObservableIeferencesClient)- [x] Starring #1389 (IStarredClient, IObservableStarredClient)- [x] Tags #1363 (ITagsClient, IObservableTagsClient)- [x] Git Trees #1369 (ITreesClient, IObservableTreesClient)- [x] Watching #1372 (IWatchedClient, IObservableWatchedClient)- [x] Commit Comment Reactions #1382 (ICommitCommentReactionsClient, IObservableCommitCommentReactionsClient)- [x] Issue Comment Reactions #1383 (IIssueCommentReactionsClient, IObservableIssueCommentReactionsClient)- [x] Issue Reactions #1384 (IIssueReactionsClient, IObservableIssueReactionsClient)- [x] Pull Request Review Comment Reactions #1385  (IPullRequestReviewCommentReactionsClient, IObservablePullRequestReviewCommentReactionsClient)- [x] Pull Request Review Comments #1395 (IPullRequestReviewCommentsClient,   IObservablePullRequestReviewCommentsClient)- [x] Repositories #1397 (IRepositoriesClient, IObservableRepositoriesClient)",,,,,,
235749328,1120,Issue,This will be available in Octokit 0.21 which is almost ready to :ship:,,,,,,
192951713,1119,Issue,"My best guess is that it was meant to be passed on [here][That class] controls how serialization happens, but provides a ctor that sets a default implementation, so it seems not passing it on was overlooked.",,,,,,
192954401,1119,Issue,"So, it should be passed on?Should I open a PR?",,,,,,
192966336,1119,Issue,I would think so. A PR is probably a good way to get feedback. Worst case scenario you change the PR to remove the parameter from the ctor,,,,,,
193015155,1119,Issue,"we have a large suite of tests which will help catch any unexpected behaviour, so please investigate and see if this can be cleaned up.",,,,,,
193397259,1119,Issue,"-Zuber Please, take a look at the mentioned PR @ #1133.",,,,,,
193114713,1118,Issue,"While we're in here, could you look at making the whitespace consistent? It's probably my fault that there's some inconsistencies in here...",,,,,,
193117685,1118,Issue,this looks good - just that one improvement to the message and some cleanup of the whitespace and I think this is good to go!,,,,,,
193243252,1118,Issue,"I'll do the suggested changes. Yesterday, the Travis CI build was failing, how come it passed today? I tried to understand why it was failing but I couldn't.",,,,,,
193270739,1118,Issue,Unfortunately we are sometimes seeing unrelated failures on the linux and/or OSX travis CI builds.#1076,,,,,,
193285176,1118,Issue,The whitespace inconsistency was in my code and was my fault. I have removed the TODO comment and changed the message.,,,,,,
193525569,1118,Issue,"excellent, thanks for this!![]",,,,,,
192187226,1117,Issue,"Nice pickup, thanks for the contribution!![LGTM]",,,,,,
191187844,1116,Issue,"#### GSoC StudentsMake sure you read  and  and understand how the program works, how proposals are submitted, and all the milestones involved.",,,,,,
194686607,1116,Issue,"Okay, I have read the mentioned issues, I understand about how things have been proceeded so far and agree with all of the points made by  and . I also get the type of abstractions has been planned. And after almost a week of reading docs, timing out tests, digging through the code, and following related issues transitively(there were too many), I had some thoughts about this particular topic. So, here I go: - Too many `ctor`'s - While I was going through the issues, I have seen  expressing his views about having already so many `ctor`'s for `GitHubClient` and adding more is not going to help the situation. I think that **default(optional) parameters** can be a possible solution for this. We can something like this:May be **named parameters** can help here. I don't know about the conventions to be followed here or does this even go well with the use cases.- Per-request options -  once [mentioned] about having per-request basis options. Can we use something a like an `ClientOptions` class which may have options for different types of API to be used, e.g. `Release`, `Gist`, `Issue`, which may have different timeouts and some other options to be passed on `HttpClient`. **Will it be feasible?**- And there is a completely different thing in my mind. Can we use  [Refit] for delegating most of our tasks. As we are already talking about having a type of abstraction to de-couple the `HttpClient`, we can completely delegate the HTTP + Serialization work to `Refit`. [Square](square.github.io)'s [Retrofit] uses a similar kind of abstraction (it uses OkHttp for it HTTP work. I don't know about the performance of `Refit`, maybe  can help. Or, we can fork `Refit` and decouple the HTTP and Serialization work and allow anyone to plug in their ISerializer too (which is also possible right now). Note: I know this may sound crazy, but it just occurred to me as I have worked with Retrofit and I really like how its structured.---Please, be gentle with me, I am new to this project. I really respect this your opinion, these are just some of my crazy thoughts. And please, provide feedback on this.",,,,,,
195994093,1116,Issue,"Can you please review this now? I would really like you feedback on this, so that I can get a more clear idea about how to proceed.",,,,,,
196086468,1116,Issue,"Here's some of my thoughts on this:- regarding ""Too many ctor's"" - I believe this we can resolve this as a side-effect of making `HttpClient` a first-class feature. There's a number of `ctor` dependencies in Octokit which we can (and perhaps should) delegate to the HTTP abstraction, such as:  - `BaseAddress`  - `Timeout`  - perhaps even [`Credentials`]?I wouldn't focus on this area first, but instead keep this in mind as you're exploring how we're using the HTTP stack inside Octokit. - per-request options are still something we'll need to support - but I'd recommend keeping this as simple as possible. A `HttpClient` can set it's own `Timeout` which is applied to all requests (irrespective of what we try and set for each request) so I fear we'll have some issues here troubleshooting just what was set for a request.- switching over to Refit or Retrofit means we _might_ be able to clean up some of our plumbing, but I don't think it will really help us out here. They use a different set of conventions for organizing things, and the work required to port things over would be orthogonal to this work around letting users provide their own `HttpClient` instance for our HTTP operations.I guess the thing to bring this thread together is that we've had various requests in the past to be able to plug things into Octokit's HTTP stack, such as [custom caching]:We also introduced following HTTP redirects natively into Octokit in #808 after it became [a feature of the GitHub API], so we know we can customize our plumbing to suit - how we let others do the same is what I'd like to solve here...Hope this helps!",,,,,,
196487638,1116,Issue,"Can we also pull out the serialization part out of Octokit.NET and server as a separate packages? I know that users can still pass in an `IJsonSerializer` to provide their own serializer, but if we move the serialization work out of Octokit, others can also contribute community-powered Serialization packages for Octokit, e.g. [Nancy] has different NuGets for different serializers. Is it possible? Or is it outside the scope of this project?",,,,,,
196490408,1116,Issue,"we've started a discussion in #1074 about that - the serializations are specific to Octokit's request/response models and the API itself (and `SimpleJson` is internalized too), so I'd love to understand the scenarios and value that extracting it would permit...",,,,,,
196492656,1116,Issue,"Thanks , I'll go through them first.",,,,,,
197229298,1116,Issue,"While on the topic of delegating things to `HttpClient`, should `ProductHeaderValue` be specified in the client or not? Since this should be added as a header to every request, I think its better to move in into the client. Users wanting to use other clients, can just add a custom header for this. `IGitHubClient` passes it on to `IConnection` anyways.P.S.:  I want to discuss this project in detail, and long conversation might not be a good fit here. Can you chat on Gitter?",,,,,,
197608830,1116,Issue,"Since this should be added as a header to every request, I think its better to move in into the client.This seems reasonable, however we need to ensure that [a User-Agent header is set]. I want to discuss this project in detail, and long conversation might not be a good fit here. Can you chat on Gitter?I'd rather do things publicly wherever possible, as there are others here who are familiar with Octokit and may be able to answer your questions - rather than myself being a blocker. But yes, I can keep an eye on Gitter...",,,,,,
198309767,1116,Issue,"I looked at #985, and it seems like you have done much of the work, e.g. marking obsoletes, creating stubs, etc. So then, how much work is left in this project?Sidenote: Why didn't you merged that PR?",,,,,,
198323860,1116,Issue,"So then, how much work is left in this project? Sidenote: Why didn't you merged that PR?Don't take my previous work as gospel here - I was exploring it and opened the PR to gather feedback. It didn't really get to the point where it was mergeable due to how much is involved with the HTTP stack, but hopefully the lessons learned help out with the work on this PR...",,,,,,
198384082,1116,Issue,"That's good, cause it will be useful as a great reference. :+1:",,,,,,
191185948,1115,Issue,Do we really want to go through the port now? Wait a week or two and see if they come up with a a date and based on that decide if we will wait for RC2 to start porting? If we are starting now I would say the first thing to figure out is nuget package creation. Say pick two random profiles from the list we want to support and see what it takes to get the build to produce the packages correctly,,,,,,
191190218,1115,Issue,"If we are starting now I would say the first thing to figure out is nuget package creation. -Zuber Just fyi, the GSoC student proposal application period starts March 14 and ends March 29, and the official coding period for the program doesn't start before May 29. ""Now"" is quite a ways away for GSoC :smile:",,,,,,
191190313,1115,Issue,"#### GSoC StudentsMake sure you read  and  and understand how the program works, how proposals are submitted, and all the milestones involved.",,,,,,
191205447,1115,Issue,"Just fyi, the GSoC student proposal application period starts March 14 and ends March 29, and the official coding period for the program doesn't start before May 29. ""Now"" is quite a ways away for GSoC :smile:I missed that connection :grinning:",,,,,,
193165535,1115,Issue,"Hello developersI am Prayank Mathur, currently pursuing my final yr in Computer Science & Engineering from Indian School of Mines, Dhanbad. I have had previous experience working in the C#  .NET framework where i developed an automation tool for Microsoft IDC during my summer internship last year. The main aim was to create an automation tool that can automate the testing of the daily builds of Word Android app on various android devices.I also developed an Employee Database Management System for Tata Steel in vb using the .NET framework during  summer'14.I have done 2 mini projects on C# .NET framework too.I am really interested in the octokit project and would like to get started on the same. Please suggest me with some warm up tasks. I have read the above mentioned document.ThanksRegardsPrayank Mathur",,,,,,
193177319,1115,Issue,we have a few outstanding tasks marked [easy-fix] - please check them out!,,,,,,
193485272,1115,Issue,"Someone asked me in another channel to summarize .NET Core in relation to the .NET Framework. Here's a quick brain dump:- .NET Core is a subset of the .NET Framework which runs on Windows, Linux,  OSX and other operating systems- The [CoreCLR] (the runtime for .NET Core)  is an open source repository- Core libraries for .NET Core is distributed via NuGet packages - the   [CoreFX] repository has all the source for  the .NET Core libraries- Various APIs have not been ported over to .NET Core  - features which are Windows-specific - e.g. WPF, WinForms  - features which are not suitable for their v1 target of running webapps  - APIs which are not intended to be supported long-term- The other part of this project the [dotnet CLI],  which allows you to build and run programs which target .NET Core from the  command line - this is just now available to test, but not quite v1This is different to the Portable Class Library targets, which were designed to simplify the platforms you targeted, but were limited to where .NET was already running - e.g. Mono/Xamarin/.NET FrameworkOctokit.net already has a PCL profile that's suitable to migrate to .NET Core, so most of the work around this will likely involve migrating to the [project.json] format to define the dependencies and platforms that Octokit needs to support, and also testing to verify that there are no unexpected issues with running on .NET Core so that we're ready to be used when .NET Core 1.0 RTMs",,,,,,
194833253,1115,Issue,"What parts of the project we will be needing to re-write to make this .NET Core compatible? I mean, how much code is there which is .NET Framework specific and not available in .NET Core or is never going to be?",,,,,,
195055279,1115,Issue,"currently we juggle different csproj files for each target. I think a bulk of the work will be in porting those over to a unified project.json file - this will then allow us to add the new targets for the various [.NET Platform Standards] available around .NET Core and verify that these can be built (we might need to introduce some `#ifdef` but I think that's minor).After that, we'd need to look at packaging as `project.json` can also be used to create packages ""for free"" - but we do some customization like incorporate [Linqpad] samples and [SourceLink] the PDBs so the source can be stepped through easily.",,,,,,
195060079,1115,Issue,"So, the different types of project which target .NET Framework e.g. Octokit, Octokit-Net45, Octokit-Portable, etc. will be unified in a single codebase and `project.json`. And it will generate different NuGet packages for different targets?Also, the Mono and Xamarin ones will still be kept as different projects or they are going to be dissolved in favour of the X-platform .NET Core? What is going to happen to them?I read a [blog], which said that setting `dotnet` as target in `project.json` means we are specifying that our project is compatible with any platform our dependencies are compatible. So, does this mean we will have to make sure we have no dependencies which are not available on .NET Core?Am I on the right track?",,,,,,
195068102,1115,Issue,"And it will generate different NuGet packages for different targets?One package (with multiple targets inside) is generated from a project.json file - hence the unification stuff. But this also raises headaches as we have been building the package from hand before. Also, the Mono and Xamarin ones will still be kept as different projects or they are going to be dissolved in favour of the X-platform .NET Core? They should stay around - the platforms are mentioned in the .NET Platform Standards document linked to above, but I've not explored this in practice. I read a [blog], which said that setting dotnet as target in project.json means we are specifying that our project is compatible with any platform our dependencies are compatible. So, does this mean we will have to make sure we have no dependencies which are not available on .NET Core?Kind of. `dotnet` was the name intended for to represent various API sets - to simplify targetting various flavours of .NET. That article is now not accurate - these are now named `netstandard`, but the details are largely the same.How this looks in practice is that you specify the _version_ of netstandard inside a project.json file, like this:The new `dotnet` CLI tools will then try and build your code for each of the `framework` entries defined, and the build outputs become the contents of the NuGet package.Have a closer read of [this document about .NET Platform Standards] as they've gone into a lot more detail - and it's more up-to-date.",,,,,,
195072429,1115,Issue,"Thanks for clearing that out. :+1: One question though, from [here], .NET Core (netstandard) class libs are already supported on some of these platforms, e.g. net45, net46, win8, etc. So, will they also be continued or merged into one?P.S. Next time, I'll ask you on **Gitter**.",,,,,,
195073046,1115,Issue,"I'd like to keep the existing platforms around for now - there may be some platform-specific features that aren't present in the `netstandard` equivalent. I'm involved with another project which is undergoing that process, so I definitely believe it's acheivable.",,,,,,
196724235,1115,Issue,"currently we juggle different csproj files for each target. I think a bulk of the work will be in porting those over to a unified project.json file - this will then allow us to add the new targets for the various .NET Platform Standards available around .NET Core  How exactly do we port a csproj file to project.jsonDo we have to do it manually defining each and every dependency as mentioned [here] or is there a tool available ?And once that is done, we then need to modify the build.fsx file to incorporate the changes ?And after that see what all errors creep in and try to rectify it using #if Am i right ? After that, we'd need to look at packaging as project.json can also be used to create packages ""for free""You mean Nuget packages right ?",,,,,,
196797404,1115,Issue,"I guess it is done by hand right now. But there must be tools available.Maybe we will have a unified project.josn which will target the current .NET Framework, .Net45 and PCL, which all have different projects right now. And the project.json will just contain definitions for different targets (their dependencies). You can take a look at the [`target-the-coreclr`] branch for reference. can confirm.",,,,,,
197056360,1115,Issue,"How exactly do we port a csproj file to project.jsonThere are no tools to convert a `csproj` over to `project.json`, but it's easy to add a project.json (and the `.xproj`) alongside the existing `.csproj` to help with the transition. An earlier example of this can be seen [here] although that's rather out of date. Do we have to do it manually defining each and every dependency as mentioned here or is there a tool available ?One of the benefits of this new approach is that you can define a `dependencies` array that will use packages (or local projects) which are applied to all `frameworks` - instead of duplicating entries. And once that is done, we then need to modify the build.fsx file to incorporate the changes ?We may not need to change much here. If not, we'll need to look at using the [`dotnet` CLI] tools here...  You mean Nuget packages right ?Yes",,,,,,
197057105,1115,Issue,"exactly - one `project.json` file can target many frameworks, and can replace the multiple `csproj` files we currently maintain. Because the project.json file supports wildcard expressions to include code, like this:We can drop the `.\build FixProjects` script we have to ensure all the `csproj` files are in sync - and no more merge conflicts from `csproj` files!!!",,,,,,
197063250,1115,Issue,Do you believe this task is gonna take 2 months if we only have to do things that is discussed in this meta issue.I think we can finish it fast once everything is figured out step by step on how to do it .Am i right or this is gonna take time because i haven't have any experience in writing a project. json from .csproj ?,,,,,,
197068824,1115,Issue,"2 months of part-time work (this could just be a few hours each week), including integrating this into the process, shipping preview packages and testing, plus allowing for unexpected upstream issues that might occur with pre-release packages feel about right...",,,,,,
207418798,1115,Issue,"Hi,OK, as I said before (#1257), CoreCLR has a functioning HttpClient (System.Net.Http), it is included in .NET 4.5 and .NET Core, so it will work on ASP.NET Core.Use System.Net.Http.HttpClient to communicate over HTTP with GitHub web services. And you need to remove Microsoft.Net.Http (whitch it depend to two other packages :wink:).So Depends on the version. When using the version [System.Net.Http] >= v4 Which works with both dnx451 and dnxcore50, Microsoft.Net.Http.HttpClient is depricated bcz its already in [System.Net.Http].PS: as you can see here [System.Net.Http < v4], System.Net.Http it depend on [Microsoft.Net.Http]",,,,,,
212012714,1115,Issue,So . whats the status of this issue ?!,,,,,,
212140728,1115,Issue,"I've been experimenting with .NET Core for the upcoming RC2 bits (not on this project, on something more complex). My current focus is wrapping up the `ApiOptions` release, and by the time that's done I think the RC2 tooling bits like `dotnet cli` should be ready for mainstream.However I've got way too much on my plate these days (and over the coming months) and none of it needs .NET Core support, so I'd love it if someone stepped up for this based on needing it for their usage...",,,,,,
226102949,1115,Issue,As I'm about to embark on a new .NET Core side project in which I'd (most likely) like to use Octokit I can have a look into this one,,,,,,
226103993,1115,Issue,now that Rx.NET preview packages supporting .NET Core are available - [details here] - this is now something we can start exploring. You're more than welcome to dive in!,,,,,,
226543509,1115,Issue,"I don't think that converting to `project.json` is going to be required, since all .NET projects will use the `.csproj` file. After looking at our choices, it was apparent that it would be easier to move .NET Core projects to .csproj/MSBuild so all .NET projects use the same tooling and build system. [(More on this here.)]In a couple of weeks the RTM will be released, so I think it would be a great moment to start working on porting to .NET Core.What do you people think?",,,,,,
226647903,1115,Issue,"Okay, so now I can finally talk about porting Rx.NET to .NET Core, have a look at our setup for one of the projects:Feel free to repurpose this to suit - these bits are ready for GA in a couple of weeks.",,,,,,
229279880,1115,Issue,"I'm sorry to say it but, I thought I was in a position to have a crack at this, but it turns out I'm not...so I'm walking away from it. Thought I'd just mention it here so if someone else wanted to pick it up they don't need to confirm the status from my side.",,,,,,
271434144,1115,Issue,Closing this out in favour of #1419 which has more information and is more recent.,,,,,,
187960357,1114,Issue,"So the behavior you see is exactly what I'd expect because the API doesn't stream the response to us. What happens is we request page 1, when we get the response, we stream them to the subscriber and make request 2. When that request returns, we stream page 2 and make the request for page 3.Notice that each timed chunk is 30 results. That's exactly the default page size.",,,,,,
187971240,1114,Issue,"thanks for the extra info. It didn't quite match up with what I was seeing from the network traffic (the delay looked like the cumulative time spent fetching those requests), so here's me embedding some extra tracing and running it against `master` again:I also felt I ran into this while doing #760, as well as a few little pet projects, so I'll go back and test that again...",,,,,,
187983423,1114,Issue,"the delay looked like the cumulative time spent fetching those requestsIf that were the case, we'd see a really long delay followed by _every_ item being printed with nearly the same timestamp. Instead, we're seeing timestamps chunked in groups of 30.",,,,,,
187986743,1114,Issue,Just tested #760 and this behaviour remains the same. Closing it out as PEBKAC.,,,,,,
186093442,1113,Issue,Fixes bug #1102,,,,,,
186098163,1113,Issue,-kokorin flawless victory!![],,,,,,
187159465,1112,Issue,"I pushed up the final change, to implement the extension methods as mentioned in #1106 Mac and Linux builds failed but I can't see anything obvious...   can you spot anything or do they just need a kick?",,,,,,
187328693,1112,Issue,"I pushed up the final changeThe description still says ""Do not merge!"" :laughing:",,,,,,
187380122,1112,Issue,"The description still says ""Do not merge!"" :laughing:Ah yeah, I meant I'd finished coding but still needed to rebase once the other PR's were mergedWhich is now done!  Finger's crossed the builds behave this time :grinning:",,,,,,
187402368,1112,Issue,"Damn, we were on a roll there for several days where the linux/osx builds didnt have any issues, but it seems we are back to the `System.TypeInitializationException: The type initializer for 'System.Collections.Generic.List`1' threw an exception. ---> System.Threading.ThreadAbortException:` issue :angry:I don't think it's related to any changes, just another case of #1076",,,,,,
188226222,1112,Issue,Cool thanks for giving the builds a kick! are you happy with the obsolete approach? i kept the extension methods pretty much as they were so I assume that works for you guys in the desktop client.  Would be interested to know if you use all 3 extension methods or whether any of them could be dropped...,,,,,,
188451360,1112,Issue,"after looking into it, we only use `HasSameDataAs`. Let's drop the extension methods and I'll just move them into our own code.",,,,,,
189316280,1112,Issue,Let's drop the extension methods and I'll just move them into our own code.Done,,,,,,
190455278,1112,Issue,Any other feedback before I hit the button?,,,,,,
190467985,1112,Issue,:shipit:,,,,,,
190514600,1112,Issue,"Woohoo, my first self merged PR.  That deserves a celebration :beers: ![LGTM]",,,,,,
190523887,1112,Issue,![],,,,,,
184447141,1111,Issue,"not sure whether this is an outstanding issue, but here's how I'd do this without using `ApiConnection` directly (this is using 0.18.0):",,,,,,
184458678,1111,Issue,thanks for the example of codeThe issue seems to be when I call the code in the controller asp.net mvc 5The call to GetAllContents hangThe same code in a console app work.,,,,,,
184461232,1111,Issue,"to be honest, I'm not sure how this might be deadlocking.We have the `ConfigureAwait` setup [inside GetAll] so perhaps making this method `async/await` might change the behaviour (rather than blocking using `.Result`).",,,,,,
206640324,1111,Issue,thanks for the extra info - I've opened #1248 which cleans this up,,,,,,
251259697,1111,Issue,This was fixed by #1248 (apart from a few additional ones which were possibly introduced after #1248 anyway... #1483 is tackling those),,,,,,
184059437,1109,Issue,"Just to clarify, I didnt have a current ""real world"" use case, it was more I was in the same situation as you... when writing unit tests for octokit.net API implementation, it would have been useful to just check that the passed response object was ""equal"" to the one I expected, rather than having to check various sub properties of the objecteg Im sure I could have written those checks better anyways :P",,,,,,
184967322,1109,Issue,makes sense to me. `IComparable` is more for sorting items. Doesn't seem like a thing you'd do with response objects.,,,,,,
185006786,1108,Issue,"This is built on top of #1108 which is not yet mergedUmm, this _is_ 1108. :stuck_out_tongue:",,,,,,
185085927,1108,Issue,"Lol, too many PR's! Meant to say #1099",,,,,,
187127714,1108,Issue,"Now #1099 is merged, this one has been rebased and squahsed, builds/tests passing... ready for your attention   Thanks",,,,,,
187328473,1108,Issue,![],,,,,,
193120155,1107,Issue,"What do you mean by ""be smarter with the defaults""?Do we need to add something like Default/NotSpecified (with null value) as a default value to Visibility and Affiliation enums?",,,,,,
194588289,1107,Issue,Fixed in #1132,,,,,,
183807742,1106,Issue,"I knew this code lived somewhere (ignore the second TODO comment):So yes, the methods on `ISshKeysClient` should be added to `IUserKeysClient` - and `IGitHubClient.SshKey` should be marked as obsolete for removal as it doesn't align with the API.",,,,,,
184660739,1106,Issue,"I knew this code lived somewhere Ah right, we even use that `SshKeyClient` at the moment but I was tunnel visioning on the `User.Keys` side of things and didnt think that they are the same thing!  So yes, the methods on ISshKeysClient should be added to IUserKeysClient - and IGitHubClient.SshKey should be marked as obsolete for removal as it doesn't align with the API. i'm in the process of doing this now, all the methods are transferred but I have some questions about the obsolescence stuffI've marked `IGitHubClient.SshKey` obsolete but that doesn't actually flag several use cases...  So should we actually also mark `GitHubClient.SshKey` obsolete (that gets anybody using a `GitHubClient` rather than an `IGitHubClient`).   Then we need of course the `Observable` and `IObservable` versions as well.  Do we go as far to make the actual class `SshKeysClient` or it's interface `ISshKeysClient` obsolete so that anybody who directly creates those clients would get the warning?  Given so many places are required to really catch most use cases, I wonder would it actually be better to simply mark the actual `Get()` `GetAll()` `Create()` `Delete()` methods as obsolete (on the interface and concrete SshKeysClient), that way it doesnt matter whether the consumer uses interfaces or concrete class, the top level client or the low level client... if they invoke any of the methods, they will be advised to move away from them?So apart from the question on the best way to obsolete something, I've also reviewed the associated code/classes and found that the `SshKey` and `SshKeyInfo` classes probably need to be obsoleted as well.The only place `SshKey` is used is within the `SshKeysClient` so once that's obsoleted and eventually removed, it seems the `SshKey` response object should go too?  The `PublicKey` class has all the same fields and is used in `UserKeysClient` which aligns with the API terminology of referring to public keys rather than ssh keys.And how about this [ModelExtensions] class?As per the TODO comment it only deals with SshKeys and should have been renamed to something less generic... but Im more so interested in whether I need to create equivalent extension class/methods for `PublicKey` class (and thus create `PublicKeyInfo` class too) or can these extensions just be dropped (when `SshKey` is dropped, after having been obsolete for a while)?  These `ModelExtensions` are only used in the unit/integration tests (within Octokit) though Im not sure if the intention was that consumers of Octokit would use these helper extension methods to do stuff with the contents of keys?",,,,,,
184925080,1106,Issue,:thumbsup: to obsoleting the methods rather than the types - that's going to put it in front of impacted users much more clearly,,,,,,
184926735,1106,Issue,"And :thumbsup: to obsoleting `SshKey` - the API documentation refers to ""public keys"" so let's follow that convention...",,,,,,
184928610,1106,Issue,"Let's port those extension methods over to `PublicKey` and mark the `SshKey` variants as obsolete.EDIT: good point on the ""only used in tests"" thing. Mark these versions as obsolete, move the new variants into the tests (we don't have a shared project for test helpers, which might get in the way here).",,,,,,
185209457,1106,Issue,"EDIT: good point on the ""only used in tests"" thing. Mark these versions as obsolete, move the new variants into the tests (we don't have a shared project for test helpers, which might get in the way here).Further investigation showed that these extension methods arent even used by any tests other than the unit tests FOR the extension methods themselves (ie `ModelExtensionTests.cs`)Perhaps the 3 extension methods and `PublicKeyInfo` class dont even need to be created at all?Unless there was some intention that this helper method was exposed to octokit consumers to do stuff with.  It's pretty basic anyway, not sure if there would be a real world use case.   ?",,,,,,
185499215,1106,Issue,"Unless there was some intention that this helper method was exposed to octokit consumers to do stuff with. It's pretty basic anyway, not sure if there would be a real world use case.  ?We use these extension methods in GitHub Desktop. I'd like to keep them, but :+1: to renaming it from `ModelExtensions` to something more specific. I think the intent was we'd have more extension methods for working with models, but so far, we don't. :smile:",,,,,,
185531962,1106,Issue,"So given that `SshKeyInfo` isnt a response class but just a helper class, what would say if we created the `PublicKeyInfo` class to replace it, and in it's constructor it took a `PublicKey` item eg `var keyInfo = new PublicKeyInfo(key)` and/or had static `PublicKeyInfo.FromPublicKey(PublicKey key)` or do you really want it to be an extension method on `PublicKey` itself?",,,,,,
185974417,1106,Issue,"or do you really want it to be an extension method on PublicKey itself?I think the benefit of the extension methods is it made the helper class more discoverable. As you pointed out, the helper class is _not_ a response class so most users of Octokit.net won't know it exists.However, I don't feel too strongly either way, so whatever you feel is the best design here.",,,,,,
183612301,1105,Issue,what version of GitHub Enterprise are you running?,,,,,,
183613111,1105,Issue,"I'm also not sure of a real-world example with that sheer number of tags, so I could test it on my end to understand the behaviour better. Asking around.",,,,,,
183805899,1105,Issue,"Just ran a simple test against  to illustrate some of the pain that's occurring here (note that Paket only has 1185 tags): Or statistically:Look at that cascading, it's so beautiful...Switching over to `this._gitHubClient.Git.Reference.GetAllForSubNamespace(owner, repo, ""tags"");` only requires one request to get all the required references.We haven't tweaked the pagination defaults in Octokit (so it defaults to 30 as per [the docs]) but that could be a quick win for situations like this. I'm thinking about ways to introduce this broadly across the codebase, so the caller can control it if they want, but that's in #760 and has kinda stalled.",,,,,,
192840960,1104,Issue,"I have fixed the issue. For an optional value it gives the option to change or remove the value, for a necessary value it doesn't give an option. this is how it looks like now.![powershell]Please tell me if its what you wanted, and I'll send a pull request.the files at the top has a TODO-"" # TODO: this should indicate whether a variable is required or optional."" It indicates if the property if required or optional when setting the value, where else should it indicate?",,,,,,
192847510,1104,Issue,that sounds like it's on the right track - I'd love to review the work you've done here...,,,,,,
182718529,1103,Issue,I'm on my phone so I was only able to fix the spelling. I'll assume the errors from ci are due to merge conflicts. Will deal with it when I'm in the office //,,,,,,
184871986,1103,Issue,is this good to go?,,,,,,
184919002,1103,Issue,Looking good! One minor question.,,,,,,
185575859,1103,Issue,any chance we can wrap this up without more merge conflicts :wink:,,,,,,
185834333,1103,Issue,![] Thanks!,,,,,,
185843079,1103,Issue,Mad skills with the ball :grinning:,,,,,,
182363445,1102,Issue,"Looks like that function inadvertently passes `String.Empty` rather than the `reference` parameter into the next call in the chain In the meantime you should be able to use the overload that takes an additional `TimeSpan` argument (pass in 60 minutes if you want the same behaviour as the overload you are wanting to use), to work around the issue.",,,,,,
182617505,1102,Issue,"nice spot - yep, that's a bug",,,,,,
182678250,1102,Issue,Added the `easy-fix` label as I think this is good for someone new to contribute. I'd also like to see a unit test for this to verify that we're passing through the right value.,,,,,,
186428760,1102,Issue,Fixed by #1113,,,,,,
182069803,1101,Issue,"Yeah, that looks like an oversight on our part. It think we should add an overload that accepts an enum with the available permission options.",,,,,,
182069826,1101,Issue,Want to submit a PR?,,,,,,
182070633,1101,Issue,And here I was talking bad about you.Please accept my apologies :smile:,,,,,,
182107820,1101,Issue,Please accept my apologiesLOLOLOL! No apologies necessary. You're usually correct. I happen to be taking a break to try and respond to all the OSS projects I maintain so the timing was lucky.,,,,,,
182190408,1101,Issue,"Just a question on this out of interest...  I think we should add an overload that accepts an enum with the available permission options.Are you saying  that this body parameter should actually be explicitly in the overloaded function, or should it be what appears to be the ""usual"" Octokit way where a Request object is passed in?Just trying to get a feel for the octokit.net conventions, most I had come across seem to use the request object approach, so was surprised to see you mention adding an overload directly taking the enum paramter (unless i misunderstood)Enum directly in Ad functionvsUsing a request object",,,,,,
182207535,1101,Issue,"you're exactly right, it should be a request object. I was being lazy with my words. :smile:",,,,,,
182245110,1101,Issue,"Sweet, my understanding remains intact üòÅ",,,,,,
221268096,1101,Issue,"Also note that as part of this GitHub API change, they indicated that the `permission` parameter when creating and editing Teams is deprecated.  So potentially on our `NewTeam` and `UpdateTeam` request model classes, we should mark that field as `Obsolete`",,,,,,
222051599,1101,Issue,"So potentially on our `NewTeam` and `UpdateTeam` request model classes, we should mark that field as Obsoleteüëç",,,,,,
317288719,1101,Issue,"This was implemented in #1410 but I will raise a new issue to cover this other comment: Also note that as part of this GitHub API change, they indicated that the permission parameter when creating and editing Teams is deprecated. So potentially on our NewTeam and UpdateTeam request model classes, we should mark that field as Obsolete",,,,,,
181546126,1100,Issue,"It's weird, because in 38ef6302ec25d8246361e80cb89bd496ff318dc2 I've now installed `Microsoft.Net.Http` which depends on `Microsoft.Bcl.Build` and `Microsoft.Bcl` - but they're not referenced. But no references are updated in the `csproj`.I _think_ I need `Microsoft.Net.Http` here but perhaps I'm missing something...",,,,,,
181571807,1100,Issue,"Maybe it only adds the references if it's a portable project? (I have no clue)I merged this into my GHfVS branch and it's building/working happily, fyi.",,,,,,
181573136,1100,Issue,"So I'm pretty sure this is just the side-effect of me being lazy with updating packages in #1018. References have been a bit manual in the past so I updated the packages in 38ef6302ec25d8246361e80cb89bd496ff318dc2 - perhaps I didn't build-to-flush-the-changes-to-disk for that project (other projects have the same change).But even though no assemblies are referenced in the main project, it's still adding in the `EnsureNuGetPackageBuildImports` here - which is technically not necessary here.",,,,,,
181574851,1100,Issue,"Maybe it only adds the references if it's a portable project? (I have no clue)There's at least two assemblies in `net45` which aren't referenced by the project: shiftkey  ~/Documents/GitHub/octokit.net/packages/Microsoft.Net.Http.2.2.29/lib/net45 (master) $ ls ensureRedirect.xml               System.Net.Http.Primitives.dll* System.Net.Http.Extensions.dll\*  System.Net.Http.Primitives.xml System.Net.Http.Extensions.XMLBut they're not referenced explicitly, so perhaps I'm just lucky here.",,,,,,
181590207,1100,Issue,"Yeah I went on a rampage trying to fix this but wasn't sure about what this bcl thing is, and given the number of reference updates etc I ended up making, I didn't bother submitting the PR haha. Would be nice to get rid of the annoying errors",,,,,,
181592532,1100,Issue,"which errors are we talking about? The `Microsoft.Bcl` and `Microsoft.Bcl.Build` packages are there to help smooth over issues when targeting certain platforms - `net45` is rather modern, so it's mostly acting as a no-op here. Happy to share more based on past experiences, I'm just not sure what we're looking for here...",,,,,,
181594394,1100,Issue,"He probably bumped into the same problem I had - every single project in the solution that references Octokit suddenly wanted to have the Bcl, Bcl.Build and Http packages added to them, which amounts to a ton of build errors and quite a bit of changes. OTOH, removing this extraneous .targets reference was so much simpler...",,,,,,
181598756,1100,Issue,"He probably bumped into the same problem I had - every single project in the solution that references Octokit suddenly wanted to have the Bcl, Bcl.Build and Http packages added to them, which amounts to a ton of build errors and quite a bit of changes. OTOH, removing this extraneous .targets reference was so much simpler...Yeah, and I don't think we need those anymore, do we? We can choose to not support the platforms that required them. :smile:",,,,,,
181602005,1100,Issue,"every single project in the solution that references Octokit suddenly wanted to have the Bcl, Bcl.Build and Http packages added to themAh, that issue. If that's the case then I'm :thumbsup: for this change. In fact, we could probably do away with the new packages specified [here] - I think that's also to blame here, and the `nuspec` should reflect the correct dependencies needed when installing the package...",,,,,,
181611660,1100,Issue,"In fact, we could probably do away with the new packages specified here Not sure which ones you mean? (it doesn't actually link to a specific point in the diff probably because it's at the bottom of the page and can't scroll down more haha we should probably fix that at some point sigh anyways...)",,,,,,
181612451,1100,Issue,it's meant to link to `Octokit/packages.config` but the browser can't scroll far enough :cry:,,,,,,
181631714,1100,Issue,"which errors are we talking about? Do you mean you dont see the below errors  ?  They dont actually stop the build, but they do show up as errors (Im using VS2015 Update 1 incase that's related)Projects that reference Octokit.csproj say they want to have the Bcl.Build reference due to referencing the Octokit project that has that.  Then other errors complain that Octokit.Tests project doesnt have a packages config file (it's named `packages.Octokit.Tests.config` rather than  `packages.config`).  No doubt if it could find the right file the test projects would also complain about missing references that the Octokit.Tests project has...Often I seem to have the errors from all of the sub projects (eg Reactive, Portable, NetCore45, Mono) but then today when I went to grab this screenshot, it's only Octokit.Reactive that's doing it.  Very odd!",,,,,,
181645951,1100,Issue,"Ah, indeed. I can certainly :fire: those as well!",,,,,,
181672220,1100,Issue,"those errors are interesting.The first one is totally legit, and something we should be able to resolve here, but the second and third ones seem new, because they're not resolving the valid configuration files [in that folder]. Guess we should try and log that upstream at least while we're in here dealing with this.",,,,,,
181690717,1100,Issue,so do you not get those errors?  What IDE are you using?And is upstream in this case Visual Studio itself or nuget or this Build.Bcl package?,,,,,,
181695731,1100,Issue,"oh no, I get those errors. I just wasn't paying attention after updating.Anyway, the issue seems to be inside `Microsoft.Bcl.Build`:It seems like this doesn't care that `packages.$(MSBuildProjectName).config` is also a valid name - I can't find the official docs on this, which concerns me a bit...",,,,,,
181697563,1100,Issue,"So far the best I've found is somebody with the exact same problem on SO, but they've just hacked/patched the Bcl.Build.targets file, to include the `$(MSBuildProjectName)` in the path of the `ReferencedProjectPackagesConfig`.  Which obviously isnt going to dynamically handle either `packages.config` or `packages.$(MSBuildProjectName).config`",,,,,,
181942032,1100,Issue,"I've killed the nuget references too. FWIW, I don't get the Octokit.Tests errors because I'm only building Octokit and Octokit.Reactive on VS (I trust you to run the tests :wink: )",,,,,,
182067322,1100,Issue,that's fine,,,,,,
182077634,1100,Issue,thanks for this!  unfortunately this doesn't resolve the issues we're seeing.,,,,,,
181389750,1099,Issue,"wow, cant believe the builds passed straight up.  not even one mismatched xmldoc comment :grinning: ![giphy]",,,,,,
181393704,1099,Issue,:joy:,,,,,,
183108897,1099,Issue,"OK now that #1073 and #1095 are merged, ive rebased this guy.  Builds have passed too.Should be easier to review now   Please note the notes/comments I put in the PR about some design decisions/considerations I made",,,,,,
183997533,1099,Issue,"thanks for those notes, very informative! However I later found that when a GitHub Enterprise instance has LDAP enabled, all requests that return a `User` or `Team` even the general GET calls, include a `ldap_dn` field, so I have added `LdapDn` field to the `User` and `Team` response objects, the xml doc notes it is GitHub Enterprise only.  This seemed preferable than having to have special types when you wanted the ldap field and it shouldnt hurt any non enterprise users having this null property on those objects.Well that's certainly an interesting undocumented feature! Hooray for JSON. Yeah, this seems fair given how the server is behaving. cc  for objections (if any) So I added overrides to `ApiConnection` and `Connection` classes to suit this situation (POST with no body, that returns a `` response object).  Similar to the `RepositoryContext` helper, I added a helper that allows the integration tests to create a team to run the tests, then clean it up afterwards.:thumbsup: `UpdateTeamMapping` - Team must exist (obviously) and specified LDAP distinguished name is NOT validated.  It can be set to something that doesnt exist and is regarded as a succesful API call (and the new LDAP binding is visible in the team settings on the gui etc). (The team will then be disabled on the next LDAP sync when it realises the group is invalid)I'll have a chat with the team and see if this is supposed to be the behaviour here. The integration tests require a GitHub enterprise instance so wont run as part of Octokit builds currently.  Futhermore this API requires the GHE instance has LDAP binding enabled.  Also note that I have had to censor the ""distinguished name"" properties used in the integration tests so they arent company specific.    The integration tests also do NOT run against the ""current user"" because you dont want to mess with changing the LDAP binding on the user running the tests and potenitally disabling the account or otherwise losing access...  So the integration tests have a `_testUser` property declared at the top of the class:thumbsup:  (at the moment that user has to exist, as the method to add users is not implemented... though even when it was, in an LDAP enabled server any user you create would have to have a valid LDAP binding in the first place i suspect!)This seems plausible. But at least this API is now implemented and anyone who wants/needs to use it can.  We just potentially wont have frictionless integration test execution...Yeah, I appreciate the complexities here. Will have a chat with the team and see if they have any thoughts on this so I can also test out LDAP behaviour.",,,,,,
185203227,1099,Issue,"OK I have renamed to `LdapDistinguishedName` and used the `Parameter(Key = ""ldap_dn"")]` attribute to set the API field name, how does it look now?",,,,,,
185288925,1099,Issue,"OK I have renamed to LdapDistinguishedName and used the Parameter(Key = ""ldap_dn"")] attribute to set the API field name, how does it look now?And that worked?",,,,,,
186746843,1099,Issue,"And that worked?yep!  Had a bit of a delay due to not getting a chance to rerun the integration tests against an LDAP enabled GHE server, but that's all done now and the renamed fields have worked fine :grinning: Ive alsomerged latest master in...  builds have passed for all platformsI think we should be good to hit the button on this one",,,,,,
186951891,1099,Issue,just calling out a couple of cleanup opportunities with `async/await`. Everything else is :gem:,,,,,,
187072829,1099,Issue,ok I can remove those...I've actually done that on alot of the API methods ive added in the last few pull requests.  Want me to raise another PR to clean them all up?eg:[/Octokit/Clients/Enterprise/EnterpriseAdminStatsClient.cs#L58][/Octokit/Clients/Enterprise/EnterpriseLicenseClient.cs#L28][/Octokit/Clients/Enterprise/EnterpriseOrganizationClient.cs#L31][/Octokit/Clients/Enterprise/EnterpriseSearchIndexingClient.cs#L33],,,,,,
187101191,1099,Issue,Want me to raise another PR to clean them all up?Let's come back to this after we've got some of these existing PRs closed out. It's not urgent.,,,,,,
187103461,1099,Issue,![],,,,,,
181600906,1098,Issue,"Is there room to consider creating a wrapper for this?Yes! Probably should be an extension method. That would be a good way to indicate that this is a wrapper and not a 1-1 mapping with an API call. If so, is there also a way to cut down on the calls? Or would it just be for the users convenience?Not that I know of. It would be a nice convenience method.",,,,,,
181745430,1098,Issue,Is there a file for such extensions? If not where do I put it?,,,,,,
182081614,1098,Issue,"In the `Octokit` project we have a `Helpers` directory. You'll notice we have extension classes in there. For example, in this case, perhaps call it a `ReferenceClientExtensions` or `ReferenceExtensions` or something like that.",,,,,,
182602748,1098,Issue,"Where do I put the tests?The `Helpers` folder in the integration tests projects seems to be for helpers for the tests, so do i just add a test to the file for the `IReferencesClient`?",,,,,,
182623644,1098,Issue,"-Zuber good point. I'm fine with putting them in there for now (we've done the same thing in `Octokit.Tests` but it also has some test classes which confuses things further). Let's keep going down that path and add a new test class for the extensions in `Helpers` for now, we'll clean it up later...",,,,,,
182627417,1098,Issue,"[this code] could be useful in other places as well. Can I /Should I move it into the extension class, create a helper class, or duplicate it?",,,,,,
182631192,1098,Issue,"-Zuber did you mean to link to `GetReference`? If so, yes, I think that's useful to extract somewhere if you'd like to reuse it...",,,,,,
182631962,1098,Issue,":+1: , but in the end I did not need it (pending review of pr)",,,,,,
181625724,1097,Issue,Ooooooh!![]Gonna look this over and cc  for a bit of review :eyes: when she has a moment.,,,,,,
181625803,1097,Issue,only extra bit i can think of here is a bit of documentation on using this. Thoughts?,,,,,,
181642727,1097,Issue,Where should I put the documentation? In the README?,,,,,,
181643799,1097,Issue,"the content for the documentation site is under `docs` - and the hierarchy for  is [here] - not sure where it fits best, open to suggestions...",,,,,,
181665592,1097,Issue,"Potentially a specific section on ""working with GitHub Enterprise"" in the docs?Im still not entirely sure what the intention of this probe method is for.  Is it for octokit to do smart stuff internally, or just providing an API where someone writing an application like GitHub Desktop could allow users to enter a repo URL and it would be able to probe if its Enterprise or not?",,,,,,
181665790,1097,Issue,"Is it for octokit to do smart stuff internally, or just providing an API where **someone writing an application like GitHub Desktop could allow users to enter a repo URL and it would be able to probe if its Enterprise or not**?It's the latter - basically a helper method for someone to verify the user-specified input is a valid GitHub Enterprise server.",,,,,,
181673246,1097,Issue,It requests the one unathenticated endpoint in a GitHub Enterprise instance.,,,,,,
185509735,1097,Issue,"Hey  would like your input here. I relaxed the check based on some comments from . I'd like to use this method in both Desktop and GHfVS so we're consistent.Basically, we check the response for a couple headers even if the request gets thrown an `ApiException`.",,,,,,
185511956,1097,Issue,"On GHfVS, this probe only runs if the url is not github.com, that check happens way before this. Unsure whether that would be a useful assumption here or not though :PEDIT: nvm, I see you're following the same logic here.",,,,,,
185516364,1097,Issue,Just added a couple of tasks to get this over the line. I'm happy with the current implementation.,,,,,,
194014622,1097,Issue,"Merge conflict is sorted, but I'm still trying to find a simple code sample here to illustrate the issue - currently you need to create it manually, like this:Thoughts   on how we could simplify this?",,,,,,
194027727,1097,Issue,"You mean a simple usage example? I think it should probably show what the return codes mean (Ok vs Failed vs NotFound), so people know how to properly handle them.",,,,,,
194028859,1097,Issue,"sorry, I should have been more clear. I wanted to put this into the ""Getting Started"" page but there's some setup of the dependencies that `EnterpriseProbe` needs before I can use any code sample for the probe. Do I also do that here, as painful as it is to create these?Or perhaps I could leverage the `GitHubClient` setup and move `EnterpriseProbe` into `GitHubClient`, like this:But that's also kinda backward, as `GitHubClient` requires the base URL...",,,,,,
194029859,1097,Issue,"yeah, that's awkward, EnterpriseProbe requires GitHubClient, not the other way around. In VS I have MEF for this, which basically means that the probe constructor gets the productHeader and httpClient info from MEF, and whoever calls probe gets an instance of EnterpriseProbe through its constructor. That basically boils down to the example you had - do a `new`, await the probe, check the result - but the `new` is split off and done earlier.So I think the example you first posted is appropriate for a simple usage. I think it's more important to clearly show what the return codes mean - Ok, Failed and NotFound - so people know how to handle them. How the EnterpriseProbe instance gets created is really a secondary thing, methinks. We could also have a static Probe method on EnterpriseProbe for a quick one-off, for scenarios where that makes sense.",,,,,,
194415640,1097,Issue,That `Probe.Probe` looks awkward. It's not helped by the fact that `Probe` is both a noun and a verb. What do you think about changing the method name to `Examine` since that's what a probe does.,,,,,,
194415878,1097,Issue,"Another thought, we could simply put the `Probe` method on `Enterprise`.",,,,,,
194416077,1097,Issue,"I kind of like that latter approach better to be honest, but would like to hear others thoughts.",,,,,,
194430851,1097,Issue,"Not to derail the whole thing, but I was looking at it and it feels like this shouldn't actually be a separate class specifically to poke enterprise, at least not as a public API.Correct me if I'm wrong: The goal here is to identify whether the remote server is a github instance, and if it is, whether it's an enterprise instance, right? With that in mind, the solution should probably be a method that returns what type of server it is - dotcom, enterprise, other (not github) or unknown (unable to determine).  Since `GitHubClient` encapsulates server information, the method should probably live here, so something likeThe `EnterpriseProbe` class can be kept as an internal implementation of the probe, and the `GetServerType()` method calls it if the uri is not dotcom.What do you think? (I'm happy to patch up the PR if you agree on this approach, I know you're crazy busy these days)",,,,,,
194436515,1097,Issue,In agreement with  (Someone needs to make a thesaurus for things to say instead of +1 :wink: ),,,,,,
194547704,1097,Issue,"Yeah, I like the direction that  is proposing about internalizing it - you've already specified the URL in the `ctor`, so leave the internal plumbing to Octokit.Other thoughts:- I'm unsure about having the probe returning `DotCom` - this feels a lot like our internal lingo, but as you could invoke this on an instance without the URL set, which would be DotCom behaviour.- What if this were a method off `GitHubClient.Enterprise`? that's originally why we wrote this probing code, and keeping it near there might be more contextual than having it off `GitHubClient`",,,,,,
194558878,1097,Issue,"Not sure why the original code was written like that. In my code, calling EnterpriseProbe always happens together with determining what the server is - so I only call it if it's not a dotcom, and sometimes will check if it's an enterprise for authentication purposes. So enterprise probe is actually just half of the logic of identifying what the server is, and is pretty much always used in that way. By itself is not terribly useful, it needs to be combined with ""is this github.com, yes/no? is this enterprise, yes/no?"" I'm unsure about having the probe returning DotCom - this feels a lot like our internal lingo, but as you could invoke this on an instance without the URL set, which would be DotCom behaviour.The url is always set, it's just defaulting to ""github.com"" :wink:It's actually important to distinguish between dotcom and non-dotcom github servers, because authentication differs for those,the UI may be different depending on which one is it, and if it's neither, UI must be hidden in my case, so I need to know that as well. This is why I'm suggesting having a server identification method that tells me what type of server it is, rather than something that's enterprise-specific.",,,,,,
194572624,1097,Issue,I like that approach.,,,,,,
194574158,1097,Issue,"One thought that just occurred to me. The reason why it's an ""Enterprise Probe"" today is that there's no need to probe if the base URL is ""github.com"" or ""api.github.com"". We can just assume it's GitHub.com the website and not something else.However, I could imagine someone wanting to probe for capabilities in the future, in which this API could be the starting point for that.",,,,,,
194589057,1097,Issue,"However, I could imagine someone wanting to probe for capabilities in the future, in which this API could be the starting point for that.Yeah, I actually already do something like that for wikis, and it would be nice if instead of manually firing probes I could just ask for capabilities from the API.",,,,,,
194617537,1097,Issue,"I like the idea of making this more like a `GetCapabilities` client/request.Also, this may be a dumb question but what if someone has a hostfile entry or DNS alias to point ""external.github"" at ""github.com"".  To me it seems like rather than assume that ""only"" github.com is ""DotCom"" you sort of want to probe/confirm even ""DotCom"" capability, rather than going only off the URL?",,,,,,
195470748,1097,Issue,"If the url isn't ""github.com"", then we poke it to see whether it is a github instance, and if it is, we classify it as an enterprise instance. In your scenario this would be a false positive (or negative?), but in practice it doesn't change much, clients will still know that the server is a github instance that they can interact with.Distinguishing between a github.com and a github enterprise instance is not enough to tell a client what the server can actually do - the only important bit of information they can get out of it is whether the server is a github server or not. The only reason we're actually distinguishing between github.com and an enterprise instance is because we know that enterprise instances can potentially support only a subset of authentication types if they're older, so we're using the url as a shortcut to only run the fallback code if it's a github server but it's not github.com (which we know supports all the things).Again, in your scenario, if the url is aliased, a client would fallback to handling the server more carefully, so it's not a big deal if there's a false positive because of that.Concrete server capabilities checks I think should probably be done in separate calls, since all of these things require poking the server and aren't always needed by a client. In this way, we end up with a ""Is this a server we can talk to?"" call and ""Ah, it is! So I want to use this feature, is it available?"" calls.",,,,,,
195478844,1097,Issue,"Ok, trying to get this back on track, I'm cool with the original suggestion you had . Especially since you offered to do it. :stuck_out_tongue:",,,,,,
195481624,1097,Issue,"haha, yes... should I just push to this branch?",,,,,,
195481954,1097,Issue,Sure!,,,,,,
219970247,1097,Issue,Closing this one out as it's gone very stale.I'll leave the branch around if someone wants to pick this up later.,,,,,,
220001222,1097,Issue,"Damnit, sorry, I dropped the ball on this one üòû",,,,,,
181027024,1096,Issue,"There seems to be a lot white space that could be cleaned up. If you are using visual studio 2013 or higher, pressing `ctrl + K, d` should take care of the formatting. Otherwise it will just have to take the time that it takes.",,,,,,
181027236,1096,Issue,#NAME?,,,,,,
181069642,1096,Issue,#NAME?,,,,,,
181136804,1096,Issue,"I apologize for being picky, it is an issue that I have.Other then the little things I pointed out, it looks awesome :+1:",,,,,,
181210784,1096,Issue,"I can understand your point as this is an official repository of github api wrapper, these things(comment typos etc) really matter. I will push another commit when i will reach home.thanks again for correction. I appreciate it.",,,,,,
181240362,1096,Issue,:smile:,,,,,,
181327018,1096,Issue,Hi -Zuber  i need your help one more time :smile:  please review this when you are free.thanks,,,,,,
181341252,1096,Issue,"LGTM, but I do not have commit rights, so you will have to wait for one of the maintainers to confirm and merge.How do you feel about trying to add some tests for these changes in the meantime?",,,,,,
181353410,1096,Issue,"Regarding Unit Tests, I'd suggest it would be good to add a couple more similar to these:   [`TheGetAllForCurrentMethod.CanFilterByType()`]   [`TheGetAllForCurrentMethod.CanFilterBySort()`]   [`TheGetAllForCurrentMethod.CanFilterBySortDirection()`]egCanFilterByVisibilityCanFilterByAffiliation",,,,,,
181547480,1096,Issue,unit tests :confused: it is difficult for me to write solid unit test i doubt that i will miss something in testing. it would be good if any one with testing knowledge should write test for these properties. what do you say?,,,,,,
181552438,1096,Issue,"-Zuber  thanks for the initial review :gem: I think writing these tests is actually easier that you suspect - we have a lot of tests already defined for `RepositoryClient`, and you can likely repurpose some of the existing tests that  linked to.The goal of these tests is to verify a small piece of behaviour - in this case, what we're interested in is the mapping of the parameters on the request to the URL that gets invoked by the client. The setup is what's called AAA syntax - Arrange, Act and Assert, and they're intended to be short, easy to read and quick to execute.Have a read of the links above, feel free to ask questions - but don't be afraid to take a shot at it :grin:",,,,,,
181585318,1096,Issue,yes  you are absolutely right :+1: I am new to this open source work that's why i am little afraid for now. As i was reading the links above i realized that i have lot to learn. Your code base has nice documentation and nice language idioms especially linq queries are written very well. what we learn in our programming classes is totally different here in open source world. Thanks :smile:,,,,,,
181619743,1096,Issue,"I am new to this open source work that's why i am little afraid for now.Welcome!We're all friendly here. We love having people help out in any way they see fit. We all have other responsibilities because of our work, so we can be slow to reply sometimes. But don't hesitate to ask questions. We want your first open source experience to be great so maybe you'll contribute again! :smile:",,,,,,
181912955,1096,Issue,Ok i will try to write unit test similar to above links tonight and will ask for the help if i get stuck.,,,,,,
181913710,1096,Issue,Good luck!,,,,,,
183114372,1096,Issue,Well done!![jgttfp],,,,,,
183121516,1096,Issue,Noice!! :shipit:,,,,,,
183700035,1096,Issue,Thank you everyone for helping me out especially -Zuber for initial review. You guys are really helpful.  :smiley:,,,,,,
183719142,1096,Issue,:blushing:,,,,,,
183723685,1096,Issue,is it really you in the gif? :laughing:,,,,,,
184967927,1096,Issue,is it really you in the gif?Yup!,,,,,,
180370951,1095,Issue,"Linux build failure looks unrelated. It's the ""type initializer for list threw exception"" variant",,,,,,
181627990,1095,Issue,Could you guys kick off the travis build again when you have a sec?  Failure was unrelated,,,,,,
181630340,1095,Issue,:boot:ed and :eyes:ing,,,,,,
181632056,1095,Issue,"Dont forget that #1073 needs to go first, then this one, then #1022  :grinning:",,,,,,
181632727,1095,Issue,"thanks for the heads-up, I'll make sure to prioritize these reviews before any other Octokit stuff as I know merging csproj changes is all kinds of terrible right now :grin:",,,,,,
182679135,1095,Issue,#1073 has been merged :metal:,,,,,,
182710591,1095,Issue,"Awesome, this has now been rebased on master and should be ready for review and merge",,,,,,
182734632,1095,Issue,"builds passed, ready when you are :)",,,,,,
183100183,1095,Issue,":sparkles: Flawless Victory! :sparkles:This looks great! The only comment I have is that if we add new targets, we'll have to add more methods to this class. We could consider adding a method that takes in a raw `target` string, but I don't think we need to do that now. Maybe this API very rarely changes.![]",,,,,,
183105669,1095,Issue,Yeah we had a bit of discussion on the issue #1026 about which way to go and ended up with the multiple methods.  Thanks for merging!,,,,,,
183107841,1095,Issue,"Yeah we had a bit of discussion on the issue #1026 about which way to go and ended up with the multiple methods.Ah, cool. Yeah, I like it. I'm just thinking about adding one additional method as a failsafe. But I don't want to do that yet. Thanks for merging!Thanks for contributing!",,,,,,
183113980,1095,Issue,"Ah, cool. Yeah, I like it. I'm just thinking about adding one additional method as a failsafe. But I don't want to do that yet.What would the failsafe be, out of interest? Thanks for contributing! It's a pleasure on such a weel organised dotnet OSS project.  My goal is to implement all the GitHub Enterprise API's currently unsupported.  I think im just down to the Setup Console now (which is pretty big) as well as some extra methods on User Administration that are enterprise only.  eg normal API doco for User Administration:vs Enterprise API doco for User AdministrationHeaps more nice methods to create/delete users, impersonation tokens, etc.  Fun times :grinning:",,,,,,
183117818,1095,Issue,"What would the failsafe be, out of interest?A method that took a target request object (or string). That way, if Enterprise ever added a new target string syntax, you wouldn't have to wait for the next Octokit.net to start calling it.",,,,,,
183118688,1095,Issue,"Nice idea, I'll add it in the next couple of days!",,,,,,
180369755,1094,Issue,Linux build failure looks unrelated to me. Looks like a timeout in the octokit.tests-portable,,,,,,
182677885,1094,Issue,"thanks for getting to the bottom of this, and for adding in those tests!",,,,,,
180343561,1093,Issue,"Hey -Zuber This should be an awesome function, a tool we are writing at the moment has a need to push a file directly into a specific branch too :grinning: I noticed one typo of a class name in XmlDoc comments, ive flagged above.Also could I suggest ensuring we keep the tests up to date with at least these 2 items?- update the unit tests to cover off the addition of the new branch parameter- add an integration test to prove it actually creates the file on the specified branchLet me know if you want some help adding the tests",,,,,,
180353954,1093,Issue,"Thank you for catching the typo! I should be able to add unit tests after the weekend. Would you test anything in the unit tests other then that the correct url was called? The integration test can create, update, and then delete a file on the same branch. Sounds good to you?",,,,,,
180367212,1093,Issue,"Yeah if you look at the ""crud"" integration test I'd probably do the same actions as that, but specifying a named branch For unit test since the url is the same anyway, you could check that the CreateFileRequest object passed through, has the correct path/message/content/branch present in it.  Eg  have look at `PassesRequestObject()` test [here]",,,,,,
181291969,1093,Issue,"I wasn't able to get the unit tests to work, hopefully the integration test will be enough",,,,,,
181356384,1093,Issue,"Hey -Zuber that looks good... your integration test is passing for me here.On the topic of unit tests, your change was mostly to a Request object and it doesnt look like there are many unit tests of those things in octokit.net.  However if you are interested, I did just send you a pull request that implements unit tests on the CreateFile() DeleteFile() and UpdateFile() calls in RepositoryClient, including making sure your new branch field is correctly passed through to the underlying ApiClient.  What ive found with Octokit unit tests for API clients typically check - calls the correct URL- passes through the request object- checks parameters for nulls and throws exceptions if paramter is required",,,,,,
181357545,1093,Issue,thank you for the PR. I asked a question there.,,,,,,
181761172,1093,Issue,when do you think this will be merged?,,,,,,
181834354,1093,Issue,"I don't have commit rights, am sitting on a few pending PR's myself üòÄ",,,,,,
182109497,1093,Issue,"apologies for the delay, I'm aiming to get through these by the end of the week. Thankfully we just did a big release, so the next one should be a bit easier to manage...",,,,,,
182684746,1093,Issue,"Code looks good, tests all pass, and it got a pretty great review too...![]",,,,,,
182708079,1093,Issue,YAY!!  I got a Stevie!! :grinning:,,,,,,
180060810,1092,Issue,"The list of files in the project cascade from the default project out to the others, so you won't see the default project update. Sounds like it's by design, but I'd love to hear about what was responsible for adding the files to the Mono\* projects - perhaps something else is involved here...",,,,,,
180218317,1092,Issue,"So here is the story:I did a `git pull` on a computer that I had not done so for a while.For some reason it updated all the `.csproj` files correctly - except for the default.Weirder is that once I included the files manually - git told me that there were changes in the .csproj - namely lines not in the right place.So it knew the files existed and where supposed to be included but VS did not.Is it possible because I had VS open during this whole saga?oh, btw I am not on Git for Windows fast loop so that should not be the problem #troll",,,,,,
181666555,1092,Issue,"So just a note on this topic, what ive found is FixProjects will add files from Octokit into all the other projects.  But if you then decide you want to remove that file, the FixProjects command doesnt REMOVE files from the sub projects.  It would be nice for FixProjects to remove files :grinning:",,,,,,
181673114,1092,Issue,"That would be nice. So basically if the file isn't on disk, remove it? I'd love that.",,,,,,
181673144,1092,Issue,"Which reminds me, I started a project called ProjectCop that could handle this. Someday I'll ship it.",,,,,,
179681710,1090,Issue,Thanks!,,,,,,
179543662,1089,Issue,Thanks! :sparkles:,,,,,,
179544317,1088,Issue,"That's a helper class for when you're implementing a server side web hook target. For example, on gtihub.com you can configure a repository to request a URL every time a new repository is created.Well, now you need to implement that endpoint. If you happen to be using ASP.NET MVC for example, you could add an action method that accepts this class (and use the JSON model binder) and receive the payload.We should document this better. Or consider moving to its own library.",,,,,,
178952164,1085,Issue,Gotta rebase once #1087 is merged,,,,,,
179548365,1085,Issue,Ready for review,,,,,,
179554840,1085,Issue,Nice catch!,,,,,,
179555281,1085,Issue,We should do a Roslyn analyzer to not allow absolute `Uri` in Octokit.net since I can't think of any place where they would be allowed. We can always suppress in those cases where they're necessary.(attempted nerd snipe),,,,,,
179580201,1085,Issue,(attempted nerd snipe)![],,,,,,
178885026,1083,Issue,LGTM :thumbsup:,,,,,,
178855101,1082,Issue,I added a working example of the search api in my sample:,,,,,,
178856364,1082,Issue,can we capture this as a failing integration test in the repo?,,,,,,
178861978,1082,Issue,yep sure.So I just need to write a failing test for:For example the below would be a valid failing integration test?,,,,,,
178864372,1082,Issue,"that seems good enough for me - and if you could mark the test as `[Fact (Skip=""see  for investigating this failing test"")]` this will help link back to this discussion",,,,,,
178869302,1082,Issue,done.,,,,,,
194719591,1082,Issue,"To do the above I removed ""All"" from the ItemState enum.And regarding the failing integration tests, by simply removing the query for ItemState.All .Also from the IssueClientTests.cs  and the build succeeded.Does this do the needful ?",,,,,,
194720064,1082,Issue,How then would someone search for **all** issues?,,,,,,
194720477,1082,Issue,"-Zuber ""All"" isn't supported by the github API.It is only a filter.To search for it you need not have to mention any ItemState.",,,,,,
194720798,1082,Issue,Sounds great.Open a Pull Request?,,,,,,
194734796,1082,Issue,"Have to be a bit careful here because `ItemState` enumeration is used in many places (Milestones, Events, Pull Requests, Issues, and more) and sometimes `all` is a vaild option and sometimes not?Eg `SearchIssueRequest` (only `open` and `closed` are allowed) vs `IssueRequest` (where `open` `closed` and `all`) are allowedSo I dont think removing All from the enum is good.  Perhaps a new enum is needed and those places where only open/closed state is allowed, are changed to the new enum?",,,,,,
194739392,1082,Issue,-Zuber  What should be done here ?,,,,,,
194745083,1082,Issue,"Thank you for pointing that out. My suggestion would be to- Create a new enum `ExpandedItemState` (or the like,   might have a better name)- Find all the places the `ItemState` enumeration is used, and check the corresponding [api docs]  - Where `All` is a valid option, use the new enum.",,,,,,
194745571,1082,Issue,#NAME?,,,,,,
194745877,1082,Issue,"So I dont think removing All from the enum is good.Also, we should be marking things as `[Obsolete]` before removing them. Because we're nice like that.",,,,,,
194746595,1082,Issue,"I like where this is heading. If it were me, I'd probably introduce a new enum in the search API instead of sharing the `ItemState` enum as it doesn't support `All`.This feels like we're going to need to introduce a breaking change here as part of the new enum. But that's fine. Just a heads up.",,,,,,
194746916,1082,Issue,I will look into as to where all the changes are to made and then get back here.,,,,,,
194749316,1082,Issue,"I like where this is heading. If it were me, I'd probably introduce a new enum in the search API instead of sharing the ItemState enum as it doesn't support All.So the opposite of what I suggested, which does make more sense as it is much less of a change :)",,,,,,
194769781,1082,Issue,Or alternatively on the line: We can simply change the code from:toor something along those lines... just a far simpler change IMHO. Maybe add a link to the api/issue to explain if needs be.,,,,,,
194803162,1082,Issue,"that won't do much good because then we need to check if ""All"" state exists for that particular parameter or not and there are a lot of parameters.",,,,,,
194846945,1082,Issue,"yeah, its preferable to not show an option (ie an `All` entry in Enum) to a user when it doesn't actually exist in the GitHub API like that.  I'd make a new enum called `SearchItemState` or `ItemStateSimple` or something like that, and use that on the Search functions (and anywhere else that might be limited to only open/closed).  I'd also update the XmlDoc comments on the `ItemStateSimple? State` parameter of `SearchIssueRequest` to note that leaving it unspecified will enact the GitHub default",,,,,,
194855113,1082,Issue,"State.All _does_ exist... just implicitly e.g.The result above returns both _open_ and _closed_ issues. Hence my suggestion - remove the param from being added on the condition `State != ItemState.All` Regardless of which way this is implemented - the search issues needs to give back:1. open issues2. closed issues3. open and closed issuesIf there are any other areas of the code where `ItemState.All` is relevant, append it to the parameters. If not - do not add it, we just need to ensure the expected results match the GitHub api.-EDIT-Unless passing in null refers to search both open and closed issues...? Then yeah - we should create a new enum as suggested.",,,,,,
195005146,1082,Issue,I have created the new enum by the name ItemStateFilterAnd read the docs and made changes everywhere as said by -Zuber Also made the corresponding changes in the unit as well as integration tests.The build was successful [link]My forked repository is [here],,,,,,
195047706,1082,Issue,"Could you please open a PR?If you are not sure how that works, may I suggest watching [this video]? (the whole series actually is quite nice)",,,,,,
195090398,1082,Issue,-Zuber  :+1: just opened the PR .And thanks for the video link. :smile:,,,,,,
195862629,1082,Issue,"Thanks for the PR!  Ive just made a comment on the PR and basically said that after seeing the proposed changes, i've backflipped on what was said above!Please check #1140 for my comments and let's continue the discussion there :grinning:",,,,,,
242729818,1081,Issue,"I'd like to give it a shot.Bear with my ignorance, I didn't really understand why that test should be ported to F#. I read through #983 and you mentioned that it could be run inline. Could you shed some light?Also, would you be able to provide some guidance for the first steps to take to get going? Where should the test be moved to?Thanks!",,,,,,
242902955,1081,Issue,"Hi  As far as I can gather, in order to test the LinqPad samples the proposal is that during the build, we rewrite the linqpad files to use local reference to the octokit DLLs (ie those that were just built) instead of pulling nuget packages (which dont contain the very latest changes in the build) then execute them to ensure they dont have any errors.   even ended up writing an example in c# I didn't really understand why that test should be ported to F#The octokit.net build system is currently using FAKE, which I assume means we need that ""rewrite linqpad files to contain local references and execute them"" code to be in F# as a native task in the build.   Where should the test be moved to?Im guessing it wouldnt be a test anymore but more so a task in [the build script]",,,,,,
242908746,1081,Issue,"Thanks a lot for the explanations, it makes more sense now.I'll have a look at the build scripts to see if we already have custom build steps or something alike that I can use as a starting point.Still, if you have more info/guidance, it'll be very appreciated.Thanks again!",,,,,,
178474355,1080,Issue,"Have dropped the [WIP] tag and am running the tests once more. Planning to publish this tomorrow morning AEDST, so going to let it sit overnight for others to look over...",,,,,,
178859078,1080,Issue,didnt want to include #1073 ?  :laughing:,,,,,,
178870408,1080,Issue,there's already a lot to go out here :grin: but I'll try and get into the rhythm of more regular releases now the audit stuff is under control...,,,,,,
178875901,1080,Issue,:ship:ed - see  and,,,,,,
178292872,1079,Issue,can I get a :thumbsup:?,,,,,,
178428341,1079,Issue,"As this is just sprinkling some attributes around, I'm going to just self-merge this:![]",,,,,,
178269304,1077,Issue,Self merge FTW! This PR appeals to my OCD nature. :sparkles:,,,,,,
178269710,1077,Issue,I wanted to get this in before cutting a release :grin:,,,,,,
178228432,1076,Issue,**[Linux]** Timeout?,,,,,,
178232585,1076,Issue,"**[Linux]** ""Got a SIGSEGV while executing native code.""",,,,,,
196534147,1076,Issue,"Here's a new one we hadn't seen before.  Perhaps just temporary issue communicating with nuget or something...**[Linux]** The command ""nuget restore Octokit-Mono.sln"" failed and exited with 139 during .",,,,,,
198651174,1076,Issue,**[Linux]** TimeoutSame as [this one previously],,,,,,
218675636,1076,Issue,"[Linux] ""Got a SIGSEGV while executing native code.""",,,,,,
225165255,1076,Issue,"[MAC OS]  Assertion at metadata.c:3643, condition `ptr' not met",,,,,,
531600621,1076,Issue,Nothing really changed in here since 2016 so I'm going to close this out.,,,,,,
178079349,1075,Issue,Thanks! :sparkles:,,,,,,
178095549,1075,Issue,Thanks dude! Now looking forward to the next release of Octokit :smile:,,,,,,
178131938,1075,Issue,We should try and get something out soonish. :smile:,,,,,,
178162067,1075,Issue,Cool.,,,,,,
178241539,1075,Issue,"on my list for this week, hopefully tomorrow",,,,,,
177632435,1074,Issue,"Is the parser something that is decoupled enough that it could be separated into a separate project?It's tied to SimpleJson, which we use as an internal dependency. We've submitted some patches upstream to `SimpleJson.cs`, but `SimpleJsonSerializer` is the hooks for us to control how to serialize and deserialize objects in the context of Octokit.For me, I guess it comes down to whether you're happy with how you're using the current Octokit APIs, or whether there's a different way (or abstraction?) you'd like to use. Then we could talk about extracting the models and serialization logic - I gather that's the bit you're really interested in here, rather than just the JSON pieces.One such scenario that I need to flesh out is consuming webhooks - I'd want to reuse the models (and thus the deserialization rules) we already have, but how they plug into an MVC app is very different. as an aside - why would anyone need/use yet another json parser? We avoid paying the JSON.NET tax here by internalizing our JSON logic, and while you _can_ plug in [your own serializer] it's deep in the bowels of Octokit, so I wouldn't worry about needing to do that...",,,,,,
177783982,1074,Issue,"Thank you for responding. Apologies if I was not clear enough. I'm asking about the serializer **not** in the context of octokit.net. For example there is [this api] which has no wrappers. I would like to create one modeled after the octokit way. Since there are multiple such apis, a project template with the folder structure setup would be nice. In order to make it even better, I want to include code wherever it makes sense. So the json parser + serialization being internal don't bother me - but how simple do you think it would be to copy out the code and dump it into a project with different models?",,,,,,
177814568,1074,Issue,"-Zuber it's all good, happy to talk further about it So the json parser + serialization being internal don't bother me - but how simple do you think it would be to copy out the code and dump it into a project with different models?I don't think it'd be much work - I'm pretty sure someone has repurposed this codebase (or been inspired by it) to apply it to a different sort of API. I forget the product, it came through via Twitter.The serializer rules are kind of tweaked to what the GitHub API expects - but it's nothing special.Here's a bit of a brain dump of some of the more quirky features on offer beyond that: - with request models, `null` values are not sent by default- you opt into those with a `[SerializeNull]` attribute- managing the formatting of properties when serializing/deserializing - server expects Ruby style (like `review_comment_url`) and client expects .NET style (like `ReviewCommentUrl`)- a few different ways to override this when deserializing - e.g. enum serialization, map JSON property to different response- converting text to base64 when sending is done through `[SerializeAsBase64]` so the user doesn't care about the implementation detailsI'm :thumbsup: if someone wants to extract these relevant bits and explore making it more general purpose for API clients.",,,,,,
177832239,1074,Issue,"I'm pretty sure someone has repurposed this codebase (or been inspired by it) to apply it to a different sort of API. I forget the product, it came through via Twitter.It may very well have been me :grinning:, as I have been sitting on this for a long time I'm :thumbsup: if someone wants to extract these relevant bits and explore making it more general purpose for API clients.Thank you very much for the information. I'm going to start the exploration. Hopefully it won't take too long to get something out into the open",,,,,,
177853450,1074,Issue,"It may very well have been me :grinning:, as I have been sitting on this for a long timeNah, it wasn't you - I'm pretty sure it was for the [Confluence API] but I think they were speaking more generally in terms of the Octokit architecture",,,,,,
177872664,1074,Issue,¬Ø_(„ÉÑ)_/¬Ø They have nice docs btw :wink:,,,,,,
177920157,1073,Issue,I've rebased this now that the AdminStats PR #1049 has been merged so it should be good for review/merge!,,,,,,
178251254,1073,Issue,"this is **so** good!![]Just a few conceptual questions about the `EnterpriseHelper` changes, and apologies for introducing the merge conflict on the csproj files!",,,,,,
178562675,1073,Issue,"Looks like the Travis build failure is unrelated,   ?",,,,,,
178853668,1073,Issue,Did the travis build automatically retry or did someone kick it off again?  Is there any way (apart from pushing another commit) for plebs to get the builds to try again?  :grinning:,,,,,,
178854754,1073,Issue,"Did the travis build automatically retry or did someone kick it off again? Nope, it was me.  Is there any way (apart from pushing another commit) for plebs to get the builds to try again?  :grinning:I'm afraid not. We're looking into the Mono issues and where they might be hiding, but that's going to take some time. I'll keep an eye on the build state as part of reviewing - if you're happy that the error isn't your fault just comment so I know you've looked at it.",,,,,,
180337323,1073,Issue,"Hey  not sure if you may have forgotten about this one, but ive pulled latest master over again and the builds are still passing.  Should be ready for a LGTM :tongue:",,,,,,
182678994,1073,Issue,I'm gonna take this in without that bit of :lipstick:. Thanks !![],,,,,,
177646635,1072,Issue,"wow, this is great! Thanks for catching this! Im not sure what settings you guys run the integration tests under for octokit.net so I have set the integration tests that would have triggered these conditions, to SKIP for now. This is fine, and while I use a separate account for testing I'm not sure what might work for it around organizations. I'm aiming to prepare a new release this week, so I'll look into that (probably needs an extensibility point :sad:) while I'm preparing and testing everything...",,,,,,
177646874,1072,Issue,![],,,,,,
177459131,1071,Issue,Likely an oversight. You can probably reuse the `Milestone` model we use for an issue if someone wants to add this in.,,,,,,
177603880,1071,Issue,Yeah working on a PR :smile: Had to update some VS stuff to try to get everything to compile (I didn't have the WP8.1 SDK or something).,,,,,,
177642063,1071,Issue,I didn't have the WP8.1 SDK or somethingSeems plausible,,,,,,
177661302,1071,Issue,PR sent out: #1075,,,,,,
176880974,1070,Issue,"I think that exception message tells you everything you need to know: Must have push access to view repository collaborators.So unless you have push access to the repository (octokit/octokit.net), you can't view repository collaborators. Try changing the call to a repository that you have access to (such as one of your own) and see if the call succeeds.",,,,,,
177992285,1070,Issue,ThanksLooks like I will have to use the code below to check if the current user is a collaborator.,,,,,,
176933475,1069,Issue,This is an issue  . Here is a workaround,,,,,,
177094589,1069,Issue,Thank you  for pointing me in the right direction. I just needed a quick commandline tool so what I did is that I just added a timeout to the default Http client in the HttpClientAdapter here. I know It's ugly (I had to turn off Code Analysis for that !) but it works for me.Thanks.,,,,,,
176501820,1068,Issue,just some xml-docs changes which are making CI cry currently:,,,,,,
176883610,1068,Issue,"Hmm, looks like `RepositoryPagesClientTests` is failing but that's unrelated to this change.  known issue?",,,,,,
176994893,1068,Issue,Also the convention test are failing because of observables.,,,,,,
177001500,1068,Issue,"Hmm, looks like RepositoryPagesClientTests is failing but that's unrelated to this changeYou're right. This somehow slipped through the initial PR passing CI  - but the fix 5ca6633cb133ca8db4f2be17c2ebb0e26a446d64 is now in master.Perhaps this branch was created before, in which case a merge or cherry-pick should pull in the fix...",,,,,,
178080916,1068,Issue,"you could merge master into your branch and push. Or, if you're feeling adventurous, rebase your branch against master and force push to this branch.",,,,,,
178247837,1068,Issue,"![]Great work , and thanks for the contribution!",,,,,,
178248137,1068,Issue,![thumbs-up-pink-glasses],,,,,,
178266947,1068,Issue,:tada:,,,,,,
175310923,1066,Issue,"Unfortunately Octokit is limited by what is available through the GitHub API - there are some Git operations available but there's no equivalent to ""clone"" available.I'd recommend looking at [libgit2sharp] which is a C# library for working with local repositories. Here's what the clone operation looks like in code:Or if you need to authenticate:There's more examples in their [wiki].",,,,,,
175327579,1066,Issue,"Thanks Brendan, quite helpful redirect.  I have public cloning operation working with libgit2sharp.I do like Octokit and was quite successful in working directly on GITHUB.    But realized after working trying to branch, fork that I couldn‚Äôt get a local copy.So am I wrong in thinking the rule of thumb is:- - LarryFrom: Brendan Forster [mailto:notifications.com]Sent: Tuesday, January 26, 2016 4:27 PMTo: octokit/octokit.net octokit.net.github.comCc: Larry Brader lbrader.comSubject: Re: [octokit.net] example of clone a repository (#1066)Unfortunately Octokit is limited by what is available through the GitHub API - there are some Git operations there's no equivalent to ""clone"" available.I'd recommend looking at libgit2sharp which is a C# library for working with local repositories. Here's what the clone operation looks like in code:Repository.Clone("""", ""path/to/repo"");Or if you need to authenticate:var co = new CloneOptions();co.CredentialsProvider = (_url, _user, _cred) => new UsernamePasswordCredentials { Username = ""Username"", Password = ""Password"" };Repository.Clone("""", ""path/to/repo"", co);There's more examples in their wiki.‚ÄîReply to this email directly or view it on GitHub.",,,,,,
175343360,1066,Issue,that's a pretty accurate way to think about it,,,,,,
636284107,1066,Issue,hmm I wonder if libgit2sharp has a way to push changes as well as commit them after adding all changed files ofc?,,,,,,
180438838,1065,Issue,I will try to implement this.,,,,,,
181136898,1065,Issue,"I realized that tests where not mentioned in this issue. do you think they should be added as a requirement to the existing PR, or a separate issue opened up?",,,,,,
181627832,1065,Issue,"-Zuber let's see what we can do in the PR. If that doesn't progress, we can extract a task from that like we've done in the past.",,,,,,
208753726,1065,Issue,Can be closed now.,,,,,,
174555442,1064,Issue,Thanks for pulling this in.,,,,,,
174809653,1064,Issue,Ready for review,,,,,,
174848711,1064,Issue,"Actually, given #959 went through a review by myself and  I'm just going to merge this in so I can get it into the next release...",,,,,,
307224223,1064,Issue,"I just ran into this error. For some reason, it looks like the argument validation was added back during  and no one took notice.",,,,,,
175188588,1063,Issue,"The only downside is that if you implement the interface, you only need to implement the one `Get` method and you know the extension method is implemented correctly with regard to that one method. Now, implementers have to implement both and implement them correctly.Having said that, this really does clean up the tests and API and reduces pain and it's a really really simple method so I'm :+1:",,,,,,
175189015,1063,Issue,"yeah, agreed on the need to implement this explicitly. If we had multiple implementations I'd probably explore something else...",,,,,,
173426257,1062,Issue,"Hi -Zuber, we're using [NSubstitute].But I'm confused by what you wrote. Are you saying that if you pass something other than null you get a test failure? Or if you omit that last argument?Also, `connection.Get` returns a `Task` so you need to set up that return value.",,,,,,
173431921,1062,Issue,"-Zuber So NSubstitute takes a different tact to other mocking frameworks by making the proxy object transparent (no `Mock` anywhere), and using extension methods on the object to verify behaviour. This is the purpose of the `.Received()` extension method, but it's a bit obscure because it still returns your `IApiConnection`.So from the value returned from `.Receieved()` you then declare the method you expected to be invoked - using the `Arg` helper class to do expression-based checks of the arguments provided during the test. Without the null on the last line the test will fail on an `Ensure` check that the uri is null, but it is not clear why it is needed or what it does.I gather this is occurring due to the overloads on `Get` but it's hard to say specifically without a bit more context. So it sounds like the `Get(Uri uri)` code was failing the test, but `Get parameters)` was making the test pass - does that sound right to you?Also, if an `Ensure` check isn't occurring I suspect some actual code is being invoked. Do you recall where that was?Happy to run up the tests myself in #1061 if there's a specific way to trigger what you're seeing.",,,,,,
173448556,1062,Issue,"But I'm confused by what you wrote. Are you saying that if you pass something other than null you get a test failure? Or if you omit that last argument?If I omit the last argument. Also, connection.Get returns a Task so you need to set up that return value.I was just following most other tests, where all that is being checked is the fact the correct url was touched. Also, if an Ensure check isn't occurring I suspect some actual code is being invoked. Do you recall where that was?It is being invoked and therefore failing as it sees the URI as null. I gather this is occurring due to the overloads on Get but it's hard to say specifically without a bit more context. So it sounds like the Get(Uri uri) code was failing the test, but Get parameters) was making the test pass - does that sound right to you?This sounds exactly right to me, a simple repro is too take the test [here] and remove the `null`. (this way you could use code theoretically already on your machine)What is more confusing for me is that this line: `connection.Received().GetAll u.ToString() == ""repos/fake/repo/hooks""));` does not need the null to pass... It seems to be related to whether the call returns a single object or a List",,,,,,
174387335,1062,Issue,"Well, this is interesting:By dropping the `null` it now uses an extension method - which explains why you're seeing real code run at that point. However it doesn't quite fully explain why the `uri` is null, but I'm sure they're related...",,,,,,
174389413,1062,Issue,So we have a few of these [extension methods] but I'm not sure whether we should:a) move them back into `IApiConnection` as they aren't really complicated and will clean up the testsb) properly investigate why the mock object created isn't handling the received `Uri` correctly - perhaps it's never worked...Favouring a) right now (I tested this with `Get` and was able to remove a few tests which were doing this `null` anti-pattern to make the tests pass) but I'll let this sit for a bit.,,,,,,
174397824,1062,Issue,Opened #1063 to address this specific problem. Feedback/suggestions welcome.,,,,,,
172394707,1061,Issue,"The following is an undocumented endpoint. ...  Should it be included?Let's stick to things which are documented for now. The response includes an error field which seems to be mapped to the ApiError class. Does that get included in the model?I think I'm fine with using `ApiError` here, but it's hard to say whether there's more properties which aren't displayed in the sample responses included here...",,,,,,
173170559,1061,Issue,"I believe I am done, but not sure how to fix the errors re missing files.cc  or",,,,,,
173203663,1061,Issue,not sure how to fix the errors re missing files. should add all files from `Octokit.csproj` to the cascading projects...,,,,,,
173207286,1061,Issue,Should be done then. Thanks for the help,,,,,,
173460642,1061,Issue,:tada: The errors are not my fault (I think :smile: ) this should be complete for real now,,,,,,
173477362,1061,Issue,Holding off on merging this until I can give a better answer on what is happening with #1062,,,,,,
173477928,1061,Issue,:+1:,,,,,,
174397269,1061,Issue,Found out why #1062 is occurring and it's an orthogonal discussion to this. Just a couple of comments about naming things (favouring simpler wherever possible). Everything else looks :gem:,,,,,,
174487352,1061,Issue,it is ready for a re-review,,,,,,
174849167,1061,Issue,There's also a merge conflict that needs a bit of love here...,,,,,,
174925132,1061,Issue,"look quick, it is still green :smile:",,,,,,
174935361,1061,Issue,-Zuber quick! merged!,,,,,,
174938731,1061,Issue,:laughing: Thank you for all help. This PR helped me much better understand the structure of octokit.,,,,,,
171137075,1060,Issue,"Sorry, CI is coming up with errors I didn't catch on my local machine. Almost got it hammered out. I'll squash when I'm done and let you know when this is good for review.",,,,,,
171141046,1060,Issue,"Okay, this should be good to go now. Travis is still reporting an error - looks like something in Octokit.Tests-Portable, but I don't know how to make heads or tails of it. Just let me know if it's something else I need to clean up.",,,,,,
171153456,1060,Issue,"all good, there's some CI friction that I need to look into at some stage",,,,,,
174398493,1060,Issue,"thanks for this, and apologies for not getting to it weeks ago :grin:",,,,,,
174739264,1060,Issue,":thumbsup: Thanks, no problem!",,,,,,
170750187,1059,Issue,:thumbsup:,,,,,,
170772939,1059,Issue,Would there be any opposition to supporting this in Octokit?No objections here  - and thanks for logging it as it's not something I thought about when doing the API audit!,,,,,,
169309073,1058,Issue,any idea why this is failing? It looks like it is complaining about building Tests-Portable but it seems to build locally just fine for me have I missed something?,,,,,,
169378714,1058,Issue,Nothing is wrong. It just timed out on linux and but was successful on OSX. We are good.,,,,,,
169384323,1058,Issue,Ah I thought it might be something like that thanks for confirming,,,,,,
170809663,1058,Issue,I have zero issues with this PR. Thanks for the effort !,,,,,,
168540216,1057,Issue,"BTW, you don't have to create a new PR. You can always force push to the existing PR branch.",,,,,,
168540474,1057,Issue,Looks good! Not sure why the travis build is failing. Clicking on the Details link takes me to a place where I can't see the actual build output or reason for failure. /cc,,,,,,
168345762,1056,Issue,"looks good - in the future just go straight to the PR, no need to open an issue",,,,,,
168435823,1055,Issue,"This is a great start. Might be nice to show an example of creating an issue. Also, what happens if you call `Add(""some-label"");` where `some-label` is not an existing issue. I assume it fails.",,,,,,
168540604,1055,Issue,"I'll merge this in, but it would be great to expand on it. Thanks!",,,,,,
168435554,1054,Issue,Thanks!,,,,,,
168238087,1053,Issue,Try:On mobile so can't be that much more helpful. Apologies,,,,,,
168240415,1053,Issue,"Thanks, this fixed it.",,,,,,
168274590,1053,Issue,Reopening this to get it addressed in the documentation,,,,,,
168275152,1053,Issue,"I was just confused as to where ""_issuesClient"" came from, as I suspect others will/would be - maybe clarifying that would help others.",,,,,,
168278860,1053,Issue,"could you link to where in the docs you found this `_issuesClient`? I think I know the place, but if someone else wants to dive in and fix it first it'd be greatly appreciated...",,,,,,
168278990,1053,Issue,Done and done.,,,,,,
177471700,1053,Issue,This was merged into `master` late last week!,,,,,,
191621181,1052,Issue,Can you post the stack trace?,,,,,,
192416173,1052,Issue,"This doesn't show the exact exception, can you post the complete stack trace including the exception that is thrown?",,,,,,
192431466,1052,Issue,It is throwing out of the first if in HandleErrors in Connection.cs response:exceptionFunc:Call Stack at that point:,,,,,,
192698273,1052,Issue,"Just a guess, can you try explicitly specifying the encoding, e.g. `""utf-8""` of the `NewBlob` ?",,,,,,
192719677,1052,Issue,Adding `Encoding = EncodingType.Utf8` to the NewBlob did not cause any change in behavior.,,,,,,
192808317,1052,Issue,"Well, I'm not sure on this, but the GitHub API is responding with a 422 Unprocessable Entity Status, Octokit is just throwing exception because of the 422, therefore, it must be a problem with the GitHub API.Maybe someone inside GitHub can help,  ?",,,,,,
192878296,1052,Issue,"This is the interesting bit: This returns a sha but when trying to make a tree based on this blob I get error that that sha is not a valid blob.I could put together a test to reproduce this issue (for example, [something like this]) but I'd love to see a sample from  about how he is creating the tree - the blob contents might not be the root cause here....",,,,,,
192890167,1052,Issue,"Also, the error message says: `tree.sha 0180e978c65bdba55f6a2021c6f0a3a94a2cf9df is not a valid blob.`Can you try manually making a request to respective API-endpoint to check whether the given blob actually exists or not?And,  how about changing [this test] instead to include an escaped `""` (it will test the exact scenario)?",,,,,,
193005006,1052,Issue,This test works for meYou can see the created tree here:,,,,,,
193103533,1052,Issue,"So, it means the problem might be in the way  is calling the API?",,,,,,
193104404,1052,Issue,possibly - I'd love a sample to see how 's usage differs from mine...,,,,,,
193110923,1052,Issue,I will look tomorrow into simplifying my usage and provide a test that reproduces the issue. Thanks.,,,,,,
193383838,1052,Issue,"In trying to reduce my code to the minimum I changed things such that the test started passing. It seems it was somehow specific to one of my repos, on other repos everything worked fine. Closing this issue. Thanks again.",,,,,,
168485269,1051,Issue,I am not sure why the builds are failing :(I did not add a separate test for the `Add` method as it is used in both tests already written.Also there is no test for the delete method - should it be added?,,,,,,
170805281,1051,Issue,Just nudged the problem builds and it's now all good. Will keep an eye out for other flakiness.,,,,,,
167438882,1050,Issue,Install-Package Microsoft.Owin.Security.OpenIdConnect,,,,,,
169632013,1049,Issue,"Hey all, im back from holidays - any feedback on this GitHub Enterprise support?  I plan to implement more of the open issues for Enterprise API support, but want to make sure im on the right track first :)",,,,,,
172156241,1049,Issue,"Thanks for the feedback, I've fixed up the async stuff and updated to latest master.Out of interest with octokit.net contributions, is there a preference between rebase on master vs merging master?  Similarly is there a preference to squash the commits down once it's ready to go in, or you aren't bothered by the larger number of in progress commits etc?",,,,,,
172395130,1049,Issue,"excellent questions! Out of interest with octokit.net contributions, is there a preference between rebase on master vs merging master?I'm not fussed by either approach, but merging master does help keep make the code review process easier to follow on my end. Similarly is there a preference to squash the commits down once it's ready to go in, or you aren't bothered by the larger number of in progress commits etc?I'm really not a fan of squashing together dozens of commits when it's done - but you're right about those scenarios where people just want to commit stuff before it's ready. I know I _should_ care about ensuring each commit in each PR builds and passes all tests, but I don't. As long as the history is readable and easy to follow, I'm happy.",,,,,,
172395860,1049,Issue,"Just bouncing a question off  about simplifying the code to invoke the endpoint, everything else is :gem:",,,,,,
175002634,1049,Issue,"as discussed I've rewritten this to use individual methods for each admin stats type, removed the enum, added unit and integration tests for all the new methods.  Let me know what you think!FYI I still need to run the integration tests against our enterprise instance at work tomorrow, so DONT MERGE just yet!  I'll advise once integration tests are complete.  Given we are going to be adding more Enterprise API calls to Octokit.net, we need to think about whether we can get access to a GitHub Enterprise instance from the automated builds so they can cover off the Enterprise Integration Tests.   ?On previously merged PR's I had added a `[GitHubEnterpriseTest]` test attribute, so the tests are only detected when the `OCTOKIT_GITHUBENTERPRISEURL` environment variable is present, but specifying that also then uses that enterprise instance for the normal integration tests and there's no specific GHE environment vars for user/password/token etc either.  If there is desire to get GitHub Enterprise integration tests as part of the automated process (considering we are planning on adding coverage for all the enterprise endpoints, I think this would be a good idea!) then I will do some more work in another PR to create explicit integration helper class for dealing with GHE including all the required stuff (user, password, token, organization etc etc).",,,,,,
175035413,1049,Issue,OK so I went ahead and did the mentioned integration test tidy ups too.  I havent added it to this branch/PR yet as I didnt want to complicate the review process of the actual AdminStats API implementation.  I will probably push it through in another PR once this one is merged?Here is the commit though if you're interested,,,,,,
177087999,1049,Issue,All integration tests passed against my enterprise instance so this should be good to merge (from my perspective)Not sure why the AppVeyor and Travis builds are failing on unit tests... they are all passing for me locally.  Any ideas?,,,,,,
177092654,1049,Issue,"I think it's something to do with the different overrides of the ApiConnection.Get() method and the extension method Get(Uri) calling the base Get(Uri, null)Ah never mind, I just realised there are changes on master I havent pulled in yet which sort out the issue with Get(uri) coming through to the ApiConnection as Get(uri, null), and of course my branch works but the builds are building the result of merging this with master...  doh!  Stand by... :grinning:",,,,,,
177096132,1049,Issue,"ok after merge the AppVeyor build is ok, but 1 of the travis builds (OSX) failed (but Linux was ok).  I cant quite tell what the OSX problem was, seems to have blown up trying to discover tests in Octokit.Tests-PortableI did add my GitHub Enterprise unit test classes to this project, eventhough the ""FixProjects"" build command didn't do it itself.  Should I not have done that?",,,,,,
177395229,1049,Issue,Looks like that previous OSX build failure was sporadic as they have now passed after i pushed up a couple of unrelated :lipstick: commitsI think im done with this PR now,,,,,,
177651481,1049,Issue,looking great - just one excess set of braces in the test. Looks like that previous OSX build failure was sporadic as they have now passed after i pushed up a couple of unrelated :lipstick: commitsI've opened #1076 to start tracking these more seriously than I previously have.,,,,,,
177917238,1049,Issue,![],,,,,,
168435959,1048,Issue,I dig it.:+1:,,,,,,
168737505,1047,Issue,Putting up a new PR due to needing to rebase my branch onto master,,,,,,
167015284,1046,Issue,These would probably help in getting started.,,,,,,
167019680,1046,Issue,"the published version of the Getting Started guide is probably worth looking at: There's also a section about Issues If there's things that you don't find clear, let us know and we can refine them",,,,,,
167029160,1046,Issue,Do we want to add the above link to `README.md`?,,,,,,
167031557,1046,Issue,it'll appear when the `documentation` branch has been merged:,,,,,,
167041649,1046,Issue,Thank you guys for your speed replies!,,,,,,
178889279,1046,Issue,As #948 has been merged and the README now has a Documentation sectionI'm going to close this out.,,,,,,
167094682,1045,Issue,I'll take this.(only right as it's my fault it is here :stuck_out_tongue:),,,,,,
167419350,1045,Issue,"okay, so this seems to be quite complicated (and possibly the reason tests were not written previously)You can not get collaborator data if you do not have push access to the repository. what do you say?",,,,,,
167442420,1045,Issue,"-Zuber you might be right - from the docs:  Otherwise, only users with access to the repository are returned in the collaborators list.I suspect `pull` wouldn't give you much data, but I haven't looked into it.To test this out, you could use a newly-created repository and add/remove collaborators from there before tearing it down...",,,,,,
167443078,1045,Issue,Thanks for that input.Well I guess I am going to sacrifice my user to lots of notifications :) (or make yet another one :)Hope to get to this soon,,,,,,
167010302,1044,Issue,LGTM,,,,,,
167003766,1043,Issue,"A couple of little formatting things, everything else seems :gem:",,,,,,
167108401,1043,Issue,Thanks   updated :),,,,,,
168436427,1043,Issue,Nicely done! Thanks a lot! :+1:,,,,,,
167012480,1042,Issue,Merge conflicts :cry:,,,,,,
167042880,1042,Issue,Do you need that empty commit rebased out?,,,,,,
168436315,1042,Issue,Do you need that empty commit rebased out?Yes please. :smile:,,,,,,
168482832,1042,Issue,git history was messed up real bad.Opening a new PR @ #1057,,,,,,
167003186,1041,Issue,"Looking good, just a few little suggestions on Naming Things‚Ñ¢",,,,,,
167023152,1041,Issue,"No worries, naming things is the hardest part so always keen for feedback :stuck_out_tongue:",,,,,,
168436261,1041,Issue,I like where this is headed! I agree with the naming suggestions  proposed.,,,,,,
168438028,1041,Issue,"Cool, I'll push some changes later this week when I'm back (currently overseas)",,,,,,
169631375,1041,Issue,"Hey guys, Im back from holidays and have pushed up some renames as well as merged latest master into my branch.  Let me know what you think of the names",,,,,,
170807894,1041,Issue,"looks good to me, thanks for the work!",,,,,,
166889014,1040,Issue,#NAME?,,,,,,
166889424,1040,Issue,"Okay, so the wanted change is just the properties on the `RepositoriesClient`s?I'll start over in a new branch, if that's okay. A little simpler for me",,,,,,
166889811,1040,Issue,"Okay, so the wanted change is just the properties on the `RepositoriesClients`?Correct. Let's keep it simple! I'll start over in a new branch, if that's okay. A little simpler for meIf you're fine with force-pushing this branch to blow away the current changes, I'm fine with that. Otherwise just open a new PR.",,,,,,
166889998,1040,Issue,Force push is fun :smile: _I'll be back_,,,,,,
166890490,1040,Issue,Force push is fun :smile: ![],,,,,,
166926098,1040,Issue,that gif more then accurately describes what I just went throughCI y u no pas??? EDIT: I think I fixed him,,,,,,
166945235,1040,Issue,BTW I noticed that there seems to be no tests for this property. Is this on purpose?,,,,,,
167010090,1040,Issue,"BTW I noticed that there seems to be no tests for this property. Is this on purpose?No, likely just something that was overlooked. Tracking that in #1045",,,,,,
167010140,1040,Issue,-Zuber thanks!,,,,,,
166900788,1039,Issue,Do we want to use the property  `CommitUrl` that hasn't yet been documented?,,,,,,
167012437,1039,Issue,"Do we want to use the property `CommitUrl` that hasn't yet been documented?I'm tentatively :thumbsup: on this, but I'll let  throw his 2c in as well before we close this out.",,,,,,
168436206,1039,Issue,Looks good to me. Thanks!,,,,,,
166799274,1038,Issue,And credit to  for starting this off in,,,,,,
166801566,1038,Issue,Thanks. :metal:,,,,,,
166816959,1038,Issue,"Not sure how much people want to review this, but it's relatively self-contained so I'm happy to let it sit over the break...",,,,,,
166866720,1038,Issue,"From a quick glance-over this looks very nice. :+1: Re the CodeAnalysis that you are bulding, I think this is a complement. One is for the developer, the other for maintainers. (Also existence of method vs implementation)",,,,,,
166885075,1038,Issue,"Re the CodeAnalysis that you are bulding, I think this is a complement.I agree. I think there's some post-compilation stuff that we can verify easily via tests (especially when comparing the documented APIs to what's been implemented) and this has already been helpful in that regard.",,,,,,
173436559,1038,Issue,"I'm putting the CodeAnalysis stuff aside for now to focus on other things.Someone is more than welcome to pick it up in my place, and I'm happy to help shape it.",,,,,,
178261918,1038,Issue,"Now that a bunch of open tasks have been resolved, I should merge in those changes and try running the tests again - and of course get some actual data from the audit so I can hopefully test further details.Putting back to WIP",,,,,,
231908017,1038,Issue,"Was able to rebase this branch and see it only raises 5 API errors, but I'm going to close this PR and revisit the overall process for incorporating this properly:- I'd like it to be outside the current suite of integration tests- The rules engine is not intuitive at all (hell, I barely understand what I've done here)- What to do about the violations that I've suppressed?",,,,,,
166793261,1037,Issue,Or should we name this `GitData` to match with the section header?,,,,,,
166871353,1037,Issue,"Has this been an issue before (conflict of endpoint name in API and section header?)If there is no precedence, my feeling is to stick with the actual api",,,,,,
166887315,1037,Issue,"Has this been an issue before (conflict of endpoint name in API and section header?)No, just me thinking out loud.",,,,,,
167135745,1037,Issue,I'll take this. And implement as Git as I think matching the API is best.,,,,,,
167135983,1037,Issue,Glad someone agrees with me ;),,,,,,
172032970,1037,Issue,This can be closed.,,,,,,
172034869,1037,Issue,Thanks!,,,,,,
166871613,1036,Issue,I'll take this,,,,,,
166932789,1035,Issue,:tanabata_tree:,,,,,,
166935378,1034,Issue,I'd like to work on this one,,,,,,
166936421,1034,Issue,"Have fun, you might want to look #1042 for inspiration :grinning:",,,,,,
178254378,1034,Issue,Am I right: this issue was already fixed by #1043 ?,,,,,,
178256734,1034,Issue,"yes - another one that missed the ""auto-close on PR"" boat! Thanks for reminding me!",,,,,,
166987048,1033,Issue,I would like to try this. Seems like the simplest option to hang on as a gateway into more hardcore stuff,,,,,,
166938306,1032,Issue,I'd like to work on this one,,,,,,
177925501,1032,Issue,Just going through open issues and noticed this one was fixed in #1058 and should be closed,,,,,,
177932514,1032,Issue,Whoops! The auto-closing of PRs didn't catch this one. Done!,,,,,,
166942825,1031,Issue,I'll do this,,,,,,
178324770,1030,Issue,Fixed in #1068,,,,,,
166913109,1029,Issue,"I'm not 100% sure what this is all about, but it's in preview mode so it's not that urgentFYI : A migration is the process of transferring data from a source location (either a GitHub.com organization or a GitHub Enterprise instance) to a target GitHub Enterprise instance. Migrations can be used to transfer your data when changing platforms or upgrading hardware on your instance.",,,,,,
166994180,1029,Issue,:metal: thanks!,,,,,,
194973641,1029,Issue,I want to work on this. Any pointers anyone?Or maybe I'll try it myself first. :pray:,,,,,,
195075400,1029,Issue,Similar to #1024 you need to be on GitHub Enterprise to do this one :wink:,,,,,,
195077117,1029,Issue,"Can I still help writing models, requests, tests, etc.?I know I won't be able to to do integration tests, but still. I'll submit them to your fork.",,,,,,
195086939,1029,Issue,"Sure, feel free to create all the models classes interfaces and so on and let me know your branch etc.I wasnt planning on doing this one for a while anyway, as im not really across what these migrations are about (migrating code from one github to another involving zips and files etc i think!) and dont really have a use for them at the moment...  Once I've done the #1024 this issue will be the last major Enterprise API missing, so for completeness sake I do want to do it... but definitely not as a priority",,,,,,
221259914,1029,Issue,Implemented by #1141,,,,,,
177890734,1028,Issue,"I'd like to take thisEDIT: This will take some research and planning, but I do plan on doing it",,,,,,
179681451,1028,Issue,"Per #1088, is a similar server side model wanted for OrganizationWebHooks?",,,,,,
194946993,1028,Issue,I would like to work on this,,,,,,
194966800,1028,Issue,From my side of things: Go right ahead. I never got started.Good luck!,,,,,,
640270798,1028,Issue,Resolved by #1884 and going out as part of the next update,,,,,,
166780662,1027,Issue,![],,,,,,
177981010,1026,Issue,"Im going to take this one  tooQuestion: Given the various options that are passed in to this API call as ""target"" parameter, what would be the preferred approach?  I was thinking of creating individual methods for the various options...  I haven't found a similar API elsewhere yet, though Im not familiar with the entire API.So my proposal would be to create functions similar to:Sound OK?",,,,,,
177986975,1026,Issue,"Or another approach would be to have a single method with overrides for owner, or owner+repo, and an enum to specify the scoping:question:",,,,,,
178265696,1026,Issue,the first snippet could be distilled down to this:But the second could also work. Happy to go with whatever feels natural once you're writing the plumbing inside the client.,,,,,,
178856752,1026,Issue,"So I implemented most of this last night, your distilled version felt pretty natural  Just need to do the Reactive classesThe only ""fun"" thing so far is that the ""single"" queue actions (like owner and repo) endpoints return a single ""message"" response element likeWhilst the other ""QueueAll"" type endpoints return an array of messages, like It looks like the json parser does handle deserializing the single message element into the response model class with `IReadOnlyList Message` however it also ""eats"" the dash character in my username, resulting inRather thanSo do you think I should implement 2 different response classes, one for single actions and one for multiple actions... or attempt to figure out/fix why the serializer is ""eating"" the hyphen?! ?",,,,,,
178884183,1026,Issue,"however it also ""eats"" the dash character in my username, resulting in![] So do you think I should implement 2 different response classes, one for single actions and one for multiple actions... or attempt to figure out/fix why the serializer is ""eating"" the hyphen?!Ideally, I'd like to deal with the latter - are you able to isolate this in a test to the deserializer step? (i.e. just use the JSON and try to deserialize to the list)",,,,,,
179017418,1026,Issue,:+1: ok will take a look tonight,,,,,,
179179059,1026,Issue,"Yep a failing test like this shows the problem.  Ill either fix it, or raise an issue and Ignore the test (noting the issue number).  Just want to finish off implementing this SearchIndexing api first",,,,,,
179206812,1026,Issue,"So the responsible line is Looking at when it was added on PR #727  ...It looks to me like the problem of handling underscores in enum values should be taken care of by the `RemoveHyphenAndUnderscore(stringValue)` calls added for Enum and nullable Enum types, so im not sure why the first `stringValue = stringValue.Replace(""-"", """");` was also introduced.  I removed line 93 and unit tests are passing, just running integration tests now... though there's always the risk that not enough tests around this area exist. if you remember anything from back then, do let us know!",,,,,,
179476215,1026,Issue,"excellent find! I'll look over that PR to see if I can understand why we might have done that. I removed line 93 and unit tests are passing, just running integration tests now... though there's always the risk that not enough tests around this area exist.I can also look over the integration tests as part of this review, to sanity check things...",,,,,,
179503850,1026,Issue,"Yep, I removed the line and all current unit and integration tests passed, including the ones for property values with underscores added back in that PR, so it's a good sign. Of course if we don't have test coverage for every scenario we may miss something, but the best way to handle that IMO is to add tests if/when something breaks. Judging by the existing tests it looks like there's been a good culture of adhering to that approach (as well as ensuring tests are added with any new functionality), so one assumes the tests we currently have already assert behaviour complies with any previous reported shenanigans. This situation was a pretty out lying  edge case I guess, attempting to deserialize a `string` into a `IReadonlyList` (due to previous comment regarding differences in the message response from queueing a single item vs queueing all repositories/issues) Would you rather handle this json deserialize hyphen problem on a new issue/PR or shall I include it in this one? As an aside it seems some of the integration tests (unrelated to this change) aren't consistently passing first time, but do pass after one or more retries so I might flag that for follow up ad well",,,,,,
179563931,1026,Issue,"Would you rather handle this json deserialize hyphen problem on a new issue/PR or shall I include it in this one?I'd like to address that in isolation, so a separate PR would be :sparkles:",,,,,,
180336411,1026,Issue,Done (#1094) and also completed this Search Indexing API (#1095),,,,,,
177025157,1025,Issue,You can assign this one to me too,,,,,,
194971170,1024,Issue,"I would also like to work on this, can I help?",,,,,,
195065120,1024,Issue,Do you have access to a GitHub Enterprise environment (this is on premise version of github) ?,,,,,,
195066179,1024,Issue,I guess not. :cry:,,,,,,
195075175,1024,Issue,"Yeah if you have a look at the API docs linked above, there are some specific APIs that only the on premises ""GitHub Enterprise"" supports.  We use GHE at my work so I've been working on fleshing out the support for these in my spare time.  Happy for anyone to help of course, but obviously there are a few barriers to entry - namely that you have a GitHub Enterprise license!",,,,,,
177025034,1023,Issue,Im working on this one at the moment,,,,,,
177975571,1022,Issue,I'll take this one next,,,,,,
167036303,1021,Issue,I'll take this,,,,,,
166753237,1020,Issue,Thanks !,,,,,,
166170952,1019,Issue,"should be removed from this PR, as it's covered by #1018",,,,,,
166219014,1019,Issue,Fixed,,,,,,
166462825,1019,Issue,-Zuber the rogue `packages` entry is still present,,,,,,
166509109,1019,Issue,![] I guess this is why `packages` is usually in the .gitignore  ¬Ø_(„ÉÑ)_/¬ØI'll fix it when I'm in the office,,,,,,
166534454,1019,Issue,Done and rebased,,,,,,
166543057,1019,Issue,have you seen this before?,,,,,,
166674269,1019,Issue,it is for the PortableReferenceAssemblies that we get from the xamarin. Looks like it is failing to get it failure because of  timeout. Did you try re-running the build on the same commit?,,,,,,
166743889,1019,Issue,it was failing for me on multiple builds yesterday (both for OS X and Linux) but seems to have come good today. Thanks for the :eyes:.,,,,,,
166744453,1019,Issue,![]-Zuber thanks!,,,,,,
166466132,1018,Issue,Timing comparisons (AppVeyor):#### A recent [master] build#### [This PR]So the difference is basically in the unit tests project. Joy.,,,,,,
166501472,1018,Issue,I'm :-1: on reverting the xUnit update here to get those extra seconds back - I'd rather us be on the latest stable releases and then look to speed things up by improving the CI process.,,,,,,
166488913,1017,Issue,"thanks for the extra details - it sounds like there's a lot of inter-related stuff here.Could we break this down into a couple of PRs, so it's easier to review?- the incorrect and missing fields thing should totally go in first - let's clean that up and get it correct- as `/repos/:owner/:repo/issues/events` exists at [`activity/events`] and [`issues/events`] in the API docs, let's keep both methods around under the relevant clients.- supporting and deserializing events which may be implemented in the future - in `EventsClientTests`",,,,,,
166674842,1017,Issue,And also the test's are failing.,,,,,,
166762972,1017,Issue,I'll leave this open until  has had a chance to :thumbsup: my feedback about splitting this into multiple PRs.,,,,,,
166769626,1017,Issue,"you can close this one, I'll open some other PR over time (probably after the Christmas break as I'm not taking my laptop with me).",,,,,,
166775400,1017,Issue,"all good, i'll be doing the same :metal: :beers:",,,,,,
165842036,1016,Issue,:+1:,,,,,,
165958300,1016,Issue,I'll take a stab at this.,,,,,,
195331083,1016,Issue,"What needs to be done here then ?I followed your discussion [here] and since the method is implemented in a different class, do i need to remove it from there, or just have to add the new method in the **EventsClient** class or both ?",,,,,,
195888722,1016,Issue,that's an excellent point - I've called out the three tasks I think need to be done here  but let me look at the current state of affairs and open fresh issues (rather than this vague one).I'll leave this open until I have linked to the new tasks here.,,,,,,
165682669,1015,Issue,:+1:,,,,,,
165683043,1015,Issue,I'd like to try and take this,,,,,,
166770225,1015,Issue,Fixed in #1019,,,,,,
165589032,1014,Issue,"Possibly related - should we reference the CodeFormatter project added in #807?If so, I need to update [this repo] to reflect it's intent...",,,,,,
165592058,1014,Issue,"Oh yes,  that should definitely be mentioned. The way I am leaning is too link from contributing. md to a CustomCodingConventions.md file.",,,,,,
165592172,1014,Issue,But that will have to wait until I am not on my phone. (also editing a comment),,,,,,
165597246,1014,Issue,-Zuber this feels like it could be part of the documentation we're putting together in #948. Do you agree?,,,,,,
165603951,1014,Issue,"This specific pull request or the new file? New file yes,  this not (as I see it) As a side note: responding through email takes an awful long time to show up...",,,,,,
166068460,1014,Issue,Let's take this in and then expand on it in some documentation.Thanks -Zuber!,,,,,,
165268854,1013,Issue,This doesn't change any of the API return types yet. I just wanted to take a baby step here. The next step will probably be to define interfaces.,,,,,,
165276270,1013,Issue,"while we're being a bit pedantic with types - how attached are you to the `Simple` suffix? I think the name is good, I just keep expecting to see it as a prefix, e.g. `SimpleAccount`, `SimpleOrganization`.I do like `UserWithIdentity` - which is also a suffix - so perhaps I'm just in a ""naming things is hard"" phase of the review process...",,,,,,
165286580,1013,Issue,"The reason I like the suffix is it makes it easier to find the set of related types when using intellisense or looking at the directory structure. For example, if you start typing `Account` you'll see all the types starting with that. I'm not too attached though.",,,,,,
165298766,1013,Issue,:thumbsup:,,,,,,
272695074,1013,Issue,"Im wanting to close out old PRs if they aren't ever going to see the light of day.Are we still wanting to head in this direction?  Eg creating things like AccountSimple, UserSimple, PullRequestSimple and so on?I do see the benefit in terms of not misleading users by showing fields existing on objects that arent populated unless you've called the ""load single object"" API call...  But I do wonder how much extra work is involved to split all the classes and figure out which fields belong in the Simple vs the Full objects, adding all the new overloads and obsoleting the current ones, rewriting tests etc.  Im wondering if the benefit is worth that initial and ongoing work?",,,,,,
273223713,1013,Issue,"I don't have time to follow-up on this anymore and you're right, it's not worth the effort.",,,,,,
165093216,1012,Issue,":shipit: This needs a rebase, though.  how's the C#6/project.json stuff going? Most of these should be converted to interpolated strings at some point :smile:",,,,,,
165096218,1012,Issue,I'll do the rebase when my Internet is not from my phone :grin:Does that mean  making a new PR? Haven't rebased in a while,,,,,,
165097255,1012,Issue,"There shouldn't be a need to open a new PR. I think the steps should be something along the lines of- `git checkout uppercase-is-not-always-right` // make sure you're on the right branch- `git remote add upstream git.com:octokit/octokit.net.git` // if you haven't already, add a new origin to the upstream repository- `git pull --rebase upstream master` // fetch the latest changes from upstream master and rebase on top of it- `git push -f origin uppercase-is-not-always-right` // push the changes :sparkles:",,,,,,
165175712,1012,Issue,"Oh boy. So our convention is something that we can't currently capture with R# rules today (afaik).- Do use `String` when calling static methods of `System.String`.ex: `String.Format(...)`- Do use `string` when specifying a type such as the return type of a method, an argument, a field, a property.ex: `void DoStuff(string foo);`",,,,,,
165177138,1012,Issue,NP. You guys where not around in gitter and  seemed to not know this twitter. I will close this and reopen a new PR that adds to the documentation. What is the target file? Contributing.md?,,,,,,
165177382,1012,Issue,What about `new string`?,,,,,,
165179288,1012,Issue,"What about `new string`?Do we do that anywhere? :stuck_out_tongue:The general principle I have in my head is that when we're using `System.String` like a primitive, we use the C# shorthand syntax. Hence `string` for return types, etc.When we use it like a type, I like it to look like a type. Hence `String.Format`, `String.Empty`, etc.Hence I'd prefer `new String()` or `new Int32()` over `new string()` and `new int()`. Anyone know if we can configure R# or VS rules to follow that convention? Or am I being too picky?",,,,,,
165198497,1012,Issue,Anyone know if we can configure R# or VS rules to follow that convention? Or am I being too picky?Nope. It's either the keyword or the CLR type. Keyword is default :smile:,,,,,,
165207767,1012,Issue,"I wrote a [blog post about the convention]. I'm seriously considering changing my mind given that the [corefx team has their guidelines] and to be quite honest, I hate fighting defaults and I hate arguing every single convention.I'd rather have a one-time argument where we decide on a set of conventions someone else maintains and when people complain about any given convention, we tell them to take it up with the dotnet team. :stuck_out_tongue:",,,,,,
165210817,1012,Issue,"While I have come around to 's way of thinking in this regard,having a set of guidelines that is not our fault can be very useful.One point that has not been mentioned is people new to C#. It may be confusing to them as in a lot of cases the existence of the BCL types is not even known to them. Sticking to the keywords may be less confusing.I can reopen the PR if you so desire",,,,,,
165214478,1012,Issue,I can reopen the PR if you so desireSure. I'd love to hear 's thoughts on this.,,,,,,
165216063,1012,Issue,[Here is what happened on twitter today],,,,,,
165242469,1012,Issue,"Okay, so here's my thoughts on this:- `String.Method` definitely feels more Type-y, and I do empathise with the mental ""jump"" that occurs if you come across a `string.Method`- For other types that have aliases in C# (`long`, `int`, etc) I don't really recall having the same hassle - in fact, I kinda squirm if i see `Int64` or `Int32` mentioned explicitly.- The using statement arguments are kinda trivial for me - there's likely other things in the `System` namespace which you'll need, aside from `String`.For the sake of consistency, I'm :thumbsup: on moving it all to `string`.",,,,,,
165248227,1012,Issue,"how's the C#6/project.json stuff going? Given we're all on VS2015 now, this is possibly something worth entertaining (although there might be work to bring the Mono side up to parity once #995 lands).",,,,,,
165256500,1012,Issue,![selfie-0],,,,,,
165269659,1012,Issue,:joy: That sums up the thread so perfectly. Thank you for the patience.,,,,,,
165269802,1012,Issue,can I open a WIP for the string.format work?,,,,,,
165276401,1012,Issue,-Zuber I'll open an issue after merging the Mono PR,,,,,,
165379999,1011,Issue,Isn't this a duplicate of #904? :smiley:,,,,,,
165384182,1011,Issue,yes - oops!,,,,,,
164897046,1010,Issue,This feels like our generic 404 exception (which the API typically returns when a repository doesn't exist) - do you have a snippet that I can use to explore this further?,,,,,,
164963924,1010,Issue,"Yep, so after some digging I found the specific error was when trying to add a label to a repo with credentials that didn't have write access to that repo.I can email you a script if that'll help.",,,,,,
164965981,1010,Issue,that'd be great. I can then generalize it and turn this issue into something we can improve more broadly...,,,,,,
165213749,1010,Issue,"Yep, so after some digging I found the specific error was when trying to add a label to a repo with credentials that didn't have write access to that repo.So is the issue you want a specific exception?A lot of our API endpoints return 404 to avoid information disclosure. So we can't tell you that it's an access denied necessarily. We could give an exception specific to the action such as `RepoLabelFailedException`. But I'm not sure that's all that valuable. You kind of know what you were doing, right?",,,,,,
165308664,1010,Issue,"So is the issue you want a specific exception?Just a more specific message. `Not Found: 404 trying to retrieve resource ...[specific endpoint]` would be useful. You kind of know what you were doing, right?![Dog at keyboard with caption ""I don't know what I'm doing""]",,,,,,
165517703,1010,Issue,"Just a more specific message.Kids these days. Always asking for useful relevant information in exception messages. IN MY DAY WE GOT ""Unexpected error occurred"" AND WE WERE GRATEFUL AN EXCEPTION EVEN OCCURRED!:stuck_out_tongue:",,,,,,
194967916,1010,Issue,"I dug through the code and found out that errors are handled in `Connection.HandleErrors()`, which just throws the an `ApiException` if the status code > 400. I can extend it to show a message based on the end-point.Also, a possible solution is that we provide `HandleError()` with some info about what was requested so that it can throw a more informative message with the exception. What should be done?",,,,,,
195074328,1010,Issue,"The `ApiException` class already has properties on it that provide the message, status code, array of errors etc.  Im not sure if this issue is saying an even more specific message is required or whether the full abilities of the `ApiException` class were not being usedeg from [ApiExceptionTests.cs]",,,,,,
195080205,1010,Issue,maybe we should verify that a 404 exception also has these details - I recall a PR where we were submitting some more information (the raw JSON payload) so let's see what we're getting currently before we close this out...,,,,,,
195081537,1010,Issue,"I can try this out, but I'll need  to provide more details on how was he accessing the API?",,,,,,
195081784,1010,Issue,"nah, I don't think it's that complex - try accessing a repository that doesn't exist, for example",,,,,,
195892694,1010,Issue,Tried deleting a repo without access:Tried accessing a repo which doesn't exists:Should there be any more information? Is this similar to what your were getting or something else?,,,,,,
195897291,1010,Issue,"You're not actually calling the method properly there... They are async calls so you need to await the result, otherwise you're actually dealing with a `Task`You'd need to wrap that in a try/catch then see what data you get on the thrown exception",,,,,,
195899280,1010,Issue,"Oops sorry I see you did try to say `.Result` on the call. I dont think you can really do such async stuff on console/immediate window, hence errors about tasks not having a property called ""Result"" etcit's easier to just write an integration test or something so you can execute the actual code fragment ""properly""",,,,,,
195899703,1010,Issue,"This is not command window, its `scriptcs` code, so I guess it is showing the correct response. Also, I tried a legit call and the response was correct, so this shouldn't be a problem. Or am I missing something?",,,,,,
195900666,1010,Issue,"Ah ok... Sorry am on my phone at the moment! I see now the first error you posted was saying .Result isn't a valid member...  that's because Delete actually isn't a Task but just a Task. But yes it looks like the exception is still what you wanted to look at In both cases the exception you've received, you want to inspect the ApiError objects on it, to see what information is there on the .Message and .Errors (as per that unit test I posted earlier)",,,,,,
195907650,1010,Issue,The `AggregateException` raised is classic TPL behaviour. You want to have a look at what's set on it's `InnerException` - which seems to be the `404` you're interested in...,,,,,,
195910413,1010,Issue,"Also, I think the `Not Found` is because the GitHub API gives just **""Not Found""** as message on 404.So, what should be done next?",,,,,,
164898111,1009,Issue,Do we want to add those too?Sure!,,,,,,
164991326,1009,Issue,Added everything that was missing. Left out `gravatar_id` from the user payload as it has been [deprecated].,,,,,,
164998356,1009,Issue,"I didn't run the build script locally, I'm a bad man :cold_sweat:",,,,,,
165046888,1009,Issue,"I didn't run the build script locally, I'm a bad man :cold_sweat:![]",,,,,,
165203372,1009,Issue,Looks good to me!![selfie-1],,,,,,
165261957,1007,Issue,I updated master head with the new commit so that the PR is not mergeable (not sure if it's the best way to do this.Seems reasonable to me.The funny part is that this branch is also not mergeable and I got confused for a second about what you were making not mergeable. :stuck_out_tongue: Please fix up this branch so we can merge it in. Thanks!,,,,,,
165623634,1007,Issue,Thanks !,,,,,,
164508260,1006,Issue,LOL! Thanks!,,,,,,
164549672,1005,Issue,:shipit:,,,,,,
164341715,1004,Issue,I like this and really have nothing further to add. :tada: Gonna let this sit for a bit and see if others have feedback.,,,,,,
165621673,1004,Issue,"did you want to include this in the integration test scriptI think it should work as-is as an optional variable, and the alias could be something like ""GitHub Enterprise server""",,,,,,
165977426,1004,Issue,"OK, added it to the helper script as an optional variable",,,,,,
166049627,1004,Issue,Thanks!,,,,,,
165214724,1003,Issue,create a new key in the test might be a bit challenging to doWhy is that? My brain had a core dump and I don't retain any context at all about this code path. :stuck_out_tongue:,,,,,,
165284710,1003,Issue,we'd need a way to emulate this sort of operation:and then use the public key contents,,,,,,
184641062,1003,Issue,"Hey so as part of working on fixing #1106 I came across this skipped test.At work we use [Chillkat.net] ([x64] [x86]) when we need to generate SSH keys in c# code...Im not sure if nuget packages work on linux/OSX builds, but then it seems like the Integration Tests dont run on those platforms anyway right?  So would chillkat be a viable option?Let me know if I should pursue this...My plan would be to add chillkat nuget reference to `Octokit.Integration.Tests` project, and use it to create helper context extension method `GitHubClient.CreatePublicKeyContext` to create a public key and delete it again when going out of scope.  Then I should be able to re-enable this test and things should be pretty reliable as we wont trip over any issues if keys still existed from previous runs, since we'd be creating a new key everytime (and also cleaning it up, unless anything goes wrong)",,,,,,
184966616,1003,Issue,Sounds good to me. ?,,,,,,
185004633,1003,Issue,definitely worth exploring - I stumbled upon it a while ago but got sad at the fact it wasn't OSS. I also have some reservations about the [licensing] of the components (having been bitten by this in the past) but let's see what comes up.,,,,,,
185006494,1003,Issue,"I stumbled upon it a while ago but got sad at the fact it wasn't OSS. I also have some reservations about the licensing of the components (having been bitten by this in the past) but let's see what comes up.Ah, that could be problematic.",,,,,,
185086789,1003,Issue,"I'll try to find what license pertains to their freeware libraries, like the SSH one I'm referring to",,,,,,
164404603,1002,Issue,I would like to try this one.,,,,,,
164406401,1002,Issue,-Zuber let me know what you find out!,,,,,,
164412560,1002,Issue,Lets start with Works On My Machine‚Ñ¢...If I run it by itselfI ran all the tests using the built in test runner of vs - the fails where unrelated to this.Also when does Appveyor run integration tests?or will it never?,,,,,,
166060844,1002,Issue,So of appveyor we have spoken. Of the rest of this issue we have not,,,,,,
166060876,1002,Issue,you as I remembered to not rely on other notifications,,,,,,
193720335,1002,Issue,this test is passing in VS Tests. Also the repo is being created and deleted. Please give some more details about the problem.,,,,,,
193759347,1002,Issue,Its passing for me also. Should we un-skip it?,,,,,,
193960517,1002,Issue,if someone wants to submit the PR to unskip it I can verify and close this out.,,,,,,
195026137,1002,Issue,This should be :closed_lock_with_key: .,,,,,,
195065588,1002,Issue,Resolved by #1135,,,,,,
164428203,1000,Issue,looking into this,,,,,,
164431802,1000,Issue,"What I have so far on this:The `CanCreateAndGetAuthorizationByFingerprint` test does almost the exact same thing. _(some asserts maybe can be added based on the test w/o fingerprint)_If the behavior is that `NewAuthorization` needs a fingerprint, then there is more involved then just removing the old test.The model has to be also updated.Will wait here on feedback before opening PR",,,,,,
166060854,1000,Issue,:wave: @ tting you as I remembered to not rely on other notifications,,,,,,
194760703,1000,Issue,"I was going through the API documentation, 'Get-or-create an authorization for a specific app' and 'Get-or-create an authorization for a specific app and fingerprint' are both supported. Why do you want to :fire: this test?link to documentation-",,,,,,
195061653,1000,Issue,"you're right, [creating an authorization without a fingerprint] is still supported, so perhaps we need to keep this test around.-Zuber apologies for missing those messages from back in December. What did you find when you were looking into those tests? And do you think we need to do anything in here given the previous statement?",,,,,,
195107680,1000,Issue,"This is what I found. I was about to open a PR when I spotted the without fingerprint in the documentation. The code for CanCreateAndGetAuthorizationWithoutFingerprint and CanCreateAndGetAuthorizationByFingerprint is almost the same. In without fingerprint when creating authorization, it checked for tokenlasteight and hashedtoken values too. But it doesn't do so in  with fingerprint. By reading the comments it seems like it was assumed these were returned only when they were requested the second time(which is not so according to the documentation) and not when they were created.Also I had removed the newauthorizations overloaded constructor without the fingerprint parameter(as now it was a required thing), but it was being used at multiple places, like creating personal tokens etc, so I kept it.In the documentation, in the Deprecation Notice it says that ""token is still supported"" in both Get-or-create an authorization for a specific app' and 'Get-or-create an authorization for a specific app and fingerprint'. So does this mean that they'll remove this is future? Because if they do CanCreateAndGetAuthorizationByFingerprint  and CanCreateAndGetAuthorizationWithoutFingerprint both will fail as there is an assert statement to check that token value isn't whitespace or null",,,,,,
195210993,1000,Issue,"I'll have to get back to you after the weekend. I do not remember exactly what I found.Most probably pretty much the same as , but ill dig it out again.",,,,,,
197784015,1000,Issue,"The test still passes, so I'm going to chalk this up to eager obsoleting. I can't see a mention of this being removed in the future, so I'm happy to keep this test around.Thanks  and -Zuber for looking into this.",,,,,,
164302703,999,Issue,but it looks like webhooks weren't being delivered over the weekendI had set the octokit/octokit.net webhook to only send `push` because someone suggested that solved the problem for them including pull requests and avoids the triple build issue. But it just occurred to me that might only work for pull requests pushed to this repository and not for pull requests pushed to a _fork_ of this repository. So I changed the webhook just not to also send pull requests.,,,,,,
164306771,999,Issue,"ah, okay. I traced the triple commit status issue to a legacy commit status, so now we should only see (up to) two statuses when PR is created against this repository. The multiple builds issue is actually due to two things occurring - a build for the tip of the PR branch, and a build for the merged commit (the PR branch merged into master, if it does cleanly merge). I'm not sure of a way to switch that off, but I think the default webhook settings are now correct. Make sense?",,,,,,
164309436,999,Issue,I'll let you remove the old project configuration from AppVeyor and :thumbsup: this PR.,,,,,,
164309621,999,Issue,so did you change octokit/octokit.net's webhook to point to the new one?,,,,,,
164309709,999,Issue,It looks like it. :sparkles: Nice work!,,,,,,
164310286,999,Issue,so did you change octokit/octokit.net's webhook to point to the new one?![],,,,,,
164310394,999,Issue,"The multiple builds issue is actually due to two things occurring - a build for the tip of the PR branch, and a build for the merged commit (the PR branch merged into master, if it does cleanly merge). I'm not sure of a way to switch that off, but I think the default webhook settings are now correct. Make sense?Hey guys, interesting situation because we are running into similar things ourselves with our on-prem GithUb enterprise and Teamcity.  Hopefully not telling everyone what they already know but each pull request has 2 ""branches"" /refs/pull/999/head (which is the head of the PR) and /refs/pull/999/merge (which is a potential merge commit of the PR with the target branch, eg master).  So when doing CI builds ideally you want to build the ""merge"" one and not the ""head"" one, since it doesnt really matter if the PR itself builds, what we care about is whether master builds once the PR is mergedBut if you are using the commit status API to set build status on the PR/commits, then when the status is pushed, that changes the commit hash on the /merge branch which then fires off another build etc.  Unfortunately we havent figured out a neat way of dealing with this as yet so we are stuck building /head of PR's when we really want to be building /mergeIs this similar to the ""multiple builds"" issue you are referring to with octokit and appveyor?  If there are any solutions Id be all ears.  One thing is we could send the webhooks to an intermediary service that would analyze the github/PR etc and then figure out whether it was only a commit status update or a ""real change"" and only relay the build to TeamCity if it was a ""real change"".  But that's getting pretty nasty :)",,,,,,
164311186,999,Issue,"yeah, I'm not _too_ fussed about it, but I do like verifying the branch tip as well as the merge commit. But yes, it's exactly the same issue - here's how AppVeyor displays it:",,,,,,
164311206,999,Issue,Interesting. I think there are two potential ideal solutions.1. If GitHub gave more granularity in Webhooks when sending pushes to build. You could contact  and suggest that.2. If AppVeyor gave us more options to control which branch of a pull request gets built. This is similar to your intermediary service suggestion.  is pretty responsive and might be willing to consider that change. :smile:,,,,,,
164343298,999,Issue,"You see two builds if both feature branch and PR are in the same repo. With forked repos this works nice as you get PR build only in the master repo.Regarding commit status - to set PR status the status should be set on branch commit, not a virtual ""merge"" commit - at least AppVeyor does that right now, last time I tried setting status on merge commit it didn't change PR status.I don't know yet what would be the best strategy to implement prevention of branch commit build if that commit participates in PR(s). When you do a push to feature branch, usually ""push"" event comes first (guaranteed?), then ""sync"" events for all affected PRs. How do we know that commit is part of PR(s), not a regular ""working"" commit? Check [all commits of all PRs]? This could be slow.",,,,,,
164300788,998,Issue,"Yep, definitely not needed any more! Nice spot!",,,,,,
164307985,997,Issue,"As the webhooks weren't configured, I pulled this down and ran the relevant tests :thumbsup: :tada:Thanks for closing this out !",,,,,,
164295458,996,Issue,"welcome aboard, just had a quick look at this and it looks really good! Thanks for the hard work kicking this off! Added new function, not sure if anything more to do?The `Octokit.Reactive` project is intended to be API-equivalent to the `Octokit` project, but returning `IObservable`. I think what you've done is just enough, however CI isn't kicking in so I need to look at that...",,,,,,
164309360,996,Issue,Integration tests are passing on my end :thumbsup: how do you feel about the API design here? Anything stand out for feedback?,,,,,,
164313029,996,Issue,"No worries Ill fix up those protected set and parameterised ctor's shortlyRegarding API design at first (and you can see on my earlier commits) I was following the octokit.rb implementation of having ProtectBranch() and UnprotectBranch() calls, however this didnt really suit the design of octokit.net which is more focused on having an Edit() method for an entity, and passing in the xxxUpdate model object with the changes... so I re-implemented as a single EditBranch()  function",,,,,,
164321238,996,Issue,"Pro Tip‚Ñ¢: don't forget to add your work account to your [GitHub profile], so those last commits are linked to your profile. Or just amend the author info and `push -f` to your branch.",,,,,,
164321766,996,Issue,"good catch thanks, email should be fixed now",,,,,,
164338369,996,Issue,"LOL so I was just testing this against our GitHub Enterprise on premises installation, and it looks like the preview API isnt actually in GitHub Enterprise version 2.4.2 (eventhough the actual Branch Protection features are).  Will need to wait for Enterprise to include the API feature before we can actually use this stuff in our tooling :smile:",,,,,,
164413859,996,Issue,"RequiredStatusChecks.Context is now an IReadonlyList, implemented as per CommitActivity exampleRemoved convention test hackAlso rebased on latest master",,,,,,
164418170,996,Issue,Unsure about the AppVeyor test failure.  All unit tests are passing for me locally?,,,,,,
164547650,996,Issue,that test seems to be rather flaky :disappointed:,,,,,,
165089963,996,Issue,Looks like the rerun tests all passed etc Is there anything further needed from me?,,,,,,
165971786,996,Issue,"I really dont like the idea of referring to the test projects from the implementation classes (if that's what you meant) so what Ive done is created a AcceptHeaders helper class with the preview header defined, and changed the imlpementation to use that.  The tests are left as is, as I believe it's good practice to have each test specify what it's success criteria are, rather than use some commonly defined thing (that could be changed later unaware of the implication to tests that were using it).  Ive also got a separate branch and will follow this up with a new PR (after this one is accepted) where Ive gone and cleaned up all uses of Accepts headers (eg the licenses API as well as the standard json and html payloads etc) to use the new helper class, and remove the hardcoded strings from multiple places in implementation classes.  Here's the commit in question: Let's get this PR merged first though, then I'll follow up with the general Accepts Headers tidy ups for all usages...Also rebased on latest master",,,,,,
166061240,996,Issue,"that's fine, happy to merge this in after the Travis build goes green and iterate on this further...",,,,,,
166068423,996,Issue,Thanks ! ![],,,,,,
164137930,995,Issue,"/usr/lib/mono/xbuild/12.0/bin/Microsoft.Common.targets:  warning : Reference 'NSubstitute, Version=1.8.0.0, Culture=neutral, PublicKeyToken=92dd2e9066daa5ca, processorArchitecture=MSIL' not resolvedIs package restore not working as expected?",,,,,,
164165758,995,Issue,OSX file system isn't case sensitive which is causing me an issue. So it works on mine but does not work on the linux. Took care of `NSubstitute`.The issue was the `NET40` was uppercase instead of `net40` which is the actual case.,,,,,,
164196272,995,Issue,Now I could see this test's failing much more often on mono `StopsMakingNewRequestsWhenTakeIsFulfilled`,,,,,,
164196303,995,Issue,I am done with these changes.,,,,,,
164202524,995,Issue,"thanks, I'll see if that pesky test is a repeatable failure",,,,,,
164202951,995,Issue,And now I'm kinda curious why AppVeyor isn't reporting the status of this PRs...,,,,,,
164308025,995,Issue,thanks for the review comments! :heart:,,,,,,
164618746,995,Issue,I am done with changes. There is a conflict on the `README.MD`,,,,,,
164678349,995,Issue,"as this is targeting `master`, do you mind merging `master` in to address this conflict and verify the state of the mono build?",,,,,,
164783890,995,Issue,Will do that. Thanks,,,,,,
164920446,995,Issue,I resolved the conflict. The build failed :tired_face:  in appveyor and linux because of `StopsMakingNewRequestsWhenTakeIsFulfilled`,,,,,,
164934990,995,Issue,"ugh, feel free to mute that test and I'll open an issue to investigate",,,,,,
164942537,995,Issue,Thanks! Done!,,,,,,
165107625,995,Issue,Got it done! Thanks,,,,,,
165620551,995,Issue,"thanks again, outstanding stuff!![]",,,,,,
163806320,993,Issue,I had some luck with this on an old project - this is the current AppVeyor config we're using to deploy to GitHub Releases and Chocolatey:,,,,,,
163862022,993,Issue,"Does that deploy NuGet packages on every merge to master? I'd like to avoid that. I was trying to set it up so it would only deploy from a branch named ""`release`"" when we tag that release.",,,,,,
163870496,993,Issue,"Oh yes, I was totally lazy and made it deploy whenever `master` is updated.How I created that file was roughly like this: - get the configuration setup right in the admin portal- generate the right `appveyor.yml` config file through the portal (sensitive values get encrypted)- add that to source control",,,,,,
163879247,993,Issue,According to [this] you can specify conditional build configurations depending on branches,,,,,,
163992355,993,Issue,"Yeah. Further down on that page, you can also Build on Tags (GitHub only). I set that up in our appveyor, but it didn't seem to work. However, it's possible I did something wrong.",,,,,,
164076604,993,Issue,":cold_sweat: that took a lot more effort than I expected, but I finally got it working by adding the below to `appveyor.yml`_There is one caveat to this, it will push an extra package and I have not been able to get the build to **not** include it..._",,,,,,
164083126,993,Issue,This is something I'll be looking at next week. Thanks  for that extra info.,,,,,,
164085124,993,Issue,![]:rocket: :fireworks: :tada: :confetti_ball: The below works a treat,,,,,,
164308054,992,Issue,:boom::camel:,,,,,,
163773862,991,Issue,LGTM :smiley:,,,,,,
163781382,991,Issue,"One little nit, everything else seems great!",,,,,,
163790381,991,Issue,:kimono:,,,,,,
163756608,990,Issue,Nicely done! The only issue I had is with the white space formatting.,,,,,,
163759061,990,Issue,"D'Oh, white space!",,,,,,
163870304,990,Issue,Whitespace gone the way of the dodo üòä,,,,,,
163870597,990,Issue,Thanks !,,,,,,
163878417,990,Issue,![]To be back submitting OSS PRs again!Thank you guys!,,,,,,
163992491,990,Issue,Thank you guys!No! THANK YOU HENRIK! :smile:,,,,,,
163510966,989,Issue,This is already a big step up.When I first tried contributing I had trouble setting things up as I had never used environment variables before.Having even a simple script like this would have been a major help,,,,,,
163529124,989,Issue,LGTM :+1:,,,,,,
163529862,989,Issue,Looks great to me. :+1:thank you for your hard work and apologies if i came across snappy above,,,,,,
163711380,989,Issue,Nice! Maybe a next step would be to have the script use Octokit.net to help you create the test accounts if you don't have them!_Nerd snipe_,,,,,,
163747625,989,Issue,Meta all the things!!!,,,,,,
163759762,989,Issue,Nice! Maybe a next step would be to have the script use Octokit.net to help you create the test accounts if you don't have them!Not possible through the API :(,,,,,,
163761457,989,Issue,Not possible through the API :(![]Darn.,,,,,,
163762001,989,Issue,:sob:,,,,,,
163763258,989,Issue,The potential for abuse is high for github.com. We get enough spammer accounts without making it even easier to automate. :),,,,,,
163763438,989,Issue,"Yep, can understand that :grinning:",,,,,,
164089129,989,Issue,Tweaking the output a bit to make things clearer:,,,,,,
164320216,989,Issue,:apple:,,,,,,
164510570,989,Issue,:sparkles: Really nicely done !![thumbs-up-batman],,,,,,
163710673,988,Issue,I didn't even know this was here or what it did. :stuck_out_tongue:,,,,,,
163404275,987,Issue,Thanks for this!,,,,,,
162864555,985,Issue,"If what I am saying is irrelevant, I will delete the comment to avoid clutter.Would this be the time to try and introduce a way to use the lib without any auth - as can be done if using the api directly?(I guess minimally you need PHV?)",,,,,,
162865364,985,Issue,"Would this be the time to try and introduce a way to use the lib without any auth - as can be done if using the api directly?To be honest, I'd make it hard to use this library without auth. The API is very restrictive¬†unless you're using an `Authorization` header, and I don't really see much value in fighting against the API on this front.In the earlier samples, I had a snippet like this:We don't currently do this, but I'd like for the `Credentials` to be an option you pass into `ClientInfo` - for most scenarios, I think this will satisfy their use case.",,,,,,
162865831,985,Issue,"I know it might be a lot to ask, but is it possible to put the smallest, most relevant code sample at the end of the first comment?Or am I the only one that feels it would be useful?",,,,,,
162866336,985,Issue,"-Zuber okay, so this is what I've currently got:The goal here (eventually?) is to find that right balance between convenience and customization",,,,,,
162866408,985,Issue,"To be honest, I'd make it hard to use this library without auth. The API is very restrictive unless you're using an Authorization header, and I don't really see much value in fighting against the API on this frontThere are some use cases though where no auth is needed and it just gets in the way.Today for example I was having trouble searching through the projects I had starred.In 2 minutes I had a simple script that downloaded all my stars and filtered - with no auth needed.But its not a big enough problem to make a real issue out of it, so bowing out on this one",,,,,,
162866590,985,Issue,"There are some use cases though where no auth is needed and it just gets in the way.Sure, and the rate-limiting will kick in quick enough for you to know. Anyway, nice feedback to know :sparkles:",,,,,,
162866823,985,Issue,Looks simple enough  // generate the client you need      var client = HttpClientFactory.Create(info);This would need to be done before creating any `new GitHubClient`?Or is there room for an overload that just takes the info and calls `HttpClientFactory` internally?,,,,,,
162867377,985,Issue,"This would need to be done before creating any new `GitHubClient`? Or is there room for an overload that just takes the info and calls `HttpClientFactory` internally?Not necessarily - this is what  and I are probably going to debate about in here.On the one hand, most consumers won't care about the HTTP stack and just want to supply enough data to get going - a user-agent and perhaps some credentials. That scenario probably favours calling `HttpClientFactory` internally, like we did before.On the other, if you're wanting to tweak some settings (proxy, timeout, or even some extensibility that the `HttpMessageHandler` pattern supports) then you're probably going to be happy with doing the setup yourself - or perhaps bringing your own `HttpClient` implementation.",,,,,,
162868726,985,Issue,"From a first glance, it looks nice,Assuming I have time to contribute with code also - where you suggest I start?",,,,,,
163022197,985,Issue,"Assuming I have time to contribute with code also - where you suggest I start?Let's make sure this is the right direction, then I'll extract the tasks necessary to move on from there...",,,,,,
163098659,985,Issue,"So this is the current set of `ctor`s that Octokit supports:Personally, I think this is kinda crazy. Let's take a step back and ask what we're trying to do here:- make it easy to get started - make it easy to configure the `GitHubClient` after you're familiar with the basicsWe're not able to remove the `productInformation` constraint (this becomes part of the `User-Agent` parameter) but all of the others can possibly live under `ClientInfo`:To ease the transition, we could keep these around (and map them to a `ClientInfo` internally to help with the transition) alongside the new `ctors`:Thoughts?",,,,,,
163131042,985,Issue,I've identified some properties on `IGitHubClient` and `IConnection` that may be worth removing while we're in here making these changes - see 0581dcb1e3c3c46fe8217972cdf157c39fb7b434,,,,,,
163134922,985,Issue,And this is what composing a `GitHubClient` currently looks like:,,,,,,
163146699,985,Issue,":-1: So my problem here is that certain properties (timeout for example) I would want to set per endpoint I use (long for uploading an attachment to a release, short default for the rest) rather than setting at a global connection level.From an API point of view I'd like to see an optional `RequestOptions` object that I can pass, which modifies the behaviour of that web call, but doesn't affect all calls.As for `HttpClient`, it would be nice if I can create my own instance, passing in a custom `HttpMessageHandler` that wraps the Octokit's `RedirectHandler`.",,,,,,
163148197,985,Issue,"This is what the final situation will be once the dust settles, and there is no need for back compat (`v1` maybe)?If so, it looks good to me.OTOH, I agree with  that there needs to be a way to adjust the values on a per request basis.",,,,,,
163149617,985,Issue,"OTOH, I agree with  that there needs to be a way to adjust the values on a per request basis.I have given it some more thought, and I think this is a separate point.I woulds like to be able to do something like the following:As I believe such a scenario is for more advanced users, it is okay to ask them to perform the extra steps._obviously if the api is fluent then its nicer:_",,,,,,
163150714,985,Issue,"As discussed in #963 we suspect the per-endpoint override (as in uploading release assets) will be ignored by the global setting - I'd love to get some more insight into that scenario as I know you've dealt with that in the past.Putting that aside (it's still To Be Resolved‚Ñ¢) I'm not planning to remove that behaviour around setting per-request overrides (especially for uploading release assets) from Octokit, but we still lack a way for users to set a timeout globally. This change makes it easier to achieve this, but isn't the only reason why we're going down this path. From an API point of view I'd like to see an optional `RequestOptions` object that I can pass, which modifies the behaviour of that web call, but doesn't affect all calls.This feels not unlike #760 which was around giving more control to pagination options for endpoints that return collections. What other parts of a request might you looking to modify, generally speaking?",,,,,,
163154243,985,Issue,"As for `HttpClient`, it would be nice if I can create my own instance, passing in a custom `HttpMessageHandler` that wraps the Octokit's `RedirectHandler`.I think this will be infinitely easier to do after this. I have some rough ideas in mind around extending the stack, but I may need to re-jig the `System.Net.Http` abstractions I'm using to get to a point where scenarios like yours are supported.",,,,,,
163154415,985,Issue,"I'd love to get some more insight into that scenario as I know you've been dealt with that in the past.Ok the scenario was this - we have automatic scripts to deploy releases to GitHub. The script does various things:- Find matching milestone for release version- Create Release for the tag, with compiled notes from the milestones issues.- Attach compiled release to the GitHub release- Close the milestone- Publish the releaseWe hit a problem with attaching the compiled binary to the release. If the binary was too large the timeout would cause the upload to fail. So we upped the timeout to several hours.The problem is, I don't want any of the other tasks to wait several hours if they're going to timeout. For most of the communication a 60s timeout is fine, and only for the upload would I want to change that timeout.If you're interested, our release project that uses Octokit.net is  What other parts of a request might you looking to modify, generally speaking?Well, I was looking into handling the request caching to avoid using up the API limit when polling a repo for changes. So I was trying to support #352.So I guess what I'm really after here is a way to poll a repo for changes, and then have some automation happen because of that change. And suddenly as I write this I realized webhooks is a much better solution to this problem. Oh well.",,,,,,
163154680,985,Issue,"For most of the communication a 60s timeout is fine, and only for the upload would I want to change that timeout.So you're _not_ seeing an issue with the current 100s limit we have? That's something I want to confirm - or investigate further because I'm rather puzzled by it all.cc",,,,,,
163156839,985,Issue,So you're not seeing an issue with the current 100s limit we have?Not currently no. The upload was bigger but we've trimmed it down and it hasn't been a problem in a while.,,,,,,
163458754,985,Issue,Clone this repo  which has the  testing-data folder. Then run this `octokit-release-upload-concurrent.linq` in linqpad.  We could reproduce the exception where the Http time's out. In this sample the code is trying to upload 11 files concurrently to GitHub Release.,,,,,,
163474673,985,Issue,"thanks for the details. I think there needs to be some changes here around how `Octokit` supports timeout that satisfies both the global and specific requests:1. if the endpoint specifies a timeout, convert this to a cancellation token and apply to the request2. _if a global setting is specified, convert into a cancellation token and apply to the request_3. whatever the provided `HttpClient` has configured for `Timeout`We don't support that second scenario (perhaps that's the way out of this) and now I'm really grumpy at `HttpClient.Timeout` because I think it can still ruin this plan (not either of your faults).Will think on a solution some more.",,,,,,
163775168,985,Issue,"I think we could probably trim the constructors list down to...My thinking is that given that `ProductHeaderValue` is that the only reason to specify a `baseAddress` is if you're calling GitHub Enterprise in which case, you must provide credentials. Thus the `GitHubClient(ProductHeaderValue, Uri)` is kind of pointless.To make this even easier to use for one off scripts, we could even allow string overloads for product header where we would parse them and throw if they're invalid.For example:Though I like that the `ProductHeaderValue` argument makes it impossible to get wrong, and this has the potential to throw exceptions.",,,,,,
186974030,985,Issue,"Closing this out to take this off my plate. Don't worry, it'll return in some way, shape or colour.",,,,,,
206463584,985,Issue,"As  mentioned, these are the `ctor`s which are actually required: But I think that if we only keep these:with throwing exceptions in case `ProductHeaderValue` is not provided in `info`, it will be easier to maintain and forces user to follow a convention for providing config info. We can make a handful of `ctor`s for `ClientInfo`. What do you think?",,,,,,
163762994,984,Issue,"A few comments.One concern about this I forgot to bring up is that `http` here tends to be used as a singleton in many cases. And for the most part, that's fine. But `ClientInfo` is mutable here. Are we copying the values when we create the HTTP client?Otherwise, we could run into subtle race conditions and concurrency issues if people change the values of the `ClientInfo` instance after the fact.",,,,,,
163766428,984,Issue,"Another comment, I think we need to enumerate a list of the type of settings people want globally vs per request to make sure this effort is worth doing as-is.For example, as discussed in #985, `Timeout` to me seems like a per-request setting, though I'm OK with exposing a global `DefaultTimeout` property.Another issue with the `ClientInfo` is by using properties to initialize it, we don't let the type system help people do the right thing by default.For example, the reason we use `ProductHeaderValue` as a required `ctor` parameter today is because on the back end, the GitHub API requires a valid User Agent and getting the format for the user agent correct is actually trickier than one might expect.Now, we could have overloads that let people specify an `AppName` and we create the `ProductHeaderValue` instead. I'm fine with that.",,,,,,
163780334,984,Issue,"- But `ClientInfo` is mutable here. Are we copying the values when we create the HTTP client? - Another issue with the `ClientInfo` is by using properties to initialize it, we don't let the type system help people do the right thing by default.Captured these as tasks over in #985  Now, we could have overloads that let people specify an `AppName` and we create the `ProductHeaderValue` instead. I'm fine with that.I went down this path initially, but some tests we have have formats which I couldn't map to `ProductHeaderValue` correctly - likely due to using a version or comments. Thanks for opening #991 to dig into this.",,,,,,
390379199,984,Issue,"I'm just now starting to use Octokit.NET. I have a bunch of tests that verify my octokit code comes up with the right results, but that require live queries to github.com. The network dependency itself is unfortunate, but github also throttles down to 403's rather quickly such that we have to disable our tests.I'd very much like to mock up the network traffic. I can do this if I could supply the `HttpMessageHandler` or `HttpClient` that the `GitHubClient` class uses, but I don't see any API to do that. Is this possible?  Is making that possible what _this_ issue is all about?",,,,,,
390379599,984,Issue,"Hey  I'll need to read through this very old issue to completely grok what it was all about, but yes you can pass in your own `HttpClient` into one of the ctors for `GitHubClient` and then do whatever you want. You can also do like we do in our unit tests and pass in a mocked out `IConnection`... Or I guess you also could just mock out the `IGitHubClient` entirely. I guess it depends what you are trying to test, because if you go right down to the http client level you are really now testing octokit itself rather than just your code that's using octokit",,,,,,
390410969,984,Issue,"but yes you can pass in your own HttpClient into one of the ctors for GitHubClient and then do whatever you wantIf only that were true. Alas, no `GitHubClient` ctor accepts an `HttpClient` as a parameter.Implementing `IConnection` looks *much* more laborious than implementing `HttpMessageHandler` because it has dozens of members instead of just one. And mocking up `IGitHubClient` assumes that I know how `GitHubClient` is *supposed* to work, but I don't. My tests should include executing actual `GitHubClient` code (and github.com server code, the first time) so that I verify I'm using the class correctly. If I mock up `IGitHubClient` then I can make it behave how I *think* it should behave rather than testing my code with how it *actually* behaves.My strategy with other server-connected SDKs has been to inject my own `HttpMessageHandler` that *records* the operations the first time (while I'm writing the tests). Then I check in the recording so that all subsequent test runs can ""play back"" that network traffic and thus confirm that (assuming the server doesn't change behavior) my code continues to work.",,,,,,
390428423,984,Issue,Sorry the constructor I meant was on `Connection` and allows you to provide your own `HttpMessageHandler`,,,,,,
390433614,984,Issue,"Thanks! That's a bit out of the way, so I don't think I would have discovered that for a while. But assuming all networking calls will go through my message handler, that looks like it'll work great.",,,,,,
390434339,984,Issue,"We were looking into record/replay type fixtures last year and   started a csharp implementation of ""vcr"" (a ruby record/replay based fixtures http fixtures library) and started looking at what we'd need to do in octokit to adapt to using it... you might find interesting:",,,,,,
390746699,984,Issue,"Given vcr-sharp is abandoned, I started up a project of my own at It's not ready for use yet, but I hope to get it usable within a week.",,,,,,
413227460,984,Issue,"Let me add you some details on why Octokit.NET for me is broken under Azure Functions.I'm currently on a project using Azure Durable Functions. This runs under a consumption plan which itself is hosted within the [App Service Sandbox]. This is interesting but what you're interested about in this massive page is called the [**Numerical Sandbox Limits**]. Everything in there is basically moot except one. Connections. It's limited at 300 per server on which it runs on. Azure Functions initially starts with one server executing all of your functions. Then it starts to scale up to 2, 3, N servers. Each of those ""servers"" have that 300 limit.If you are creating a new `HttpClient` every time a request is made, [you end up running out of sockets] as Windows waits 240 seconds to completely close the socket. That means that if I'm limited to a theoritical limit of 300 Octokit requests per servers per 4 minutes which translates to 1.25 requests per seconds. If I exceed that, I break the limit of the sandbox.This literally makes Octokit unusable for Azure Functions on a consumption plan. This led me to go bare metal and use something like this: This allows me better control over the `HttpClient` and will allow me to survive the Connection sandbox limits.If you have any questions, please fire away.",,,,,,
413228795,984,Issue,"How is that different? You're still creating a new `HttpClient`, right?",,,,,,
413230532,984,Issue,I store it as static on my class.,,,,,,
413231380,984,Issue,And what's the reason you can't do the same with `GitHubClient`?,,,,,,
413232591,984,Issue,"From discussions with , it creates an HttpClient per request and is not saved statically or reused. Can we confirm?",,,,,,
413235191,984,Issue,"No, it creates a `HttpClient` per `GitHubClient` instance. This is the code path when creating a `GitHubClient`:And this actually sends the request:As you can see; only one instance. Did you actually get into problems with connection limits, or did you just assume that you would?",,,,,,
413256186,984,Issue,"As you can see; only one instance.Oh cool, I legit thought something else was happening underneath. I thought  was scolding me about this at some stage but I can't find an issue about it. That means that if I'm limited to a theoritical limit of 300 Octokit requests per servers per 4 minutes which translates to 1.25 requests per seconds.Keep in mind that Octokit will follow pagination links if a request has more results, so if you are using a `GetAll` API and the repository is non-trivial in terms of activity it's not a 1-1 mapping of request/response here.  If I exceed that, I break the limit of the sandbox.What does ""break"" here entail? And how might we glean what the source of that ""break"" might be?",,,,,,
413270814,984,Issue,"Even if new `HttpClient` instances were created for each request, that shouldn't mean new connections for each one. `HttpClient` is just a glorified front for older networking APIs in .NET that are already smart enough to reuse connections across multiple requests (if KeepAlive is set to true, anyway, IIRC).",,,,,,
413277702,984,Issue,"Even if new `HttpClient` instances were created for each request, that shouldn't mean new connections for each one.I think that's exactly what it means, which is why [it's advised against]: `HttpClient` is intended to be instantiated once and reused throughout the life of an application. The following conditions can result in `SocketException` errors: - Creating a new `HttpClient` instance per request. - Server under heavy load. Creating a new `HttpClient` instance per request can exhaust the available sockets.Related info:A static instance [can also be problematic], which is why ASP.NET Core 2.1 introduced [HttpClientFactory]. There's also an ongoing issue about it [in corefx].",,,,,,
413293406,984,Issue,"I did get into issues. I had both errors from the sandbox itself and actual ""permission exception"" from the TCP stack rejecting new sockets opening.That being confirmed, I'll check if there are other places where things might crash.",,,,,,
413358421,984,Issue,"Were you using any IOC containers or anything that might cause multiple `GitHubClient` instances to be declared?Generally whenever these types of things comes up around `HttpClient`, it does seem to be mostly solvable using the existing options provided in Octokit, and it is more just a lack of discoverability/documentation causing users to be unaware of them.  The override on `Connection` that lets you specify an `IHttpClient` implementation means you could roll your own (admittedly a bit onerous given the number of methods to implement) or you can use the Octokit implementation of this interface (`HttpClientAdapter`) which lets you specify your own `HttpMessageHandler`.In terms of Octokit's Http extensibility, I wonder if now .NET Core has the [new `HttpClientFactory`] stuff, we should consider reworking Octokit to use this (and allow the user to pass in their own)?",,,,,,
414427588,984,Issue,I don't think Octokit was the issue. I think it might be due internally in how Durable Functions works.I have a workaround in place. I've already talked to the team to make sure we don't need a workaround. So either increasing limits of the sandbox or changing the Durable Functions defaults.Let's see what they do.,,,,,,
162802836,983,Issue,"Had a look at this and found it to be a larger yak than previously anticipated. Problems to address:- `lprun` doesn't have an easy way to install certain packages - it's probably using `%APPDATA%\NuGet\NuGet.Config`- `nuget.exe` has a way to manage these sources from the CLI so we could script it, but perhaps we're not allowed to do this on AppVeyor. I gather this will be the same thing for TravisCI.- if we can do this, we should clean up after it done- what about if the build fails - does FAKE have a good way to run cleanup scripts?",,,,,,
163059783,983,Issue,I am going to fix the specific example to get it working and open another issue to address this for every check-in.,,,,,,
163064645,983,Issue,:thumbsup:,,,,,,
165617770,983,Issue,"A thought based on re-reading [the docs] just now: LINQPad also supports the ref directive for referencing additional assemblies. You can specify the assembly either via its filename (including the directory if it's outside the .NET Framework) or its fully qualified name (if it's in the GAC): For the purposes of CI, could we reference local packages (and the just-compiled assemblies) - rather than fighting with all the conventions of NuGet packaging?It could work like this:- take the file from version control and read it into memory: - replace the XML element with a new payload referencing local files:- pass this new file to `lprun.exe` and verify the current code works",,,,,,
167047297,983,Issue,Bumping this as the API changes we're doing here won't be caught by the `lprun` changes...,,,,,,
167094527,983,Issue,Will look into this next week.,,,,,,
178393338,983,Issue,"I wanted to be sure our stuff was working fine before shipping this latest release, so I ended up writing the code I needed for the above steps into an integration test:I've muted the previous `ValidateLINQPadSamples` with a note if someone wants to get involved with porting that back to F# so you can run it inline - it's not hard, just XML parsing and writing files and checking process output for messages :trollface:",,,,,,
178435279,983,Issue,"As this issue has changed a lot since first reporting, I've opened a fresh issue #1081 with the remaining work to close this out.",,,,,,
162727140,981,Issue,Closing in favor of #982,,,,,,
162415174,975,Issue,Looking good so far ! A couple of things I'd like to verify as part of integration tests:- that we're able to deserialize a release correctly using this endpoint- what happens when no releases exist for a repository?,,,,,,
162421134,975,Issue,"I have added tests. This one is similar to GetRelease API. Just replaced release id with ""latest"".  In the tests for getrelease we are only checking if we can receive the get request at that endpoint and throw proper exceptions when missing arguments. If there is no latest release, are we expected to get a Null JSON or we a  500 error?",,,,,,
162422472,975,Issue,"we have some existing tests which use the real GitHub API - let's add a couple of tests for this endpoint there: A couple of tests I think we can do to complete this feature:- ""get the latest release for Octokit"" - we get a non-null `Release` back- ""get the latest release for a new repository"" -> get a helpful error back  If there is no latest release, are we expected to get a Null JSON or we a 500 error?I'm honestly not sure - let's find out by writing the test!I think the end result should be a custom exception that we throw to the user. There's a detailed example [here] for how we handle when creating a repository fails - I think you'll have to do something similar and `try-catch` the call and then check if the error is something we're familiar with.",,,,,,
162434162,975,Issue,I see. I will add integration tests soon.,,,,,,
163284393,975,Issue,Any update on this issue?,,,,,,
163532213,975,Issue,I am busy with my final exams this week. I will add integration tests this weekend.,,,,,,
168435983,975,Issue,Happy New Year!  were you still planning to add integration tests?,,,,,,
168535201,975,Issue,I'm just back to school. Will start working tmr,,,,,,
178914276,975,Issue,I've moved the integration tests out to #1086 rather than hold this up any longer.Thanks for the contribution !,,,,,,
162336465,974,Issue,could you please share your vision about the message format?,,,,,,
162702926,974,Issue,I think we should just show the Response payload. It'll omit the fields that don't exist.,,,,,,
162705290,974,Issue,"so I just should store raw unparsed payload in the `ApiException`? Ok, will update the PR tomorrow. Thanks for quick reply!",,,,,,
162713703,974,Issue,"Yeah, if that's easy.  what do you think?",,,,,,
162713802,974,Issue,make it so!,,,,,,
162825303,974,Issue,"Hmm, the build seems to be broken. I guess it's not related to my changes.Anyway, here is the new output sample:",,,,,,
162837967,974,Issue,"yeah, that's #983",,,,,,
162854949,974,Issue,"oh, cool, you're aware of it :+1:",,,,,,
163472212,974,Issue,if you merge `master` into your branch you should have a green build again,,,,,,
163528607,974,Issue,Aaand it's green now! :white_check_mark:,,,,,,
163592661,974,Issue,thanks!![],,,,,,
162570685,973,Issue,IMO the nuget package using appevyor should be from the main instread for all the PR's `disable_publish_on_pr: true` this would make the consumers point an use the latest stable version of the main instead of  waiting for the release.,,,,,,
162615136,973,Issue,IMO the nuget package using appevyor should be from the main instread for all the PR's disable_publish_on_pr: true this would make the consumers point an use the latest stable version of the main instead of waiting for the release.:thumbsup:,,,,,,
162699961,973,Issue,I changed the feed to .,,,,,,
162700443,973,Issue,Thanks !,,,,,,
162710924,973,Issue,Do you want to publish on PR's  `disable_publish_on_pr: true` ?,,,,,,
162712709,973,Issue,Do you want to publish on PR's disable_publish_on_pr: true ?Nope.,,,,,,
162712768,973,Issue,"Although, I can see the benefit of that setting for testing. Until someone asks for it, I'll leave everything the way it is.",,,,,,
162265543,972,Issue,Sweet. :),,,,,,
162699516,972,Issue,"I'm hesitant to take this because `SimpleJson.cs` is a dependency we pull in from NuGet. Have you tried the latest version to see if it already has a fix?If not, could you submit a PR upstream to I worry that the next time we upgrade, we'll break this. At least the unit test will catch it though. :smile:",,,,,,
162710559,972,Issue,I looked for that first before making the change.  hasn't been updated in the last 20 months. There is already a PR with this fix for the main repo which is still pending from April. That's the reason for making a change in this repo.I understand your concerns. What do you want to do?,,,,,,
162711419,972,Issue,Ping  and ask what he's been up to? :wink:,,,,,,
162711887,972,Issue,"Ok, as long as the PR is upstream, I'll take this one.",,,,,,
162103467,971,Issue,"Nope. I'd like to port these rules over to Roslyn analyzers and code fixes so they Just Work Wherever‚Ñ¢.I'd be fine with disabling those when running outside of VS, or just :fire: it as things are relatively stable right now - it was a great help in the early days as the codebase was being built up.",,,,,,
162104161,971,Issue,OK Cool!  I like to use XS on mac to code and this is a bottle neck.,,,,,,
165682024,971,Issue,"Now that #995 has been merged (removing this dependency) I'd like to see if we can bring it over as an analyzer - DocPlagiarizer was built using old versions of the Roslyn API, so I'm sure there's some way to port it.",,,,,,
161447605,970,Issue,"I would love it if you completed the PR. There's a couple ways to do it.- Fork octokit/octokit.net, check out the `remove-merged-property` branch in your fork, make the necessary changes, and create a new PR that targets the `remove-merged-property` branch.Alternatively,- Fork octokit/octokit.net, check out the `remove-merged-property` branch in your fork, make the necessary changes, and create a new PR that targets the `master` branch, and I'll close this one.",,,,,,
164260402,970,Issue,"you can close this one off, #997 has been created in it's place.  Cheers!",,,,,,
164307638,970,Issue,Closing in favour of #997,,,,,,
161394238,969,Issue,I don't believe there's any way to do that. Why can't you provide the client id and secret?,,,,,,
161432686,969,Issue,"Authorizations need an application id and secret, so that the user knows the context of why the token was created, and can revoke them at a later date.",,,,,,
161453093,969,Issue,"With everything I've read the id and secret need to be kept (not surprisingly) secret, but that's not possible if the code is open source. Reading the API docs and using curl it's quite easy to create a new authorization without an id or secret, and I was just wanting to be able to do that from the library.",,,,,,
161455207,969,Issue,"With everything I've read the id and secret need to be kept (not surprisingly) secret, but that's not possible if the code is open source.Totally agree, but there's many ways to do this - for example, we use environment variables we manage the credentials for the integration test suite:",,,,,,
161469995,969,Issue,So...then anyone wanting to develop the code would have to create their own id and secret just to build it?,,,,,,
161470688,969,Issue,correct,,,,,,
161471167,969,Issue,Hmm OK. Sounds like a pain. Thanks for the info though.,,,,,,
162016150,969,Issue,"Not sure why I closed this, would still like to see the aforementioned API implemented eventually :)",,,,,,
162017723,969,Issue,"Not sure why I closed this, would still like to see the aforementioned API implemented eventually :)Unfortunately, this is not the repository to log that request. I think an API that doesn't require those things and doesn't use the Web Flow would have major security concerns. You could email support.com to make such a request and provide more context on what goals you're trying to accomplish.",,,,,,
162022010,969,Issue,"Just to clarify, I'm not requesting any changes to the web API, only for the library to support that API call to create a personal access token. It's how the (previously supported) Github android app did it.",,,,,,
162022735,969,Issue,"only for the library to support that API call to create a personal access token.Hmm, I'm confused. Do you want the library to support the web flow? If the web API doesn't have an endpoint for us to create an authorization token without the client secret, how would we implement that in the client library.",,,,,,
162026614,969,Issue,"I apologize, it is very possible I'm just using some wrong terminology, so here's an example. Referencing [this] document, and using curl, you can see I can create a new personal access token. ![test]Was just wanting to be able to do that with Octokit.net",,,,,,
162030077,969,Issue,Ah! Got it. Want to submit a pull request implementing that change? I think we just need to add an overload to [`AuthorizationsClient`].,,,,,,
162030611,969,Issue,I'll have to pass :),,,,,,
163552359,969,Issue,I can take this if no one else has started it,,,,,,
161151228,968,Issue,Literally just discussing this headache with . Contemplating scraping the website to get this list.,,,,,,
163066719,968,Issue,"Nevermind, looks like  might have already cracked this:![]",,,,,,
163067033,968,Issue,this is so good! I'm kinda buried in work-related stuff this week but I'll try and make time to look into this...,,,,,,
163067249,968,Issue,Cool :+1:,,,,,,
163532362,968,Issue,awesome,,,,,,
178902397,968,Issue,Closing this out in favour of #1038 - will spin more work out from that.,,,,,,
160853333,967,Issue,I just realized I didn't share the error output (it's not really helpful):,,,,,,
160853729,967,Issue,thanks for the details. Having a look now into whether it's serialization-related.,,,,,,
160854868,967,Issue,seems to be related to serialization on our end. Which account is associated with making the API requests?,,,,,,
160855040,967,Issue,I should mention that upgrading to 0.16.0 didn't resolve the issue.Here's one that just failed:Response:,,,,,,
160855356,967,Issue,It's [choco-bot],,,,,,
160855945,967,Issue,"when you say ""our end"" - do you mean octokit or the github endpoint?",,,,,,
160856213,967,Issue,GitHub,,,,,,
160856399,967,Issue,But whether the fix is there or something in Octokit is something I need to confirm. How long ago was the first known incident of this?,,,,,,
160856527,967,Issue,About since I've been running this thing...So at least a week or more.,,,,,,
160857129,967,Issue,"First error email related to Gist creation was `Sat, Nov 21, 2015 at 9:58 AM CST`",,,,,,
160857400,967,Issue,So it looks like the same packages' gists will end up throwing the error (so the earlier statement was incorrect).,,,,,,
161461721,967,Issue,any news here?,,,,,,
161464605,967,Issue,Do you have a code sample to recreate this?,,,,,,
161474379,967,Issue,I was able to create a gist using contents  and here is the gist that was created and here is the code I used to create the gist,,,,,,
161490983,967,Issue,scroll up. Ignore the zbad.json. Those were from when I first started trying to decipher the issue and thought content-length might have something to do with it.,,,,,,
161491447,967,Issue,I will produce a failing code sample for octokit tonight (or tomorrow).,,,,,,
161601653,967,Issue,"I wasn't able to recreate it using the serialization logic we use, and I was laid up today with a crook back. On my list for tomorrow, any extra help reproducing it would be :sparkles::heart:",,,,,,
161718558,967,Issue,sure thing. Give me about 20 minutes or so,,,,,,
161767302,967,Issue,"Okay, well that took a little longer - Here are the files:In the app.config file (in the tests project) you will need to insert github creds.",,,,,,
161767766,967,Issue,Fails every time for my user. I haven't tried it as a different user yet.,,,,,,
161769556,967,Issue,I'm collecting some more of these. Let me know if you need more than one failing one to determine the issue.,,,,,,
161781117,967,Issue,"No, I am able to reproduce it from your files. From the quick look it looks like an issue with the JsonSerializer on the octokit.net client.",,,,,,
161783516,967,Issue,awesome! I can test out a fix whenever you have one available. :),,,,,,
161794380,967,Issue,"It is this line which is causing the issue which is in line 733 in install.txtI converted the string to char and corresponding int values. You could see the ""0"" which isn't getting converted to valid json in the json serializer. That is the bug.I took the same content and tried to convert to json.net and I looks like it handles these characters",,,,,,
161807619,967,Issue,Small correction - line 735 -,,,,,,
161808317,967,Issue,It's always encoding. Great job finding that!,,,,,,
161808525,967,Issue,"NSSM stdout there causing that ball of fun. I imagine that with some others that don't depend on NSSM, it's likely some other stdout encoding format fun :/",,,,,,
161821714,967,Issue,apologies for not getting back to this yesterday. Thanks for troubleshooting! :metal:,,,,,,
161826972,967,Issue,Thanks. I will submit a PR for this.,,,,,,
161992220,967,Issue,sweet! Thanks! I imagine this would cover all unicode then?,,,,,,
162003347,967,Issue,"Yes, it should. I am hoping to get it done by the weekend.",,,,,,
162196807,967,Issue,Awesome! I look forward to it. Very timely for me. :),,,,,,
162213365,967,Issue,I have the code fixed in this branch.   I don't have test's checked in. I was able to upload the files you had issue with this fix. .,,,,,,
162221849,967,Issue,I'll see if I can take a look at this later today. :+1:,,,,,,
162222450,967,Issue,Just a couple changes since last release so far -  (or if you prefer ).,,,,,,
162253541,967,Issue,Everytime I turn around I need to install another .net framework version. Is 4.6 a known thing for building this for 4.5? - This is coming from lprun.exe - it's in I just told lprun.exe it works with 4.5 for now ;)     ``,,,,,,
162262146,967,Issue,I have submitted a PR. I will try and make a change to the build in a PR which will include this fix and provide a nuget package in appveyor so that you could test without going through the hazzle of building it.,,,,,,
162263821,967,Issue,Here is a nuget package with latest fix  You don't need to build it locally :smile:,,,,,,
162270275,967,Issue,Initial findings are mixed. I watched a package that is known to fail and it failed. Another one passed just fine.,,,,,,
162270280,967,Issue,I turned back on recording gists and will get you the output of those.,,,,,,
162270712,967,Issue,This one finally passed though!,,,,,,
162271335,967,Issue,here are some more failing items,,,,,,
162278761,967,Issue,To be clear the command I used to grab the package was  `nuget install octokit -source  -pre` and it pulled down `0.17.0`. Let me know if that is not correct (I also don't see where the nuget package was published in  tho).,,,,,,
162387136,967,Issue,"Figured out what was the reason. The nuget package you are using is correct. It was overwritten by my other commits.The issue was ,I was commiting other changes based on the master that didn't have this change and nuget package was generated on the appevyor on commits to the branch.I have re-ran the build on the same commit which had my fix for Json serialization on the appveyor to get the excat fix for the nuget package you could test.If you have a linqpad installed please download this linq query  and update the `foldername` to the `package-verifier\src\chocolatey.package.verifier.tests.integration\context\failinggists` locationand also provide the github credential `client.Credentials = new Credentials(Util.GetPassword(""github""));` and it will upload all the gists that were failing for you. I have tested it with all the failing test and everything is working as expected. Here are the gists uploaded  with the latest fixand the nuget url is let me know if you have any issues. Just wished I thought about this before commiting other changes.I apologize for not thinking through!",,,,,,
162401469,967,Issue,- looking great so far!,,,,,,
162616026,967,Issue,Still have not had an error related to unicode.,,,,,,
162616630,967,Issue,Still have not had an error related to unicode.:+1:,,,,,,
178885961,967,Issue,I think we should have closed this out a while ago  let me know if you see it again.,,,,,,
178961665,967,Issue,"Everything is good! We've run the verifier now with almost 12,000 gists!On Tuesday, February 2, 2016, Brendan Forster notifications.comwrote: I think we should have closed this out a while ago   let me know if you see it again.  ‚Äî Reply to this email directly or view it on GitHub  .## Rob""Be passionate in all you do""",,,,,,
160737105,966,Issue,im gonna check this.,,,,,,
178921369,966,Issue,This will go out in the next release (v0.19?),,,,,,
159751876,965,Issue,"Yeah, this is something I'd like to make available to consumers - I've just been grappling with how to get there due to how we're currently using `HttpClient` - see #781 for all the details.Your solution highlights the pain we're currently in with respect to overloads to `GitHubClient`, and most of the `ctor` parameters can actually be used for `HttpClient`. I don't feel great about layering more on there, but perhaps that's a reasonable short-term fix.It's been almost six months since I last thought about this, so I'll go back to this and revisit that topic.",,,,,,
159756129,965,Issue,Wasn't aware of that.,,,,,,
160820007,965,Issue,Fixed the line breaks and spaces.  Will the [CodeFormatter]  address these line breaks and spaces?,,,,,,
160820438,965,Issue,"yes, if you're on VS2015 you should be able to run it from the command line: `.\build FormatCode`If that's not working As Advertised‚Ñ¢, I can investigate further.",,,,,,
160824919,965,Issue,When I branched the VS2015  branch wasn't available. Will do that going forward. Thanks!,,,,,,
162863463,965,Issue,"first off, thanks for working on this. I should have made my reservations about adding another `ctor` parameter clearer, as I'd been trying to think of a better solution to this problem but was sidetracked as usual.I'm not enthusiastic about adding in yet another `ctor` parameter to `GitHubClient` - mostly due to the current complexity of how timeouts work with the HTTP stack, which you've called out elsewhere. The other concern I have here is about supporting this long-term - at some point I'd love to support a smaller set of `ctors` on `GitHubClient`, but that's a debate that has yet to happen so I'm just speaking for myself right now.So, while I feel awful for closing this PR, I'm trying to make amends by opening a discussion about making the whole HTTP stack more friendly to Octokit consumers #984. I've also opened the first PR which takes us down that path #985 so we can talk about tangible things. I'd love your feedback on either (or both!) topic, as I don't think there's as much work involved as I previously expected - we just need to sit down and work through it...",,,,,,
162904484,965,Issue,Not an issue. :+1:,,,,,,
158035788,964,Issue,Sorry i misread the api.,,,,,,
158035815,964,Issue,in octokit,,,,,,
158578997,963,Issue,"The reason for the `TaskCanceledExceptions` is because the  default [HttpClient] `Timeout` is 100 seconds. I tried changing in the sample from `Nullable()`  to `new TimeSpan(0, 10, 0)` to see if that would fix. But the [HttpClientAdapter] that is implemented does not set the timeout passed in the request to the `HttpClient`. The `Timeout` is being used only used in the `CancellationTokenSource` ~~This is a bug. The `Timeout` property should set to the `TimeSpan` set in the Request.~~I'll do a PR for this. By the time if you want a workaround you could have a `HttpClient` class that implements `IHttpClient` and pass that to the `Connection` class like this.",,,,,,
162521519,963,Issue,Do you have any updates on this fix? Thanks.,,,,,,
162709074,963,Issue,we already have an override for the timeout when uploading a release asset. Apologies for not mentioning it earlier:Can you confirm this addresses the issue?,,,,,,
162709655,963,Issue,If I am not wrong the timeout is only for that request which is cancellation token. But http would time out all the request when it reaches 100 seconds (v=vs.100).aspx .   is using the same http client with multiple simultaneous concurrent requests.,,,,,,
162713057,963,Issue,"I must confess that it's been a while since this was last raised  - and given how people seem to be care when this gets in the way I'm going to look at whether it's possible to just remove this limitation. How does that feel  ? I'll follow up in #965 about the global change for timeout, because there's other tangential stuff to talk about there.",,,,,,
257118054,963,Issue,I am confronted to this bug :( It is still there in the new 0.23 release.It make the upload of release asset feature completly useless...Do you think if the this bug will be fixed ?I could perhaps take some time to do a PR but how do you want to fix it?1. Set a huge Timeout on the HttpClient2. Expose a Timeout property3. (Potentialy) Update the Timeout at each request depending of the request timeout?,,,,,,
335615803,963,Issue,Is this bug be fixed?I can't find it in the release not or in the issues or PR linked.Seems not :(Could it be fixed by at least rising the timeout?,,,,,,
335776193,963,Issue,Hi  Given its still open I don't believe it would be fixed. You mentioned in git-tfs project that you built a custom version of octokit with this fixed... If you'd like to send a PR with the fix I'll work with you to get it merged üëç,,,,,,
399451791,963,Issue,The problem still existclient.SetRequestTimeout(TimeSpan.FromMinutes(30));Version 0.29.0.0,,,,,,
399587197,963,Issue,Hi  can you provide more details?  - a complete code sample showing the octokit call?  - indication on how large your release asset is?- at what point do you get the exception?thanks,,,,,,
399589967,963,Issue,"Unfortunately, I cannot provide the full code.The upload fails on following lines (file size is about 200mb)",,,,,,
399592938,963,Issue,"Sorry, by full sample I meant ""relevant"" code, so what you've posted is fine :+1:Can you try setting the `TimeOut` property on `ReleaseAssetUpload` request object as well?  I have to dig more to see whether this is required, but it would be worth a try...",,,,,,
156663545,962,Issue,"Hello,You could do the following:The call to `client.User.Current();` will fail if the credentials are wrong.Hope that helps!",,,,,,
156669443,962,Issue,So where should i use ClientId and SecretId ?And do you think its true to get Users username and password?Is there any way to use this package to Authenticate user with GitHub login page?,,,,,,
156673676,962,Issue,"And one more question, can i use this structure for Google and Facebook?",,,,,,
156681544,962,Issue,To use the GitHub login page to authenticate your users you should follow the OAuth web flow described here ---From: Kamranmailto:notifications.comSent: ‚Äé14/‚Äé11/‚Äé2015 18:30To: octokit/octokit.netmailto:octokit.net.github.comCc: Henrik Anderssonmailto:henrik.a.andersson.comSubject: Re: [octokit.net] How to use this package in ASP.NET Web forms? (#962)So where should i use ClientId and SecretId ?And do you think its true to get Users username and password?Is there any way to use this package to Authenticate user with GitHub login page?---Reply to this email directly or view it on GitHub:,,,,,,
156730873,962,Issue,"wrote a sample a while ago about using Octokit to do the OAuth dance (it's in an MVC app, but the concepts are the same). The [blog post] and [sample code] should help you wire everything up.As an aside, I'd strongly recommend against storing the user's credentials directly. OAuth was designed so that your application would have a token delegated to you by the user, which they can then revoke in the future if they feel the need.",,,,,,
162752618,961,Issue,"This markup shows the build's ""unknown"" badge:i.e.[![Build Status]] if you can add a new commit to this branch you should see it trigger (I've enabled it only when the `.travis.yml` file is present..).",,,,,,
163017606,961,Issue,I pushed the changes  and it build successfully. I don't know why it is showing as build unknow.,,,,,,
163020906,961,Issue,I'd say this is because the badge status is looking at the default branch (which hasn't been built yet!),,,,,,
163021423,961,Issue,Looks like the AppVeyor error is a bit different to what we're tracking in #983,,,,,,
163478241,961,Issue,"~~if you merge `master` into this it should be ready to merge and close out!~~EDIT: no, nevermind. I forgot what past me wrote above.",,,,,,
164083412,961,Issue,"Oh wait, that build error is on me to fix. I'll take this in :metal:",,,,,,
164097231,961,Issue,:joy:,,,,,,
154191688,960,Issue,cc,,,,,,
154276118,960,Issue,"Oooh, this looks interesting :)",,,,,,
154709216,960,Issue,Switching to new ‚Äòdotnet‚Äô target framework monikers,,,,,,
154719512,960,Issue,"yeah, that's on my list once I get to the bottom of the various build issues I've found switching over to use `project.json` for building multiple projects",,,,,,
154729745,960,Issue,"The `dotnet` TFMs are gone and replaced by `netstandard1.0` - `netstandard1.4`.  See [the platform standard docs]. There's no point in trying to use it yet, cause there's no (stable) tooling that supports it.",,,,,,
154899082,960,Issue,Included the travis ci for the coreclr,,,,,,
155312526,960,Issue,You probably want to track  for this.,,,,,,
166759370,960,Issue,Do you want to continue with this branch? I would like to contribute to move to coreclr.,,,,,,
166760227,960,Issue,"nah, I'm going to close this out due to frustration (and things moving around again).",,,,,,
153896004,959,Issue,"While dropping the constraint means that you can get to the root of the repository, I think this behaviour is still unclear. Would it be smarter to have an overload that doesn't take a path?",,,,,,
153899544,959,Issue,"Because `ref` also could be another overload , would these be OK?",,,,,,
154111740,959,Issue,"you're right, I hadn't thought about the refs side. While we are adding in a lot of overloads here, I think they all end up going through one method - so we should be fine.",,,,,,
154498869,959,Issue,Cannot have this because there is already another overload with the same parameter typesWhat do you want to do?,,,,,,
155151542,959,Issue,What if we name these `GetAllContentsByRef` and `GetAllContentsByPath`?,,,,,,
155152625,959,Issue,Sounds good to me!,,,,,,
158266124,959,Issue,Implemented changes. The method names are `GetAllContents` and `GetAllContentsByRef`. I reused the  `GetAllContents` name because in one of the overloads we don't pass the `path` and it does not make sense to have a function name as  `GetAllContentsByPath` and don't have the path in argument.,,,,,,
160724949,959,Issue,:bread: Back to you.,,,,,,
161759663,959,Issue,Done with the changes.,,,,,,
161815213,959,Issue,"Hmm, , the branch still has conflicts that need to be resolved.",,,,,,
174413910,959,Issue,Looks like some extra changes are in here. I've extracted the relevant commits to #1064 to bring this up to date.,,,,,,
153508933,958,Issue,I'm gonna do that if possible. CreateFileRequest contains that parameter.,,,,,,
178909442,958,Issue,"This work is still outstanding.For reference, here's the documentation: I think extending `CreateFileRequest` to provide this new parameter is the best way to go about it.I'd also have a look at `UpdateFileRequest` (and the docs ) as the changes should be similar for both action.",,,,,,
179442269,958,Issue,The property already exists [here]Do you want a PR to add it to the constructor?,,,,,,
179476791,958,Issue,-Zuber I think a new `ctor` taking the branch name is good enough here,,,,,,
179478029,958,Issue,"-Zuber also, thanks for noticing the base class before it was too late :grin:",,,,,,
179478569,958,Issue,":grinning: I'll send a PR in the morning. I think a new ctor taking the branch name is good enough hereI assume in addition?~~Every class in the inheritance chain should get such an overload added?~~ I have been dumber, nothing to see here move along",,,,,,
153465318,957,Issue,I'll also pull in #935 as that just has a bit of feedback to address.,,,,,,
153422887,956,Issue,Nice! I know  was just asking me if we could switch Octokit.net to VS 2015. I think he even offered to help. üòõ,,,,,,
153423532,956,Issue,"it looks like the xml-doc warnings are causing the build to fail incorrectly. I _really_ don't want to go through and triage it all, but maybe I have to?",,,,,,
153423991,956,Issue,I would set the doc warnings as warnings and not errors and assign it to me to fix later.,,,,,,
153425595,956,Issue,"good point, I'll do that now and see if the build is happy with that...",,,,,,
153502180,956,Issue,Looks :shipit: to me!,,,,,,
153870944,956,Issue,![],,,,,,
153877043,956,Issue,:+1:,,,,,,
152783258,955,Issue,The above sample does not produce a result. My two cents we should have a sample that produces some result.,,,,,,
152864802,955,Issue,"Granted it does not compile, however documentation is generally letting the user know how to use the api in a more digestible way. I see the docs as _complementing_ the code and tests.There have been too many times where I do not have a clue about a library, I simply want to pick up an example that just works. I do agree that maybe after each feature we have a working example? Or simply a few working examples in it's own tab?cc/",,,,,,
153092426,955,Issue,"My two cents we should have a sample that produces some result.I think this is a nice goal, but perhaps we can address this elsewhere - with more interactive or detailed examples? For these sections, we should be focusing on understanding the API options available.",,,,,,
153512670,955,Issue,Thanks!,,,,,,
152724391,954,Issue,Thanks!,,,,,,
152666539,953,Issue,"Making pre-release builds of `master` available is something I'd like to do, but there's various other infrastructure needs that I need to address first (VS2015, scriptable releases, x-plat).I'll leave this open to remind me.",,,,,,
152667562,953,Issue,Do you want to do it just for `master`?,,,,,,
152667814,953,Issue,"I think so - once we've merged a PR, it's an indicator that `master` should be in a usable state.",,,,,,
231898469,953,Issue,"We're already creating these packages as part of the CI build, but there's a few enhancements we need before we can complete this:- implement versioning scheme for pre-release packages - see what [libgit2sharp] has done here for example- [detect whether build should be packaged] and [do this after the build is completed].We've already added notes about the pre-release feed in the README, not sure what else we've missed.",,,,,,
231898561,953,Issue,Opening this up as up-for-grabs for someone who wants to dive into Appveyor customizations...,,,,,,
312171743,953,Issue,"I think so - once we've merged a PR, it's an indicator that `master` should be in a usable state.Are we going to have a specific daily LKG as well?",,,,,,
312253766,953,Issue,"I'm not sure what ""daily LKG"" stands for",,,,,,
312339162,953,Issue,"I mean a daily build but it can be considered as build that meets the passing unit tests and integration tests (if any), hence it's called Last Known Good build.",,,,,,
312374470,953,Issue,"I do want to get master merges automatically releasing pre release to nuget (but they are currently available on the appveyor feed so if people really want to use them they can). In terms of running nightly integration tests, that's a cool idea but we actually have so many integration tests they can't be easily run in one go due to github API rate limits... There are also some tests that seem sensitive to timings and can fail one time but succeed on a rerun...  some work/thought would be needed to figure out a solution to these issues before we can run integration tests automatically",,,,,,
531737133,953,Issue,"I'm going to close this out as we are using the AppVeyor feed to publish pre-release packages , and we have #118 which is tracking the question about running integration tests against the GitHub API.",,,,,,
152667463,952,Issue,If you want to get rid of those changes: git reset octokit/documentation --hard git cherry-pick d80b8a31and then force push it away...,,,,,,
152668635,952,Issue,"force push it away? Sorry, I do not have a clue what that means.",,,,,,
152669054,952,Issue,that's the one!,,,,,,
152669151,952,Issue,"Be careful with `--force`. It rewrites history on the server. It's probably fine in this case, but if you ever do it to `master` on a shared project, you'll be making a lot of people unhappy. :smile:",,,,,,
152669222,952,Issue,"I just get an everything is up to date. Nothing has changed in this PR. Looks like I am doing something wrong.  thanks for the heads up, I will keep that in mind.",,,,,,
152649512,951,Issue,Just one little question. Everything else is :gem:,,,,,,
152650825,951,Issue,That's done now.,,,,,,
152652557,951,Issue,"Sorry, a couple more things while I'm in here.",,,,,,
152656137,951,Issue,Let me know how that change works for ya.,,,,,,
152658448,951,Issue,Ok done those fixes.,,,,,,
152659120,951,Issue,![],,,,,,
152225040,950,Issue,"Oops, it's targeting `master`. Do you mind reopening against `documentation`?",,,,,,
152226420,950,Issue,"Sorry about that, done.",,,,,,
152057079,948,Issue,Just organized the existing documentation under something resembling a hierarchy:I'm sure there's stuff you'd like to see in here - sound off!,,,,,,
152147994,948,Issue,":+1: Looks really good, love the way this is shaping out to be.",,,,,,
152168216,948,Issue,After getting a good(-ish) night's sleep I think there's a few sections we can define here:- **Introduction** - walk through the basics of using Octokit in your app- **Features** - explain the various parts of the API with some sample code- **Guides** - more complex examples and scenarios- **Internals** - discussions about the architecture and how it all works- **Contributing** - things current and potential contributors should read,,,,,,
152696134,948,Issue,This is looking awesome! :+1:,,,,,,
175402921,948,Issue,"Once this goes green, I'll merge it and try splitting out some documentation tasks if people want to dive into this.",,,,,,
151954067,947,Issue,There seems to be some changes in here related to the issue search. Could you refresh my memory on which issue those changes are addressing?,,,,,,
151955544,947,Issue,Those are about #839My bad. I should create a new branch of master when I started implementing this API. I will soon submit a new version without dependency on my earlier commits.,,,,,,
152032926,947,Issue,"Given there's some other branches for Pull Request Assignee and Pull Request Merged, you could have a go at rewriting this branch to contain just those commits.I'll walk you through the process to explain what's happening. You should have a remote named `origin` and one names `upstream`, you can check them like this: git remote -vvIf you only see `origin` listed, run this: git remote add upstream And now you've done that, ensure you've got the latest changes from both repositories: git fetch --allWe'll switch to our branch we're working on: git checkout arbitrarymarkdownAnd we're going to put it back to whatever is the latest from upstream: git reset upstream/master --hardIf at this point you feel unsure about continuing, this is how you get back to your previous state: git reset origin/arbitrarymarkdown --hardNow, we're going to add those three commits onto our new branch: git cherry-pick cde7254d git cherry-pick 7c1c86fc9 git cherry-pick b084d9f5Once you've tested out things with a `.\build BuildApp`, you can push this to reset the PR: git push origin arbitrarymarkdown --force",,,,,,
152033821,947,Issue,no problem.  I will do that. Thx,,,,,,
153462571,947,Issue,Closing in favour of #957,,,,,,
149975027,946,Issue,"I think I had problems with the VS extension for this when I last looked at it, but I'm not opposed to taking in something if others would like it.I'm also leaning towards using a code formatter ala golang (see #807) to automate this.",,,,,,
150038331,946,Issue,Code formatter :+1:,,,,,,
149621134,945,Issue,This is what we get in the Response Payload Body. Would this alone help?,,,,,,
149221661,944,Issue,"Ugh, we really should have the response payload in that error message so it's easier to follow.Can you put Fiddler in between and see what the response payload looks like?I'm not aware of anything recent with the Releases API changing, but I can bug them if we spot something weird.",,,,,,
149222395,944,Issue,Ok. I tried again. Now it works again. But earlier today I had 5 failed deploys from 2 machines. Maybe something was flaky.,,,,,,
149232977,944,Issue,I was trying to deploy Paket to forked repo and I got this. I agree I would prefer Response payload.,,,,,,
152063680,943,Issue,I think this is good to go. ?,,,,,,
152092676,943,Issue,Awww yeah!,,,,,,
147646350,942,Issue,"Kinda puzzled why we're only noticing this now. Whatever, the test suite did it's job :metal:Thanks!![thumbsup-2]",,,,,,
147646549,942,Issue,"As was I when I discovered it, I'm guessing we don't run the integration tests that often anymore as they take forever (aka timesout)?",,,,,,
147646868,942,Issue,"I always run the integration tests before a release, so perhaps it's just a recent change...",,,,,,
147648570,942,Issue,:+1:,,,,,,
147628399,941,Issue,This guy  should be `bool?` as it's an optional parameter...I can send a PR or leave it for someone else to get their feet wet with contributing to octokit :smile:,,,,,,
147629029,941,Issue,"yeah, that should be a `bool?`.I'll leave it up to you, but if I spot it during my next test run I'll address it then.",,,,,,
147358969,940,Issue,I'll take this in and then rework my stuff in #924 to be x-plat friendly. Just that one question.,,,,,,
147382256,940,Issue,If you are going to pull this then can I  close this PR?,,,,,,
147389962,940,Issue,"sorry, I should have been clearer. As this is new code (around an area we don't currently support) I'm happy to take this in and then iterate on it.",,,,,,
147421466,940,Issue,"Thanks. I was thinking we should start supporting mono, its just the question of making the builds ready for it. The code supports it. Once the build scripts are ready for non-windows we could even enable builds on",,,,,,
147226701,939,Issue,"My build in visual studio is good. I am confused by the BuildApp process. It seems that it will generate 3 new projects called Mono-touch , Netcore 45 and Portable. I'll try to find out those how those files had gone missing.  I think Netcore 45 is Octokit proj, Mono-touch is just Octokit Mono, and Portable is just Portable. The file sharing among these 3 projs is really confusing.",,,,,,
147241914,939,Issue,Hi  You just need to run the following command locally and then commit the changes.It's all described in our [CONTRIBUTING] document.,,,,,,
151634981,939,Issue,failed due to #904,,,,,,
151707512,939,Issue,have you committed and pushed the changes to the project file to your branch? I can only see the original error occurring...,,,,,,
152033928,939,Issue,Closing in favour of #947,,,,,,
147142622,938,Issue,"If someone wants to submit a PR for it, we'd accept it. :smile:",,,,,,
152035256,937,Issue,This also looks like it has the changes in #935 and #936 - are you able to use the trick from #947 and just cherry-pick this one commit? git cherry-pick 09051a03,,,,,,
153462602,937,Issue,Closing in favour of #957,,,,,,
161264245,936,Issue,"Howdy folks, I was just digging into this issue myself (merged always being false on all pull request, even those that have been merged) and came across this PR as well as 2 issues and some other PRs etc.  It seems in the various shuffling that change Merged field to be a calculated field hasnt actually made it throughIs the best course of action for someone to submit a new PR or can this current one be updated and merged in?  If you want me to do it let me know.  In the meantime I can obviously use the workaround of pr.MergedAt.HasValueCheers",,,,,,
161447182,936,Issue,This PR appears to be abandoned. I'm opening up a new one #970 to supersede this one.,,,,,,
152034791,935,Issue,"a couple of little things to tidy up, but this is looking great!",,,,,,
153468784,935,Issue,Closing in favour of #957,,,,,,
147895625,934,Issue,"/  let me know if this looks ok.btw, I changed the messages to be those that the github api returns.",,,,,,
153819996,934,Issue,apologies for the delay - this looks great! It just needs a merge from `master` to address the csproj conflicts...,,,,,,
162701934,934,Issue,Closed by #976,,,,,,
146736175,933,Issue,"IMO we should move the `SourceLink` , `CreateOctokitPackage`, `CreateOctokitReactivePackage` to the new `deploy.fsx` and then we could sourcelink and publish the nuget package as part of deploying.Thoughts?",,,,,,
146754257,933,Issue,"IMO we should move the SourceLink , CreateOctokitPackage, CreateOctokitReactivePackage  to the new deploy.fsx and then we could sourcelink and publish the nuget package as part of deploying.Sounds good to me.",,,,,,
147549868,933,Issue,"The default target in `deploy.cmd` is `CreatePackages`Here is the argument list deploy.cmd1. Target -  `CreatePackages` , `ReleaseToGithub`2. GITOWNER - The default is `octokit` if nothing is provided. This is used for releasing to github3. GITPASSWORD - This is used for releasing to Github . I use the 4. NUGETKEY - The nuget key is used for deploying to nuget I wasn't able to deploy to nuget because I don't have private nuget key to deploy octokit.I was able to ReleaseToGithub.Here is the run from the ReleaseToGithub",,,,,,
147551577,933,Issue,Part of deploying release's involves manually creating ReleaseNotes based on PR's merged from the previous git tag to now. Why not automate this?This is what I was able to produce this using octokit from `v0.16.0` tag to now. This is not perfect but it would avoid manually looking for each PR. - Created build.sh  - Add .com links to PrivateRepositoryQuotaExceededException #389 - Updated with the logo  - Fixes for FAKE Xunit warning  - add System to required framework assemblies for net45  - Consolidate committer info  - Add a bunch of XML doc comments  - Disposable repositories #655 - Clarify why convention tests are failing #907 - Making Encodedcontent public #861 #861 - Updated the readme with reactive octokit.  - Changes GitHubCommit.Author/Committer #779 - Build fix for Xamarin Studio Solution  - Add Events URL to the Issue class.  - Updated test target names in the shipping releases doc  - Release of v0.16 - ironic ties  Would this be useful  /  ? If so then I could make it as part of this PR.,,,,,,
147621941,933,Issue,"Part of deploying release's involves manually creating ReleaseNotes based on PR's merged from the previous git tag to nowI'd like to do this separately for a couple of reasons:- internal things unrelated to public changes are not listed in the release notes- calling out multiple contributors on a PR (look at commit authors as well as the PR owner) is also something I like to do for each release- the PR titles are often rough or incomplete, and I like to clean them up before publishingThere's a related project GitReleaseNotes which is also in this vein which I think can help here, or something similar to your script, but for now can we punt on addressing that here?",,,,,,
147723283,933,Issue,Sounds good. :+1:,,,,,,
148644977,933,Issue,"this is looking really great, thanks for taking the time to work through on this.I'll have a play around with it next week, just a couple of questions about the parameters used to identify the GitHub account owner (versus the organization the repository belongs to).",,,,,,
166157165,933,Issue,What do you want to do this PR?,,,,,,
166170575,933,Issue,"I still like the idea of this, I'm just trying to figure out the best way to incorporate this into our processes - for example, AppVeyor supports publishing GitHub releases too.",,,,,,
236166197,933,Issue,"FWIW, I think it's always better to have your processes baked into source, rather than clicky clicky config on a CI server. That said, there are options for CI config in source, e.g. `.travis.yml`, `appveyor.yml`.",,,,,,
236469793,933,Issue,"fair enough - and packages are already created locally. I'm just trying to tackle two different things here which are tangentially related to publishing releases:- the ability to publish pre-release packages automagically - I'd love to steal what `libgit2sharp` has done and repurpose that here- publishing official releases without needing my environment - that's a bit tricker, but builds upon the previous stepYou can see [what this looks like] when you drive it from config rather than the server's settings...",,,,,,
236564244,933,Issue,"The one thing I'd probably do differently to that example is to put as much as possible into something decoupled from appveyor, e.g `build.fsx`. IMHO config specific to a CI platform, e.g. `.travis.yml`, `appveyor.yml` should be minimal and for the heavy lifting it should call out to something which can run anywhere.",,,,,,
272694653,933,Issue,"Im going to close this one out since it never quite got there, and we are now moving to CAKE anyway.  The good news is we intend to get deployment/packaging/publishing handled in the CAKE scripts :+1:",,,,,,
146919400,932,Issue,"Could you use Fiddler2 to post the request and response you get? Be sure to remove the line of the request header that contains your authorization token. It's the line that starts with ""Authorization:"".",,,,,,
147019486,932,Issue,"Sure, here is the requestAnd here is the responseHere is the link to the branch the PR belongs to: , while the target repository is at Source code for what I'm trying to do is [here].",,,,,,
147042565,932,Issue,"Could it be that StandardAjaxv0.1.2-df225a37-acb9-4e02-acc6-a517a88956d2 isprivate? If so, does the token have that scope?## vrceOn Oct 9, 2015 8:08 PM, ""Ronny Chan"" notifications.com wrote: Sure, here is the request  POST  HTTP/1.1 Accept: application/vnd.github.quicksilver-preview+json; charset=utf-8, application/vnd.github.v3+json; charset=utf-8 User-Agent: snowball (Win32NT 6.2.9200; amd64; en-CA; Octokit 0.16.0) Authorization: Token [Redacted] Content-Type: application/x-www-form-urlencoded; charset=utf-8 Host: api.github.com Content-Length: 134 Expect: 100-continue Accept-Encoding: gzip, deflate  {""title"":""Add Plugin StandardAjax v0.1.2"",""base"":""master"",""head"":""RonnChyran:StandardAjaxv0.1.2-df225a37-acb9-4e02-acc6-a517a88956d2""}  And here is the response  HTTP/1.1 404 Not Found Server: GitHub.com Date: Sat, 10 Oct 2015 01:02:21 GMT Content-Type: application/json; charset=utf-8 Status: 404 Not Found X-RateLimit-Limit: 5000 X-RateLimit-Remaining: 4964 X-RateLimit-Reset: 1444439859 X-OAuth-Scopes: public_repo, repo:status, repo, user, repo_deployment X-Accepted-OAuth-Scopes: X-OAuth-Client-Id: [Redacted] X-GitHub-Media-Type: github.v3; param=quicksilver-preview; format=json X-XSS-Protection: 1; mode=block X-Frame-Options: deny Content-Security-Policy: default-src 'none' Access-Control-Allow-Credentials: true Access-Control-Expose-Headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval Access-Control-Allow-Origin: * X-GitHub-Request-Id: D83A5B09:161C9:31899DC:5618639D Strict-Transport-Security: max-age=31536000; includeSubdomains; preload X-Content-Type-Options: nosniff Content-Length: 106  {""message"":""Not Found"",""documentation_url"":""""}  Source code for what I'm trying to do is here   ‚Äî Reply to this email directly or view it on GitHub  .",,,,,,
147046602,932,Issue,"Disregard my previous comment. That's a branch not a repo and scopes are in the response anyway... It's late, I'm going to bed xD",,,,,,
147239307,932,Issue,Anyone have an idea of what's going on with why it's not working?,,,,,,
147242473,932,Issue,do you have any ideas on this?,,,,,,
147352341,932,Issue,"Could it be that StandardAjaxv0.1.2-df225a37-acb9-4e02-acc6-a517a88956d2 is private? If so, does the token have that scope?I can see this branch on the repo, so I don't believe it's that.Thanks for the repro, and sorry for the delay. I'll have a look at recreating the issue on my end.",,,,,,
147358181,932,Issue,"So I took the same parameters from above and ran the same steps from the repro:And the PR was created successfully - :So what I believe might be happening here is that the is published, but the delay between that occurring and creating the PR is too short (so the PR isn't created because it can't ""find"" the branch). if you were to run through the steps again, could you note the delay between creating the reference [here] and then creating the pull request in Fiddler?",,,,,,
147466702,932,Issue,: Looks like this one is blocked by [third-party application restrictions].,,,,,,
147467606,932,Issue,"I've disabled the restrictions on the target repository and it seems to [working now.]Thanks for all the help, may I suggest adding a note about that to the API docs?",,,,,,
147560229,932,Issue,"may I suggest adding a note about that to the API docs?Thanks for suggesting, . I've added that scenario to [the troubleshooting guide].",,,,,,
146783991,931,Issue,This seems to have a whole bunch of unnecessary commits (the branch is so stale at this point it'd probably be easier to rebase and bring it up to date). Thoughts ?,,,,,,
146869394,931,Issue,I agree.I think the best is to leave and close this and #819 for history and I'll reference them in a new PR.,,,,,,
146886565,931,Issue,Rebased and submitted via #934.,,,,,,
146471046,930,Issue,Not really. As all the API calls for Octokit are done over HTTP/S we're kinda restricted to using the `Authorization` header.,,,,,,
146472059,930,Issue,I see. I think that's the kind of answer I was expecting.How about the HTTP credentials helper thingies? I don't use them myself (I'm an SSH man) but I don't suppose there's anything built into Octokit for talking to them? Or some other .NET wrapper somewhere you're aware of?,,,,,,
146476775,930,Issue,"How about the HTTP credentials helper thingies? These store the username/password/token somewhere on the local machine. Those would be usable in Octokit if you extract it, but this is often tied to the Git installation (Octokit doesn't depend on git.exe) I don't use them myself (I'm an SSH man) but I don't suppose there's anything built into Octokit for talking to them?Afraid not, because they're two very different ways to authenticate:- SSH is session-based (connect to remote machine) versus HTTP's request/response model- with public-key infrastructure like this, keys can be managed better between actors compared to credentials- all this occurs on a different port (22 versus 80/443)If you're looking for an alternative to providing your HTTP credentials, you could look at [Personal Access Tokens] or having an app create [authorizations] on a user's behalf.",,,,,,
146484621,930,Issue,"I don't use them myself (I'm an SSH man) but I don't suppose there's anything built into Octokit for talking to them?I actually meant for talking to the HTTP credential helpers. I realise that SSH is something completely different to HTTP/HTTPS (and in that regard I'm not really sure why I asked the initial question).I will indeed use a Personal Access Token because I'm using 2FA anyway.Yeah, an app authorisation would be the right way to do this for an app I'm planning to distribute but this just a spiked console app for trying some things out. I kind of wanted to avoid having to put my personal access token into config/setting an environment variable/prompting for a password whilst I'm spiking this and I'm also switching machines as I travel around.Anyway, the ROI on taking this further is not worth it. If this spike ever becomes a thing then it will end up as a windows service somewhere and we already have a general solution for storing credentials in that scenario.Thanks for the answers!",,,,,,
146293286,929,Issue,Feels ?,,,,,,
146310853,929,Issue,:thumbsup:,,,,,,
146310997,929,Issue,![thumbs-up-pink-glasses],,,,,,
146043601,927,Issue,Done!,,,,,,
145923409,926,Issue,:+1:,,,,,,
146128538,926,Issue,:+1:,,,,,,
146165563,926,Issue,Y NO SLACK?,,,,,,
146177956,926,Issue,I actually kinda want both. They can serve different kinds of discussions,,,,,,
146180423,926,Issue,"I'm kinda indifferent on which we choose (I neglect both really equally, so I don't really have a horse in the race) but I think sticking to one would be better.Are there specific features from either platform you're really attached to?",,,,,,
146180702,926,Issue,"Phone, phone, phone -> Slack :wink: Also, Gitter is kinda buggy :cry:",,,,,,
146181195,926,Issue,"The only thing that suck with Slack is the invitation model, but we recently set up slackin for Nancy and it works like a charm.Just spin up  and give it an API key.",,,,,,
146182867,926,Issue,"Yep, I don't mind doing that to take away that invitation pain...",,,,,,
146185356,926,Issue,"Out of the two, I like Slack better, but I'm :cool: with either.",,,,,,
146205775,926,Issue,"I enjoy Slack so don't mind Slack only. Gitter on the phone is a bit of a pain, but it's still better the Github itself :wink:The main selling point of gitter for me is the integration. If Slack has something similar then I'll withdraw my gitter vote.",,,,,,
146206179,926,Issue,#NAME?,,,,,,
146399109,926,Issue,"Now that my computer started listening to me again ( I swear to God some days it behaves worse then a two year old), I was able to check the Slack integration with Github and it looks nice.The main difference is in Gitter the information is displayed in a dedicated side bar, while Slack treats each event as just another message.tl;dr I've been converted to Slack",,,,,,
147320373,926,Issue,"Hearing news like [this] concerns me a bit: I got on the phone with a couple of Slack people last week, and **they have decided not to support infinitely large public communities.** Slack wants to focus on building team communication software, and groups like Reactiflux don't fit into that. ... **The only way we could stay with Slack would be to cap our user base at < 8k. Probably around 1-3K. This obviously doesn't work for an open community.** The most important thing about our community is that it's open and anyone can join in less than a minute. So when new people want to join the conversation, it's very low friction. We obviously can't keep the friction low if we start moderating accounts to keep our numbers low.I know we wouldn't be at that scale for a while, but it's in the back of my mind.cc",,,,,,
147324119,926,Issue,"That's a bit unfortunate...I like Slack a lot, but if that's their stance, then perhaps Gitter would be a better alternative...",,,,,,
149673212,926,Issue,"I am not sure how the pricing would work, but maybe there is a similar free option.",,,,,,
160850310,926,Issue,"Slack also caps search history... If it weren't for that, slack would be nice.",,,,,,
160850337,926,Issue,I tend to grab urls from gitter discussions to use in issues and emails.,,,,,,
160852405,926,Issue,There is also a new player in town: I have played with it a bit and it is quite nice actually,,,,,,
160857201,926,Issue,"Re capping the search history, I just saw this:",,,,,,
160857759,926,Issue,"Looks interesting, but not built in so it presents a point of failure. Plus you can't see the entire conversation surrounding it, only messages that you search for. Not exactly apples and apples. :)",,,,,,
160858019,926,Issue,"True. Just thought it interesting. I anyways strongly recommend gitter. Ryvver is nice for teams, but I don't see any integration points right now",,,,,,
160858240,926,Issue,I saw ryver a few weeks ago. I agree that it looks interesting. We'll see how they do given how nice slack is.,,,,,,
160858516,926,Issue,"I think no integrations will make it rough. But in my interactions with them,  they have proven very open to suggestions and make changes quickly",,,,,,
160864365,926,Issue,Ryvver has zapier and OData for integrations. Not super exciting,,,,,,
160899815,926,Issue,There's also  :wink:,,,,,,
162077145,926,Issue,/   Could we create one of these options?,,,,,,
162616498,926,Issue,I vote for Gitter simply because github/VisualStudio is already there and I want to avoid a million different chat systems. :stuck_out_tongue:,,,,,,
162724913,926,Issue,DONE!,,,,,,
147120511,925,Issue,Cannot find a parameter in Created/Updated API that can clarify the type of the file.,,,,,,
147357597,925,Issue,"The Github API documentation makes no reference to any kind of binary parameter on CreateFile or UpdateFile, but it looks like they accept an 'encoding' parameter.  Octokit.net seems to be using the default of UTF-8 even for base64 text - supposedly the same issue can be resolved in Octokit.js by setting the encoding of binary text to 'base64'.[Same issue] with a [pull request showing a 'working' solution].  Relevant update:---From poking around the code it looks like adding a new property to the CreateFileRequest object (CreateFileRequest.cs), that mapped to the appropriate encoding parameter (or a prop called ""IsBinary"" that would serialize properly), would do the trick. That parameter would propagate all the way through to the API through the ApiConnection, it's just a matter of finding the correct structure for the encoding values :)",,,,,,
147383004,925,Issue,When the API dose not  officially support it then why build a hack around it?,,,,,,
147390168,925,Issue,"The API does not list the ""encoding"" parameter in its Repository Content docs, but it accepts/returns an encoding, and uses a specific 'base64' encoding parameter elsewhere for binary operations...  Encoding = EncodingType.Base64 is how it's handled on BLOBs.As a matter of definition: arguably this is a pure API inconsistency, or a documentation oversight... the workflow of Git and GitHub allow it in single operation.  Perhaps updating the docs would be better, either making the encoding parameter official, or clarifying that the RepositoryContent API doesn't handle binary data.  No hacks needed ;)---Feel free to close the issue - I opened it primarily to provide a path for any other people stuck on the API inconsistency, not everyone is comfortable with the BLOB DB.Upload of a single binary file:",,,,,,
195240224,925,Issue,"-comyn oops, totally missed that last message. Thanks for the details, and there's actually some things we do under the hood to take the control away from you here - the `Content` property is a .NET string and we decorate it with a `[SerializeAsBase64]` attribute so that the user doesn't need to remember to do that. That's clearly not what you're looking for here, and I'm grateful for that example using the Git Data API.I've opened  to track this feature as a parity item.",,,,,,
146260865,924,Issue,Blocked on,,,,,,
147223446,924,Issue,Was able to workaround the SourceLink issue in  with a bit of F# munging. Now to tidy up everything else.,,,,,,
147274498,924,Issue,Me too! I'll take a look this week.,,,,,,
147289725,924,Issue,thanks for looking into it!,,,,,,
147303708,924,Issue,"Just did a run-through of this process with a fresh clone, and here's the process:- `git clone ...` - note that the `core.autocrlf` thing isn't set because it's an implementation detail- `./build` as per the README - I've kept this script around but it now shells out to `bootstrap`, `build` and then `test` scripts.So the big headache we had previous was that `SourceLink` required the `core.autocrlf` setting to be a certain value - otherwise shit just breaks. Here's what happens now as part of the `bootstrap` step:This means less hunting around in docs for setting this value (and then remembering to run some other git commands afterwards). We can also guard against this when packaging:Could probably be a bit more friendly. But anyway...- After doing your `./build` it's a one-liner to package things up:The scripts are now more composition-friendly, not sure how others feel about this granularity though...",,,,,,
147310413,924,Issue,"Looks good, I like it :+1:",,,,,,
166067959,924,Issue,"Closing this one out in favour of addressing more concrete issues as they are identified, like:- versioning packages from CI for better automation- writing up the release documentation- probably some other things",,,,,,
146362448,923,Issue,"Ok, the fact that it always says `gitignore_template` at the beginning of the string appears to be a bug in our API. Let's not rely on the bug behavior.",,,,,,
146365293,923,Issue,Should I wait until the bug is fixed to continue with this one or use the `EndsWith` alternative?,,,,,,
146407717,923,Issue,Use the `EndsWith`. It'll be future proof. Hopefully.,,,,,,
153796902,923,Issue,Thanks for this - I merged in the `csproj` conflict so this is :ship:ed!,,,,,,
145180863,922,Issue,The build fails because of #904 `StopsMakingNewRequestsWhenTakeIsFulfilled`,,,,,,
145183967,922,Issue,:sparkles:,,,,,,
145071535,921,Issue,The build failed due to #904,,,,,,
145701108,921,Issue,The build failed because of `StopsMakingNewRequestsWhenTakeIsFulfilled`,,,,,,
153806116,921,Issue,![],,,,,,
145194226,920,Issue,"I'll have to think through how we handle the fact that the monolith may have nullable properties that should not be nullable on the interface. We'll figure something out.Are you talking nullable or present? Is there more or less pain for a field to be present and null vs absent altogether?Either way, the :imp: might be in the details, but I think interfaces could be a pragmatic approach.",,,,,,
145194597,920,Issue,"Are you talking nullable or present? Is there more or less pain for a field to be present and null vs absent altogether?They're more or less equivalent in our case.The situation I'm thinking about is there are cases where the concrete type might have an int property that can be missing or null, in which case it needs to be a `Nullable` property. But there may be other API endpoints where that same property cannot be null and I'd like to have the property be an `int` that cannot be null. I might run into problems implementing that interface with the same concrete type.",,,,,,
145194780,920,Issue,I might run into problems implementing that interface with the same concrete type.Explicit implementations might be your friend here :smile:,,,,,,
144533411,919,Issue,:shipit:,,,,,,
144535203,919,Issue,I've no idea if this is also required for netcore45. I tried it out in a sample netcore45 project but the whole notion of referencing framework assemblies explicitly doesn't even seem to exist there.Hey ! Got any suggestions about this?,,,,,,
144540323,919,Issue,Sorry not sure about `netcore45` as I've never really use that. But this change as-is certainly seems to fix a real issue.,,,,,,
144541641,919,Issue,"I talked to  and he wasn't super sure. There is a concept of reference assemblies for `netcore45` (Windows Phone, effectively), but either way a typical Windows Phone app effectively references _everything_ on the system anyway (the dependencies are trimmed later).So as such, I think this change is good as-is.",,,,,,
144542765,919,Issue,![selfie-3],,,,,,
144620603,919,Issue,I strongly suspect that GIF will get reused now :smile:,,,,,,
144622174,919,Issue,"Hahah, that's pretty funny :grinning:",,,,,,
144903348,918,Issue,"hmm, it seems like the build failed due to #904",,,,,,
153793981,918,Issue,"Apologies for the delay, and thanks for working on this!![]",,,,,,
143807675,917,Issue,"Currently there are 2 constructors, one that takes the required (name, config and url) parameters and defaults the optional (contentType, secret and insecureSsl) parameters and one that takes all parameters.Funny you should mention this. I just submitted a PR that includes some guidelines around our model objects. For request objects (such as this), I think optional parameters should simply be read/write properties and required parameters are read only and go in the constructor. Does that make sense?",,,,,,
143890714,917,Issue,:+1: will update PR tonight,,,,,,
145330453,917,Issue,"now conforms to the model request guidelines of **required** properties are added as `ctor` parameters with read-only properties and optional properties are added as read-write properties.Also added a method, `ToRequest()`, that merges the passed in `config` object with the webhook specific config properties that is used when passing the object to the API.Failing test is the known `StopsMakingNewRequestsWhenTakeIsFulfilled`.",,,,,,
146778487,917,Issue,"We now throw an exception with a more helpful message if the user has added any webhook specific config values to the `config` parameter in the `ctor`.Come to think of it, I need to do a bit of refactoring to clean this up a bit...",,,,,,
147636309,917,Issue,"I think this is now done, just awaiting the :white_check_mark: of approval from AppVeyor",,,,,,
153813545,917,Issue,Looks like there's a csproj merge conflict here :cry:,,,,,,
155762359,917,Issue,"crap, totally missed your comment... :disappointed: will try and fix it up as soon as possible.",,,,,,
155782305,917,Issue,"OK, merge conflicts sorted, now just waiting for AppVeyor",,,,,,
155833945,917,Issue,"I don't think that second build is ever going to complete, so I'm gonna merge this in.Thanks again !",,,,,,
155925409,917,Issue,:+1:,,,,,,
143661718,916,Issue,/cc  wanted to make sure you saw this change.,,,,,,
143717341,916,Issue,"My bad, didn't know about this one. But why was `GitHubCommit` changed back to use `Author` instead of `Committer`? (that was the initial issue)",,,,,,
143790577,916,Issue,"My bad, didn't know about this one. But why was `GitHubCommit` changed back to use `Author` instead of `Committer`? (that was the initial issue)Because according [to the docs here], the `author` and `committer` for a `GitHubCommit` correspond to a GitHub account (aka `Author`).The `commit` property of `GitHubCommit` also has `author` and `committer` but those correspond to `Committer`.I think the confusion stems from the fact that the API returns GitHub objects as well as Git objects and Octokit.net has confused the two in some places.A `Committer` is the minimal signature that a Git commit contains `{'name', 'email', 'date'}`. GitHub will try to associate a committer (and author) of a Git commit to a GitHub account. It can't always do that and now that I think about it, I'm not sure what it responds when it can't.",,,,,,
143808161,916,Issue,I commented on [the original issue],,,,,,
143606890,915,Issue,"Since  is on vacation and these are mostly XML comment changes, I'm going to YOLO merge this. Feel free to review later!",,,,,,
145453866,915,Issue,Thanks for digging into this. Hopefully now I'm back I can help out with improving things around the build side.,,,,,,
143678183,914,Issue,I'll take this one :),,,,,,
166068338,912,Issue,I had a go at rebasing this branch but encountered some conflicts.I'm not sure I was doing it right - would love some feedback on bringing this up to date.,,,,,,
197079304,912,Issue,"Just going through old open PR's...Im pretty sure what this PR was covering, has been implemented on PR #1096 (issue #1065) and later tweaked on PR #1132 (Issue #1107)  if you agree, we can close this one",,,,,,
197080445,912,Issue,I knew this PR looked familiar! Let's close this out!,,,,,,
142757016,911,Issue,This could be something which could help in solving this.,,,,,,
178890855,911,Issue,is this still occurring for you after we setup CI for the Mono builds?,,,,,,
194002923,911,Issue,please reopen if this is still occurring,,,,,,
142475320,910,Issue,If that's all it takes I can send a PR.,,,,,,
142475327,910,Issue,because reasons.,,,,,,
142484667,910,Issue,"Yes, it should just be as easy as adding that property to the class and a ctor parameter. :grinning:",,,,,,
142491263,910,Issue,do eeet!,,,,,,
142504755,910,Issue,Yessir!,,,,,,
153497667,910,Issue,"Sweet, I didn't even have to write any code :smile:",,,,,,
142756136,909,Issue,Looks good! Feel free to continue.,,,,,,
143928349,909,Issue,"All set! If anything else needs to be done, just let me know once this gets reviewed,",,,,,,
144129566,909,Issue,Looks good! :sparkles:,,,,,,
142218866,908,Issue,"Ugh. That didn't work so well... [00:00:00] Build started [00:00:02] git config --global core.autocrlf input [00:00:02] git clone -q  C:\projects\octokit-net [00:02:32] fatal: early EOF [00:02:32] fatal: The remote end hung up unexpectedly [00:02:32] fatal: index-pack failed [00:02:32] error: RPC failed; result=18, HTTP code = 200 [00:02:32] Command exited with code 128",,,,,,
142436587,908,Issue,Thanks!![selfie-0],,,,,,
142206608,907,Issue,That looks like a legit failure. We have some unit tests that check that models follow our conventions.,,,,,,
142213901,907,Issue,"Yea, needs to have the `setter` as protected... :)",,,,,,
142453443,907,Issue,Thanks fixed that!. It is failing again in the `StopsMakingNewRequestsWhenTakeIsFulfilled`,,,,,,
142453921,907,Issue,Thanks fixed that!. It is failing again in the `StopsMakingNewRequestsWhenTakeIsFulfilled`I restarted the build. I haven't had time to look into why that test fails sometimes. It's worrying.,,,,,,
142497124,907,Issue,Looks good to me!,,,,,,
142144255,906,Issue,:+1:,,,,,,
142144325,905,Issue,"Why not use octokit to release to github?We just haven't gotten around to it. But if you want to set that up, I'd be eternally grateful.",,,,,,
142146757,905,Issue,I will take this one! Thanks,,,,,,
146209226,904,Issue,"I'm unable to replicate this error locally, even running the same commands that AppVeyor runs (i.e. the git commands to get the code) yields a successful unit test run :cry: Could it perhaps be something environmental to AppVeyor...",,,,,,
146210933,904,Issue,Even I couldn't replicate it locally.,,,,,,
146216316,904,Issue,I'm installing VS2013 on my Server 2012 R2 dev machine and will test it on there as well,,,,,,
146350181,904,Issue,Everything works fine on my 2012R2 dev machine as well...so I'm quite stump as to why it would be failing on AppVeyor...,,,,,,
149097536,904,Issue,"it only appears on AppVeyor... Even though I am committing the same content, I cannot duplicate it",,,,,,
141671911,903,Issue,"Oh, boy, the test failed",,,,,,
141713726,903,Issue,The failure doesn't seem to be related to your change. I'm rebuilding to see if it'll pass this time. We need to figure out why that test fails sometimes.,,,,,,
141840060,903,Issue,Thanks! Flawless victory!![selfie-0],,,,,,
141834759,902,Issue,Thanks!![selfie-0],,,,,,
141452828,901,Issue,:shipit:,,,,,,
141834068,901,Issue,Flawless victory!![selfie-0],,,,,,
141494182,900,Issue,Thanks!,,,,,,
145279667,899,Issue,![agree]xref,,,,,,
145279721,899,Issue,I don't mind putting together a proper packaging script ([these conventions] seem nice) - it'll just need some checks before to ensure everything is setup correctly.,,,,,,
168929967,899,Issue,"![]Indeed, I was in the middle of stealing your fake `build.fsx|build.cmd|build.sh` for ReactiveUI and ran into the same SourceLink error. `script/*` seems like a good convention, will check out what you have done up in #924 for inspiration. Any tips/advice appreciated, if something good is cooked up I don't see why this pattern couldn't be applied everywhere (tm) for .NET oss.",,,,,,
141213544,898,Issue,:heart:,,,,,,
141219616,898,Issue,could you do me a favor? Pull down this branch and run `.\build.cmd CreatePackages`It's failing for me. :frowning:,,,,,,
141220617,898,Issue,"Would love to,  but I just started my vacation. I'm off sailing for one week. Sorry",,,,,,
141221908,898,Issue,have a great trip! Who will fix the F# ecosystem in your place once we get these packages published?,,,,,,
141222430,898,Issue,"That's easy. People will just do ""paket update nuget Octokit"" andeverything will work again. ;-)See you in a weekOn Sep 17, 2015 22:39, ""Phil Haack"" notifications.com wrote:   have a great trip! Who will fix the F# ecosystem in your place once we get these packages published?  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
141223410,898,Issue,These notes looks good to me :+1:,,,,,,
141167758,897,Issue,![selfie-0],,,,,,
141278469,897,Issue,This is now [live on NuGet] as of version `0.16.0`!,,,,,,
141294553,897,Issue,:clap:,,,,,,
140824162,896,Issue,"Hmm, I don't see it either. Perhaps  would know.",,,,,,
140839749,896,Issue,slightly related,,,,,,
147104996,896,Issue,: Locking isn't currently available via the API. I've referenced this issue on the internal feature request for that one.,,,,,,
178892569,896,Issue,"As this is related to the GitHub product itself, rather than the API clients, I'm going to close it out.For reference, the API is now returning `locked` properties for issues in Octokit (but not Pull Requests, so  is that task). When the other stuff becomes available, we'll expose it in Octokit.",,,,,,
183169296,896,Issue,"Guess what?! There's [a way to [lock issues via the API now]! It's in preview mode, but if someone wants to tackle it, that would be great!",,,,,,
183174205,896,Issue,The relevant docs:- -,,,,,,
183184360,896,Issue,Finally! :smile:,,,,,,
195474371,896,Issue,"I have added the function in the **IssueClients** class.Could you please tell me what all unit and integration tests to add ?---------EDIT----------I have added the unit as well as the integration tests.I cannot run the integration tests as they skip because of a lack of a test account.The unit tests are passing fine on my system, but they seem to have a problem running on [appveyor]. If you could have a look and tell me what's the problem !!.Thanks",,,,,,
196088236,896,Issue,which branch is this for? If you could open a pull request it will run against our CI infrastructure - and let us see what the failures might be about...,,,,,,
233167067,896,Issue,I think this could be closed for now :+1:,,,,,,
140926316,895,Issue,:cool: Did you test this out?,,,,,,
140926790,895,Issue,"Yes, I checked in the test before the actual fix that was causing the CI to fail the build.",,,,,,
140927194,895,Issue,"Yes, I checked in the test before the actual fix that was causing the CI to fail the build.Ok, I just wanted to make sure you actually tested the Upload to Releases with this fix.",,,,,,
140928739,895,Issue,"Yes, I tested the Upload to releases with this fix.",,,,,,
140929830,895,Issue,![selfie-0],,,,,,
140929841,895,Issue,Thanks!!!,,,,,,
141058116,895,Issue,Very cool. Are you going to release this as a hot fix? It's blocking the whole F# ecosystem at the moment ;-),,,,,,
141169218,895,Issue,It's blocking the whole F# ecosystem at the momentYikes! I'll try and get a release out soon.,,,,,,
141170060,895,Issue,"Yes. Thanks to projectscaffold project everybody uses Octokit. ;-)Thanks again to both of you. Really appreciate this.On Sep 17, 2015 8:07 PM, ""Phil Haack"" notifications.com wrote: It's blocking the whole F# ecosystem at the moment  Yikes! I'll try and get a release out soon.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
141207626,895,Issue,"cool, got a sec to sanity check the release notes here?",,,,,,
141208080,895,Issue,"Lol. Made my day.On Sep 17, 2015 21:56, ""Phil Haack"" notifications.com wrote:   cool, got a sec to sanity check the release notes here? #898   ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
141278549,895,Issue,This is now [live on NuGet] as of version `0.16.0`!,,,,,,
141896349,895,Issue,works like a charme. thanks so much. ![free],,,,,,
140561319,894,Issue,The reason for the failure is because the release api has an optional argument called `label` along with `name` which is requiredThe releaseclient code `UploadAsset` method  invokes the `ExpandUriTemplate` method  which does not expand the `name` parameter for the api which is required because it expects only one parameter which is the bug. ![bug]This is causing the api throw an error with `Invalid name for request` because request `name` was not provided in the call. Here is a sample code to recreate this issue,,,,,,
140584912,894,Issue,Great bug report  and great bug explanation !Are either of you interested in providing a PR to fix it?,,,,,,
140585348,894,Issue,I can take this one.,,,,,,
140585772,894,Issue,Excellent!,,,,,,
140643434,894,Issue,"So it's indeed a changed API and can be fixed in Octokit? Awesome. Can'twait to ""paket update nuget Octokit"".On Sep 16, 2015 2:17 AM, ""Phil Haack"" notifications.com wrote: Excellent!  ‚Äî Reply to this email directly or view it on GitHub  .",,,,,,
142005926,894,Issue,This one should be closed.,,,,,,
140130326,893,Issue,Doh! Seems like low hanging fruit. Interested in sending a PR?,,,,,,
140864200,893,Issue,I will send a PR on this.,,,,,,
140870218,893,Issue,I think  was already planning to.,,,,,,
140871457,893,Issue,Sure. Thanks!,,,,,,
140930401,892,Issue,Hey  do you happen to have time to review this PR for me?,,,,,,
141064369,892,Issue,I'll do that.,,,,,,
141132963,892,Issue,Looks good to me  :+1:,,,,,,
141135415,892,Issue,Thanks!,,,,,,
141278279,892,Issue,This is now [live on NuGet] as of version `0.16.0`!,,,,,,
139671032,891,Issue,Interesting. Want to help us do all that?,,,,,,
139698974,891,Issue,"Yes, I can do PR for this.",,,,,,
142125008,891,Issue,"Here is the response from Xamarin. The author of the project would have to apply for the license.  Hi Naveen,  Thanks for letting me know!  The author of the project needs to apply for the subscription and if it is a group open source project,  all will need to apply separately with a note of who else is working on the project.  Best, Andrey Could you apply for this?",,,,,,
142144158,891,Issue,Done! I'll let you know when I get it approved.,,,,,,
143091347,891,Issue,"ok, I have the subscription, but not sure what I need to do next.",,,,,,
143096396,891,Issue,Did you get the license for yourself ? If you have the email can you forward it I could apply for the  all will need to apply separately with a note of who else is working on the project. and then use that specific license to supply in build server,,,,,,
531600321,891,Issue,I think this is not something worth tackling given we target .NET Standard 1.1 these days.Please open a new issue if this is something you still care about.,,,,,,
141196913,890,Issue,Thanks for your contribution!![selfie-0],,,,,,
141278392,890,Issue,This is now [live on NuGet] as of version `0.16.0`!,,,,,,
141368756,890,Issue,nic0r! :smiley:,,,,,,
139430523,889,Issue,:thumbsup: thanks!,,,,,,
139131219,887,Issue,:ship:ed,,,,,,
139301408,887,Issue,![smile-double-fist-pumps]Great work ! So excited to see the fast turnaround on this release. :smile:,,,,,,
139092841,886,Issue,I was able to remove the references to those files and I was able to compile the project.,,,,,,
139030785,884,Issue,:sparkles: Thanks!GitHub Selfie is broken for me so I'll give you an oldie.![thumsup-big-cheese],,,,,,
139035995,884,Issue,"Thank you, I appreciate the work. This will probably help me a lot. Just a small request -  any possibility of getting an example of using the new property to load the comments?",,,,,,
138647291,883,Issue,Can I take this one?,,,,,,
138707262,883,Issue,go for it!,,,,,,
138707445,883,Issue,I assigned myself so nobody takes it. But go ahead and work on it,,,,,,
138994777,883,Issue,This is awesome. Let's me throw out ~200 loc and tests!,,,,,,
139122146,883,Issue,Fixed in #884,,,,,,
138399348,882,Issue,"How do I get Repo the issue belongs to?Unfortunately the [raw JSON] doesn't contain anything related to the repository. I'd recommend parsing the `HtmlUrl` property on the issue (you _could_ look at everything before `/issues` in the URL). For each of these issues I want the comments on them.There's a `comments_url` property on the raw JSON which we're not surfacing. We should do that.Alternatively, you could just go and fetch it directly:",,,,,,
138399786,882,Issue,Opened  to address the missing property,,,,,,
138411169,882,Issue,Thanks!,,,,,,
138144899,881,Issue,thanks for reminding me about this.  if anyone thinks it should be bumped down a bit Let's put it in _after_ `Getting Started`,,,,,,
141195205,881,Issue,I'll fix it up.,,,,,,
138117326,880,Issue,"In addition, Octokit should validate the format and throw if it's invalid.",,,,,,
138153175,880,Issue,"In addition, Octokit should validate the format and throw if it's invalid.Thinking out loud here, the scenario we had in #879 was that this was an invalid ref `mikeparker:prcreator-testing/branch-to-merge`. Refs can be namespaced, e.g: `shiftkey/my-cool-feature` - and as edge-case as it might be, `prcreator-testing/branch-to-merge` could also be a valid ref. Without hitting the API, we can't verify it.Perhaps a better error message here (it's pretty easy to test this against the real API) with a reference to the docs page for creating a PR to help diagnose?I don't want to make this area too clever, but I empathise with the lack of docs in general.",,,,,,
138252139,880,Issue,"I think at minimum emphasising the format of the base and head refs in the docs is good enough. In particular, the base ref doesn't include the username, but the head ref does (I havent checked what happens if you specify the username in the base ref too, maybe it works?)Am I right in saying that the GitHub API could return a more helpful error message here, if the branch doesn't exist, because its returning 3 confusing error messages simply because the caller is specifying an invalid branch? It says ""base sha"" and ""head sha"" empty or not specified, and ""No commits between [the specified branches]"". If this is the case then perhaps this is an issue for the main github API, but it would super awesome if Octokit could fix up the error message but perhaps ""nice to have"".",,,,,,
138114750,879,Issue,Finally figured this out. You must not insert the repository name into the Head string... I've opened a separate issue to clarify the docs to prevent anyone else struggling for hours with the same thing.,,,,,,
138150700,879,Issue,You must not insert the repository name into the Head string... I've opened a separate issue to clarify the docs to prevent anyone else struggling for hours with the same thing.Correct. The only time you need to specify more than the branch name for the `Head` is when you're creating a pull request against another repository (fork -> upstream is the most common scenario).,,,,,,
137636242,878,Issue,:thumbsup: I've been meaning to obsolete this endpoint,,,,,,
137789382,878,Issue,![selfie-1],,,,,,
136582428,877,Issue,Correct :cry:,,,,,,
168979614,877,Issue,Any plans to support this (for example Open Live Writer integration),,,,,,
136889811,876,Issue,"Hmm, the build failure is unrelated to this code change. Also, that test works on my machine. /cc . I'll merge this change and we can look into that test failure separately.Thanks !",,,,,,
136946627,876,Issue,Thanks!,,,,,,
138133748,875,Issue,If the related PR is merged can this issue be closed?,,,,,,
138153253,875,Issue,:shipit:,,,,,,
135861499,874,Issue,"Seems to be something odd ...If I run from VS, it seems to time out on the send of the new request (following the redirect).Yet, I run Fiddler, and it all works.  Disable Fiddler Traffic Capture and it times out.  Re-enable and it works.",,,,,,
135869731,874,Issue,Any thoughts on this?  Do you see the same problem?,,,,,,
136103817,874,Issue,"-Folder digging my way out from under a heap of psychic debt at the moment, so i'm not quite sure when I'll get to investigating this. But thanks for reporting it!",,,,,,
141455756,874,Issue,"I can confirm I'm seeing the same thing as -Folder, running the test in VS fails with a timeout. Start Fiddler, then run the test in VS and the test passes. I'll see if I can dig a bit deeper and figure out what is going on.",,,,,,
164314708,874,Issue,"Bumping this and opening it up for investigating, because I've seen it while testing #989",,,,,,
164382253,874,Issue,"Sorry - I didn't get much further in my investigation than noted above.I seem to remember that I felt it was something to do with a connection being held open and it causing blocking (maybe some reference not being released correctly) - but it is likely to be something quite low level if the problem ""disappears"" when Fiddler is involved.I have no scientific proof for my theory ;)I'll have a another go when I get a chance (maybe wireshark or something similar will be less obtrusive than Fiddler and give some indication if the connection is still open)",,,,,,
164403048,874,Issue,-Folder it's all good. I wish I had a better answer for you about what might be happening but I've got many Windmills‚Ñ¢ to Tilt At‚Ñ¢\* at the moment...\* [citation],,,,,,
164895697,874,Issue,"Ok, update on progress.  I'm using an old version of the code (not pulled for about 3 months) ... but can recreate the problem for the Octokit.Tests.Integration.RedirectTests.CanCreateIssueOnRedirectedRepository test.As originally, if I run the test from VS, it hangs/ times out.  Yes if I run with Fiddler, then I have no problem.So I've run with Wireshark ... I've included a summary below (good luck to anyone that can understand it).  From what I guess, it appears to have 2 TSL requests (which we'd expect) the handshakes, setup etc all seem fine.However with both, api.github.com are providing in FIN/ ACK - which is closing the connection.  Then some time later, we get the RST/ ACK from the client (for some reason I have my laptop set up as www.x.com) - this seems to be the timeout.I wonder if something is going wrong with the HTTPClient not correctly handling the FIN/ ACK.Equally, I could be heading down the wrong rabbit hole.Wireshark summary:No.     Time           Source                Destination           Protocol Length     Info  12084 20.266681      www.x.com             api.github.com        TCP                 51068 ‚Üí https [SYN] Seq=0 Win=8192 Len=0 MSS=1460 WS=256 SACK_PERM=1  12383 20.389320      api.github.com        www.x.com             TCP                 https ‚Üí 51068 [SYN, ACK] Seq=0 Ack=1 Win=28720 Len=0 MSS=1436 SACK_PERM=1 WS=1024  12384 20.389436      www.x.com             api.github.com        TCP                 51068 ‚Üí https [ACK] Seq=1 Ack=1 Win=66048 Len=0  12386 20.390796      www.x.com             api.github.com        TLSv1               Client Hello  12423 20.505202      api.github.com        www.x.com             TLSv1               Server Hello  12424 20.506190      api.github.com        www.x.com             TLSv1               Certificate  12425 20.506252      www.x.com             api.github.com        TCP                 51068 ‚Üí https [ACK] Seq=127 Ack=2873 Win=66048 Len=0  12426 20.506303      api.github.com        www.x.com             TLSv1               Server Key Exchange  12427 20.509106      www.x.com             api.github.com        TLSv1               Client Key Exchange, Change Cipher Spec, Encrypted Handshake Message  12433 20.620525      api.github.com        www.x.com             TLSv1               Change Cipher Spec, Encrypted Handshake Message  12434 20.622086      www.x.com             api.github.com        TLSv1               Application Data  12443 20.735373      api.github.com        www.x.com             TCP                 https ‚Üí 51068 [ACK] Seq=3085 Ack=826 Win=31744 Len=0 [ETHERNET FRAME CHECK SEQUENCE INCORRECT]  12444 20.735793      api.github.com        www.x.com             TLSv1               Application Data  12445 20.736676      www.x.com             api.github.com        TLSv1               Application Data  12477 20.883513      api.github.com        www.x.com             TCP                 https ‚Üí 51068 [ACK] Seq=3138 Ack=927 Win=31744 Len=0 [ETHERNET FRAME CHECK SEQUENCE INCORRECT]  12478 20.893246      api.github.com        www.x.com             TLSv1               Application Data  12479 20.896213      www.x.com             api.github.com        TCP                 51074 ‚Üí https [SYN] Seq=0 Win=8192 Len=0 MSS=1460 WS=256 SACK_PERM=1  12493 20.944785      www.x.com             api.github.com        TCP                 51068 ‚Üí https [ACK] Seq=927 Ack=4327 Win=66048 Len=0  12574 21.033572      api.github.com        www.x.com             TCP                 https ‚Üí 51074 [SYN, ACK] Seq=0 Ack=1 Win=28720 Len=0 MSS=1436 SACK_PERM=1 WS=1024  12575 21.033654      www.x.com             api.github.com        TCP                 51074 ‚Üí https [ACK] Seq=1 Ack=1 Win=66048 Len=0  12582 21.034242      www.x.com             api.github.com        TLSv1               Client Hello  12911 21.208703      api.github.com        www.x.com             TLSv1               Server Hello, Change Cipher Spec, Encrypted Handshake Message  12918 21.210139      www.x.com             api.github.com        TLSv1               Change Cipher Spec, Encrypted Handshake Message, Application Data  13262 21.361958      api.github.com        www.x.com             TCP                 https ‚Üí 51074 [ACK] Seq=146 Ack=735 Win=31744 Len=0 [ETHERNET FRAME CHECK SEQUENCE INCORRECT]  13263 21.361995      api.github.com        www.x.com             TLSv1               Application Data  13264 21.362275      www.x.com             api.github.com        TLSv1               Application Data  13626 21.524183      api.github.com        www.x.com             TCP                 https ‚Üí 51074 [ACK] Seq=199 Ack=836 Win=31744 Len=0 [ETHERNET FRAME CHECK SEQUENCE INCORRECT]  13781 21.640681      api.github.com        www.x.com             TLSv1               Application Data  13782 21.641520      api.github.com        www.x.com             TLSv1               Application Data  13783 21.641586      www.x.com             api.github.com        TCP                 51074 ‚Üí https [ACK] Seq=836 Ack=2993 Win=66048 Len=0  13784 21.641929      api.github.com        www.x.com             TLSv1               Application Data  13798 21.684186      www.x.com             api.github.com        TLSv1               Application Data  13804 21.796589      api.github.com        www.x.com             TCP                 https ‚Üí 51074 [ACK] Seq=3158 Ack=1273 Win=32768 Len=0 [ETHERNET FRAME CHECK SEQUENCE INCORRECT]  13813 21.899594      api.github.com        www.x.com             TLSv1               Application Data  13814 21.901602      api.github.com        www.x.com             TLSv1               Application Data  13815 21.901795      www.x.com             api.github.com        TCP                 51074 ‚Üí https [ACK] Seq=1273 Ack=4880 Win=66048 Len=0  13816 21.915542      www.x.com             api.github.com        TLSv1               Application Data  13838 22.029272      api.github.com        www.x.com             TCP                 https ‚Üí 51074 [ACK] Seq=4880 Ack=1822 Win=33792 Len=0 [ETHERNET FRAME CHECK SEQUENCE INCORRECT]  13839 22.029363      api.github.com        www.x.com             TLSv1               Application Data  13840 22.029761      www.x.com             api.github.com        TLSv1               Application Data  13865 22.179555      api.github.com        www.x.com             TCP                 https ‚Üí 51074 [ACK] Seq=4933 Ack=1955 Win=34816 Len=0 [ETHERNET FRAME CHECK SEQUENCE INCORRECT]  13866 22.182841      api.github.com        www.x.com             TLSv1               Application Data  13981 22.233155      www.x.com             api.github.com        TCP                 51074 ‚Üí https [ACK] Seq=1955 Ack=6122 Win=64768 Len=0  24010 30.907642      api.github.com        www.x.com             TLSv1               Encrypted Alert  24011 30.907692      api.github.com        www.x.com             TCP                 https ‚Üí 51068 [FIN, ACK] Seq=4364 Ack=927 Win=31744 Len=0  24012 30.907732      www.x.com             api.github.com        TCP                 51068 ‚Üí https [ACK] Seq=927 Ack=4365 Win=65792 Len=0  25679 32.192455      api.github.com        www.x.com             TLSv1               Encrypted Alert  25680 32.192795      api.github.com        www.x.com             TCP                 https ‚Üí 51074 [FIN, ACK] Seq=6159 Ack=1955 Win=34816 Len=0  25681 32.192840      www.x.com             api.github.com        TCP                 51074 ‚Üí https [ACK] Seq=1955 Ack=6160 Win=64768 Len=0  59738 121.915049     www.x.com             api.github.com        TCP                 51074 ‚Üí https [RST, ACK] Seq=1955 Ack=6160 Win=0 Len=0  59749 122.845391     www.x.com             api.github.com        TCP                 51068 ‚Üí https [RST, ACK] Seq=927 Ack=4365 Win=0 Len=0",,,,,,
169123063,874,Issue,"I'm seeing this too, including the odd behavior that it works when Fiddler is open. I thought I was going crazy. It's happening for me on calls to `GitHubClient.Issue.GetAllForRepository()` - anytime the repo has been redirected, the call hangs and then eventually times out.",,,,,,
247313107,874,Issue,This is a bit of a drive-by ... spotted this article about the use of HttpClient -> This feels as if it may be related to this problem.Not had a chance to run through the code (and not likely to in the near future) ... but figured I'd throw this in while passing.  Hope it helps.,,,,,,
247329879,874,Issue,"Thanks for the bump and reference, this has actually been fixed by changes in #1411 and the failing test has been unskipped, looks like I forgot to come back and close this :grinning:",,,,,,
247364890,874,Issue,Excellent news.  Great stuff,,,,,,
135396188,872,Issue,Also noted that this breaks other Integration tests:CreateHook in RespositoriesHooksFeatureBasically anything that will be using Helper.Credentials.Login,,,,,,
135738775,872,Issue,Arggggg ... keep hitting:Octokit.ForbiddenException : You have triggered an abuse detection mechanism and have been temporarily blocked from content creation. Please retry your request again later.Related to: May need to introduce a sleep into the integration tests somewhere to void hitting,,,,,,
135742114,872,Issue,Ok ... mental note to self - if using Personal Access Token for integration testing - make sure if has the relevant Scopes (was missing delete_repo),,,,,,
135751820,872,Issue,"Following integration tests seems to fail if using OAuth, but not username/ password:- PullRequestsClientTests.CanSortPullRequestsFollowing integration tests fail regardless of credentials:- RepositoryDeployKeysClientTests.CanRetrieveAllDeployKeys - Validation Failed- ObservableRespositoryDeployKeysClientTests.CanRetrieveAllDeployKeys - Observable version of the above- Octokit.Tests.Integration.RedirectTests.CanCreateIssueOnRedirectedRepository - A task was cancelled (think this is timing out)",,,,,,
135801863,872,Issue,"Ok, the 2 x DeployKeys fails where due to test fragility - I've logged those as a separate issues #873",,,,,,
135817882,872,Issue,"Separated out the CanCreateIssueOnRedirectedRepository as a separate issue #874I think this is actually a bug in the core redirect code, rather than the Integration tests",,,,,,
136281249,872,Issue,"However if you are testing with an auth token, then the current credentials will not have the login (just the auth token).That's a great point. Nice spot! Ok ... mental note to self - if using Personal Access Token for integration testing - make sure if has the relevant Scopes (was missing delete_repo)There's a way to [check what scopes you have defined], but I've not spent much time with this. We could investigate scripting this out to verify it.",,,,,,
321360820,872,Issue,"Just ran into this sort of in production. Was trying to access enterprise repository to auto log a issue. Kept trying to create an issue using my auth token  and I was getting error 404. After much trial and error found out I had to use the new `Credentials(string, string)` overload when creating a client.",,,,,,
321366743,872,Issue,or grant the correct scope to your auth token?,,,,,,
321390594,872,Issue,We created a test repo for testing and created a auth token with every possible option checked. Testing yes i really used `SomeMadeUpName`  :) I laughed that it worked.,,,,,,
321433008,872,Issue,"I can reproduce what you are seeing where the GitHub API does honour the request when the token is provided as the password, no matter what username is specified.  I guess this is just how it behaves so there isn't anything we should really worry about in that case...However I CAN'T reproduce your first case (using the token as it is normally intended to be used, via the OAUTH type constructor and authenticator in octokit).This is a personal access token right?  And in addition to the token scopes, you have ensured the given user (who owns the token) has the correct permissions on the repository in question?I can create a client with a `.Credentials = New Credentials(""MyTokenHere"")` and then succesfully create issues etc.Are you able to post a more complete code sample for the first issue?",,,,,,
135163440,871,Issue,Flawless Victory![selfie-1],,,,,,
134400607,869,Issue,"Looks like `CommitsClient.Get` should return the `files` element from the server, however the typed `Commit` response doesn't have the property.",,,,,,
134741730,869,Issue,do you have any suggestion on how can I solve this problem?,,,,,,
134775712,869,Issue,I think this new property needs to be added to `Commit` -  see  for a similar scenario,,,,,,
134969707,869,Issue,"thanks for the info, in the end I seen that comparing commit I can obtain the informations I need. May be nice to have this info directly in the commit, just to avoid another server call, but at the moment using compare is fine for me.",,,,,,
135237800,869,Issue,I'll leave this open as an opportunity for someone to add it in.,,,,,,
141026086,869,Issue,"I can take this one, ease my way back into Octokit again :laughing:",,,,,,
141416814,869,Issue,"OK, so it seems that the `CommitsClient.Get` function isn't returning any `Files` property in the response and according to the [API docs] it isn't expected to be returned.So, perhaps you're looking for the `RepositoryCommitsClient.Get` as this returns all files changed in a commit of the specified SHA, and this is also specified in the [API Docs].",,,,,,
178901460,869,Issue,This works for me on the latest Octokit release (v0.18):Closing this out as I'm not sure what else we need to do here.,,,,,,
219218916,869,Issue,"I am trying to use the client.Repository.Commit.Get method, to get every file that a commit has changed. But if the commits are too many (let's say more that 1000), this method of obtaining the info is very slow. Any thoughts?",,,,,,
219219573,869,Issue,can you please open a new issue with more information and/or a code sample of what you're trying to achieve? Thanks!,,,,,,
134071082,868,Issue,"This idea intrigues me, but I'd like to settle on a vision for the package before starting down the path of writing code:- what problem is this trying to solve?- what belongs here rather than in the core packages? are there common things that consumers are implementing?- is there another way to satisfy this problem, without introducing a new package?  - documented examples  - interactive samples ala LINQPad #505",,,,,,
134072802,868,Issue,"what problem is this trying to solve? are there common things that consumers are implementing?This would allow users to have optimized / official? code to use that doesn't necessarily match the `api`  I can not answer for what others are implementing (but that is the beauty of `Issues` that we can find out :smile: ),but for myself I am working on a whole set of extensions that connects the different calls into a more OO structure as opposed to matching the `api`, plus some more ideas that are currently only fluff in my head :cloud: p.s. What gave me the final push to open this was #866   what belongs here rather than in the core packages?Initially anything that isn't a 1-1 (or however exact you decide) to the `api` goes into the extensions is there another way to satisfy this problem, without introducing a new package? - documented examples - interactive samples ala LINQPad #505In some instances these options maybe a better solution, but without seeing what others might have to add, I have trouble giving an example",,,,,,
134084684,868,Issue,#NAME?,,,,,,
139036324,868,Issue,"After #883 and #885 this may not be as needed, but it could still be nice to have properties with the actual objects and not just an url location.",,,,,,
207113042,868,Issue,"So #1243 is relevant to this. I would say we can close this out as: -Zuber all good, happy to leave this open and see what sort of interest it garners...seems to have resulted in crickets",,,,,,
207150846,868,Issue,So #1243 is relevant to this.At this point I think it's easier for us to enhance the actual response objects - especially when it's something additive and we know it'll be supported. seems to have resulted in crickets:cry:,,,,,,
207152621,868,Issue,So ill close this and we can just enhance objects as requested. Enhancement of response objects is actually the main thing I was trying to get from this.,,,,,,
134037028,867,Issue,"I'm reading the list of the Pull Request list of a repository looking for all the merge, but I noticed the property **Merged** is always false, I think this is a serialization issue - there's no `merged` field sent by the server, so it should be marked as obsolete in favour of using `MergedAt`. See an earlier discussion on this (at least I think it's the right thing I was ranting about)  Another thing: How can I find the final commit generated at the end of the merge?The `MergeCommitSha` property should be set when the pull request has been merged, but a quick scan of some old PRs indicates that it doesn't match the expected Git commit.  I'm looking at  and I see a comment about  being the merge commit.However when I retrieve it from the API I get a different value:  appears to be a server-side commit (possibly the merge after it was last pushed).There's another issue which I'm poking into about how a different value appears when this PR is listed in `/pulls?state=closed` which I still need to dig into, but let me know if I'm missing something obvious...",,,,,,
147105823,867,Issue,"See ""The merge_commit_sha attribute holds the SHA of the test merge commit; however, this attribute is deprecated and is scheduled for removal in the next version of the API. The Boolean mergeable attribute will remain to indicate whether the pull request can be automatically merged.""  I think we need to set Merged to MergedAt.HasValue? or any other ideas?",,,,,,
147113590,867,Issue,I commented on the PR.,,,,,,
178893210,867,Issue,"The `MergedAt` change is now available in v0.18. I think we're good here.I've got a side project which depends on whether a pull request is mergeable (rather than past-tense merged), so once I've updated that I'll come back to this to see if there's any extra work to do here.",,,,,,
134031883,866,Issue,"I would like to find all the issues that have at least one of these labels, but from the results I think that are selected only the issues have all these labels.Currently this is a limitation of how the upstream API works, so we're stuck at ""find issues tagged with all labels"" or ""request per label"".I'm not sure how clever we should be on the client about this to hide away this limit, but I'm open to suggestions.",,,,,,
134036838,866,Issue,"I supposed was an API problem. I don't think is very necessary to implement this inside the library, the mail point is that in this scenario I have do multiple calls to the server, implement this at API level could be a way to optimize the calls.",,,,,,
134037662,866,Issue,"fair point. However it'd change the behaviour of the API, which existing consumers might be reliant upon.",,,,,,
129955447,865,Issue,"Nevermind, I missed in the API documentation that it is not returned.",,,,,,
129412284,864,Issue,"This is really great! Thanks for picking this up!If you feel like scoring some extra credit it'd be great to add an integration test so we can use the real API. If you're not confident, that's okay - just let me know and I'll add it to the backlog (and can add some other pointers).",,,,,,
129424050,864,Issue,"I had a quick look at the tests, but didn't see an obvious way to add a good test.The closest example to crib seems to be `SearchForfunctionInCode`, but this just makes a request and asserts the response is not empty.  I didn't want to add another one as I'm not sure it asserts anything useful?  Perhaps I'm misunderstanding the tests?",,,,,,
129459282,864,Issue,"I didn't want to add another one as I'm not sure it asserts anything useful?To be honest, that's basically what I'd love to see here. Something simple to catch regressions which reflects the usage of this API.   Perhaps I'm misunderstanding the tests?The integration tests are there to catch anything unexpected changing between the API we expect (i.e. the library) and the API we have (i.e. the server). It's something I always run as part of doing each release, so if we can keep it in sync I'll be a happy maintainer.",,,,,,
129463132,864,Issue,How's that for size?,,,,,,
139038549,864,Issue,![crossing-thumbs-up],,,,,,
129523124,863,Issue,"I noticed in the API that there is a download link for each asset. However, while I could use that if necessary I'd like to be able to read the raw file so that I can display the information on the project website.On `IGitHubClient` there's a `Connection` property. You can use that for making arbitrary requests. If the content is HTML, you can call `GetHtml`. If the content is binary, you might want to use `System.Net.HttpClient` directly as Octokit isn't designed for requesting arbitrary binary files.",,,,,,
134967502,863,Issue,"I used the GetHtml method to pull the HTMl file from GitHub like so.I then created a separate function in order to pull the string out of the Task.However, when I loaded the string on to the webpage all that displayed was `Octokit.Internal.ApiResponse`1[System.String];` What am I missing? Am I forgetting to do something in order to get that HTML string?",,,,,,
135171246,863,Issue,The default implementation of `ToString` for most objects is to return the type name. So what you're seeing is the type name of the response object which is [`ApiResponse`].That type has a `Body` property. You need to look at that.So in `DownloadReleaseNotes` change that last line with the `return` statement to return the body:,,,,,,
135188444,863,Issue,It's returning a json string for the file. I thought getHTML would return the HTML of the actual file uploaded?,,,,,,
136156162,863,Issue,did I misunderstand the use of the getHTML method?,,,,,,
136222861,863,Issue,"`GetHtml` is just a shortcut to set the `Accepts` headers when making a request. The server is free to ignore this or just give us something else, and that's what's happening here.The problem is with this section: points to the JSON payload for the file - here's an example from the docs If you want the contents of this file, you'll need to use the `asset.BrowserDownloadUrl` instead.",,,,,,
136225657,863,Issue,so just to be clear `asset.BrowserDownloadUrl` will get me the URL of the file itself so that i can download it and just read the file directly from the disk?,,,,,,
136226050,863,Issue,correct,,,,,,
139038894,862,Issue,you ok with this?,,,,,,
139099512,862,Issue,![],,,,,,
142011315,861,Issue,I guess this could be security reason so that you don't extract a malware.,,,,,,
142144834,861,Issue,I'm ok with either making it public or maybe adding a method to read it as a binary stream/array.,,,,,,
142152013,861,Issue,"Thanks, you guys rocks.",,,,,,
127844793,860,Issue,Adding this to the VS2015 milestone as it requires the end user to have access to VS2015 to build it...,,,,,,
127895681,860,Issue,it requires the end user to have access to VS2015 to build it...It does? I tried to avoid using any new C# features. What did I do wrong?,,,,,,
127977244,860,Issue,"apologies, I mixed this up with another PR - I thought I saw some `nameof` usage in here.",,,,,,
128051432,860,Issue,"nope. You might have seen my github/VisualStudio PR. Note that there's no way this would be green if I used C# 6 features, right?",,,,,,
128054051,860,Issue,"Also, hopefully, Visual Studio would complain since `LangVersion` is set to `5` :wink:",,,,,,
128171591,860,Issue,"Note that there's no way this would be green if I used C# 6 features, right?CI is running against MSBuild v14, so compiler support for these new features is available. But yes, as  pointed out we've locked the projects to C# 5...",,,,,,
128284293,860,Issue,Have you thought about when you'd like to cross over to the greener C# 6 side?,,,,,,
128331178,860,Issue,Have you thought about when you'd like to cross over to the greener C# 6 side?Not until after the VS2015 migration is done at the earliest...,,,,,,
139038970,860,Issue,can this be merged?,,,,,,
139100361,860,Issue,![],,,,,,
127799810,859,Issue,"did a demo of this for an ASP.NET app I've not looked at doing this for a client-side flow, but the current advice is described [here].",,,,,,
128042765,859,Issue,Thanks - looks like a manual setup then and not something Octokit handles. Is that a correct assessment?,,,,,,
128544456,859,Issue,"I think  misunderstood the question. If I understand correctly, you want to **create** a personal access token with a specific scope using Octokit.That is possible using the [authorizations API].In Octokit, you'd do something like this:That creates an authorization with the scope that... Grants read/write access to code, commit statuses, collaborators, and deployment statuses for public repositories and organizations. Also required for starring public repositories.The list of scopes is located here: I don't see one that limits scope to just viewing pull requests.",,,,,,
128545829,859,Issue,"Ah, I misunderstood too! So the code I showed creates an Application Authorization. It's an OAuth token that authorizes an application to perform actions. You can see these listed here: If you require a Personal Access Token (listed here ) then you'll need to go through the [Web Flow] as  mentioned.Since that flow is an OAuth token exchange workflow, there's really not a good way for Octokit to just handle it for you.We could probably implement some libraries for WPF apps to initiate the web flow at some point. I think that'd be a nice to have and would at least make this much simpler for people to implement.",,,,,,
128550947,859,Issue,"honestly, I'm looking to do this with client-side automation so these would be in a command-line or powershell environment. I'd have access to interactive sessions however, so I suppose WPF would be acceptable. I think the biggest hurdle will be 2fa.Right now I'm looking at hitting , catching a failure, look at the header for 2fa failure codes, and then asking for the 2fa bit. In theory, with that - I should be able to acquire a token, store it, and reuse it as needed.Sounds about right?",,,,,,
128763919,859,Issue,"honestly, I'm looking to do this with client-side automation so these would be in a command-line or powershell environment.Oh, in that case why would you need to create an access token? After all, you have a chicken and egg problem here. Your script, in order to create a token, would need some credentials to have the authorization to create the token.So instead of giving your script a username and password, manually create an authorization token once, and give that to your script.Perhaps I'm missing something. Right now I'm looking at hitting , catching a failure, look at the header for 2fa failure codes, and then asking for the 2fa bit. In theory, with that - I should be able to acquire a token, store it, and reuse it as needed.Yep, that's about right.In `Octokit.Reactive` we have a `GetOrCreateApplicationAuthentication` method that handles part of this flow for you. You can pass in a `Func` that gets called if the initial request fails because of a 2fa error.We don't have a `Task` based version yet, but I'd love to add one at some point. That code was pretty much pulled from GitHub for Windows which is all Rx based.",,,,,,
127158474,858,Issue,"You should be fine using the regular `Octokit` package as well, the `Octokit.Reactive` package just wraps the former with `IObservable`, which will return the _last_ result. See [Rx and Await: Some Notes].If you really want to use the reactive API, you should correctly subscribe to the observable, using the `Subscribe` method. Its callback argument will be called for each `GitHubCommit` in the repository.",,,,,,
127164105,858,Issue,Thanks for this fast and good answer!Looks like I'm a complete idiot - I have no idea how I could miss that the `GetAll` method is also available within the `Octokit` project and not only in `Octokit.Reactive`.... (I was so sure it isn't...)Didn't know that part about Rx and Await  - so at least I learned something while making a fool of myself.Anyway thanks again - I'll close this.,,,,,,
126891620,857,Issue,Looks good to me!![thumbs-up-steve],,,,,,
126805703,856,Issue,"Rather than accepting a null value, I wonder if we should have a special value. For example, we could have a static `ApiConnection.EmptyBody` property that's just an empty `object` and use that for cases when you're supposed to pass in an empty body. I try and avoid overloading `null` like this because it's hard to determine if you passed `null` as a mistake or intentionally.Also, what happens if you just pass in `new object()` right now as the `data` argument. Does that do the right thing today?",,,,,,
126867178,856,Issue,tried your suggestion of an Empty static instead of `null`; moved it to it's own class to avoid coupling `Connection` to depend on `ApiConnection` while `ApiConnection` depends on `IConnection`.Take a look. All tests pass. Ran `.\build FixProjects` to add `ResponseBody.cs` to all projects. And it fixed my use case. :+1:,,,,,,
126891845,856,Issue,thanks for finding this and fixing it!![thumbsupfamily],,,,,,
126636633,855,Issue,"-Folder I sent you a PR at , I still haven't addressed the threading issue, though.",,,,,,
126689713,855,Issue,Great stuff.  I'll pull in over the weekend,,,,,,
126690242,855,Issue,"Can anyone recommend a good Api call to use for the integration test?I'm current using the Rate Limit call - but this doesn't include links, oauth scope, accepted oauth scope, & etag,in the ApiInfo.  I'd like an Api call which will populate all of these for testing",,,,,,
126966532,855,Issue,"-Folder I'd suggest a couple of calls:- `ETag` can be found by creating a new repository - that should be easy enough- `Links` are a bit trickier (because most of our existing APIs are going to follow them as part of pagination). You might be able to check for the last value after the pagination is done - so something like ""list your repos"" might work for you.- `X-OAuth-Scopes` and `X-Accepted-OAuth-Scopes` require the caller to be configured with token authentication - that depends on the `OCTOKIT_OAUTHTOKEN` environment variable being set, but the caller might not have this setup.",,,,,,
127047525,855,Issue,Added further integration tests now - seems to cover all bases if a little repetitive.  I've added a new test attribute for Personal Access Token - the OAuth/ AcceptedOAuth test uses that attribute.,,,,,,
129642909,855,Issue,"Hi guys, any further feedback on this one?I'm in danger of losing my dev environment in the next few days so would like to get this PR boxed off.Thanks",,,,,,
131620757,855,Issue,Could someone have a look over my cloning logic.  Seems to work - but I could do with a fresh set of eyes on it.Note that I'm having to do new String(originalString.ToCharArray()) as nothing else (string.Copy for example) seems to work with portable version.,,,,,,
134727162,855,Issue,Looks good. The title suggests this is a WIP. Is that still the case or is this good to merge?,,,,,,
134893048,855,Issue,"Sorry Phil, I'd not been chasing this.  I'd lost my dev environment & between jobs (must find new job before wife makes me paint more fences).Dev environment back up and running.  Will make the two minor tweaks you mention above then should be good to merge.  Probably today or tomorrow",,,,,,
135171688,855,Issue,-Folder No problem! Thanks for continuing to work on this and good luck finding a new job!,,,,,,
135788782,855,Issue,"Pops head above the parapet ... ""Looks good to go""(Prepares to duck back down quickly)",,,,,,
135844217,855,Issue,Thanks!![selfie-0],,,,,,
135848011,855,Issue,"Ah ... excellent.  A second thumbs up to add to the collection.I've added a whole section on my bio page for them ;) (then scroll down).  One day I'll setup the anchors, make the site size correctly, finish it, etc, etc, blah, blah",,,,,,
126543259,854,Issue,"There's definitely something unclear about this API - you can see a test I've written to download an asset here:In this case, I've done the download slightly different:I think something weird is happening with the deserialization if you don't specify the appropriate `Accepts` header (probably defaulting to JSON, which would explain something `null`-ing out.",,,,,,
126952288,854,Issue,"Unsupported ""application/octet-stream""{Octokit.ApiException: Unsupported 'Accept' header: [""application/octet-stream""]. Must accept 'application/json'.   at Octokit.Connection.HandleErrors(IResponse response) in octokit.net\Octokit\Http\Connection.cs:line 550}",,,,,,
126967791,854,Issue,well that's not great!Is this a repository I can test out (even privately?) - perhaps there's some edge case here I haven't seen before while working on this area...,,,,,,
127023103,854,Issue,I just made a public repo for what I am trying to do. Basically an auto updater that downloads a zip file and then extracts it. In the repo I used the Nuget package but I've also used the project source with the same result.,,,,,,
127073863,854,Issue,"thanks, I'll check it out",,,,,,
128010237,854,Issue,"After some more trouble shooting this appears to be an issue with the API/request. The error above is from the API not from this codebase. I verified this using postman. It would appear then that maybe the BrowserDownloadUrl is what needs to be used, however, whenever I try to download the file using postman I get a 404 (because it is a private repo) and token authentication does not appear to work for the browser download URL.![cap1]![cap2]",,,,,,
128172924,854,Issue,"I'm pretty sure that `/:user/:repo/releases/:id` needs to be called with `Accept: application/json` as this is returning the payload of release assets: It would appear then that maybe the BrowserDownloadUrl is what needs to be usedCorrect however, whenever I try to download the file using postman I get a 404 (because it is a private repo) and token authentication does not appear to work for the browser download URL.Okay, this definitely sounds interesting. Do you see the `Authorization` header being set when you use the `BrowserDownloadUrl` value?",,,,,,
128407332,854,Issue,"This code is working for me; I was targeting the wrong API Endpoint. However, the actual writing of the zip file to disk does not seem to always work. The release for AutoUpdater just has a small text file in it and this code works fine, however, when I try other repos with larger Release Zips then the Zip file written is corrupt/incomplete.",,,,,,
148169079,854,Issue,"I figure out the reason for this It is because  `content-type` is `application/octet-stream` on the response and the code does not handle that.  It handles `image`,`zip`,`x-gzip`. Because it is binary type and we read as string in the `else` block that is what is causing the corruption. And that is why it does not fail for text files.I tried including that and it works. I am able to download the release and the file isn't corrupted.  let me know if you want me to do PR on this?",,,,,,
148346803,854,Issue,let me know if you want me to do PR on this?That'd be great!,,,,,,
148478472,854,Issue,:+1:,,,,,,
125336733,853,Issue,"The code works when I use `var user = github.User.Get(""half-ogre"").Result;`, but this breaks the await-async pattern.",,,,,,
126967866,853,Issue,interesting exception - can you tell me whether you're running this from a console application or within an ASP.NET app?,,,,,,
126969324,853,Issue,"I was running it from Visual Studio extension in VS 2015 (RTM).To get my request to work, I started a new process from within the extension, which was a console app. It worked there.Would using an appdomain help in this case?",,,,,,
126969973,853,Issue,Interesting. have you seen this before? any tips?,,,,,,
128548446,853,Issue,Try calling `ConfigureAwait(false)` like this:,,,,,,
128641211,853,Issue,"I've created a unit test that executes the same Octokit code as the Visual Studio extension.All of the following work when executed a unit test context, but neither works in the Visual Studio extension.- `var user = await github.User.Get(""half-ogre"");`,- `var user = github.User.Get(""half-ogre"").Result;`.- `var user = await github.User.Get(""half-ogre"").ConfigureAwait(false);` I will port this to VS2013 and test it there",,,,,,
128647913,853,Issue,Visual Studio 2013 is also frozen. For the last few days I can't reproduce the exception - code just hangs.,,,,,,
128756250,853,Issue,"Hmm, it's unclear to me why this would not work in VS2013 but work in your unit test context. Have you run a Fiddler trace to make sure the request is going out?",,,,,,
129426545,853,Issue,"I just ran your sample code from the onclick handler of a ToolWindow:It worked fine, showing a messagebox with ""Invoked '75'"".Your stacktrace suggests the calling thread is aborted just as the request is being built, which means it's not a timeout on the http side, but the environment aborting the thread. It might be that the way you call your CreateGist method is causing the thread to abort early, for some reason. Are you invoking it from the main thread, or from another thread?",,,,,,
131909457,853,Issue,Thank you all for help! fiddler has shown that the request has completed and GitHub returned a response.This helped me detect a [deadlock I created by misunderstanding of the async pattern]. The exception I posted at the beginning of the thread didn't seem to come to play and just confused me.,,,,,,
139129137,852,Issue,This PR escalated quickly. Going to close this out and just focus on getting it all running on VS2015.,,,,,,
531600197,851,Issue,is dead.Please open a new issue if this is something you still care about.,,,,,,
166762470,850,Issue,We did this in #956,,,,,,
147387309,849,Issue,DocPlagiarizer has a bug on mono also which make's hard to compile on non-windows platform.  The repo hasn't been updated since Feb 2014 . Do we fork this and fix it or do you want to move away form this?,,,,,,
147391652,849,Issue,"Yeah, I'm not surprised it's largely unchanged from then. Given it's value is in extracting docs from interfaces, we could switch it off to help support the x-plat experience.Given it was built ontop of earlier builds of Roslyn, I'd like to see if we can port it over to the now-RTM analyzers that are in the box. I've not had a look at how this would work outside of VS2015, so any knowledge or war stories would be great to help us decide the transition.",,,,,,
166762825,849,Issue,"We're tracking #971 to bring this functionality back, so I'm closing this out as #995 removed this.",,,,,,
124722987,848,Issue,Further thoughts on point 1;If I re-purpose the existing RateLimit model then any consumer code doesn't need to handle the (logically) same data twice,,,,,,
124725792,848,Issue,"If I re-purpose the existing RateLimit model then any consumer code doesn't need to handle the (logically) same data twiceYeah, I don't think we're likely to change `RateLimit` in any way that would change them in one place, but not the other. As far as I can tell, they're the same type in the back-end. So I think re-using `RateLimit` and not introducing a new type is the way to go. :smile:Thanks for the contribution!",,,,,,
125043571,848,Issue,"AppVeyor isn't building, is this because the original ResourceRateLimit.cs comment is still open, or is it something wrong with the code?Originally I though it was the code - that I needed to put some #if !NETFX_CORE blocks round attributes.  But I've made changes to that an it doesn't seem to make any change.",,,,,,
125044461,848,Issue,-Folder it looks like there's a merge conflict with this branch - AppVeyor should go green after that's been addressed.,,,,,,
125048124,848,Issue,"Ok, green now.  Now I leave it alone and get some sleep.Lessons learnt this evening:1. Do a fetch & merge from upstream BEFORE pushing2. How to use Meld3. That I should double check everything is as I expect in the commit4. Run the automated tests (even after I make the smallest possible change that in no possible way could break the solution)5. I should have gone to bed about 2 hours ago.  I'm too old to be up past midnight anymoreOn a more serious note;- Appreciate the feedback & assistance given - please keep it coming.  - I still need to run the integration tests (for some reason I cant make run yet - keep getting bad credentials)",,,,,,
125048176,848,Issue,"-Folder given this is a new feature (and the test is written) I'm happy to take it in as-is. Don't stress too much about running the integration tests, it's certainly the toughest part of contributing (and something I need to revisit).",,,,,,
125341327,848,Issue,Thanks for your contribution!![selfie-0],,,,,,
127036018,848,Issue,"Is it wrong that after 20+ years in IT, I'm seeing a 6 second vine from Phil Hacck as my most glowing accreditation?Surely there must be a ""thumbs up"" accreditation section somewhere in Linkedin .... off to go look",,,,,,
127318784,848,Issue,"Surely there must be a ""thumbs up"" accreditation section somewhere in Linkedin .... off to go lookLOL! It's a GitHub special accreditation. Much better than LinkedIn.",,,,,,
166762653,847,Issue,"I have no idea what this task was for, but we need to port the DocPlagiarizer code over to a Roslyn analyzer or something. I'll open that in #849",,,,,,
123896157,846,Issue,"This is working on my VM with VS2015But I still see CI using an earlier version of MSBuild and running Code Analysis for the PCL project (ignoring the flag I set). I've chosen ""Visual Studio 2015"" for the build server - perhaps that needs to propagate.",,,,,,
123863531,845,Issue,![],,,,,,
122710125,843,Issue,"The platform restrictions were actually related to the Mono\* support - we weren't allowed to use those packages on non-Windows OSes. The Mono project for Octokit was/is still targeting .NET 4.5.We drew the line there as our ""baseline"" for a couple of reasons:- The Task Parallel Library implementation received a lot of love in .NET 4.5, and is noticeably faster. We use tasks _everywhere_ in Octokit, so we were happy as pigs in mud.- Portable Class Library support (even though it wasn't there at the time) had a sweet spot `Profile259` which correlated to .NET 4.5 across all the platforms.- Dropping down to a PCL profile which included .NET 4.0 had a very limited subset of APIs - we'd have to re-implement even more.I'm not really interested in supporting Yet Another Platform‚Ñ¢ because this adds pain for new contributors as well as myself - I know of some people who have forked and are building Octokit from source, so perhaps that's an option here? And .NET 4.5 support is ending at the end of 2015, so I'll be taking some time out to review and simplify the platforms I target.Let me know if you have any other questions on this.",,,,,,
122871179,843,Issue,"4.5 support ending? Good to know, that'll make things much easier for me.Thanks for taking the time to explain in more detail, as well. :)",,,,,,
123013159,843,Issue,"4.5 support ending? It's outlined here:  Microsoft recommends that customers and developers using .NET Framework 4, 4.5, or 4.5.1 complete the in-place update to .NET Framework 4.5.2 by January 12, 2016 to continue receiving technical support and security updates.",,,,,,
122649849,842,Issue,What's up with the CI build?,,,,,,
122649934,842,Issue,What's up with the CI build?It's been bumped to MSBuild 14.0 which is triggering a neat PCL/FxCop issue. Reported [here],,,,,,
122650023,842,Issue,Something like this (just the other way)?,,,,,,
122650073,842,Issue,"nah, I wanted to stick with v12 for the moment.I fought a bunch with the toolchain today, couldn't find a way out. It's a minor thing (I don't _need_ to run FxCop on the PCL build as the code is shared) but an annoyance nonetheless.",,,,,,
122651050,842,Issue,"I'm not really sure if this builds, because I get all sorts of errors in VS 2015. I had hoped the CI build would tell me, but no luck there either :stuck_out_tongue:",,,,,,
122711129,842,Issue,"I had hoped the CI build would tell me, but no luck there eitheri got you bb. Once  has had a chance to chime in I'll test things on VS2015 proper.",,,,,,
123036618,842,Issue,:+1: on this. Is our CI having an issue?,,,,,,
123040012,842,Issue,"yeah, it's a VS2015 issue (Code Analysis yay) which we got accidentally upgraded to a few days ago [details here].I'll address it in #835 which is the base branch for this PR.",,,,,,
122603212,840,Issue,"Oops, created this twice somehow",,,,,,
146989415,839,Issue,"Added Merged Qualifier.Received Code Analysis Warning ""Excessive Cyclomatic Complexity"". Then added   [System.Diagnostics.CodeAnalysis.SuppressMessage(""Microsoft.Maintainability"", ""CA1502:AvoidExcessiveComplexity"")] to ignore that warning.",,,,,,
122599771,838,Issue,"Appveyor's not very happy with me right now, but this is live:",,,,,,
121687185,837,Issue,"to be honest, WebForms isn't something I've used for many years - so it's not something I've had in mind. If you're using .NET 4.5 it should all just work, and [here's] a good intro for testing that it all works. The rest of the docs are herebut if there's specific things you're interested in that aren't documented, let me know and I can add those to my backlog...",,,,,,
142473771,837,Issue,what exactly are you looking for? Ultimately Octokit is mostly a bunch of async API calls - you could bind the results to a GridView or whatever you want.,,,,,,
128548773,836,Issue,Interesting. Could you post a Fiddler trace?,,,,,,
128720159,836,Issue,Here's the request as captured by Fiddler:And the response:,,,,,,
128753344,836,Issue,"And just to clarify, if you make this request to a different repository that does have commits, it returns just fine with no error?",,,,,,
128775054,836,Issue,"Ok, I have a repro myself and I'm working on a fix.",,,,,,
122604188,835,Issue,-Zuber writing up a walkthrough of the search options available - [how does this read?],,,,,,
122622279,835,Issue,"It reads quite nicely. The examples are very nice to have, a bonus would be a simple run down of the properties available even if they don't have examples.  (I would be willing to try and do a PR once this in)",,,,,,
122644851,835,Issue,"What about creating a specialized object for holding the repos? This way you could use a custom collection initializer, forcing the user to specify both owner and repo name.",,,,,,
122645894,835,Issue,good point - if I'm breaking the API here I'll see if I can do better than just a collection,,,,,,
122646144,835,Issue,"Preaching to the choir, but I fully agree with",,,,,,
122649766,835,Issue,Sent a PR at #842,,,,,,
124728608,835,Issue,This is looking pretty good. Anything needing specific review?,,,,,,
124742937,835,Issue,"not really, I should write an example for `SearchCodeRequest.cs` because that's impacted by this change. But I think everything in the code is :sparkles:. I'll add a note.",,,,,,
124743422,835,Issue,should I merge this?,,,,,,
124743612,835,Issue,"sure, I just like putting docs in front of me - because otherwise they'll never get written :trolleybus:",,,,,,
124743764,835,Issue,:sparkles: all around.,,,,,,
120561934,834,Issue,An even better example:,,,,,,
120654469,834,Issue,":thumbs-up: to this.  I need it for a project I am building, and was planning to either call the api myself or loop the requests",,,,,,
119900180,833,Issue,"That seems reasonable. I'm not sure if it's available in the PCL target we've chosen, but we can find that out easily enough.Thoughts ?",,,,,,
120554256,833,Issue,:+1: to the idea.,,,,,,
128549721,833,Issue,"Can an OauthTokenRequest constructor be added that takes all parameters as SecureStrings (System.Security.SecureString) instead of just normal strings?Hmm, as I think about it more, help me understand why you'd want this? After all, the information in the token request is going to be sent as part of the HTTP request. So if you're trying to hide it from the caller, they can just use Fiddler to see the information.",,,,,,
144134954,833,Issue,May I? Should I?,,,,,,
144135806,833,Issue,I feel like this provides a false sense of security. Convince me otherwise. :smile:,,,,,,
144137818,833,Issue,"I agree, I just wanted something to work on while I travel :disappointed:",,,,,,
144149920,833,Issue,"Also, `SecureString` is being removed/internalized with .NET Core.See  and",,,,,,
142473838,832,Issue,I'm using Octokit in a DNX app on .NET Framework 4.5 just fine. Are you trying to use it on .NET Core (dnxcore)?,,,,,,
142491615,832,Issue,"Are you trying to use it on .NET Core (dnxcore)?I haven't tried this yet, but we'd like to make sure it works on this platform. Any tips?",,,,,,
142499512,832,Issue,"I've just tried to get my little vNext app running on dnxcore50 (on OSX) and there's a couple of kinks with the HttpClient support on *nix systems at the moment [dotnet/corefx#2155], now I haven't tried it on a Windows machine so can't say if it'll work or not there, but it seems that it should...might have some time next week to test it out if no one else beats me to it.Running on dnx451 works though.",,,,,,
142499672,832,Issue,"Yeah I'm using `dnx451` only right now. For `dnxcore50` it's a matter of compiling against that target framework and making all the tests run. We're (Microsoft) working on that guidance right now, but there are a few bits and pieces that aren't quite in place to make it a super smooth story across the board.",,,,,,
149047693,832,Issue,With the latest release of beta8 I was able to get the Octokit working on the `dnxcore50`.I had to make changes to the nuspec to include the `System.Net.Http` instead of `Microsoft.Net.Http` for coreclr because coreclr does not have `Microsoft.Net.Http`. Here are the changes .And here is sample of Octokit that is working on the coreclr.The sample also has the beta nuget package which could be used directly to test it.,,,,,,
149156103,832,Issue,:sparkles::sparkles::sparkles::sparkles::sparkles: thanks for looking into this and getting it working.,,,,,,
149178010,832,Issue,When are planning to support dnxcore? Could we have a beta branch?,,,,,,
149185329,832,Issue,there's some VS2015 changes I need to handle (obsoleting Win8.0 support in particular) - I'd like to tackle this after I've got that in place and addressed some of the outstanding build/deployment issues.,,,,,,
149191200,832,Issue,Thanks! Is there a VS2015 branch that I could clone?,,,,,,
153497121,832,Issue,"the VS2015 support is here  going to let it sit for a couple of days before closing. I might have a chance to play around with DNX support in the meantime, but feel free to target that branch if you've got stuff to share!",,,,,,
153509634,832,Issue,Cool! will do that. Thanks!,,,,,,
153546539,832,Issue,When are planning to move to C# 6.0?,,,,,,
153637528,832,Issue,it's not something I'm looking into - I'd like to ensure that contributors are happy with the VS2015 migration before I look at new language features...,,,,,,
166763448,832,Issue,"Let's put the C# 6 discussions aside for now, but I'm keen to see us get DNX builds out now we're on VS2015. If someone is keen (or more familiar) with porting existing projects to the new platform I'm happy to jam with them on this.You can see my previous attempt in #960 - it's close, but PCL support continues to torment me (as well as CI).",,,,,,
166838495,832,Issue,"I can take a stab at this. Been porting quite a few projects lately. I probably won't have time until the new year arrives, though.",,,,,,
166838841,832,Issue,but PCL support continues to torment meWhat does this mean? Do you still want to target a PCL profile?,,,,,,
166887216,832,Issue,"as part of this change I wanted to replace the existing csproj files that Octokit is currently building (it's nice that MSBuild now tells me via errors).However the one that I can never get right is `Profile259`. I've had various other people show me how they got it to work for their projects but it's never really mapped to how we've configured things with Octokit - I'm probably missing something, and would love to be shown how easy it actually is.",,,,,,
166912185,832,Issue,"However the one that I can never get right is Profile259.What do you mean by ""get right""?I think we should just ditch- Octokit-Mono.csproj  - Octokit-MonoAndroid.csproj- Octokit-Monotouch.csproj- Octokit-Portable.csproj- Octokit-netcore45.csproj- Octokit.csprojAnd aim for a single project.json with `dotnet5.1`, which is roughly the same as Profile259 (it has the same targets). That should also be Future-Proof‚Ñ¢, until `netstandard1.0` takes over.",,,,,,
166912734,832,Issue,Like this;,,,,,,
166923693,832,Issue,"And aim for a single project.json with dotnet5.1, which is roughly the same as Profile259 (it has the > same targets). That should also be Future-Proof‚Ñ¢, until netstandard1.0 takes over.:+1:",,,,,,
167004686,832,Issue,"What do you mean by ""get right""?Basically, I'd love a framework inside `project.json` for `"".NETPortable,Version=v4.5,Profile=Profile259""` to Just Work.  I think we should just ditch ...Fair, but one of the reasons I was bashing my head against having all the currently supported platforms inside a `project.json` file is that it'll then generate the correct NuGet package - and I'd like to drop the hand-crafted work that we do there.I've also not thought about how transitioning to `project.json` impacts the MonoDevelop/Xamarin Studio side -  anything we should be keep in mind? And aim for a single project.json with dotnet5.1, which is roughly the same as `Profile259` (it has the same targets). This seems fine. I just want to ensure we continue to support our existing platforms alongside the new `dotnet/netstandard` stuff...",,,,,,
195231381,832,Issue,Closing this out in favour of #1115,,,,,,
118280295,831,Issue,My code is following:,,,,,,
118282284,831,Issue,Thanks for reporting this.This method will change in the next release but I'll review this once #808 lands (as the 302 behaviour there affects this code).,,,,,,
118176249,830,Issue,"Oh cool, the Win8 project. You're running Windows 10?",,,,,,
118176503,830,Issue,Windows 8.1 + patches :confused:,,,,,,
118177543,830,Issue,"Oh, interesting. I'm not sure what the story is with Windows Store Apps + VS2015 but that gives me enough to reproduce it at least.",,,,,,
118179815,830,Issue,"Oh, interesting. I'm not sure what the story is with Windows Store Apps + VS2015 but that gives me enough to reproduce it at least.Is that the issue? I likely mucked something up installing, uninstalling, reinstalling, edit, reinstalling, etc... various Windows Kits and versions of Visual Studio.Very unfortunate, but not something I can easily recover from. Luckily it sounds like it is mostly my problem... is that correct?",,,,,,
118180532,830,Issue,"I likely mucked something up installing, uninstalling, reinstalling, edit, reinstalling, etc... various Windows Kits and versions of Visual Studio.Possibly. But this is something I can verify without too much hassle.My only concern is that the IDE doesn't let you download the bits you need...",,,,,,
118180994,830,Issue,"Do you have a URL for the ""bits [I] need""? If so, I could try to grab them... some how.",,,,,,
118787307,830,Issue,"Just tested this out on my version of VS2015RC, and I get this error too: C:\Users\shifkey\Documents\GitHub\octokit.net\Octokit\Octokit-NetCore45.csproj : error  : The imported project ""C:\Program Files (x86)\MSBuild\Microsoft\WindowsXaml\v12.0\Microsoft.Windows.UI.Xaml.CSharp.targets"" was not found. Confirm that the path in the  declaration is correct, and that the file exists on disk.  C:\Users\shifkey\Documents\GitHub\octokit.net\Octokit\Octokit-NetCore45.csprojI this [this section] where you enable the ""Tools for Maintaining Store apps for Windows 8"" bits is the way out of this - testing to confirm it...",,,,,,
118792580,830,Issue,"Nope, that didn't change anything. I'll leave this open until [July 20] and revisit it then.",,,,,,
124176304,830,Issue,any luck? :smirk:,,,,,,
124252624,830,Issue,"I had to fix some CI issues with MSBuild v14 - see #846 - however transitioning to VS2015 completely is something I'm still mulling over - it likely means I can't support VS2013 due to MSBuild migrations for the Store Apps projects, so I need to do it carefully.Hang tight.",,,,,,
124299637,830,Issue,"Hanging. :-) In the meantime, do you have any time to assist/advise on a separate but related project?",,,,,,
124302402,830,Issue,"Asynchronously, perhaps.Not sure how much time I can dedicate directly, but happy to give feedback on stuff.",,,,,,
166762529,830,Issue,We did this in #956,,,,,,
118222680,829,Issue,LGTM - thanks !,,,,,,
118224027,829,Issue,"You can use 1.0.0 now if you wish. :-) It is the same. Annoucement probablytommorrow.On Jul 2, 2015 8:39 PM, ""Brendan Forster"" notifications.com wrote: Merged #829 .  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
116841065,828,Issue,:sparkles:,,,,,,
115447433,827,Issue,"thanks for the info, I'll pass it on to the API team",,,,,,
118791830,827,Issue,"Rather than go through all the hoops for duplicating this internally, I'll just cc  here and bug him in chat when I wake up tomorrow:- `since=0001-01-01T00%3A00%3A00Z` isn't considered a valid date under `/notifications`- `since=2001-01-01T00%3A00%3A00Z` works fine- probably just some edge case thing that was introduced recently",,,,,,
128550606,827,Issue,"Hmm, should we simply omit ""since="" if the value is MinValue?",,,,,,
128554388,827,Issue,"possibly, but I think that just hides the problem for scenarios where the range is actually invalid...",,,,,,
224836591,827,Issue,"I know it is the old question, but have some info about it. since=0001-01-01T00%3A00%3A00Z isn't considered a valid date under /notifications   since=2001-01-01T00%3A00%3A00Z works fine   probably just some edge case thing that was introduced recentlyIt is not exactly a corner case, because issue arises from dates in range from 0001-01-01 00:00:00 to 0999-12-31 23:59:59 i.e. when year is less that 1000 (YYYY < 1000). So, the next query not work too:And further, it is looks like issue is total. I've checked the next query and it is fails too:So, I guess there is some issue (or it is a feature?) with validation schema on API side. Maybe makes sense add some common validation on date fields in Octokit.Net, like the next one:/cc ,",,,,,,
225737345,827,Issue,"I do like enforcing some validation within Octokit to catch this, with a sensible error message delivered to the caller",,,,,,
114932004,826,Issue,"Closing this, but if anyone searched for this & needs to know here is some sample code thanks to Chris Klug blog post -",,,,,,
455516733,826,Issue,"In case someone comes here (like I did) and is not, let's say, American :)The code is actually incorrect.You should use the UTF-8 encoding and nt the Ascii Encoding.So the line `var encoding = new System.Text.ASCIIEncoding();` should be `var encoding = new System.Text.UTF8Encoding();`At first, it worked fine for me but then it started to ""randomly"" fail, the reason was I had accented characters in the content of the payload.",,,,,,
115011230,825,Issue,"Hi , I wonder if the model binding is having trouble. Can you verify by sniffing the network what the data looks like that's being passed to your method? Also, as an FYI, the method name has ""receive"" misspelled. :smile:One thing you could try is changing the argument type for `payload` to a string and see what the JSON looks like.I noticed that the setters for `PullRequestEventPayload` are protected. This might be causing problems with the model binder.",,,,,,
115046113,825,Issue,I must confess that I keep procrastinating on doing something to make Octokit integrate better with the ASP.NET stack. Thanks for bringing this to our attention. I noticed that the setters for `PullRequestEventPayload` are protected. This might be causing problems with the model binder.This was also where my thought process went to. Perhaps we need to plug in a model binder that does things the SimpleJson way?,,,,,,
115047972,825,Issue,This was also where my thought process went to. Perhaps we need to plug in a model binder that does things the SimpleJson way?I'm starting to wonder if making the setters protected is causing more pain than it's worth.,,,,,,
115048209,825,Issue,I wonder if we're making it hard/impossible for JSON.NET to deserialize with protected setters. Surely there's a quick way to test this suspicion at least...,,,,,,
115048600,825,Issue,"Yeah, we should test these scenarios out.",,,,,,
115175299,825,Issue,thanks for spotting my bad typo :smile: I have tried this  &   has the following value And when we get to `payload` where JSON.NET is trying to deserialize it back to `PullRequestEventPayload` I get this![screenshot 2015-06-25 09 59 57],,,,,,
115305379,825,Issue,Hopefully you can offer some advice on this guys  &  as I don't ideally want to create a ton of POCOs myself to map all of this data if you guys seem to have done it.,,,,,,
115314993,825,Issue,"Here's the formatted JSON. This doesn't look like the pull request payload.Looking at the [list of payloads], I don't recognize this one. Notice the first property is `""zen""` which makes me think you've configured the [""Ping Webhook""] to call this URL.",,,,,,
115321609,825,Issue,This is what I have setup & configured  ![screenshot 2015-06-25 17 43 22]OK I will check & verify by triggering a real PR on the repo to see what happens & what data I get & post back here shortly.,,,,,,
115322201,825,Issue,"OK I will check & verify by triggering a real PR on the repo to see what happens & what data I get & post back here shortly.Yeah, maybe you're getting more than one request calling that URL or something and you're breaking into the one that fails, but not the one that succeeds.",,,,,,
115367238,825,Issue,Here is a quick video  &  apologies for the muttering but even with the more neater correct payload being sent without the zen stuff it still fails to deserialise.,,,,,,
115415532,825,Issue,"Ok, we're making progress here.Try replacing this line where you use JSON.NET:With this:Also, post the formatted JSON you're receiving here if that doesn't work.",,,,,,
115440660,825,Issue,"As a more general-purpose solution, would it be worth seeing if we can [change the JSON.NET behaviour] in the model binding?",,,,,,
115620051,825,Issue,Woohoo thanks that worked!However it would be nice that I do not need to do this and that the model binding in .NET would deserialze to the PullRequestEventPayload object.As I think this is not obvious or clear that I would need to use your own Serializer to do this.,,,,,,
115636914,825,Issue,"However it would be nice that I do not need to do this and that the model binding in .NET would deserialze to the PullRequestEventPayload object.Agreed. As a workaround, I'd love to see if we can tweak the default model binders so that they can deserialize Octokit types properly. Otherwise, we're stuck with reverting those protected settings I guess...I have a side-project which is a webapp and Octokit.net fits in with it, so I think I'm going to feel this pain when it comes time to go down this path. Thanks for logging this anyway!",,,,,,
115741490,825,Issue,"Agreed. As a workaround, I'd love to see if we can tweak the default model binders so that they can deserialize Octokit types properly.How so? Like contribute it back to ASP.NET MVC? That wouldn't help the legions of people on the current version.Or were you thinking we'd provide a method to register a model binder? I feel like that adds too much friction. I think the easiest solution is to change those setters to public and just tell people ""don't mutate this shit."" :frowning:",,,,,,
115975142,825,Issue,"How so? Like contribute it back to ASP.NET MVC? Nah, was more thinking about a custom model binder. Anyway, the ""don't mutate this shit"" is a reasonable alternative if we have to go down that path...",,,,,,
116775528,825,Issue,"Nah, was more thinking about a custom model binder. Anyway, the ""don't mutate this shit"" is a reasonable alternative if we have to go down that path...I thought of that too, but it's unnecessary friction. And it only solves the issue for one framework. I don't know how Nancy or other web frameworks do it.We can limit this change to just the types that are web hook payloads. All the other types are responses to requests initiated by a a call via the Octokit clients. But these webhook payloads are different. They're callbacks that will be received by arbitrary code so we should put fewer restraints on them.",,,,,,
116894193,825,Issue,:thumbsup:,,,,,,
135895867,825,Issue,"Hey, I just hit this issue but the workaround provided earlier isn't working for me.I'm using this:But I'm seeing an exception:**System.InvalidCastException** occurred  HResult=-2147467262  Message=**Invalid cast from 'System.Int64' to 'System.DateTimeOffset'.**  Source=mscorlib  StackTrace:       at System.Convert.DefaultToType(IConvertible value, Type targetType, IFormatProvider provider)This is the payload I received:Any ideas?",,,,,,
136300889,825,Issue,do you have a specific test that I can run locally to see if I can spot which field isn't being mapped correctly?,,,,,,
136524451,825,Issue,", So I made a simple console app that consumes the json I posted an then tries to parse it:I found the exception by being thrown in this line This happens when trying to parse ""created_at"" and ""pushed_at"" inside ""repository"".Apparently it expects it to be a string to be checked for DateTimeOffset According to the API documentation these two members should have a format like ""2011-09-06T20:39:23Z"" (as shown in ) but it is instead receiving a long number, in this case:except, update_at is in the expected format, so I'm not sure what is going on.",,,,,,
137361435,825,Issue,"Update: without doing anything I started getting payloads with the right date format, so this is working.",,,,,,
137392799,825,Issue,![] let me know if you see it come back,,,,,,
352432309,825,Issue,I've just had the same problem as  Is their a new issue for this or should I open a new one?,,,,,,
352692919,825,Issue,"In the earlier case it seemed to be an upstream API issue where a date time string was being sent as an int64 (unix epoch time) then it fixed itself (ie the upstream API problem was fixed).I think it'd be best if you raise a new issue for what you're facing, please include the json payload and code sample on the new issue üòÑ",,,,,,
352729427,825,Issue,What I found was a merged pull request didn't parse correctly but open ones did,,,,,,
352768595,825,Issue,If you can raise a new issue including a code snippet and the json response we can have a look at what's going on there,,,,,,
354647621,825,Issue,"I see the same problem here. Seems ""created_at"" and ""pushed_at"" are in unix epoch representation, while ""updated_at"" is in ISO representation.Also, from the timing it seems the problem had returned only recently (about two weeks ago).Is there anything I can do to ignore or correctly parse those fields?",,,,,,
354648028,825,Issue,Another thing - I see it sometimes happens and sometimes not. Perhaps it depends on the state of the current PR.,,,,,,
114365151,824,Issue,"not sure why `await` would behaving differently to `.Wait()` here, let alone Fiddler warning us, so let's dig into it.For reference, here's the HTTP traffic from one of the integration tests around label creation. If you see something different on your end, that might be a clue:returnsAlso, if you change that `.Wait()` slightly do you get a valid label for the response? Or something different?",,,,,,
114971095,824,Issue,"Ok, here's Fiddlers raw output for the request when I use `await`.  We are using Enterprise GitHub, so I've fudged the URL a little:Looks like there is no json at the bottom!  Wha!Here's the response:Now if I use `task.Result` like you asked:Yay, json!And response:Unfortunately, I can't use the `Result` way because that forces it to be synchronous.  I'll be processing these in mass, so I need it to be asynchronous.  Must be something with the await/async...... ?",,,,,,
115043203,824,Issue,"Yeah, that's real weird. Thanks for the log details, I'll see if this is Enterprise-specific or just something else altogether...",,,,,,
113488071,823,Issue,"thanks for the details. It's a bit weird the way we add the [System.Net.Http] reference, but this is the first failure I've heard about it.What version of VS are you running?",,,,,,
113499921,823,Issue,I've seen this a :hankey:-load of times. I think it's a NuGet bug. Could you try running `$error[0].Exception.ToString()` in the Package Manager Console?,,,,,,
113567166,823,Issue,", absolutely no problem... This happened in Visual Studio 2013 Community Edition (Update 4).In the attempt to post more data as asked by , NuGet was not able to connect and grabbed package from local cache: this time the dependency was correctly set and the package added to the project.Package Manager session:I know that `$error[0].Exception.ToString()` was for the first case, anyway I've executed it also now. Here the result:If you want, I can try lately if I can reproduce the problem and post again `$error[0].Exception.ToString()` result.",,,,,,
113670852,823,Issue,"when you're seeing it fail, what sort of project setup are you trying to add it to?",,,,,,
113680515,823,Issue,"It's been a while since I saw it, but in my previous job I used to get it all the time (when installing packages referencing System.Net.Http). I can't really remember anything special about the project setup, just a regular .NET 4.5 class library or web app, all in C#.",,,,,,
113680959,823,Issue,"There were PCLs involved in the sln though. Maybe even referenced by the projects, but I can't imagine why that would matter... :confused:",,,,,,
131951701,823,Issue,"I have just ran into this same problem.  Using Visual Studio 2015.  Was able to install the package successfully from the Package Manager Console, but not through the Manage Nuget Packages UI.",,,,,,
132400921,823,Issue,"Was able to install the package successfully from the Package Manager Console, but not through the Manage Nuget Packages UI.I guess I need to raise this upstream if it's still around. Thanks for the extra details all.",,,,,,
132464197,823,Issue,Sorry about all the notifications about my commit comment.  I didn't realise that they would show up here :smile_cat:,,,,,,
195234888,823,Issue,"I've kinda sat on this for a while rather than report it upstream so maybe it's been fixed, but if someone is keen to confirm it's still occurring on NuGet v3 I'll help them to navigate the process of reporting this.",,,,,,
271321533,823,Issue,"Given 's last comments on this and that it's > 6 months old, should we close this out?",,,,,,
271433345,823,Issue,"Yep. And with the port to .NET Core that's underway, the change to use the `System.Net.Http` NuGet package instead of directly referencing `System.Net.Http` as mentioned in  should resolve this.",,,,,,
413684418,823,Issue,Hi  what target framework was the project and what version of octokit package?Could you also mention the vs2017 update level and the output of `dotnet info`?,,,,,,
413689947,823,Issue,coworker hit this today on a fresh vs2017 install.He added system.net.http manually target framework 4.6.1octokit version 0.31vs version 15.8dotnet info,,,,,,
413831191,823,Issue,"Im on VS2017 15.7.4 and can't reproduce this.  I added Octokit 0.31 to an sdk format net461 project and it worked fine.  I also tried a VS2015 csproj format .NET Framework 4.6.1 targetted project, and again it worked ok.Is your project existing or brand new?  Is it the new Sdk style csproj project or the older VS2015 style?  Is it repeatable/can you share the csproj?  Or provide a minimal repro?",,,,,,
415433015,823,Issue,It was an existing project with the old project format. I was helping my coworker add [proevergreen] to [this project] and it happened. Proevergreen has a dependency on octokit.,,,,,,
113162386,822,Issue,I am interested.,,,,,,
113315508,822,Issue,"So I think this is a rather straight-forward fix for someone who wants to grab it cc Inside `StatisticsClient` we define the URLs with a leading `/`This means the `HttpClient` ignores the `/api/v3/` prefix when interacting with an Enterprise server, generating a 404...",,,,,,
115006988,822,Issue,Why do you define the endpoint URIs inline and not in `ApiUrls`? Going away from it?,,,,,,
115043275,822,Issue,I think it was just an unintentional oversight at the time.,,,,,,
112623577,821,Issue,And this is live,,,,,,
112583279,820,Issue,![],,,,,,
146403795,819,Issue,Want some help here? What is missing?,,,,,,
146438067,819,Issue,"i'm not sure, probably just some docs (oh, and to merge master in).",,,,,,
146604065,819,Issue,I'm trying to figure out why these two new exceptions don't inherit from `ApiException`... isn't it desirable? Noticed it while working on the integration tests since they don't have `ApiError` member.,,,,,,
146755932,819,Issue,Worked a bit on this on #931.![]No idea where to document this tho.,,,,,,
146916211,819,Issue,"Yeah, they probably should inherit from `ApiException`.",,,,,,
147359738,819,Issue,Closing this in favour of #934,,,,,,
112571091,818,Issue,Thanks for the reminder to update `ScriptCs.Octokit` to latest `octokit.net` :grin:,,,,,,
111331555,816,Issue,Thanks! What testing have you done on this?,,,,,,
111331800,815,Issue,"Oh yeah, good catch!",,,,,,
109931150,813,Issue,You need to `await` the call to `Create` as it is `Task` based.,,,,,,
109935836,813,Issue,"Alternatively, you can block on the result (but this makes me sad whenever I have to write this code) so `await` is definitely The Recommended Way‚Ñ¢:",,,,,,
110238350,812,Issue,"The API only differentiates between authenticated and unauthenticated requests: For requests using Basic Authentication or OAuth, you can make up to 5,000 requests per hour. For unauthenticated requests, the rate limit allows you to make up to 60 requests per hour. Are you not seeing that occur when the request passes through Fiddler?",,,,,,
110484878,812,Issue,"So a bit more investigation...The test code I have is When this code is executed Fiddle shows two calls to the APIThe first call has the Authorization Header set, the returning headers show X-RateLimit-Limit: 5000However the second call has no Authorization Header set and as such has X-RateLimit-Limit: 60The HTTP response on the first call is a 302 suggesting a redirect to a different URL, in doing so it is dropping the auth credentials.",,,,,,
110508404,812,Issue,This is a known issue with redirects.  There is a PR in the works to fix this issue #808,,,,,,
110238692,811,Issue,"Not currently, but it's been raised previously: #504",,,,,,
123292793,811,Issue,Is this not different to #504?  #504 asked to get the rate limits per API call (included in the headers)This request asked for the rate limits as part of the MiscellaneousClient - a discrete API request.I'm currently having a play at both.  Hopefully produce a PR for the MiscellaneousClient some point next week.,,,,,,
123487278,811,Issue,"-Folder you're right. I was thinking about it from the ""i need this info"" side rather than the fact you can get it in either place. I'm currently having a play at both. Hopefully produce a PR for the MiscellaneousClient some point next week.I think this is going to be easier to knock out than the details in #504, but I suspect we'll need both eventually. Thanks for looking into it!",,,,,,
125940359,811,Issue,Functionality added in commit #848 Believe this can now be closed,,,,,,
107256687,810,Issue,"Yep, sounds good to me. Reading the API docs, the purpose of that endpoint is to redirect to the actual content so we should probably adhere to that I guess :smile:And if someone is crying out for functionality to get _just_ the link then we can reconsider and add that back in.",,,,,,
107296172,810,Issue,Thanks  for the sanity check!,,,,,,
107297658,810,Issue,![],,,,,,
388123490,809,Issue,It's still not fixed for Github Enterprise.  Please could this be revisited?,,,,,,
388282913,809,Issue,"Hmmm this pre-dates my involvement, I can see mentions of it not working for enterprise but no detail as to how/why its not working So to clarify, is the problem that following redirects doesn't work for GHE in a proxied environment, or actually that NOTHING works when behind a proxy? I'm not sure how to test this either, thankfully we got rid of web proxies at my work! üòÅHappy to review a pull request though if you are able to debug in your environment and make a change that works for you...",,,,,,
388317334,809,Issue,"The reason why this doesn't work is because what I need to do is pass in the GHE URL, i.e.However only the way you can currently add a proxy in code is:` var proxy = new WebProxy(new Uri(""""), true);            proxy.Credentials = CredentialCache.DefaultCredentials;            IHttpClient httpClient = (IHttpClient)HttpMessageHandlerFactory.CreateDefault(proxy);                      var connection = new Connection(new ProductHeaderValue(""my-cool-app""),                new HttpClientAdapter(() => HttpMessageHandlerFactory.CreateDefault(proxy)));            var client = new GitHubClient(connection);The problem is that there is no constructor that can take an IConnection and a URL.",,,,,,
388860097,809,Issue,"You can also provide a handler directly:                    var connection = new Connection(                        new ProductHeaderValue(""my-cool-app""),                        new HttpClientAdapter(() => new HttpClientHandler {                            Proxy = new WebProxy(this.Configuration[""Proxy:Address""]),                            UseProxy = true                        }));                    var client = new GitHubClient(connection);",,,,,,
104661855,808,Issue,I just noticed the RedirectHandler CopyResult uses a .Result.  That's because I pulled the code from a .net 4.0 project.  It should probably be fixed to use async/await.  I'd do it but I'm not sure how to add a commit to a PR.,,,,,,
104691782,808,Issue,"Thanks for digging into this, . :zap:  anything I've missed here?My C# leaves much to be desired, but  and I sketched out this plaintext spec that might help answer your question: - **MUST** follow redirect requests if HTTP status code is 301, 302, or 307. (These are the redirect codes actively used by the GitHub API.) - **MUST** redirect a 30x status code if the HTTP method is HEAD, OPTIONS, GET, POST, PUT, PATCH, or DELETE. - **MUST** use the original request's HTTP method when following a redirect where the HTTP status code is 307. - **SHOULD** use the original request's HTTP method when following a redirect where the HTTP status code is 301 or 302. - **MUST** use the original request's authentication credentials when following a redirect where the original host matches the redirect host. - **MUST NOT** use the original request's authentication credentials when following a redirect where the original host does not match the redirect host. - **SHOULD** only follow 3 redirects.Does that help?",,,,,,
104709266,808,Issue,1) I'm not doing redirect counting to limit redirects.  I can fix that.2) I'm not checking host before copying auth header.  I can fix that.3) Currently I change the method on a 301 or 302 because it is allowed.  Changing the behaviour to not change the method is easy enough.,,,,,,
104788590,808,Issue,"I have done all the fixes to the RedirectHandler and added a bunch of tests for it.  However, I have absolutely no @!#$@#$ clue how to push the changes up to anywhere on Github.I pulled down the pr/808 branch and made the changes there, but am unable to push that branch with the fixes to my fork.![]",,,,,,
104822810,808,Issue,"if you're working on your fork and it's in a branch I know about, I can pull in your changes into this PR...",,,,,,
104921060,808,Issue,I don't really know how.  But I succeeded in pushing my changes to my fork.,,,,,,
104922967,808,Issue,"Couple of comments:  The 301 and 302 behaviour is now different to what HttpWebRequest does by default.  But the new behaviour is what was originally intended for 301/302. (Possibly the most useful diagram I have ever seen on this subject is here )Keeping the auth header around based on host is consistent with what the .Net CredentialCache does.  However, based on my interpretation of the HTTP specs, it should really be based on the realm.  Which would require a 401 dance to find out the new realm.  I would file this under ""nice idea in theory but no-one does it"".  The pedant in me felt the need to mention it.",,,,,,
105523036,808,Issue,The 301 and 302 behaviour is now different to what HttpWebRequest does by default.  But the new behaviour is what was originally intended for 301/302. (Possibly the most useful diagram I have ever seen on this subject is here ): Thanks for linking to that diagram. Wonderfully succinct and useful. :zap:,,,,,,
107146986,808,Issue,"your latest changes are applied onto this PR - thanks for that :sparkling_heart:.i'll look at those failing tests, and putting together some additional tests for the GitHub API.",,,,,,
107159540,808,Issue,"Just added a passing test against the new redirects - I'll add some more later this week, but this is feeling rather close...",,,,,,
107172959,808,Issue,:+1:,,,,,,
109178857,808,Issue,Added in a test for issue creation and finding a repository. Ready for review.,,,,,,
111083749,808,Issue,Just added one more little task before I'm happy with this.,,,,,,
111972837,808,Issue,Extracted #817 rather than drag this out any longer.Ready for review :dog:,,,,,,
116039170,808,Issue,would love some :eyes: on this before I merge it and continue down the path of extracting more HTTP-friendly abstractions...,,,,,,
116320140,808,Issue,"Just one observation that would probably have been much more useful before we started all this.If you are actually using the CredentialCache with credentials associated to the correct origin server, then when you redirect to a URL with the same host then the credentials are carried over.  Using a credential cache avoids setting creds in a default header and takes care of applying the correct credentials on every request.   Maybe it shouldn't be the responsibility of redirection code to be carrying over the authorization header.",,,,,,
116361216,808,Issue,"If you are actually using the CredentialCache with credentials associated to the correct origin server, then when you redirect to a URL with the same host then the credentials are carried over.Yep, I'd like to address this at some point - we should mimic this behaviour in our abstraction and move it into `HttpClient`.",,,,,,
116365665,808,Issue,"Funny you should mention that, but I just finished writing an AuthenticationService/HttpCredentialCache that plugs into the message handler pipeline.  It's not on Github yet though.",,,,,,
121320405,808,Issue,*bump for code review plz*,,,,,,
122347903,808,Issue,Looks good to me. Just one question.,,,,,,
122360935,808,Issue,: :clap: :star2:,,,,,,
122412146,808,Issue,![]I'll run through the integration tests and see if I can put together a :ship: on Monday (my time).,,,,,,
103464011,807,Issue,Nice! :fire: dat trailing whitespace! Maybe you should change the `Copyright ¬© Microsoft 2012` thingy while you're at it :wink:,,,,,,
103668896,807,Issue,"Other than those `{}` being a few spaces short, I'm liking it :+1: :+1: Will certainly make it easier to ensure that the codeformatting stays the same :grin:",,,,,,
104516194,807,Issue,*mutter mutter mutter*,,,,,,
153875092,807,Issue,Reviving this now that we're on VS2015. Go AppVeyor Go!,,,,,,
103403232,806,Issue,Published:,,,,,,
103362032,805,Issue,![],,,,,,
103362552,805,Issue,:shipit: :trollface: :grinning:,,,,,,
102937798,804,Issue,:thumbsup:,,,,,,
102937939,804,Issue,"Also, we should confirm that [message] is actually optional while we're in there...",,,,,,
103053255,804,Issue,"Since I ~~want~~ **need** this, I'll send a PR for it",,,,,,
103403534,804,Issue,it's now available in v0.12 on NuGet.,,,,,,
103404893,804,Issue,Champion! Thanking you very much :cake:---From: Brendan Forstermailto:notifications.comSent: ‚Äé19/‚Äé05/‚Äé2015 18:55To: octokit/octokit.netmailto:octokit.net.github.comCc: Henrik Anderssonmailto:henrik.a.andersson.comSubject: Re: [octokit.net] Add SHA property to MergePullRequest (#804) it's now available in v0.12 on NuGet.---Reply to this email directly or view it on GitHub:,,,,,,
102230340,803,Issue,I think this test is more to see if `alfhenrik` is following anyone. It shouldn't depend on the user account running the tests. Do you agree ?,,,,,,
102245642,803,Issue,"Yes, the test is to return all the users a specific user (`alfhenrik` in this case) is following.I must admit though that it is a bit confusing due to the namings here..perhaps it should be `GetAllFollowers` instead of `GetAllFollowing`...",,,,,,
102245732,803,Issue,And I may have actually broken the test as I cleared all users I was following..._oops_,,,,,,
102757635,803,Issue,Closed as  is now following an account,,,,,,
101957919,802,Issue,Octokit.ForbiddenException : You have triggered an abuse detection mechanism and have been temporarily blocked from content creation. Please retry your request again later.Not much else I can do from here :grin:  (I hit this from time to time as well).,,,,,,
140541447,802,Issue,Have ran into this. Don't know how to bypass this.,,,,,,
140542613,802,Issue,"I never found a solution better then to ignore it. When it is a sign of a real problem, it will show up in the ci",,,,,,
101455688,801,Issue,"the first parameter to `Create` should be owner of the repository, not your account:That should get you back to a happy place.As a sanity check, do you think we should warn the user if they try and specify more than just the repo name in that second parameter?",,,,,,
101460247,801,Issue,"yes, I would recommend a warning if the repo name contains delimiters such as / or .   It looks like native GIT api takes ""owner/repo"" from what I read so that was throwing me off.  Also, I suggest that the exception message mentions that its the named repo that could not be found.",,,,,,
101461748,801,Issue,Thanks for the quick reply also,,,,,,
114651482,800,Issue,"I am able to get the contents of a repository's root directory by passing in ""/"" as the path, but I am unsure if this is due to changes made after this issue was opened.",,,,,,
153458288,800,Issue,":+1: ""/"" only works if you're retrieving master branch. If you're retrieving some other branch it defaults to master branch, because the generated url is actually invalid: ""contents//?ref=branch-name"". Remove the check for empty string when specifying path.",,,,,,
153464360,800,Issue,You could get all the contents of the branch using the overload `client.Repository.Content.GetAllContents`  which takes the `reference` as the last parameter.I am able to get all the contents of the branch and master including the sub-directories. Here is a sample.,,,,,,
153469091,800,Issue,"I have 7 files on my master branch, and 6 on my custom branch (""ostruk-branch"" does not have ""added.js"").When I callI get 7 files, same as if I called without ""ostruk-branch"". When I inspect the code, I can see it attempts to make a call towhere you can see that all files have ""?ref=master"" by them, indicating they are being pulled from the master branch. If I change the url to, which is equivalent to passing ""'"" for path argument, then response is correct.I'm using 0.16.0.Thanks!",,,,,,
153470352,800,Issue,Yes you are right. It is a bug.,,,,,,
307224550,800,Issue,Can we reopen this issue? The fix was accidentally undone during  and I'm running into it again.,,,,,,
307289579,800,Issue,Whoops! Need to dig into this to see why there isn't an integration test that failed,,,,,,
311052205,800,Issue,"just looking at this one... are you referring to the fact that `GetAllContents(string owner, string name, string path)` is enforcing `path` to not be null or empty?If that's the case can't you just call `GetAllContents(string owner, string name)` overload instead?",,,,,,
100938046,799,Issue,"As can be seen in some of the commits, a number of expected exception types had to be changed. Please let me know if there is an issue with this.",,,,,,
101487577,799,Issue,"As can be seen in some of the commits, a number of expected exception types had to be changed. This is likely due to the fact we don't assert the exception type in that helper method I wrote. Oops.",,,,,,
103367542,799,Issue,"for the `Reactive` tests when I remove the inner `async / await`, it complains that it needs an explicit conversion to `Task`.Which is the better option:",,,,,,
103390932,799,Issue,-Zuber try this:,,,,,,
103408130,799,Issue,If the final `AppVeyor` builds succeeds then this is pretty much done.One thing that I did not do is places where the call was not awaited where left that way after updating the method call.,,,,,,
103457075,799,Issue,![],,,,,,
104471952,799,Issue,![]Thanks -Zuber!,,,,,,
100413278,797,Issue,:ship:ed. I can't be bothered waiting for CI to complete (it passed before).,,,,,,
100338617,796,Issue,Looks good to me! :sparkles:,,,,,,
104515004,795,Issue,I've marked `IsMember` as obsolete here with a note to use `GetMembership` and be consistent.Everything else is new APIs. Ready for review.,,,,,,
99135989,793,Issue,Hi. We'll handle this via the normal support channels. But what you're running into is definitely related to contention with another Visual Studio Extension. We're both installing different versions of the same assembly and the other extension won and broke us. :frowning: We're working on a fix.,,,,,,
97967472,792,Issue,Thanks!,,,,,,
98718833,791,Issue,"Crazy idea, but maybe make the model classes partial which then lets people make extensions (or ship an official opt-in extensions library) to the models and clients accordingly.Any thoughts?",,,,,,
98739105,791,Issue,"Crazy idea, but maybe make the model classes partial which then lets people make extensions (or ship an official opt-in extensions library) to the models and clients accordingly. Any thoughts?Partial classes are a compilation hack. They have no meaning once the binary has been produced. In other words, you can only extend a partial class with your partial class if you're compiled to the same assembly.",,,,,,
98740428,791,Issue,"forgot that..., can we hide this under a rock so no one ever finds it? :scream: :flushed: **Is there** a solution that exists for extending the models in a simple way?The goal I have in my head is that a consumer that wants to stick to the _official_ `API` they can, but they can also access objects that are a little easier to navigate through.",,,,,,
98750617,791,Issue,"Well the root problem is that our API doesn't support this. You'll have to email support.com for that. So your code has to create a request per issue and that's going to be slow. It might be possible to do this with our search endpoint, but I haven't tried that out.If you don't mind the N+1 problem, I think the approach you took is fine. We want to keep Octokit.net closely aligned with the API. If there's a strong demand for it, we could consider an Octokit.Extensions package with these meta types, but this is the first we've heard of it.",,,,,,
98757707,791,Issue,Understood.  Thanks for listening.  Only the future can tell what will become of this.,,,,,,
96715443,790,Issue,I'm indifferent on this as it's not something I use day-to-day. But if there's sufficient interest in this use case I would be happy to review a contribution about it....,,,,,,
96765090,790,Issue,I've been thinking about this some more and am starting to lean towards just providing a warning in the doc - comments. But I will leave this open in case a discussion develops,,,,,,
111950913,790,Issue,#NAME?,,,,,,
113162940,790,Issue,is [this] the correct spot to put it in?,,,,,,
271322003,790,Issue,I took a quick stab at this in #1530.,,,,,,
96438582,789,Issue,:sparkles: Thanks!,,,,,,
95371445,788,Issue,:v: :ok_hand:,,,,,,
94958698,786,Issue,![],,,,,,
97967565,784,Issue,Fixed in #792,,,,,,
94359247,783,Issue,:spaghetti:,,,,,,
94917128,783,Issue,![],,,,,,
100830335,782,Issue,Shouldn't `Assert.TaskThrows` be `Assert.ThrowsAsync`?,,,,,,
100832718,782,Issue,"-Zuber yuuup, I typed it up in a rush. I'll update it.",,,,,,
104541875,782,Issue,Fixed in #799,,,,,,
94559379,781,Issue,"This is on my list, but it will take me some time to really think it through. Corner me at BUILD. :smile: :cocktail:",,,,,,
94561242,781,Issue,Corner me at BUILD. :smile: :cocktail:Word :cocktail:,,,,,,
100501631,781,Issue,"(passing by) Just encountered with support of repository redirects. Forced to checkout sources and ""invent crutch"" there making IRequest mutable in part of endpoint. You should write that redirects are not supported on main page.Actually redirects works but loosing auth information. And in case of bulk repo queries it leads to ""rate limit"" exception. Should I pull-request mine lonely crutch in such good code?",,,,,,
100553656,781,Issue,"Should I pull-request mine lonely crutch in such good code? Let's discuss your workaround in a different thread to this. It's on my roadmap, I'm just trying to figure out the best way to get there right now...",,,,,,
101680739,781,Issue,"Regarding the redirect issue, I've been using this  in one of my client applications to replace the autoredirect done by HttpWebRequest.  It could use some love, but it might be an ok starting point.",,,,,,
101736256,781,Issue,"Take a look at this and let me know what you think I'm having trouble getting the tests to run at the moment, so it isn't tested.  Just consider it an idea.I optionally allow passing in a HttpMessageHandler into HttpClientAdapter.  I store a HttpClient instance as a field and reuse it.  In order to allow auto redirects to be turned on and off, I use the HttpRequestMessage.Properties collection to relay the setting to the new redirect message handler.",,,,,,
104556925,781,Issue,Update: aiming to land repository redirects over in #808 as a way to figure out the `HttpMessageHandler` API,,,,,,
112392389,781,Issue,"With #808 almost ready to go out the door, I found myself with a quiet moment to reflect on how to improve the initialization of `GitHubClient` - there's a number of overloads available which take different parameters, and it's not quite easy to navigate.I'd like to simplify this down to a number of options which are set by the user (this is just a demo):And as these are all HTTP-specific, they could be transformed into a `HttpMessageHandler`This could also be the extensibility hook for doing more flexibile things at the HTTP level: I need to think a bunch about how to transition things carefully, but the wheels are already turning...",,,,,,
114123339,781,Issue,"I like the fact that your proposed GitHubClient extensibility model mirrors the standard HttpClient model.  It hides all the IHttpClient, IConnection, HttpClientAdapter stuff from someone who just wants to plug in an extra piece of middleware.",,,,,,
114127682,781,Issue,"from someone who just wants to plug in an extra piece of middleware.That's something I've had in mind for a while ( jump in here if you disagree with this direction) and ultimately we're re-implementing a bunch of the middleware currently - and I'd just love to get out of the way of those who want to dive in.The `ClientOptions` could be a constructor interface on top of this, for consumers who don't want to go deep. There's some assumptions we've made (authentication, user-agent, etc) that these brave souls should be aware of, but I think a good goal here would be ""here's my handler, plug this into Octokit"" so that everything just works...",,,,,,
114208339,781,Issue,( jump in here if you disagree with this direction)May I jump in here if I _don't_ disagree? :sparkles:,,,,,,
160704216,781,Issue,"I like the `ClientOptions` route. It reminds me of the the `ProcessStartInfo` approach. In fact, maybe we could call it `ClientInfo` or something like that.I do think we should retain the simpler `.ctors` with the most common options.",,,,,,
162720545,781,Issue,I do think we should retain the simpler .ctors with the most common options.You want to port the existing `ctors` on `GitHubClient` over to this `ClientInfo` class?,,,,,,
162721703,781,Issue,"Seeing how we're all roughly on the same page here, I'm going to open up a new issue to track the roadmap and break down the work better.",,,,,,
162721998,781,Issue,You want to port the existing ctors on GitHubClient over to this ClientInfo class?Not necessarily. I just mean I want to retain some of the existing `ctors` along with new ones that accept `ClientInfo`,,,,,,
162722221,781,Issue,"okay, I'll keep that in mind",,,,,,
93856127,780,Issue,Some CI failures in the CI process.- I _think_ the serialization should work without the `_` in `Organization_Member`- `TypeInfo` is the new `Type` - likely some extension method needs to be added for PCL-based platforms.Do we need to send any preview flags as part of updating this API?,,,,,,
143513490,780,Issue,I'm going to push a new PR with these changes and some of my fixes on top of them.,,,,,,
90542827,779,Issue,Sounds like... `CommitCommitter` :trollface:,,,,,,
106294386,779,Issue,"I really wanna get my feet wet on OSS, and this bug seems like a good start. Can I call it mine and fix it? Also, I can't think of a name other than CommitCommitter lol",,,,,,
106295344,779,Issue,I think `CommitEntity` is a better term :grinning: - and you're more than welcome to make a start on it,,,,,,
106787135,779,Issue,"Okay, I'll take a look at it this weekend. Just commenting here to let everyone aware :)",,,,,,
106787607,779,Issue,![cantwait],,,,,,
143803506,779,Issue,Currently when you retrieve a commit from `{user}/{repo]/commits` you get this payload for the `Author` and `Committer`: that's not exactly correct.If you look at  you'll see the payload looks more like (bunch of stuff cut out):So note that `GitHubCommit` has `Author` and `Committer` properties. But it also has an inner `Commit` property that also has an `Author` and `Committer`. represents a commit database record which includes things like comments etc. The `Author` and `Committer` properties of `GitHubCommit` represents GitHub accounts _if it could match one up_. The inner `Commit` property of `GitHubCommit` represents the raw Git commit and its `Author` and `Committer` properties represent the basic information that Git has for the commit.The one thing I haven't had time to determine is what happens on the `GitHubCommit` response if it couldn't match up the `Author` with an account. I assume it just returns the simple form.   do you know what happens for sure? I'd love a pointer to the code. :smile:,,,,,,
143844802,779,Issue,"The one thing I haven't had time to determine is what happens on the `GitHubCommit` response if it couldn't match up the `Author` with an account. I assume it just returns the simple form.   do you know what happens for sure? I'd love a pointer to the code. :smile:If the author doesn't map to a GitHub account, then the top-level `author` attribute has a `null` value. The same goes for the committer. Example:",,,,,,
143849325,779,Issue,That's kind of what I hoped would happen. :smile: Makes it easier for us connoisseurs of statically typed languages.,,,,,,
145538085,779,Issue,that's not exactly correct. this issue was so long ago that I suspect you're right (and/or I probably didn't make it clear).:thumbsup: to the work in #916,,,,,,
90537108,778,Issue,"I've not documented it, but I've adapted one of our integration tests to illustrate this API:",,,,,,
89967959,777,Issue,This is up on NuGet :metal:,,,,,,
94299660,776,Issue,"The pr is ready for review, if possible.",,,,,,
94301586,776,Issue,"thanks for reviving this PR, I'll walk through it in the coming day or so and let you know how I feel about it...",,,,,,
94302004,776,Issue,"Sounds good. Thank you very much. If you find something I will find time during the week to correct it, so that we can finish it up.",,,,,,
94320696,776,Issue,"Just had a look at the merge conflict, and it seems to be related to files being added to both csproj files. You'll pick it up if you try to merge master into your branch.",,,,,,
94322730,776,Issue,"thanks for this (and also thanks to  and  for getting this started). A few questions about the design and some places to clean up, but this is some really fantastic work already!",,,,,,
94587507,776,Issue,"Hi  thanks for the comments on the code and the design. I have cleaned it up and added the Post method. I have added to each of your comments a short description of the change I have made in the code and I have tried keeping the changes in their own commits, so that you can compare the changes.The 'Changed await AssertEx.Throws' to 'Assert.ThrowsAsync' is wrong. I accidentally also removed the 'await'. They have been added again to the tests in a later commit.I ran a bit out of time here at the last moment, so I hope everything is ok. Please write back in regards to any changes that needs to be added.",,,,,,
97201954,776,Issue,"hi , Just wanted to make certain that the code is ok and not missing anything. I did the merge and solved the conflicts. I think that the merge from master must be done close to the merge to master. If the code changes are ok, I will do another merge.",,,,,,
98845953,776,Issue,What is the status of this PR? I really need the features it adds.,,,,,,
98846152,776,Issue,"apologies for the delay - I've just gotten back from BUILD so am digging myself out of inbox hell. I'll add this to the list of things to review today. There's a merge conflict with the branch, but we can address that separate to the changes here.",,,,,,
98850081,776,Issue,"Great stuff. As long as I know this is on your radar, I can wait a few more cycles :-)",,,,,,
100116507,776,Issue,"looking good, just a bit of cleanup for the tests and merging master in and I'm happy to take this.",,,,,,
100120609,776,Issue,Thanks for the review . I will look into the issues tonight after work.,,,,,,
100466528,776,Issue,", review changes have been made, including a merge handling the conflicts.I hope everything is well else you know how to get a hold of me :email:",,,,,,
101493090,776,Issue,"Just that one test attribute and this is good to merge!EDIT: whatever, I'm impatient. I'll fix that up on `master`.",,,,,,
101493209,776,Issue,Thanks for the amazing work  ![],,,,,,
101781427,776,Issue,Thanks and thanks for the merge. :ok_hand:,,,,,,
85222883,775,Issue,"SocketException (0x271d): An attempt was made to access a socket in a way forbidden by its access permissions]Is this consistently occurring on Azure?This looks like it's an environment-specific problem, not quite sure what I can do from Octokit itself to address this...",,,,,,
85998547,775,Issue,"It is consistent on azure, not super critical for me as this is just alarge repo I use to test my app (and the api). I will contact some of myazure friends to see if they can shed some light on this and maybe thiswould go into some sort of FAQ on the wiki (?)Eric Hexterblog | info | On Mon, Mar 23, 2015 at 5:02 PM, Brendan Forster notifications.comwrote: SocketException (0x271d): An attempt was made to access a socket in a way forbidden by its access permissions]  Is this consistently occurring on Azure?  This looks like it's an environment-specific problem, not quite sure what I can do from Octokit itself to address this...  ##   Reply to this email directly or view it on GitHub .",,,,,,
86314852,775,Issue,that'd be great. if you have any extra details I can reopen this issue.,,,,,,
104395632,775,Issue,Were you ever able to find out the cause of this issue?  Thanks.,,,,,,
104416715,775,Issue,"I did not, I was able to reproduce it but I ended up moving my project to avirtual machine and I never had this problem. If you have a simple testcase to reproduce it I can connect you with a azure architect who said hewould troubleshoot it.On Thursday, May 21, 2015, jbkielis notifications.com wrote: Were you ever able to find out the cause of this issue? Thanks.  ##   Reply to this email directly or view it on GitHub  .## Eric Hexterblog | info |",,,,,,
85019619,774,Issue,This is ready for reviewcc,,,,,,
85739737,774,Issue,"Looks good, just a couple of minor things.",,,,,,
85807143,774,Issue,Test updated and muted,,,,,,
89970163,774,Issue,A couple of questions :dog:,,,,,,
90533865,774,Issue,Questions answered :fist:  :v:,,,,,,
92047735,774,Issue,Thanks!,,,,,,
85693302,773,Issue,"This thread moves out of the async method This sounds like the intended behaviour of async/await... and execution stops.But this definitely isn't right at all.A couple of questions:- If you set a breakpoint on the line after the method, do you ever see it get hit?- Could execution be stopping due to an unhandled or first-chance exception? The Output window might have some clues.- What if you were to try a GitHub resource instead of a GitHub Enterprise URL? Does the same thing happen?",,,,,,
86838270,773,Issue,"I am not getting any content or exception for the variable. By GitHub resourse do you mean GitHub local client? Also I am getting the status of the thread as Id = 1, Status = WaitingForActivation, Method = ""{null}"", Result = ""{Not yet computed}"".",,,,,,
88061015,773,Issue,"What about if you do this?It's hard to say what might be causing the task to not execute (I'm not sure what sort of application you're running here) but this is how you can force the program to block until the task completes. By GitHub resourse do you mean GitHub local client?Rather than point to your GitHub Enterprise environment, could you try it against GitHub?If that works, perhaps there's some networking-specific problem at play here...",,,,,,
88154765,773,Issue,"Hi, thanks, I will try this and let you know.On 31-Mar-2015 5:32 PM, ""Brendan Forster"" notifications.com wrote: What about if you do this?  var contents = client.Repository.Content.GetContents(""owner"", ""reponame"", ""FilePath""); contents.Wait(); var result = contents.Result;  It's hard to say what might be causing the task to not execute (I'm not sure what sort of application you're running here) but this is how you can force the program to block until the task completes.  By GitHub resourse do you mean GitHub local client?  Rather than point to your GitHub Enterprise environment, could you try it against GitHub?  var github = new GitHubClient(new ProductHeaderValue(""OctokitTests"")); var readme = await github.Repository.Content.GetReadme(""octokit"", ""octokit.net""); Debug.Assert(""README.md"" == readme.Name);  If that works, perhaps there's some networking-specific problem at play here...  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
89974104,773,Issue,Closing this until more information is made available,,,,,,
89974177,772,Issue,Fixed in #771,,,,,,
84998007,771,Issue,Nice little sample of what errors for this convention test will look like :grimacing:,,,,,,
85020142,771,Issue,As long as AppVeyor gives me a nice green :white_check_mark: this is ready for reviewcc,,,,,,
85740517,771,Issue,this would be caught in the SyncObservableInterfaces test though...so might not be urgently needed.That was my thinking on this too. I think we can drop this unless there's another reason to test the observable interfaces explicitly...,,,,,,
85768733,771,Issue,Dropped :smiley:,,,,,,
89972027,771,Issue,Thanks heaps for working through this!,,,,,,
84541408,770,Issue,:thumbsup: might have some overlap with the convention test I added in #760 but I'm fine for them to co-exist for a while...,,,,,,
89974167,770,Issue,Fixed in #771,,,,,,
89974154,769,Issue,Fixed in #771,,,,,,
89974149,768,Issue,Fixed in #771,,,,,,
84502633,766,Issue,Thanks!,,,,,,
95206669,765,Issue,When this will be merged?,,,,,,
95267659,765,Issue,"not sure - were you waiting the complete ""get actual content"" step as well? that code hasn't been implemented yet...",,,,,,
95317383,765,Issue,"That'd be my fault, I was trying to come up w with a good solution for getting the contents of the file and then we got super busy at work.I might have some time this weekend to have another look at it again.---From: Nikolay Kostovmailto:notifications.comSent: ‚Äé23/‚Äé04/‚Äé2015 0:29To: octokit/octokit.netmailto:octokit.net.github.comCc: Henrik Anderssonmailto:henrik.a.andersson.comSubject: Re: [octokit.net] Repository Get Archive Link (#765)When this will be merged?---Reply to this email directly or view it on GitHub:",,,,,,
95450173,765,Issue,I only need link to the archive. :) And this is related to my #784,,,,,,
95671829,765,Issue,"if you find yourself still struggling to make time for it, I'm happy to short this PR and just merge in the archive link stuff.",,,,,,
95710664,765,Issue,"Happy for you to merge this PR now, and I'll send a new one for the content stuff :+1:",,,,,,
100186339,765,Issue,![],,,,,,
100413368,765,Issue,this just went out in `v0.11` -,,,,,,
100435283,765,Issue,", awesome! Thanks!",,,,,,
83811414,763,Issue,:yum:,,,,,,
83817861,763,Issue,Just waiting on that greeeeeen.,,,,,,
83771050,762,Issue,"Heh, was waiting to see when I'd be back in this code. Removing _one_ label isn't a scenario I'd thought about when I was in .Perhaps a method `AddLabels` that takes an enumerable of labels? Would that make you happier?cc",,,,,,
83772791,762,Issue,Given my code the new overload wouldn't matter but I imagine it could be helpful to other people. It's enough for me to know this intended behaviour.Am curious why we treat Labels different and leave as (null / no change) but don't do the same for the others such as Body? (unless that behaviour has changed as well).,,,,,,
83773983,762,Issue,"Am curious why we treat Labels different and leave as (null / no change) but don't do the same for the others such as Body? The milestone and labels are handled slightly differently to the other fields in the API on PATCH: I know I can make this clearer in our API, this feedback is great :sparkles:",,,,,,
83777455,762,Issue,Yeah I just discovered the `IssueUpdate.Milestone` `null` vs `new int?()`.Thanks,,,,,,
83523003,761,Issue,"The public setter has been removed due to it clashing with an [FxCop rule]. I thought I had an integration test to demo this specific endpoint, but I don't.The collection is already instantiated in [the constructor] so it's just a matter of adding elements to the collection:If you feel up to improving this API, I can reopen this issue and we can discuss it further...",,,,,,
83528008,761,Issue,"Hi, thanks for the quick response. The .Add(), why create a new label? It takes in a string, so just putting the label name is good, yeah?",,,,,,
83761254,761,Issue,"The .Add(), why create a new label? It takes in a string, so just putting the label name is good, yeah?Gah, my bad. This is what happens when you reply to things late at night.I'll edit that snippet above to reflect this.",,,,,,
84610336,760,Issue,"While writing some tests for `ObservableRepositoriesClient.GetAllPublic(int since)` I ran into some issues...in `ConnectionExtensions.GetPages` the `resp.HttpResponse.ApiInfo` object is `null`, the same test but calling `ObservableRepositoriesClient.GetAllPublic()` works just fine...is this something that you are aware of (couldn't find any raised issues on the matter)? If not, I can dive into some debugging to try and find the culprit :smile:",,,,,,
84716723,760,Issue,could it be that the mock setup isn't returning the right object any more? Aside from that I'm not quite sure...,,,,,,
84731920,760,Issue,No idea :grimacing: will take a look later on tonight and see if I can figure out what is going wrong.,,,,,,
84970911,760,Issue,Well...colour me :flushed: turns out the issue was the person typing on the keyboard. I hadn't setup the mock object properly. :sob: It's working now that I've got it setup correctly.,,,,,,
160651105,760,Issue,Are we planning to bring this into the main branch?,,,,,,
160760484,760,Issue,"probably not - the branch history makes it look like I was hacking it in (which I was). I'll see if I can rebase it on top of the current `master`, otherwise I might gradually roll it out (use Roslyn to suggest code fixes, rather than fail the build?)",,,,,,
160762553,760,Issue,Thanks! Paging would be a feature would cause me to go directly to the API because it does not exists.,,,,,,
160762910,760,Issue,"yep, totally understandable. I had an idea to make this easier to roll out, now that we're on VS2015. I'll see if I can bash that out so that this can be rolled out incrementally (and others can chime in).",,,,,,
160817389,760,Issue,That would be awesome! I would certainly try and contribute to it.,,,,,,
161138421,760,Issue,"Would love to see something to provide pagination, especially with etags not being supported. Using this to make unauthenticated requests is almost pointless since you can hit your rate limit so quickly. :(",,,,,,
183824096,760,Issue,"After #1105 came up again I realised I wanted to revive this PR. So I've dropped every instance of updating the API here for just one endpoint, so the diff is less noisy. ~~There's a broken test here I need to fix, but the diff is mostly ready for review.~~ IT'S GREEN! IT'S GREEN!Would love some feedback on this, as I think it's something we could roll out incrementally once we have the core pieces in place.",,,,,,
183873153,760,Issue,"Alright, pausing here feels good.I'll annotate some of the interesting bits to help with the review process.",,,,,,
183894811,760,Issue,"Well im not sure if i count as your ""someone else"" being relatively new to contributing on octokit.net, however I've reviewed the changes and have made a few comments inline.In general as an end user this is great and gives all the expected/desired flexibility in setting page size, number of pages and start page number.As a contributor I think the implementation makes sense and is done in a way that seems fitting with the style of octokit.net once you dig down into those lower `ApiConnection` type areas.The only annoyance/concern is around the fact that with so many overloads on `ApiConnection`, it looks like it's going to possibly be a bit trickier when writing unit tests where the `NSubstitute` mocks start to need things like `(Dictionary) null` and so on.  Not sure if there's any way to avoid that though.From the perspective of ""someone else"" I give it double thumbs :+1: :+1: ![LGTM]",,,,,,
183971242,760,Issue,"The only annoyance/concern is around the fact that with so many overloads on `ApiConnection`, it looks like it's going to possibly be a bit trickier when writing unit tests where the `NSubstitute` mocks start to need things like (`Dictionary`) null and so on. Not sure if there's any way to avoid that though.If we structure the overloads right (that is, funnel the various `GetAll` overloads into one implementation), perhaps we'll see negligible changes to the tests, e.g.And if the actual implementation ends up invoking the `IConnection.Get();client.Received().GetAll u.ToString() == ""repos/fake/repo/releases""),    null,    ""application/vnd.github.v3"",    Args.ApiOptions);`",,,,,,
183990101,760,Issue,"you've done plenty to contribute to Octokit in recent times, so your feedback here is totally welcome! :heart:",,,,,,
185524942,760,Issue,feeling pretty good about the direction of this looking at the last couple of tweaks in e93dc53e8c234f0c4f44b35bbc9f7de0648b5346,,,,,,
185532976,760,Issue,Looks good!  Takes care of my quibble around unit test parameter checking voodooless nulls in one's life are always a good thing :+1:,,,,,,
188035450,760,Issue,"~~Just a heads up, this build isn't triggering our AppVeyor CI checks - chasing up with the support team about what's happening.~~ nevermind, fixed",,,,,,
193493000,760,Issue,are you able to have a look over this and see how you feel about this?,,,,,,
194116356,760,Issue,:heart_eyes: :+1:,,,,,,
195937617,760,Issue,"I'll prep my script to generate the tasks for this, and then merge this in (probably tomorrow) so we can get this rolled out across the entire library in time for the next release...",,,,,,
196138059,760,Issue,And the milestone is opened  so I'm going to merge this in _finally_...,,,,,,
83040265,758,Issue,:sparkles: Thanks!,,,,,,
82728569,756,Issue,"Also, SourceLink really didn't like this PR:  - why?",,,,,,
531600113,756,Issue,"I don't remember what this was all about. Thanks, past me.",,,,,,
82661554,755,Issue,"What's up with these newline warnings? Some .gitattributes TARFUN? :confused:  warning: CRLF will be replaced by LF in Octokit/Clients/AssigneesClient.cs. The file will have its original line endings in your working directory. warning: CRLF will be replaced by LF in Octokit/Clients/FollowersClient.cs. The file will have its original line endings in your working directory. warning: CRLF will be replaced by LF in Octokit/Clients/GistsClient.cs. The file will have its original line endings in your working directory. warning: CRLF will be replaced by LF in Octokit/Clients/OAuthClient.cs. The file will have its original line endings in your working directory. warning: CRLF will be replaced by LF in Octokit/Clients/PullRequestsClient.cs. The file will have its original line endings in your working directory. warning: CRLF will be replaced by LF in Octokit/Clients/RepoCollaboratorsClient.cs. The file will have its original line endings in your working directory. warning: CRLF will be replaced by LF in Octokit/Clients/StarredClient.cs. The file will have its original line endings in your working directory. warning: CRLF will be replaced by LF in Octokit/Clients/TeamsClient.cs. The file will have its original line endings in your working directory.Git insists that the files has changed, even though they haven't. At least not intentionally :stuck_out_tongue_closed_eyes:",,,,,,
82662207,755,Issue,"SourceLink requires the files to end in `LF` to index correctly - so if you don't have `git config core.autocrlf input` set you're just gonna keep seeing those warnings.I thought I'd documented that somewhere, but I've added a reminder",,,,,,
82662582,755,Issue,"Is that a good setting to use, globally? I guess I have it on `true` (on Windows) now. Isn't there some way to set it and check it into the repo?",,,,,,
82662725,755,Issue,"I've just enabled it for this repository, but I'll elaborate on the setup further in that issue.",,,,,,
82724543,755,Issue,Just one failing test to look at:,,,,,,
82984360,755,Issue,"WTF? :confused:  Starting Target: SourceLink   source linking C:\projects\octokit-net\Octokit\bin\Release\Net45\Octokit.pdb  1 source files do not have matching checksums in the git repository  no checksum match found for C:\projects\octokit-net\Octokit\Clients\MiscellaneousClient.cs  Running build failed. Error: System.Exception: 1 source files do not have matching checksums in the git repository    at FSI_0001.SourceLink.GitRepo.VerifyChecksums(GitRepo x, IEnumerable`1 files) in C:\projects\octokit-net\tools\SourceLink.Fake\tools\SourceLink.fsx:line 36    at FSI_0001.Build.clo-16.Invoke(String pf) in C:\projects\octokit-net\build.fsx:line 107    at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source)    at FSI_0001.Build.clo-15.Invoke(Unit _arg9) in C:\projects\octokit-net\build.fsx:line 99    at Fake.TargetHelper.runTarget(String targetName) in D:\code\fake\src\app\FakeLib\TargetHelper.fs:line 331",,,,,,
83039904,755,Issue,"is looking into this. At this point, I think we should temporarily stop using SourceLink. , mind removing the following two lines and pushing again and see if it builds correctly?",,,,,,
83054805,755,Issue,I give up :sob:,,,,,,
83141093,755,Issue,"Don't worry about it , I tracked this down to . You can cherry-pick that in...",,,,,,
83147308,755,Issue,"Ok, here we go again... :smile:",,,,,,
83152936,755,Issue,Phew! :sweat:,,,,,,
83155331,755,Issue,![],,,,,,
82631431,754,Issue,"Code looks good. Just waiting on the green build and the merge conflict, otherwise :thumbsup:",,,,,,
82631824,754,Issue,I need to rebase this real quick.,,,,,,
82660911,754,Issue,:station:,,,,,,
82728456,754,Issue,![],,,,,,
82728480,754,Issue,"And by YOLO I mean ""I'm gonna look into why this broke SourceLink""",,,,,,
82602812,753,Issue,![],,,,,,
83321073,752,Issue,Just waiting for the :white_check_mark: from AppVeyor :smiley:,,,,,,
83326425,752,Issue,LGTM,,,,,,
78407435,751,Issue,Could you add the `IssueEventTests` file to the `Octokit.Tests-NetCore45` project?,,,,,,
78409748,751,Issue,There's also an integration test you can write around this bug:,,,,,,
81520055,751,Issue,Flawless Victory!![],,,,,,
78209881,749,Issue,"thanks for the detailed writeup.We have similar behaviour for starring and unstarring Gists, and I've not seen the [integration tests] fail in this way.For a starting point, I'd add a failing integration test for this - steal some of the code from [here] and adapt it accordingly to get you started.",,,,,,
78276922,749,Issue,"Are there any known issues with timing on the integration tests? I've set up a test account and organization, set the environment variables, gotten the tests to run, etc. However, most of the tests are failing with a `NotFoundException`. When I look at the test account, I do see a whole bunch of time-stamped repositories were created, so it's not a credentials problem. I obviously need to get past execution of the existing tests before thinking about creating new ones...",,,,,,
78279093,749,Issue,"Also, has anyone else reported issues getting the tests to show up in Visual Studio (I'm using VS 2013 Pro Update 4)? My Test Explorer is empty and I've attempted to clear the cache as recommended at  without success. It would be easier to troubleshoot the issues I'm having with the integration tests if I could run them in isolation from VS and/or debug them without having to use the build script each time. Unfortunately, I'm not familiar enough with FAKE, F#, or xUnit to figure out from the FAKE script what commands to run from the prompt.",,,,,,
78282695,749,Issue,"So it turns out I'm getting the following exception from the xUnit test runner during discover:I guess that makes this an xUnit problem, so I'll see if I can follow up there.Sorry for the comment flood. Just getting frustrated that it's taking me several hours to set up the build and test environment for what is probably going to be a five minute fix. I'll keep pounding away and try not to spam the issue any more than I have to until I get everything ready for patching.",,,,,,
78303004,749,Issue,"So I know I promised I'd keep the comments to a minimum, but this is just too strange.First, I could not get the Visual Studio xUnit runner to work for the life of me. I played around with it some more and finally got it to consistently hang on discovering tests in `Octokit.Tests.Integration.dll`:Can't get past that point though so, okay, no VS test runner. Figured out how to run from the command line:The problem is, the test kept failing on different lines. Sometimes it would be the first assertion, sometimes the second, etc. That led me to think it might be a timing problem. I finally got it to consistently succeed by changing the test code (notice the `Thread.Sleep()` calls in-between each API invocation):It looks like it's got to be a fairly long time too - 4 or 6 seconds wouldn't pass consistently. So that got _this_ test passing, but all the other integration tests are a mess on my system. Most fail at arbitrary assertion points that seem to change from one run to the next. That probably just suggests more timing problems, but it does make it hard/impossible to run the entire test suite.So that's where I'm at, _but here's the really, really strange thing_ - when the `CanStarAndUnstarAGist()` test failed part way through, this is what I saw in the GitHub UI:I waited for a solid 5 minutes thinking it might be some sort of eventual consistency problem, but it never changed. I also tried looking at it in a different browser in case there was some sort of browser caching going on, but it was the same. Once I got the test to pass using the sleep calls, it started acting normally again.![]So anyway, I've had about as much of this as I can take for a day. I'll come back tomorrow and attempt a test case and WIP PR for starring repos, though at this point it wouldn't surprise me if the issue I initially saw was somehow related to all these other timing problems and isolated to my own environment.",,,,,,
78308763,749,Issue,Is there some sort of server-side cache? Cache invalidation is Really Hard‚Ñ¢,,,,,,
78318277,749,Issue,"Okay, okay, I know I said I'd wait until tomorrow - so sue me.I wrote a test, and that unexpectedly worked without any additional modifications (with `Thread.Sleep()` calls) but I still couldn't get my little test case to work. In fact, attempting to star from the same user account and same repository in the test and then in LINQPad produced different results until I noticed one difference: the integration tests authenticate with username and password while the LINQPad test I was doing authenticated with a token.This works (`result == true` and repository gets starred):This does not work (`result == false`, but no exception, and repository does not get starred):I know the token is valid because I can do other things with it like list all the repositories starred by that user.This throws a `AuthorizationException` (I just changed one character in the token):So I'm thinking maybe at this point I don't fully understand the GitHub starring API. Sure enough, after a little more digging with additional personal tokens, I learned that starring a repository requires the `public_repo` OAuth scope and not the `user` scope - which doesn't make a whole lot of sense to me since `user` lets you view stars and it seems like starring should be a user-focused activity, but whatever.Problem solved. Congrats - I'm an idiot and there's nothing wrong with Octokit! (Though I'll add that the odd behavior of the UI after starring through the API is still really strange)",,,,,,
78368684,749,Issue,"Woah, lots of words here. Sorry to hear about all this pain you're going through just to run my tests :cry: I guess that makes this an xUnit problem, so I'll see if I can follow up there.Hold off on raising this until I've upgraded to xUnit 2.0 RC4 in #725 - I've encountered a similar issue in the past which was subsequently fixed by the team. Sure enough, after a little more digging with additional personal tokens, I learned that starring a repository requires the `public_repo` OAuth scope and not the `user` scope - which doesn't make a whole lot of sense to me since user lets you view stars and it seems like starring should be a user-focused activity, but whatever.This sounds like something I should document in the tests. I'm gonna keep this open and update the title to reflect what went down.",,,,,,
78374228,749,Issue,"Woah, lots of words here.I tend to do that :)Thanks for continuing to see this through. Just let me know when/if it would be helpful for me to rerun the tests or try anything else out.",,,,,,
78375606,749,Issue,I'll drop a comment in #725 when that's merged,,,,,,
89974326,749,Issue,apologies for not getting back to you sooner.We're now running xUnit 2 RTM tests on `master` - could you have a go at running the tests again and see if the problem is still present?,,,,,,
90704461,749,Issue,Awesome - works great now:![2015-04-07_15h13_08]No issues with the VS test runner in VS 2013. Tests that were previously failing or required timeouts appear to be working fine now too.,,,,,,
90732917,749,Issue,thanks for confirming,,,,,,
84222358,748,Issue,I'll take a :athletic_shoe: :football: at this one,,,,,,
84310744,748,Issue,"Looking at Octokit.rb the `Get Archive Link` method just returns the URL returned in the `Location` header, so I started thinking and thought I'd ask, for Octokit.net should we provide **two** methods:- one that just returns the URL in the `Location` header, and - one that (somehow) follows the redirect and returns the contents of the archive?",,,,,,
84311773,748,Issue,"Definitely have the first option. If the second option is easy enough to add in, I'd happily accept it as well...",,,,,,
84312464,748,Issue,First option is the easy one :grinning: It's the second one that will take some :thought_balloon:,,,,,,
112385426,748,Issue,Note: #808 will complete this feature (by introducing `GetArchive` which follows the received `302`) and the old `GetArchiveLink` will be obsoleted in a future release.,,,,,,
81347323,747,Issue,"I'll take this one, and #746 as it's in the same area",,,,,,
81513341,747,Issue,:thumbsup:,,,,,,
78007356,745,Issue,"This is a recent change as the API team wanted to close the security hole around letting third party integrations read the tokens that a user has:If you still want to access the `Token` you can use the `GetOrCreateApplicationAuthentication` method without setting `NewAuthorization.Fingerprint`. It won't return you all the authorizations, but for specific cases it should be a good enough workaround.I've written a test here which demonstrates this behaviour: is there any way to using GitHub API with Personal access tokens. or taking token with basic authorization?I'm not sure I understand the question. Could you expand on what you're trying to do here?",,,,,,
78183688,745,Issue,"i think my explain was not enough,, sorryactually i'm using github enterprise, so i dont wanna create ""Developer application"" that their own.so i dont use ClientId, ClientSecret properties,,,,thats why i wanna use Personal access tokens. i want 'Users' can take GitHub API with their own token... of course, they has id and password but is just only the way to get Autorization to get token,,simply, process that i want is,, user id and password ""basic authorization"" -> getting personal token -> create GitHubClients with 'the token'i want this process ^^ can i do process with Octokit? i hope you could get it! sorry for my poor explain! thank you :))",,,,,,
78006353,744,Issue,"thanks for the feedback! When I saw the tweet earlier today I was really excited to see what was on the way! However, one of the things I found a little frustrating was that there doesn't seem to be any options for timing out an Octokit call - some of the _gitHubClient.Activity.Starring.GetAllForUser(starrer) calls we make take an exceptionally long time to return. Yeah, this is something I've been putting off and pushing out for a while.Here's a TL:DR on the situation as it stands:- the API support pagination using the [Link] header whenever sets of results are returned- Octokit will auto-follow the pagination results until it's reached the end of the set- the end user will get the entire result setAnd this sucks for anything involved with wanting to control the # of pages returned or cancel an in-flight request. And in some cases the calls never get completed and silently fail.If you can recreate this (quite often it's related to a specific user account) I'd love to investigate this further. Could very well be an issue with how we're using the SDK, but regardless I'd like to have the option to time out individual requests.Yep, there's a couple of options at hand - and making it all work in an uncomplicated way is something I'll need to start working on Real Soon. With Rx, disposing the subscription is generally considered The Right Way to do that, so I'm not really worried about that scenario right now.A couple of ideas (one or the other or both could land in the framework):- the pagination work in #740 would help you constrain how much data you want. The initial feedback I've got on this seems promising, but it's a big change to everything so I don't want to rush it.- `HttpClient` supports providing a `CancellationToken` when it's making a request - perhaps we should have overloads on the `GetAll` operation so that you can cancel the in-flight requests (this should also kill the pagination, but I need to confirm this). This feels better than reinventing the wheel.I'd love to hear more about your scenario (is pagination better than cancellation?) so I can focus things in the short-term. I see that in #587 you added the ability to set a default timeout across the entire connection - glad I know about it now but it's not obvious or easy to find :pThat would work for a single request - we added this because uploading release assets takes a while - but for our scenario where we reset the timer for each request (due to pagination) it probably won't be enforced.",,,,,,
78142636,744,Issue,"HttpClient supports providing a CancellationToken when it's making a request - perhaps we should have overloads on the GetAll operation so that you can cancel the in-flight requests (this should also kill the pagination, but I need to confirm this). This feels better than reinventing the wheel.This is my preference - feels idiomatic :) If you can recreate this (quite often it's related to a specific user account) I'd love to investigate this further.That's what it looks like - I didn't dig in with something like Fiddler to see what was happening at the HTTP level but we weren't receiving any rate limit exceptions or anything like that. If I had to guess, these long-running queries were for users who had starred a large number of repositories. The ""Robert Scoble"" effect for Github :p In our scenario cancellation is the preferred way of doing it - being able to mark N number of requests as failed and return partial results from the operations that were successful is what's most appropriate in our specific scenario, although it's worth noting that our scenario is for educational purposes only :p   thanks for the feedback! When I saw the tweet earlier today I was really excited to see what was on the way!We announced it to our attendees (who've done the previous two units over the past couple of weeks) this morning - seems like a hit so far:",,,,,,
89975589,744,Issue,I'm feeling that #760 is a more familiar option for developers than cancellation tokens (and more useful in general):Once that lands on `master` I'll close this out.Let me know if you have any other thoughts on either approach.,,,,,,
77650837,743,Issue,:thumbsup: on release notes.,,,,,,
77651154,743,Issue,thanks. I'll publish this up after the weekend :v:,,,,,,
77821746,743,Issue,And this is live,,,,,,
77484321,742,Issue,:ship:,,,,,,
77484426,742,Issue,just going to give this a once-over to ensure it matches up with our other conventions before merging,,,,,,
77454848,741,Issue,Thanks!,,,,,,
77122273,740,Issue,I'll pause here before going further and see if people have feedback on this approach.,,,,,,
78246446,740,Issue,"Went back and forth with  about this API stuff, and he pointed out that this change will make the task returned from `DeferredRequest` cold. And that's going against the [Task-based Asynchronous Pattern] book which recommends starting the task as early as possible. ""All tasks returned from TAP methods must be ‚Äúhot.‚Äù **If a TAP method internally uses a Task‚Äôs constructor to instantiate the task to be returned, the TAP method must call Start on the Task object prior to returning it.** Consumers of a TAP method may safely assume that the returned task is ‚Äúhot,‚Äù and should not attempt to call Start on any Task returned from a TAP method. Calling Start on a ‚Äúhot‚Äù task will result in an InvalidOperationException (this check is handled automatically by the Task class).""I don't think this is impossible to do within our current infrastructure, but right now I need to be mindful of this.",,,,,,
82603177,740,Issue,Been thinking on different approaches. Closing this one for now.,,,,,,
77033099,739,Issue,Flawless Victory! :sparkles:![selfie-1],,,,,,
77823441,738,Issue,perhaps this is something missing from the docs - is this a public repository I could run a test against to confirm this behaviour?,,,,,,
77867360,738,Issue,"It is a public repository. I got the error running the command onEric Hexterblog | info | On Mon, Mar 9, 2015 at 4:36 AM, Brendan Forster notifications.comwrote:   perhaps this is something missing from the docs - is this a public repository I could run a test against to confirm this behaviour?  ##   Reply to this email directly or view it on GitHub .",,,,,,
77941093,738,Issue,:heart:,,,,,,
77988955,738,Issue,"Weird, I couldn't trigger the issue using this test harness (against b3859cf6eecc510d484d7f846e855fd07952a0b0): am I missing something?",,,,,,
77992536,738,Issue,So I was using client.Issue not client.Activity,,,,,,
77995293,738,Issue,Found it:,,,,,,
78399814,738,Issue,I'm going to have a go at fixing this one.,,,,,,
78400843,738,Issue,"thanks!I'll follow up with the team whether this should be documented, but for now I think we should just Fix The Bug.",,,,,,
81530323,738,Issue,This will go out in the next release,,,,,,
83333503,738,Issue,This has been deployed in v0.8.0,,,,,,
76847089,737,Issue,"There's a bit of a hack in the GitHubSerializerStrategy class (in SimpleJsonSerializer.cs) to get it to deserialize the payload to the correct type. Also, not sure if you'd prefer the tests for this to be in a separate file (currently in EventsClientsTests.cs).",,,,,,
77132953,737,Issue,"There's a bit of a hack in the GitHubSerializerStrategy class (in SimpleJsonSerializer.cs) to get it to deserialize the payload to the correct type.That's the best place to put it.  Also, not sure if you'd prefer the tests for this to be in a separate file (currently in EventsClientsTests.cs).Not really fussed by this. Would it be possible to get a couple of integration tests in place as well?",,,,,,
77140874,737,Issue,"I'll have a go at the integration tests for the simpler event types (commit comment, issue comment, etc.), but testing the events you get when you create a PR, push to a repo, fork a repo, etc. would be a lot harder.",,,,,,
77247168,737,Issue,"I'll have a go at the integration tests for the simpler event types (commit comment, issue comment, etc.), but testing the events you get when you create a PR, push to a repo, fork a repo, etc. would be a lot harder.If you can find some archived events which you can fetch by a specific id that might be easier to test...",,,,,,
77727021,737,Issue,"I've added the integration tests, they don't cover all the event types but they're better than nothing :)",,,,,,
77828432,737,Issue,Tests are :thumbsup: - just that change with `[Fact]` -> `[IntegrationTest]` to ensure credentials are setup right.,,,,,,
77829794,737,Issue,no problem - done :),,,,,,
78209444,737,Issue,![],,,,,,
77002997,736,Issue,Think i will give this a go. Seems like an easy code-fix so i can focus on understanding the github workflow.,,,,,,
76650035,735,Issue,is no longer returned from the API for this endpoint. The only two counters we return here are `stargazers_count` (the number of users who have starred a repo) and `watchers_count` - which we are no longer showing because it's not correct and to be deprecated as per #699![screen shot 2015-03-02 at 12 50 12 pm]The right way to retrieve the watchers for the repository is to use the [Watching] API: let me know if I've missed anything,,,,,,
76592296,734,Issue,And this is live,,,,,,
76600807,734,Issue,"Yep, solved my problem thanks.",,,,,,
76589332,733,Issue,If you're testing this in 0.7.x this might involve the changes to the `/user/repos` endpoint documented [here] - are you seeing organization repositories in the API response?,,,,,,
76589448,733,Issue,"Yes it was 0.7.1.I don't know if I'm seeing my organizations or not because after about 100 pages I tend to stop debugging. It's downloading _all_ the repos, not just mine.",,,,,,
76589624,733,Issue,"Yeah, that doesn't sound good at all. I thought I might have messed something up recently but #691 is the only one I can think of - and it's not merged yet.Can you grab a sample repsonse from Fiddler (just one, not all 100 :grinning:) and send it to me over email or Skype?",,,,,,
76534778,732,Issue,Ah. Ok. Mind sending a pull request? We should just make that ctor empty and allow setting the term property.,,,,,,
77687101,732,Issue,"I tried to fix the issue but I found something else:This is not a valid request:In the error message it says ""Searches that use qualifiers only are not allowed."" but this request is valid:I think there is a misconception in API.",,,,,,
116763681,732,Issue,I added a pull request adding no-args constructor since I needed the feature.,,,,,,
658295596,732,Issue,"Can someone tell me why I still can't search without a term?Am I doing something wrong?*  throws: `new SearchCodeRequest(null, owner, repositoryName)`* can't specify the owner/repository with the default ctorThanks!",,,,,,
81002897,731,Issue,"This should now be :ok_hand: for review, as long as the AppVeyour build doesn't go :boom: :wink: /cc",,,,,,
81250923,731,Issue,"Looks good, just a couple of documentation-related things.I'll kick the tires on the tests today and see what shakes out :v:",,,,,,
81274321,731,Issue,"Dun! :triumph: **Side Note:** I was able to get around the Integration Tests time out issue, by just running my Integration Tests from VS.",,,,,,
81275509,731,Issue,"I was able to get around the Integration Tests time out issue, by just running my Integration Tests from VS.Yeah, that's what I do too (because it doesn't enforce the timeout :wink:)",,,,,,
81527921,731,Issue,All looks pretty great to me. Thanks for finishing off this feature!![],,,,,,
100124768,730,Issue,"Would it be possible to add some tests for this? I'm not sure how valuable it'd be to target references that might be transient, but look at the integration tests in `RepositoryContentsClientTests` for some inspiration.",,,,,,
100333343,730,Issue,"going to close this, will reopen when i'm ready",,,,,,
124729928,730,Issue,![selfie-0],,,,,,
76326694,729,Issue,cc,,,,,,
76326933,729,Issue,"Prepare to laugh as I found an easy way around this by abusing some objects. Basically just inherited the HttpClientAdapter, made those methods public so I could build the request/response, and referenced that.",,,,,,
76329009,729,Issue,"![]But more seriously, this is something we've kicked around a bunch in the past - I've not settled on a design I'm personally happy with, but    and  are interesting discussions to follow.I definitely think our recent changes has made this harder - thanks for the specifics on issues you're encountering...",,,,,,
76329451,729,Issue,You may well be the first person we've run into who's tried to implement our `IHttpClient`! :smile:Would welcome some PRs that improve the API.,,,,,,
76761038,729,Issue,"I can definitely come up with a PR. My two big use cases for toying around with the IHttpClient are:- Instantiate a different HttpClient Handler (in this cause it's the ModernHttpClient)- Utilize an on-disk caching via Akavache which means the IResponse object should be in one way shape or form available for serialization and if not, it should be easy to persist the object in another class and then reform the IResponse object after deserialization.I think this will be relatively easy as much of the logic is all right there but just needs a visability change or  adjustment to make it slightly more flexable. Either way, I'll post a PR soon.",,,,,,
108162733,729,Issue,Should be straightforward to use a different HttpClientHandler with the changes in,,,,,,
484793212,729,Issue,"I also need to swap out the HttpClient for a different implementation. In my case it's because Blazor nuked its SendAsync() method, so now nothing from Octokit works under Blazor. Reference:* []* [] So far I've been unable to figure out how to use the overload for a Connection class that will let me use my own. This feels like it has to be the approach to go in Blazor: []",,,,,,
76269688,728,Issue,This is common. See these for examples of data hosted on GitHub:- -,,,,,,
76273274,728,Issue,"Thanks for the feedback , however this is just the repository for managing the .NET wrapper around the GitHub API. You can contact the API developers directly by using support.com to discuss this further.",,,,,,
76074749,727,Issue,cc  as he's more familiar with the serialization rules than I am,,,,,,
76123180,727,Issue,![selfie-0],,,,,,
76637218,726,Issue,Thanks !,,,,,,
76639627,726,Issue,:dancers: :confetti_ball:,,,,,,
77824025,725,Issue,Ready for review :metal:,,,,,,
82213465,725,Issue,"when you get a moment, could I get a :thumbsup: on this? If you're too busy that's :cool:",,,,,,
82461738,725,Issue,I'm happy! :smile:,,,,,,
75733660,723,Issue,"Oops, meant to target `release-candidate`",,,,,,
75739656,723,Issue,Wouldn't it be cool if it was possible to - ahem - re-target PRs? :innocent:,,,,,,
75747992,723,Issue,![],,,,,,
75731193,722,Issue,![],,,,,,
75723850,721,Issue,please keep me updated about this. I need to update  when you change it again.,,,,,,
75723980,721,Issue,:thumbsup:,,,,,,
75870714,721,Issue,Fixed in #724 and shipped in v0.7.1,,,,,,
75870633,720,Issue,This is live cc,,,,,,
75877942,720,Issue,![thumbsup-lift-head],,,,,,
75889927,720,Issue,"That made my dayOn Tuesday, February 24, 2015, Phil Haack notifications.com wrote: [image: thumbsup-lift-head]   ##   Reply to this email directly or view it on GitHub .## Eric Hexterblog | info |",,,,,,
76083185,719,Issue,I'd also be pretty interested to hear what any experts have to suggest. I've been using the portable version and having had any issue.,,,,,,
531600021,719,Issue,Closing this out as we target .NET Standard 1.1 which I believe is Good Enough‚Ñ¢.Please open a fresh issue if there's additional work we could do here.,,,,,,
75692369,718,Issue,", sounds good to me!",,,,,,
75703387,718,Issue,Ready for review,,,,,,
75707312,718,Issue,Nice!,,,,,,
75683435,717,Issue,![],,,,,,
75684733,717,Issue,"With the portable version out, is there even a need for the Monotouch/Monoandroid versions? Attempting to track down my issue with the `Invalid Format` exception I accidently opened the `XamarinStudio` solution. But I'm not sure that it's even needed anymore?",,,,,,
75685408,717,Issue,"It's been a while since I opened Xamarin Studio (expired subscriptions also doesn't help), so I'm not quite sure whether I can/should drop it.",,,,,,
75708205,717,Issue,"God I would love it if we could drop it. I am not set up to test it and it would be one lest thing to worry about.  At this point, I'm ready to trust your call on this. I assume you've tested it out a bit?",,,,,,
75710028,717,Issue,"I'm happy to accept this PR, but I'll also open a discussion about whether we need to support separate MonoTouch/MonoDroid projects these days...",,,,,,
75711029,717,Issue,God I would love it if we could drop it. ![],,,,,,
75681601,714,Issue,Flawless victory!,,,,,,
75479993,712,Issue,Ready for review,,,,,,
75497608,712,Issue,"Did a quick check of the docs to see if there would be any problems with old GHE installs. [11.10.340] has this value, as does [2.0].Should I worry about a fallback value nonetheless?",,,,,,
75610863,712,Issue,I think it's alright if we don't. Will this crash if given a JSON dictionary without this key?,,,,,,
75627620,712,Issue,"I can add a test for this. I'm pretty sure (because of how enums work) is that it'll default to `User` (the first value), so that was why I was thinking about making it nullable.",,,,,,
75628170,712,Issue,"I see, I don‚Äôt think we should consider that valid.",,,,,,
75647821,712,Issue,"As this is introducing _further_ breaking changes (and we're not so urgent on getting this out the door), I'll retarget this against `master` and not hold up shipping the release.",,,,,,
75153217,711,Issue,Thanks!,,,,,,
75204257,711,Issue,":thumbsup: Do you know when the next release is due, ?",,,,,,
75480127,711,Issue,I've been testing a 0.7.0 release over the last few days (which has some significant internals changes - [details here]) - after that there's a few minor bugfixes which I'll bundle up later this week...,,,,,,
75711392,711,Issue,"I've got no more blockers on this, so I'll be publishing up a bugfix release in the next day or so.",,,,,,
75712459,711,Issue,Great stuff! :-),,,,,,
75473294,710,Issue,Cherry-picked into the `release-candidate` branch due to my own bad life choices,,,,,,
75136468,709,Issue,:thumbsup:,,,,,,
75134630,708,Issue,"If you'd like this to go out sooner (hint: yes), can you target `release-candidate`?I'm aiming to do some end-to-end testing on Monday for that and ship it if nothing dramatic comes up.",,,,,,
75135922,708,Issue,:+1:,,,,,,
75137668,707,Issue,Looks like something related to [Issue Events] - am I on the right track?,,,,,,
75139811,707,Issue,"Yes, [EventInfoState] should have `Head_Ref_Deleted` and `Head_Ref_Restored` as members instead of `HeadRefDeleted` and `HeadRefRestored`.",,,,,,
75140405,707,Issue,"that's weird, I could have sworn we'd handled `_` elsewhere in the codebase...",,,,,,
75140893,707,Issue,[Yes! My memory **does** works from time to time!],,,,,,
75148624,707,Issue,PR for this:,,,,,,
76809208,707,Issue,"I still get this error: on nuget version 7.1, Is this a different problem?I see the following line which stripes out hyphens but not the underscores. Exception:Requested value 'head_ref_deleted' was not found.Exception Details: System.ArgumentException: Requested value 'head_ref_deleted' was not found.Source Error: Line 42: Line 43:             IReadOnlyList response = await client.Issue.GetForRepository(user, repository, new RepositoryIssueRequest() { State = ItemState.All });Line 44:             IReadOnlyList events = await client.Issue.Events.GetForRepository(user, repository);Stack Trace: [ArgumentException: Requested value 'head_ref_deleted' was not found.]   System.EnumResult.SetFailure(ParseFailureKind failure, String failureMessageID, Object failureMessageFormatArgument) +4288471   System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult) +11176061   System.Enum.Parse(Type enumType, String value, Boolean ignoreCase) +78   Octokit.Internal.GitHubSerializerStrategy.DeserializeObject(Object value, Type type) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Http\SimpleJsonSerializer.cs:94   Octokit.PocoJsonSerializerStrategy.DeserializeObject(Object value, Type type) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\SimpleJson.cs:1449   Octokit.Internal.GitHubSerializerStrategy.DeserializeObject(Object value, Type type) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Http\SimpleJsonSerializer.cs:118   Octokit.PocoJsonSerializerStrategy.DeserializeObject(Object value, Type type) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\SimpleJson.cs:1476   Octokit.Internal.GitHubSerializerStrategy.DeserializeObject(Object value, Type type) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Http\SimpleJsonSerializer.cs:118   Octokit.SimpleJson.DeserializeObject(String json, Type type, IJsonSerializerStrategy jsonSerializerStrategy) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\SimpleJson.cs:580   Octokit.SimpleJson.DeserializeObject(String json, IJsonSerializerStrategy jsonSerializerStrategy) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\SimpleJson.cs:592   Octokit.Internal.SimpleJsonSerializer.Deserialize(String json) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Http\SimpleJsonSerializer.cs:21   Octokit.Internal.JsonHttpPipeline.DeserializeResponse(IResponse response) in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Http\JsonHttpPipeline.cs:66   Octokit.d__1f`1.MoveNext() in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Http\Connection.cs:437   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52   System.Runtime.CompilerServices.ConfiguredTaskAwaiter.GetResult() +24   Octokit.Internal.d__0.MoveNext() in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Http\ReadOnlyPagedCollection.cs:31   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52   System.Runtime.CompilerServices.ConfiguredTaskAwaiter.GetResult() +24   Octokit.d__0`1.MoveNext() in c:\Users\shiftkey\Documents\GitHub\octokit.net\Octokit\Clients\ApiPagination.cs:28   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52   System.Runtime.CompilerServices.TaskAwaiter`1.GetResult() +24   OctokitDemo.Controllers.d__3b.MoveNext() in c:\Users\Eric\Documents\Github\octokit-oauth-demo\OctokitDemo\Controllers\Cfd.cs:44   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52   System.Runtime.CompilerServices.TaskAwaiter`1.GetResult() +24   OctokitDemo.Controllers.d__d.MoveNext() in c:\Users\Eric\Documents\Github\octokit-oauth-demo\OctokitDemo\Controllers\HomeController.cs:85   System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) +93   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +52   System.Runtime.CompilerServices.TaskAwaiter.GetResult() +21   System.Threading.Tasks.TaskHelpersExtensions.ThrowIfFaulted(Task task) +61   System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(IAsyncResult asyncResult) +114   System.Web.Mvc.Async.b__36(IAsyncResult asyncResult) +66   System.Web.Mvc.Async.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult) +47   System.Web.Mvc.Async.WrappedAsyncResultBase`1.End() +135   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +102   System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(IAsyncResult asyncResult) +49   System.Web.Mvc.Async.AsyncInvocationWithFilters.b__3d() +117   System.Web.Mvc.Async.b__3f() +323   System.Web.Mvc.Async.b__32(IAsyncResult asyncResult) +44   System.Web.Mvc.Async.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult) +47   System.Web.Mvc.Async.WrappedAsyncResultBase`1.End() +135   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +102   System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(IAsyncResult asyncResult) +50   System.Web.Mvc.Async.b__1c() +72   System.Web.Mvc.Async.b__1e(IAsyncResult asyncResult) +185   System.Web.Mvc.Async.WrappedAsyncResult`1.CallEndDelegate(IAsyncResult asyncResult) +42   System.Web.Mvc.Async.WrappedAsyncResultBase`1.End() +132   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +56   System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(IAsyncResult asyncResult) +40   System.Web.Mvc.Controller.b__1d(IAsyncResult asyncResult, ExecuteCoreState innerState) +34   System.Web.Mvc.Async.WrappedAsyncVoid`1.CallEndDelegate(IAsyncResult asyncResult) +70   System.Web.Mvc.Async.WrappedAsyncResultBase`1.End() +138   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +59   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +40   System.Web.Mvc.Controller.EndExecuteCore(IAsyncResult asyncResult) +44   System.Web.Mvc.Controller.b__15(IAsyncResult asyncResult, Controller controller) +39   System.Web.Mvc.Async.WrappedAsyncVoid`1.CallEndDelegate(IAsyncResult asyncResult) +62   System.Web.Mvc.Async.WrappedAsyncResultBase`1.End() +138   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +59   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +40   System.Web.Mvc.Controller.EndExecute(IAsyncResult asyncResult) +39   System.Web.Mvc.Controller.System.Web.Mvc.Async.IAsyncController.EndExecute(IAsyncResult asyncResult) +39   System.Web.Mvc.MvcHandler.b__5(IAsyncResult asyncResult, ProcessRequestState innerState) +39   System.Web.Mvc.Async.WrappedAsyncVoid`1.CallEndDelegate(IAsyncResult asyncResult) +70   System.Web.Mvc.Async.WrappedAsyncResultBase`1.End() +138   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +59   System.Web.Mvc.Async.AsyncResultWrapper.End(IAsyncResult asyncResult, Object tag) +40   System.Web.Mvc.MvcHandler.EndProcessRequest(IAsyncResult asyncResult) +40   System.Web.Mvc.MvcHandler.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult result) +38   System.Web.CallHandlerExecutionStep.OnAsyncHandlerCompletion(IAsyncResult ar) +129",,,,,,
76829805,707,Issue,"Unfortunately that PR, which was included in 0.7.1, did not work out very well. There is a follow up []. It is already merged, so I'm guessing it should be in the next release.",,,,,,
76837127,707,Issue,"Boom, mic drop. You guys are all over this. good stuff",,,,,,
74755830,706,Issue,"A quick thought: perhaps get all events for the repository?This will handle the pagination work, however it has an upper limit on the data you can retrieve (I forget how high this goes, but unfortunately it's not configurable currently) so some old data might not be available.",,,,,,
74756866,706,Issue,"I saw that method, I just assumed, it would not include the issue events in that repo, looking at the api docs, it made me think, it would just include team member adds, and other repo level events.  I will try that out and see I was just being an ID10T.",,,,,,
74885125,706,Issue,"That seems to be working for me.  It would be nice if the rest endpoint supported some filtering, so that I could just pull down the event types I am looking for, but this seems to do the jop  Thanks",,,,,,
74805690,705,Issue,Thanks for the feedback,,,,,,
75595515,705,Issue,![selfie-1],,,,,,
74610681,704,Issue,sounds interesting! I can't wait to see what you make! I can add a note to the README about related projects once you have something to show off - there's also a [ScriptCs.Octokit] project which I should point people to cc .I'll leave this open until I can do that.,,,,,,
74705793,704,Issue,":cool: Personally, I think it should be called ""Poshtokit"" :stuck_out_tongue:  :octocat:",,,,,,
112387421,704,Issue,feel free to submit a PR once you've got something cool to show off!,,,,,,
74555099,703,Issue,We just haven't gotten around to it. Would love a PR that implements as many as you feel like. And then open a new issue with a list of the remaining for others to implement?,,,,,,
74712830,703,Issue,"Cool, I'll spend some time on it over the weekend",,,,,,
76846658,703,Issue,"Hey guys, I've made a PR for this (#737). I've implemented 9 of the 25 types of event payload. It may need cleaning up a bit, see the comments on the PR",,,,,,
74002348,701,Issue,I approve this message. We need to make sure we account for it in the release notes.,,,,,,
75477377,701,Issue,"Once I get #702 out the door, I'll pull in a bunch of these fixes and do a follow-up release.",,,,,,
73913443,700,Issue,Nevermind after some searching I found it. Just not in the constructor method. My bad!,,,,,,
73815455,699,Issue,I think this is actually a bug in the GitHub API - cc,,,,,,
73820233,699,Issue,"It's confusing but that's expected, [because history].You'll find what the UI calls ""Watchers"" in the `subscribers_count` field for API resources.",,,,,,
73820769,699,Issue,thanks for the details,,,,,,
73867263,699,Issue,Thanks guys :),,,,,,
73973374,699,Issue,"if I understand this correctly, it seems like we should remove the deprecated property from our client API. I'm guessing `WatchersCount` can go away as long as we have a `SubscribersCount` property?",,,,,,
73975097,699,Issue,"gah, you're right - we can still fix this.We could map `subscribers_count` to `WatchersCount` instead of deprecating the property altogether. How does that feel?",,,,,,
73975714,699,Issue,"I'd rather have the property name match the api field name as much as possible. We're not 1.0 yet, we can do whatever the hell we want. :stuck_out_tongue:  Let's just match the API canonical names.",,,,,,
73975893,699,Issue,Fiiiiine :stuck_out_tongue:,,,,,,
73976059,699,Issue,:stuck_out_tongue: It's just my preference. I think it's a good rule of thumb. But I'm open to strong arguments to the contrary in specific cases. :smile:,,,,,,
73976143,699,Issue,"Also, if we're all in agreement, would you like to submit a PR with this change ?",,,,,,
73976373,699,Issue,"It's just my preference. I think it's a good rule of thumb. I'm just being pre-caffeine silly here. As the behaviour isn't going to change for the lifetime of v3, I'm :thumbsup: with hiding away this incorrect field.",,,,,,
73985479,699,Issue,"I've made a PR (#701), just removed the `WatchersCount` property. Probably a good idea to remove this even though it's still on the api, just to avoid confusion",,,,,,
73611991,698,Issue,That PR was never completed. If you want you can pick up where I left off at #495,,,,,,
73613006,698,Issue,I would require serious amounts of support to pull that off. I can't even open the csproj under windows 7 which I'm currently using.Also it's a bit unclear to me what the outstanding issues are and why the PR was closed in the first place,,,,,,
73618955,698,Issue,you'll need VS2013 to open the solution locally,,,,,,
73915964,698,Issue,"I have VS2013, it opens a window telling me windows 8.1 is required.",,,,,,
73961483,698,Issue,"I have VS2013, it opens a window telling me windows 8.1 is required.That's just for some specific projects which use NetCore. Don't worry about it!",,,,,,
73961958,698,Issue,"Sure I can ignore that, but when I then build from within VS all hell breaks loose. Hundreds of warnings and errors.",,,,,,
73962491,698,Issue,"Hmm, try unloading that project.",,,,,,
80297649,698,Issue,I'll look at the pull request to determine if I can make the necessary changes so that it can be merged.,,,,,,
100871396,698,Issue,Anyone get anywhere on this one? Is pr 495 still the best spot to start from?,,,,,,
100882508,698,Issue,"#776 is almost wrapped up and ready to merge, so forking a repository should go out in the next release!",,,,,,
101493420,698,Issue,"I'll drop a note in here when it's been released, but #776 has been merged into `master`",,,,,,
101583662,698,Issue,Appreciate the work. Thanks,,,,,,
103403727,698,Issue,this is now available in v0.12 on NuGet.,,,,,,
103430703,698,Issue,Cheers,,,,,,
73454040,697,Issue,Thanks!,,,,,,
73454546,697,Issue,"Was looking to be of more help, but then, seems like only GitHub Staff can contribute to the code? Kindly correct me if I'm wrong.",,,,,,
73454699,697,Issue,you're welcome to submit pull requests against any of the outstanding issues - drop a comment into the issue if you see something you'd like to take on,,,,,,
72688452,696,Issue,Looks good! Please add an argument to the existing constructor to populate this property just like we do with the other properties.,,,,,,
72761718,696,Issue,i did it ^^,,,,,,
72770947,696,Issue,![selfie-0],,,,,,
72534876,695,Issue,"Pro-tip: In your commit message, you can put ""fixes #689"" in the body of the message to indicate that commit fixes #689. That way, when this PR is merged, it'll also close that issue. :smile:",,,,,,
72535034,695,Issue,![selfie-0],,,,,,
72538691,695,Issue,"I'll remember the fixes tip thanks! Also! Best thumbs up ever, 10/10",,,,,,
72500237,694,Issue,"Yes, it looks like we're missing that property. Want to submit a pull request that adds it in?",,,,,,
83994167,694,Issue,While browsing issues to fix I found that this can be closed...it was fixed in 68c4c98270517fabd1bcd3de7f5fe4d68c97ba8d :smile:,,,,,,
84175805,694,Issue,![],,,,,,
72401032,693,Issue,Thanks!,,,,,,
72400581,692,Issue,"Yeah, those tests names could be so much better.If you'd like to have a go at updating these, I'd be more than happy to review it and suggest changes.",,,,,,
75721632,691,Issue,Maybe this could be done passing the pagination ability to the caller of the method.This is something I need to think about again. I should open a discussion somewhere on this...,,,,,,
75721705,691,Issue,This looks great! :metal: If you can mute that slow test I'm happy to merge this in!,,,,,,
75931631,691,Issue,Done,,,,,,
77129610,691,Issue,![],,,,,,
72337833,690,Issue,Hello yes this is a pull request,,,,,,
72340474,690,Issue,Looks good to me. Too bad we can't make the branch query string parameter dynamic. :smile:,,,,,,
72340494,690,Issue,![selfie-0],,,,,,
72234350,689,Issue,Could you post the request and response from a Fiddler trace (with private details ommitted of course) in here?,,,,,,
72236218,689,Issue,I haven't used that before but I'll figure it out shortly. In the meantime I can tell you that I have tried this several times with multiple organizations and have not received any emails from github. After searching through the octokit code I found this function in Helpers/ApiUrls:which uses the deprecated api endpoint and is used in this function inside /Clients/TeamClients:. So we can start from there while I figure out how to use Fiddler trace.,,,,,,
72236845,689,Issue,"Ah! That's almost certainly it. If you clone the repo, apply that fix, and try it out, it'll probably work.Would you be interested in fixing it and submitting a pull request? If you need help with that process, I'm happy to help. :smile:",,,,,,
72237417,689,Issue,I would be very interested in fixing it however I would need a bit of assistance on that part. I have only been using GIT for about 2 weeks but it's very interesting and I've always found helpful code here. I'll start by cloning and seeing if I can get it to work for me. Then I'll ask about the pull request process once I'm ready. I appreciate the quick replies!,,,,,,
72255470,689,Issue,"So I've got the project cloned locally and the fix is done but I'm a bit stuck on the testing part. I'm a little unclear on how to generate the DLL so I can use it in my main project, unless there's a better way to test.EDIT: and also I believe the response from the new endpoint is slightly different than the old so more changes will be needed than simply modifying the endpoint",,,,,,
72340038,689,Issue,"probably the easiest way to test with your app is to compile your app, then replace the Octokit.dll with the patched version and then run your app.",,,,,,
72472094,689,Issue,I must have been having a friday afternoon brain fart cause I got it working first thing this morning. So I've made the change to the TeamMember function but I left the TeamMembers function the same because that endpoint seems to still be current. I have the windows GIT client now so I'll attempt to commit to master and I think that's all I'll have to do. If there's anything I should know about pull requests in general just let me know!,,,,,,
72493281,689,Issue,"in general, it's best not to commit to `master`. Create a branch for your work and commit it there. The reason for this is if there are new changes to `master` upstream (aka new changes to `master` in `octokit/octokit.net`), it's easier to update `master` on your fork with those changes from upstream and then either merge them into your branch or rebase your branch against them.When you create a pull request, it'll do the right thing and create the pull request against the upstream `master`. Does that make sense?",,,,,,
72509746,689,Issue,"I think so, so I'll make a separate branch for myself and then make a pull request. Still new to this whole process but I think I'm getting the hang of it. Apparently I've setup my current system to only commit to the master branch. Maybe I should restructure things. Thanks for the tip!",,,,,,
72513849,689,Issue,"Cool! We're happy to help. We follow something we call [The GitHub Flow]. There's a lot of good guides if you need more background info here: And of course, the Octokit maintainers are happy to help when we can, though we get :arrow_down: :droplet: at times.",,,,,,
72514517,689,Issue,Ha I was literally just reading over GitHub Flow as I saw the email get here. I've got the Github for windows client running and I'm trying to figure out how to do a pull request on there. I made a branch but I can't figure out the UI so I'll keep reading. Thanks for the guides! I'll be reviewing them next!,,,,,,
72533814,689,Issue,So I've created a pull request and updated the test cases that I missed. Nothing really compares to actually doing a pull request for understanding how it works so thanks for the opportunity! Feeling a lot more confident in how this works now. If there's anything else I need to do just let me know. Thanks for the help!,,,,,,
75477325,689,Issue,Fixed in #695,,,,,,
72159303,688,Issue,"From what I can tell, the rejection is due to the branch not being in a mergeable state:If you view the PR on the website, do you see a green ""Merge"" button or a greyed out button?",,,,,,
72159522,688,Issue,is Green...![20150130_152200],,,,,,
75680489,687,Issue,"Already up to RC3, let's start over",,,,,,
72231032,686,Issue,"Hi,Do you mind that I try to implement this one?",,,,,,
72288010,686,Issue,![],,,,,,
72379486,686,Issue,Pull request created. #691,,,,,,
84359225,686,Issue,"Does the `GetAllPublic(int since)` still need implementing, or is there still something to figure out in regards to Pagination?",,,,,,
84541620,686,Issue,"the endpoint which takes a `since` doesn't exist, so I've left this open.Pagination is also different for the public repository APIs:Instead of the default:But we can deal with that in #760 or :boot: to a subsequent PR.",,,,,,
95010910,686,Issue,"Reopening this one as the work done in #774 neglected to catch a scenario with pagination that was specific to this API:- the `Link` has a `since` parameter older than the specified id- when invoking the next link, `GetAll` will overwrite the parameter with the original id- forever paging :sob:If you revert 26a8bf0e818ad8a620987e13d5ed7b1b8bacfa01 you'll get this PR back at least.",,,,,,
101493363,686,Issue,Shipped in 0.11.0,,,,,,
71548479,685,Issue,We've been meaning to setup an official account on AppVeyor for Octokit - currently it's just using one of our personal accounts.,,,,,,
71549658,684,Issue,do you know what version of Mono you're running?,,,,,,
71568946,684,Issue,Running on Ubuntu 14.04.1 LTS -- a very recent image from Digital Ocean.,,,,,,
73149657,684,Issue,"By the way, if this wasn't clear, I'm working with Blecki on this, so what I pasted is what Blecki's version is.",,,,,,
74457718,684,Issue,"This appears to be an issue how we're using HttpClient on Linux (still occurring in 0.6.2):I now have a proper dev environment, let's see if I can isolate where exactly it's falling over.",,,,,,
74458695,684,Issue,"So I've settled on the simplest repro to trigger this:Works on Windows, so likely an implementation issue with `System.Net.Http.Headers.HttpRequestHeaders` on Mono.:cool:",,,,,,
74458831,684,Issue,I'll just leave this here:,,,,,,
74459038,684,Issue,"As a workaround until we can get a fix into Mono proper, we could use `TryAddWithoutValidation` for the User-Agent header value:Thoughts ?",,,,,,
74502183,684,Issue,your repro works fine on the latest Mono 3.12.0 release. can you try updating Mono as shown here:,,,,,,
74502975,684,Issue,thanks for confirming it's been fixed before I went stepping through the source :heart:,,,,,,
75681498,684,Issue,I just upgraded to the 0.7.0 release and started seeing this issue. I am (apparently) running Mono 3.12.0 but still seeing this issue.![screen shot 2015-02-23 at 8 28 32 pm]Is the code I used to generate this,,,,,,
75683729,684,Issue,could you try this script and see if it's not a different problem? thoughts?,,,,,,
75684664,684,Issue,"yep, I see the same on Mono 3.12 and Mono master with your repro code, so it looks like 's repro code didn't fully get to the root of the problem :cry: Would be interesting to know which header value causes this so the Mono guys can fix it.",,,,,,
75684859,684,Issue,I can re-test this against Mono 3.12 and dig into it further. Gimme a day or so.,,,,,,
75685924,684,Issue,", I just ran your repro code without problem on my setup. Perhaps this is a different issue?I just build the project from master, created a dummy console project and referenced the **Octokit-Portable.dll** - no Issue. If I reference the **Octokit-Mono.dll** then I have a bad time :-1:",,,,,,
75686933,684,Issue,"yep, this is a different issue:This was a change in #709 and the `,` in here appears to be the issue (space or no space after doesn't make a difference). cc   If I reference the Octokit-Mono.dll then I have a bad time :-1:That makes sense - Octokit-Portable references [a different System.Net.Http] to the one in Octokit-Mono",,,,,,
75766291,684,Issue,I filed a Xamarin bug for this: Note that you can workaround this by just split Add() into multiple calls (this works on Mono 3.12 as well):,,,,,,
76083577,684,Issue,"Looks like it has been fixed in Mono master., in your example above where you are just using two `Add` calls, what is the type of `request.Headers`? Isn't it a `Dictionary` thus arn't you just overriding the first with the second?I'm getting away with just `request.Headers[""Accept""] = ""application/vnd.github.v3+json; charset=utf-8"";` in a custom `IHttpClient` implementation for now.",,,,,,
76093790,684,Issue,"it isn't overriding, multiple Add() calls are fine. The type is [HttpRequestHeaders].",,,,,,
76909988,684,Issue,"I've fixed this issue incidentally by shipping #734 which dropped the multiple `Accept` headers. When I get around to addressing how we handle preview APIs properly, I'll keep this workaround in mind.",,,,,,
71594607,683,Issue,Currently blocked due to breaking changes in,,,,,,
71594991,683,Issue,my goal _for this week_ is to finish up #647 and get it ready for review :tada:,,,,,,
70832871,682,Issue,If I haven't covered this in #647 I definitely should,,,,,,
70837872,682,Issue,"Sorry, totally missed that PR...",,,,,,
70929687,682,Issue,"you want to implement it in your PR above, or should I keep it in with mine?",,,,,,
70942541,682,Issue,"If you need it urgently, open a PR against `master` for it. #683 is about some upcoming breaking changes, and I've been pulled off that for the moment so it's somewhat stalled...",,,,,,
70943038,682,Issue,No urgency here :) was just looking to start contributing again :cake:,,,,,,
75723922,682,Issue,"The Authorization API changes will go out in the next release (0.7.1), if you're looking for something to pick up again :trollface:",,,,,,
76066952,682,Issue,:+1:,,,,,,
76132070,682,Issue,"I'll pick up this one plus #652, #653 and #654 as they're all in the same area",,,,,,
70762555,681,Issue,Nice spot!,,,,,,
70799308,681,Issue,"We're already planning other breaking changes for this release, so I'm happy to take this in and add it to the release notes.![]",,,,,,
70798271,680,Issue,"thanks for starting on this. I had some hacky code lying around to tackle this same problem, so I added some thoughts about the approach I went for versus where you went into the mix.I think you're on the right track :thumbsup:",,,,,,
71685602,680,Issue,"Many test classes have the setup and tear down in constructor and the Dispose method. I have left alone them as it is and just fixed the try/finally in RepositoriesClientTests.cs. I hope this should be fine.The doubt that I have is, if all tests disposes off the created repository properly, then how come there are some repositories left out after running the integration tests?",,,,,,
71787307,680,Issue,"What concerns you with the reflection code in DisposableRepository class? Do you find it buggy? or Am i breaking any rules/conventions by having it there?Apart from this, should I consider this pull request as closed?",,,,,,
74454916,680,Issue,"Apologies for not getting back to this earlier: What concerns you with the reflection code in DisposableRepository class? Do you find it buggy? or Am i breaking any rules/conventions by having it there?In general, I favour composition over inheritance when it comes to situations where you're working with test doubles. It's purely a personal preference in this case - if you were to instantiate the `Repository` object and keep it around as a property on the `DisposableRepository` class, you'd achieve the same effect.I'll let  chime in here about how he feels about this PR.",,,,,,
74720930,680,Issue,"I share a similar concern. I worry it could end up being fragile. For example, are we sure setting all those repositories matches the exact state a real `Repository` would be in when initialized from a path? Can we guarantee that for all time?I like the idea of a `RepositoryUnitOfWork` or `RepositoryContext` class (for lack of a better name) or even a `RepositoryScope` class. That class is disposable and exposes a vanilla `Repository` property. Pretty much what  suggested.",,,,,,
100123083,680,Issue,"After further reflection on this, and  showing me some tricks using xUnit test fixtures to abstract this away in #776, I need to gather my thoughts and update the original issue again.Thanks for the work you've put in here , and apologies for not being clear on what I wanted...",,,,,,
70704455,679,Issue,"There are a lot of code analysis warnings about URIs as Strings. Let me know what the preferred way to resolve this is and I'll apply the fix across the board in this PR.My inclination is to pass in `Uri` and call `ToString()` on them when setting the property. These constructors aren't used in normal usage. They're primarily there for testing and in the rare case someone needs to override a behavior and explicitly create these types. In those cases, why not require a URI.  any thoughts?I think we should get rid of the obsolete properties in this PR. It's about time. :smile:",,,,,,
70813440,679,Issue,"In those cases, why not require a URI.  any thoughts?The rule is basically: A type declares a method with a string parameter whose name contains ""uri"", ""Uri"", ""urn"", ""Urn"", ""url"", or ""Url"" and the type does not declare a corresponding overload that takes a System.Uri parameter.My first instinct was ""Could we mute this rule?"" And yes, adding this element to `Octokit.ruleset` kills off these warnings: ` I think we should get rid of the obsolete properties in this PR. :thumbsup:",,,,,,
70877281,679,Issue,"So that's what I'd favour for this - as long as the ctors are protected, whatever.Most of the ctors are `public`. The point of them is to allow people to create these instances without having to subclass them.",,,,,,
71343912,679,Issue,"I removed the obsolete properties.For the warning about URL as a string, I went with the rule suggested by  since there wasn't an agreement in this thread and it was by far the easier solution.I moved all of the constructors to above the properties per  since there doesn't appear to be a hard and fast standard and a good portion of the response models that already had constructors followed this style.I created default constructors for all of the response models since it appears SimpleJson needs them to work correctly (tests failed without).Finally, I changed a couple (maybe it ended up only being one) response model from public setter to private setter to match all of the others.",,,,,,
71499950,679,Issue,This is really great! It's tedious work and very much appreciated!![selfie-0],,,,,,
71500447,679,Issue,"BTW, now that we have proper ctors, we don't need all the model properties to have `protected` setters. Probably best to make them `private`.",,,,,,
70425306,678,Issue,"I'm a fan of immutability too, but I think using `readonly` fields instead of properties will introduce more problems than it solves.First of all, I think we want to stick with properties. Data binding infrastructure in much of .NET depends on properties, not fields. It _might_ not make sense to bind to these objects, but I don't want to prevent it. Also, it gives us the freedom to change the implementation of the property in the future should we ever have a good reason to do so.Also, a `readonly` field currently doesn't guarantee immutability. It just so happens via a fluke of implementation that you _can_ set a `readonly` field via reflection, but as [Eric Lippert points out]... I note also that just because you can in some implementation today does not mean that you can on every implementation for all time. I am not aware of any place where we document that readonly fields must be mutable via reflection. As far as I know, a conforming implementation of the CLI is perfectly free to implement readonly fields such that they throw exceptions when mutated via reflection after the constructor is doneThe point here is while we can't rely on this behavior, it is possible today negating the immutability guarantee. Our current implementation is every bit as immutable as one with `readonly` fields.Lastly, if the implementation ever did change, it would considerably complicate our deserialization of these objects.For all these reasons, I would rather stick with the way we currently do them. Until the language supports `immutable` as a first class construct, the best we can do is provide a ""verbal"" guarantee of immutability. :smile:",,,,,,
70425380,677,Issue,These models are basically data objects so I don't like 1 or 3 for that reason. They aren't meant to have any behavior.I like 2. Each object should have a default constructor (so we can deserialize them) and a constructor that fully populates it.Would you be interested in submitting a PR to introduce those ctors? :smile:,,,,,,
70426143,677,Issue,I'll get a PR put together for this.,,,,,,
70394077,676,Issue,Thanks!,,,,,,
70344057,675,Issue,![selfie-0],,,,,,
69501163,674,Issue,"If someone can point me at some existing tests that validate the json deserializer behaves correctly in certain scenarios (like when the property is missing) I can add some test coverage.We're using SimpleJSON for the serializer - we have some tests [here] for the related features that we need.I believe the `truncated` property should always be present when deserializing the JSON, so unless you can think of some [integration tests] to add I wouldn't stress about it too much.",,,,,,
69509121,674,Issue,"I added a json parser test just to prove what happens if an attribute is missing.I don't know of a public repo returns a truncated tree so that is difficult to integration test.  Even with the recursive flag set to 1, getting the full tree for octokit still doesn't truncate.  Also, such an integration test would be brittle if GitHub changes the truncation level.  Given all of that, I'm going to forgo an integration test unless someone really wants it and can recommend a repo to test against or a way to force truncation.",,,,,,
69514740,674,Issue,I don't know of a public repo returns a truncated tree so that is difficult to integration test.Don't worry about it. Happy to leave this as-is.,,,,,,
69514761,674,Issue,Thanks!,,,,,,
69480314,673,Issue,Investigating test failures.,,,,,,
69480531,673,Issue,Test failures fixed.,,,,,,
69481184,673,Issue,Fixing missing observable methods (and some bad tests)...,,,,,,
69796388,673,Issue,![],,,,,,
69796417,673,Issue,Thanks !,,,,,,
69477651,672,Issue,Looks good to me. Perhaps a PR to  is also in order.,,,,,,
69477756,672,Issue,"No upstream changes necessary, as this was added in  and we found a duplicate rule in  which was reverted.",,,,,,
69479219,672,Issue,Fixed.  Copied and pasted straight from .,,,,,,
69500089,672,Issue,Thanks !,,,,,,
71502944,667,Issue,![selfie-0],,,,,,
68803913,663,Issue,Ugh. Now the `DebuggerDisplay` test fails. Have to fix that tomorrow :smile:,,,,,,
68804239,663,Issue,Ugh. Now the `DebuggerDisplay` test fails.LOL. So sorry!,,,,,,
68805143,663,Issue,LOL. So sorry!It's all fun :grin:,,,,,,
68836759,663,Issue,"This PR got a bit out of hand. Once I started finding more models, the good old `DebuggerDisplay` test started failing as well. Anyway, now all model should have read-only properties and a `DebuggerDisplayAttribute` (with corresponding property) :grin: This makes #660 a super quick-fix.",,,,,,
69277283,663,Issue,I'm happy with this cleanup -  had a chance to look at it?,,,,,,
69795783,663,Issue,![],,,,,,
69282044,662,Issue,:apple:,,,,,,
70334957,662,Issue,:wolf:,,,,,,
70346646,662,Issue,"A couple of thoughts on `public`/`internal` changes, but this is looking pretty amazing.Needs a merge with `master`, but aside from that I think we're close to :ship:ing this.If you're interested in drafting up the **Breaking Changes** for this we can start setting up a 0.7 release asap.",,,,,,
70348215,662,Issue,:moon:,,,,,,
70424630,662,Issue,"Ok, merged master in. Hopefully this is good. :smile::tanabata_tree:",,,,,,
71498449,662,Issue,_bump_ to Mr.,,,,,,
71500235,662,Issue,:poop: I just merged another PR into master that breaks this PR. Doh!,,,,,,
71746982,662,Issue,![],,,,,,
71748107,662,Issue,![selfie-0],,,,,,
68652340,660,Issue,Maybe also expand this to check that properties have protected setters? I can take this after #658 is in :smile:,,,,,,
68652421,660,Issue,Let's divide and conquer on it - they're not exactly coupled together.,,,,,,
68749893,660,Issue,"LOL. Doesn't look like the convention test that checks for `DebuggerDisplayAttribute` checks response models at all. It gets the method return types from the client interfaces, but those are `Task` etc., so they're filtered out using the [TypeExtensions.IsModel] method. I think we need to unwrap those types first... See",,,,,,
68786160,660,Issue,"herp derp. Yeah, that's Definitely An Issue...",,,,,,
68787625,660,Issue,"OK, the reason there's all this stuff going on is because it's hard to identify request/response models (everything is same assembly, same namespace etc.).Here are some suggestions:1. Introduce namespaces (breaking, ugly)2. Add marker interfaces, `IRequestModel` and `IResponseModel`.   - This could further be enforced by adding generic constraints on `IApiConnection`'s methods.3. Add attributes, `RequestModelAttribute` and `ResponseModelAttribute`.4. Keep scraping client interfaces for parameter- and return types to determine request- and response models.What do you think?",,,,,,
68788098,660,Issue,"Keep scraping client interfaces for parameter- and return types to determine request- and response models.I like this option. It's harder, but gives a better result. Who's afraid of hard?",,,,,,
68788121,660,Issue,"- Namespaces: we've tried to avoid avoided namespaces below `Octokit` for everything public.- Marker Interfaces: I'm Not A Fan- Attributes: passYeah, the test infrastructure bit us in the rear this time - we should have added a check here to fail the test if the collection of models discovered was empty.",,,,,,
68788404,660,Issue,"Alright. I'll just check if the return type is generic, get the generic parameter(s), check if the its assembly is Octokit, if it is, return it, otherwise, recurse. Sounds like a plan?",,,,,,
68788469,660,Issue,Sounds good.,,,,,,
68800009,660,Issue,"Soooo... There are 89 files in the response model folder, but I only detect 59 types in the tests. I guess this is because many of the models isn't top-level and thus isn't exposed through an interface. Do you want me to walk the tree to pick up non-top-level models as well? ¬Ø(¬∞_o)/¬Ø",,,,,,
68800840,660,Issue,I'm not sure I understand. Walk what tree?,,,,,,
68801331,660,Issue,"The tree of type dependencies :smile: A `RepositoryTag` has a property with type `GitReference`, which again has a property with type `User` etc.",,,,,,
68801337,660,Issue,"Oh wait, I understand now. Yeah, we have to iterate the properties of the returned models looking for types we haven't seen yet.",,,,,,
68801364,660,Issue,"Fun, right?! :laughing:",,,,,,
68801382,660,Issue,Yeah :smile:,,,,,,
68801431,660,Issue,There has to be a circular reference in there somewhere as well :grin:,,,,,,
68801968,660,Issue,Well definitely keep track of the types you've already seen.,,,,,,
68802842,660,Issue,"Now I got up to 71 :stuck_out_tongue: Looks like 8 of the files are enums, which are filtered out. Wonder what the remaining 10 files are... could they be unused?",,,,,,
68803719,660,Issue,could be unused - i'd love some more details!,,,,,,
68806060,660,Issue,Hey! Collections! Same problems as earlier. Forgot to unwrap generic types :smile: Now I got 'em all - and 13 new failing tests :smirk: I'll fix those tomorrow.,,,,,,
68658868,659,Issue,Can I get a :thumbsup: on the release notes? Everything else is ready to roll out after that...,,,,,,
68659691,659,Issue,:thumbsup: to release notes,,,,,,
68660518,659,Issue,And we're live:,,,,,,
68558484,658,Issue,"Also, does  mean that all `List`?",,,,,,
68564137,658,Issue,Quite possibly! I'll test it out.,,,,,,
68564421,658,Issue,"Also, it looks like there were some new model types I missed when I merged master in.",,,,,,
68565561,658,Issue,SimpleJson doesn't support readonly dictionaries. And yet another yak appears!,,,,,,
68569053,658,Issue,"Ok, I created a [PR to simple-json]. In the meanwhile, I'll just edit our copy directly.",,,,,,
68578370,658,Issue,"Ok, I think this is ready. Would love some :eyes: on it. Thanks for the excellent review so far .",,,,,,
68639521,658,Issue,"Changed test in  to verify handling of readonly collections, and it works beatifully :grin: Maybe there should be a convention test that verifies that collections are of the right type? Is there a reason for sometimes using `IReadOnlyCollection`?",,,,,,
68650941,658,Issue,Is there a reason for sometimes using IReadOnlyCollectionGood question. I don't see any benefit to using collection over list here. List provides an indexer which can be handy.,,,,,,
68651313,658,Issue,:shaved_ice:,,,,,,
68652162,658,Issue,Maybe there should be a convention test that verifies that collections are of the right type? :heart::heart::heart::heart::heart:,,,,,,
68652420,658,Issue,:pineapple:,,,,,,
68659705,658,Issue,![],,,,,,
68615683,657,Issue,Rebased on top of `master` to make the merge conflict go away :boom::camel:,,,,,,
68619519,657,Issue,Love this. :smile:![selfie-0],,,,,,
68512584,656,Issue,Ready for review :cow2:,,,,,,
68602301,656,Issue,"Code looks good. Just a question, don't we have tests that require a free account? If we do, we might need to have 2-test accounts rather than this boolean conditional.",,,,,,
68621035,656,Issue,"Just a question, don't we have tests that require a free account?I don't believe so - the test account I use has a micro plan, so I would be seeing different failures here.",,,,,,
68619560,655,Issue,I like the `using` approach. :+1:,,,,,,
141850783,655,Issue,What's the current status of this one? Are any bits of [this closed PR] relevant? May I start working on it?,,,,,,
142146133,655,Issue,Nobody's working on this currently. Feel free.,,,,,,
226936054,655,Issue,Should be closed?,,,,,,
68473679,650,Issue,![],,,,,,
68460411,649,Issue,"Because we're pre 1.0, I'm inclined to just remove these methods rather than obsolete them.",,,,,,
68467317,649,Issue,Could someone try this out? I think it's ready to merge. :cake:,,,,,,
68473742,649,Issue,I'll have a look at this when I'm back on the grid tomorrow :v:,,,,,,
68514368,649,Issue,Code and tests look pretty great. Just a few nagging questions :metal:,,,,,,
68515173,649,Issue,"Something keeps fucking with the whitespace. I suspect it's the documentation rewriter. Anyways, this should be good I hope. I'm up too late again. :smile: so I'm going to sleep and hope the build is green.:package:",,,,,,
68518187,649,Issue,![],,,,,,
68004262,648,Issue,"that's weird, I just ran the integration tests and I can see this work as expected.If you want to be really, really sure, just add an assert to [this test] that the `BrowserDownloadUrl` on the retrieved asset is not null.",,,,,,
68005100,648,Issue,Hmmm...  I was testing using a different method as a starting point. Thanks for the input. I added the assert not null to the retrieve asset and pushed my commit up.,,,,,,
68005797,648,Issue,Thanks for this !,,,,,,
71979480,647,Issue,This is ready for review,,,,,,
74336160,647,Issue,Sorry for missing this. Looks good to me. :+1: to merge?,,,,,,
74341636,647,Issue,hold off until  has had a chance to :eyes: over it.I might also do an intermediate release before this - as there have been significant changes to the internals which I'd like to get out separately,,,,,,
74347167,647,Issue,:+1:,,,,,,
74441391,647,Issue,:shipit:,,,,,,
75595893,647,Issue,Is this waiting on anything or may I merge it?,,,,,,
67917835,646,Issue,"I should state, so I don't look like an idiot whos just making changes and not testing them, that I am testing the changes with other projects.",,,,,,
68507028,646,Issue,![],,,,,,
68012275,645,Issue,:shipit:,,,,,,
67915640,644,Issue,![],,,,,,
242315899,643,Issue,"## This is not an attempt to give an answer to OPs question, but to try and get a handle on what would be affectedWhat enums would this apply for?Some points before your eyes glaze over as you read the list:- Quite a number of the enums use the `ParameterAttribute` to set the actual value as needed by/from the server- Some of the enums are not part of the client/server traffic- The list may be moot as there is a high probability that a fix will only be in `SimpleJson`We have the following:  (links are from my fork as I am pulling from Visual Studio)- [AuthenticationType]- [ArchiveFormat]- [OrganizationMembersFilter]- [OrganizationMembersRole]- [TwoFactorType]- [IssueFilter]- [ItemStateFilter]- [ItemState]- [IssueSort]- [SortDirection]- [MilestoneSort]- [DeployTask]- [WebHookContentType]- [Permission]- [PullRequestSort]- [Sort]- [RepositoryType]- [RepositorySort]- [RepositoryVisibility]- [RepositoryAffiliation]- [CodeSearchSort]- [CodeInQualifier]- [IssueSearchSort]- [IssueTypeQualifier]- [IssueInQualifier]- [IssueIsQualifier]- [IssueNoMetadataQualifier]- [SearchQualifierOperator]- [InQualifier]- [Language]- [RepoSearchSort]- [ForkQualifier]- [AccountSearchType]- [UserInQualifier]- [UsersSearchSort]- [StarredSort]- [AccountType]- [EncodingType]- [EnforcementLevel]- [CommitState]- [ContentType]- [DeploymentState]- [EventInfoState]- [MigrationState]- [PagesBuildStatus]- [PullRequestReviewCommentSort]- [ReactionType]- [InvitationPermissionType]- [TaggedType]- [TeamMembership]- [TreeType]- [VerificationReason]",,,,,,
531924148,643,Issue,Wasn't this fixed with,,,,,,
532052530,643,Issue,It would seem so(thanks btw for all the work on that),,,,,,
67917060,642,Issue,"I forgot I tied the pull request to this issue so it closed it without discussion about the second part of this issue. , do you have any suggestion about the second paragraph in the issue? Should I throw this into a new issue for discussion? I'd rather not opent his back up just for a discussion.",,,,,,
67918187,642,Issue,"Wouldn't it just be easier to use `IssueEvent` everywhere and allow it to be null when you're accessing the collection of events in respect of an issue?My only issue with this change would be that the end-user might be expecting `Issue` to be present at some point when querying for events. Sure, we'd be reducing by one the models we need manage. But having that field hang around might be confusing.",,,,,,
67919079,642,Issue,"But having that field hang around might be confusing.Very true, however, and maybe these are mistakes that will be fixed in the future, there exists response objects, such as `GitReference` or `GitHubCommit` which seem to have properties that are unused (null) or populated based on which request was used.",,,,,,
67919293,642,Issue,"Actually, the more I think about it I think you're right to avoid fields that don't belong there - if nothing else than to avoid confusion. Although, this means we might have a greater number of permutation of some models, _especially_ when media-types are introduced. The discussion on #593 seems to have ended with the idea that we could just put all potential fields into the model and allow some to be null/populated based on which media-type is chosen. However, we might want to revist that...",,,,,,
67919376,642,Issue,"I believe these are two different discussions - whereas #593 is about how to handle different media types for the same endpoint without creating models for each situation, this is about being able to reuse models against different endpoints. Do you agree?",,,,,,
67920431,642,Issue,"You're right. Although, while this discussion is a specific one around the `IssueEvent` and `EventInfo` objects my ultimiate goal was to determine the answer to the following: Given a request, should you have properties in the response object that are always null (unused)?If the answer is **no** then it justifies keeping `IssueEvent` and `EventInfo` seperate because even though they differ by the `Issue` field it still means that I'm not reusing a response DTO which when I make request A it populates `Issue` and when I make request B it does not.It also means that each media-type must have a seperate response object for that media-type (and thus, a seperate method call e.g. `GetCommentsHtml` vs `GetCommentsText`, etc..). Because I can't put `Body`, `BodyHtml` and `BodyText` in the `Comment` response model because given a certain media-type some of those properties will always be null. (Also, the 'full' media-type populates a `BodyHtml` and `BodyText` (and I think the regular `Body`) which  means I can't juse reuse a single `Body` field)If the answer is **yes** then it means we should be able to save ourselves different permutations of the same response model and put properties that can sometimes be unused. That would then suggest we should be able to combine `IssueEvent` and `EventInfo` since it's OK that sometimes the `Issue` property is populated and sometimes its not.The answer to this question actually solves #593.",,,,,,
67787471,641,Issue,Seems legit. Thanks!,,,,,,
67787540,640,Issue,Just need to address the Code Analysis error (`InvariantCulture` dat thing):,,,,,,
67787654,640,Issue,"Haha, yeah I just caught that too.",,,,,,
67915390,640,Issue,Thanks!,,,,,,
67787432,638,Issue,I think this is different from the rate limiting - and perhaps the bulk inserting of issues is triggering it over time?  what sort of actions would trigger this message from the API: You have triggered an abuse detection mechanism and have been temporarily blocked from content creation. Please retry your request again later.,,,,,,
67788585,638,Issue,: You're running afoul of our new [abuse safeguards] for public repositories. How many operations are you performing per-issue? Are you adding labels by updating the issue or [applying multiple labels] at once?: Does Octokit.net present the `documentation_url` for exceptions? Here's [how Octokit.rb] handles this flavor of `403` and [presents the error].,,,,,,
67789236,638,Issue,we should be deserializing the URL out [here] - sounds like a job for some documentation on my end :wink:,,,,,,
67789622,638,Issue,"Figured as much.  My code actually gets jammed up (the ForbiddenException mentioned above) long before I even get to perform _any_ update operations :(  instead, it actually 100% reliably dies immediately after the first 20 calls to the API to create one each of the first 20 of the 57 issues I'm trying to add/create/insert.FWIW, my pseudo-algorithm that does the work looks generally like this ...1. read 57 records into a collection from the CSV file2. loop through the collection of records from the CSV, calling the API _once_ each for each record to create a corresponding new GitHub issue entry; if this worked, this would presumably be 57 API calls3. loop through the records in the CSV to assemble the necessary metadata for the update of each GitHub issue, calling the API once each for each GitHub issue I want to update; if this worked, this too would presumably be another 57 API callsWhen I run my code against just 10 records, all three of the above steps work just fine and I get exactly the issues and updates appearing in my test-repo on GitHub just as expected.  However, when I attempt to run all 57 records, after the first 20 records are processed in Step 2 (e.g., 20 calls to the API to create new issues) I reliably receive the ForbiddenException as mentioned. FWIW, even if my code were to get past the 57 insert/create calls in Step 3, the scope of the update I am attempting for each GitHub issue includes just the status (e.g., CLOSED) and adding a tag or two in most cases.To perform the updates, I'm using the Update method on this library's IssuesClient (see ) to perform this update and passing it a single instance of the IssueUpdate object (see ) populated with the entirety of the changes I want to apply.  My impression of this method is that its making only a single API call to pass the entirety of the update metadata at once so I'd assume that my updates aren't the trigger here.My observation seems to be that after 20 calls to create/insert new GitHub issues I reliably receive the ForbiddenException.  Is there some other way that I should be trying to insert new GitHub issues programmatically?  Or is using the API for this purpose maybe just not something that's really supported on public repos due to your anti-DoS policies?Also, another thought: if there's no way around this due to your anti-DoS ruleset for the API, can you advise the duration between create/insert calls for which I should be pausing in order to artificially slow down the frequency of my calls to the API to create the issues so as not to collide with your rule?Since (once it works!) this is just a one-off run of this process for me and there are only 57 issues, TBH I don't really care if I have to let it run overnight with a 1? 5? 10? minute Thread.Sleep() call inserted in between iterations through my collection of records ...Could something like that be a possible work-around...?Thanks again for any input here~!",,,,,,
67795998,638,Issue,"Just circling back on this to offer back my own solution in case anyone should hit upon the same limitation in their interactions with the GitHub API: trial and error has permitted me to reverse-engineer that the limits on create API calls (at least for issues!) appear to be as follows:- a max of 20 API calls within a 1-minute periodEventually I was able to solve this by following my own advice of artificially reducing the frequency of calls to the CREATE parts of the API to permit my code to fall below the threshold that seems to be triggering the violation of the anti-abuse rules. I added a line in my code to temporarily suspend/pause my thread making the API calls for 70s (60s + a comfortable margin of 10 additional seconds) after every 20th call to the API.  Using this approach, I was ultimately able to complete the full programmatic import (and subsequent updates) of all 57 of my issues.For the insert/create of all 57 issues, this added two pauses of ~70s each to my processing time, but for my (non-high-performance) needs this overhead was still entirely acceptable.  Since the update actions aren't similarly limited (beyond the 5000 API calls per day permitted by an authenticated user), there was no need to insert the same 'pause' logic into the update processing API calls in my code.Hope this helps someone else who finds themselves faced with the same challenges in trying to interact with public repos; for now I'll close this as not being anything really requiring action (beyond perhaps a consideration for a possible mention somewhere in the general API docs re: what the throttling parameters are for the CREATE-related API calls on public repos even when you're properly authenticated -- and that this suspend-until-restricted-duration-passes pattern is a potential work-around to those limits that still remains true to the _intent_ of the API throttling/anti-abuse rules).Thanks again for the help/guidance; much appreciated!",,,,,,
91345862,638,Issue,Thanks a lot. It was very useful to me.,,,,,,
67717296,637,Issue,Thanks !,,,,,,
67477822,636,Issue,Ready for review :moon:,,,,,,
67511015,636,Issue,"I made one comment, but it could be addressed in another PR if you agree. This looks good!![selfie-1]",,,,,,
67379356,635,Issue,Hacker,,,,,,
67578863,634,Issue,Thanks!,,,,,,
67725233,634,Issue,:bowtie:,,,,,,
68514557,633,Issue,I'm contemplating burning that exception to the ground (or just using the original URL rather than tying it to the login details).,,,,,,
68952998,633,Issue,has also logic around the account being an organization or not.The easiest way to fix this without changing the behavior would be to replace this line:ByBut that're more like putting a band aid. It doesn't seem to be the right way of handling this case (ie if name is null then it's not an organization),,,,,,
68960417,633,Issue,"Yeah, that parameter is not named correctly. I think the way I'd prefer we fix this is to have two `RepositoryExistsException` constructors.The first one is called if the exception is for an organization. It should not allow a null `organization` value. The second one is called if the exception is for the current user.It's up to the caller to determine which ctor to call.",,,,,,
68960800,633,Issue,"I _really_ think we should just pass in the repository URL to the exception - whether it's an org or a user repo doesn't really matter here, right?",,,,,,
68961119,633,Issue,We use it in GHfW to provide a clear and useful error message to the user.,,,,,,
69130078,633,Issue,Let me do a quick PR to see how this would like :smile:,,,,,,
66908614,631,Issue,"Oh man, the details on this are just fantastic! :sparkles: I've created a milestone to incorporate all these test improvements. Once I've migrated the tests over to xUnit 2.0, this should be easier to add in...",,,,,,
67765357,630,Issue,Long story short - this takes the number of CI warnings from 2917 down to 1911.Ready for review,,,,,,
68602659,630,Issue,"Nice work. One minor nit that can be addressed later. I have a bad memory for these things, but I thought we all agreed that summaries are full sentences and thus require punctuation. But parameters, for example, are fragments and don't end in periods. We should memorialize whatever we decide into a style guide for comments. :smile: I seem to remember -ogre having opinions on this.",,,,,,
68616390,630,Issue,We should memorialize whatever we decide into a style guide for comments.:thumbsup::thumbsup::thumbsup::thumbsup::thumbsup:,,,,,,
66905752,629,Issue,"Side note, it looks like the `IntegrationTests` step isn't working in `appveyor.yml`:![screen shot 2014-12-14 at 6 24 26 pm]I'm actually okay with this for the moment - I always make sure to run all the integration tests before shipping a release...",,,,,,
66906479,629,Issue,Just one more thing - mute the test output:![screen shot 2014-12-14 at 7 03 41 pm],,,,,,
66897808,626,Issue,"This looks pretty great. I'd like us to be more careful with breaking API changes, should we introduce this as an overload and mark the current one as `[Obsolete]`, rather than break this outright?cc  for feelpinions on this.",,,,,,
66898047,626,Issue,minor doco fix but looks good to me. do we care about it being a breaking API change?,,,,,,
66898110,626,Issue,"do we care about it being a breaking API change?If we don't want to `[Obsolete]` here I can document it as a breaking change - here's [an example] where I did a bunch of these. But given it should be relatively straightforward to port over, I think taking the hit is fine...",,,,,,
66898197,626,Issue,"could also go with an ""obsolete old and add overload"". but your call on how gentle you want to be",,,,,,
66898231,626,Issue,I'm leaning towards being gentle as a rule of thumb.I can write up some notes in `CONTRIBUTING` to make this a proper discussion :soon:,,,,,,
66898408,626,Issue,so r u going get   to do the overload in this PR? if not i can do it after the merge,,,,,,
66903549,626,Issue,I'll see what  thinks about it.Also cc  for thoughts on managing breaking changes better.,,,,,,
66907617,626,Issue,"Yeah, breaking the API is not nice, I'll add the overload and fix the doco, but I can do it tomorrow, because today I'm flying. If that is not OK with you guys, then  can go ahead and do it.",,,,,,
66908289,626,Issue,I'm happy to wait for it - take your time.,,,,,,
67378456,626,Issue,"Hello, I've fixed the xml doc and restored the old api (now marked as obsolete). Interestingly enough as I was syncing my fork, git could not fast forward the stuff, so there is perhaps one unneeded commit. If this is a problem and you have an idea how to fix it, I'm all ears.",,,,,,
67424115,626,Issue,"CI is failing as there's a method missing from the `IObservable` interface:Just gotta bring back the old `string,string` overload and mark it as obsolete there...",,,,,,
67487537,626,Issue,"![Facepalm] Sorry, I totally forgot about this. It is added now, but I've checked the output from the build more carefully and it seems that the Convention tests are failing, because the `OrganizationMembersFilter` enum has no `DebuggerDisplayAttribute`. Adding it to an enum does not make much sense to me, but there is the `Type.IsModel` extension method (TypeExtensions.cs), which determines whether a type should be checked for the attribute or not. Should I add a `type.IsEnum` check? Or there is another possibility?",,,,,,
67556689,626,Issue,"Should I add a `type.IsEnum` check?Yep, I like this idea - I don't believe we need to add a `DebuggerDisplay` attribute for our enums.",,,,,,
67572672,626,Issue,It should be OK now.,,,,,,
67576985,626,Issue,Pro Tip: add the email address you've used on this branch to your GitHub profile:,,,,,,
67578234,626,Issue,Done,,,,,,
67578735,626,Issue,![],,,,,,
224829024,625,Issue,",  could this one be closed as solved because Octokit.NET in one little step from release with pagination support?",,,,,,
225466494,625,Issue,Fixed in  and will be available in the next Octokit release...,,,,,,
66897632,624,Issue,"Many integration tests are failing, is that to be expected?Depends on the context (rate-limiting might be involved) - CI seems to be happy, but that's skipping the integration tests.Happy to look at specific errors - let's take it to another issue to this...",,,,,,
66904598,624,Issue,"I somehow managed to confuse myself (again) and used an email address instead of a username for `OCTOKIT_GITHUBUSERNAME`. I ran the tests again and only a few are failing, they're completely unrelated to my changes so I'll create a new issue to address them.",,,,,,
66905384,624,Issue,"I ran the tests again and only a few are failing, they're completely unrelated to my changes so I'll create a new issue to address them.Yeah, I don't believe those failures are due to this PR. :heart: for digging into it...",,,,,,
66905622,624,Issue,"Yep, this is something I overlooked as part of a PR review.Thanks for a) noticing and b) addressing it.![boom-yeah]",,,,,,
66905801,623,Issue,Fixed in #624,,,,,,
66532468,622,Issue,Would it be worthwhile linking to the blog post in the xml-docs too?,,,,,,
66535266,622,Issue,"Yep, it is a good idea, it is done :)",,,,,,
66536442,622,Issue,![],,,,,,
66537459,622,Issue,:beers:,,,,,,
66898090,622,Issue,"i would have added a forget-me-not test. ie ""if version greater than x and GravatarId exists (reflection) throw exception""",,,,,,
66898163,622,Issue,that's an interesting idea - got an example or writeup on the benefits of capturing these situations as automated tests?,,,,,,
66898387,622,Issue,not really. i just prefer not to rely on my brain to remind me of these things. if u can automate reminders then it is less mental tax in the future.As an aside on my projects i use this   to automate the thing. but did not want to push my pet project onto your pet project,,,,,,
67454674,622,Issue,sooo unit test to self destruct the obsolete member in some future version?,,,,,,
67466472,622,Issue,"a simpler version could be like this:That means you have a documented deprecation in the codebase, and don't need to go back and modify the test once it is removed...",,,,,,
66578979,621,Issue,"If you're following along on this PR and wondering about the change breaking your dev environment, it really shouldn't (because thankfully `.gitattributes` has been storing these line endings as `LF` in the repo).You might need to refresh your working directory to get rid of the `CRLF` line endings.Just run this within the repository once: git config core.autocrlf input git rm -r -cached . git reset --hard",,,,,,
66579364,621,Issue,ready to reviewI'm publishing up a new package to MyGet to ensure the right commit is used to generate the symbols.,,,,,,
66582253,621,Issue,:shipit:,,,,,,
66582941,621,Issue,I'll send it out in the morning (my time) so I can keep an eye on it a bit.,,,,,,
66645060,621,Issue,publish preview builds to MyGetWhat's the feed for that?,,,,,,
66646270,621,Issue,Found it:  :),,,,,,
66679534,621,Issue,"I can include that URL in the README/CONTRIBUTING docs if you think that will help others.I haven't bothered with creating pre-release packages, but perhaps using AppVeyor to do this isn't such a bad idea...",,,,,,
66695512,621,Issue,This is live!,,,,,,
66427074,620,Issue,Oh whatever,,,,,,
66394720,619,Issue,"Unfortunately we don't have a good way to do paging in the Task-based API currently.We do have a way to pass a datetime range to search on (perhaps that might help to constrain it): I'd love some ideas about how this API could look, without making it mandatory to specify for each request.Our Rx-based clients have paging built in, so you could do something like this:",,,,,,
66412477,619,Issue,"Putting aside paging for the moment, what's the simplest way to get the SHA of HEAD commit in the master branch?BTW, I was not able to run your code snippet. I get: `'Octokit.Reactive.ObservableIssuesClient' does not have a definition for 'Repository'`",,,,,,
66419227,619,Issue,"what's the simplest way to get the SHA of HEAD commit in the master branch?As you know the branch, you can do it like this:PS: Oops, it should be `ObservableGitHubClient` in that last snippet. Updated.",,,,,,
66536334,619,Issue,"Great, thank you Brendan",,,,,,
66536632,619,Issue,I'll close this out unless others have questions around paging...,,,,,,
526906342,619,Issue,"Our Rx-based clients have paging built in, so you could do something like this:  I tried this but it gave an `Observable` and for some reason it only ever has one commit even though the repository has over 5000.",,,,,,
527377375,619,Issue,"please open a fresh issue with details about your setup, as this discussion is over 4 years old and a lot has changed since then...",,,,,,
66385184,618,Issue,"Tell me if you want the commits squashed after a reviewPhilosophically speaking, I don't like squashing PR commits. But that's a discussion for another day.",,,,,,
66385767,618,Issue,"BTW, the docs on the new endpoint is way off compared to what you actually get back over the wire :stuck_out_tongue_closed_eyes:",,,,,,
66386017,618,Issue,"BTW, the docs on the new endpoint is way off compared to what you actually get back over the wireWell I guess we should update the docs. I can look into that as part of reviewing this.",,,,,,
68556589,618,Issue,Rebased and made setters `protected` to address #650 :smile:,,,,,,
68583750,618,Issue,:thumbsup: added to my review queue,,,,,,
68690735,618,Issue,:fire: DotSettings - done :ok_hand:,,,,,,
68695182,618,Issue,![],,,,,,
66045989,616,Issue,"GIven how recent this report is - and how it's the same set of AV products - I suspect this is a false positive.I've not gotten any love from Ad-aware when reporting these false positives in the past (F-Secure, on the other hand, have been awesome) - any tips for getting in touch with these teams?",,,,,,
66070646,616,Issue,Support ticket raised with BitDefender - let's see what happens next!,,,,,,
66072540,616,Issue,"yes, i  suspect this is a false positive too ;-)my admin is reporting the file to GData right now. Unfortunately you do not get feedback from GData, they are simply whitelist the file.",,,,,,
66304029,616,Issue,It seems to be normal again! Today I had no problems with the Windows GitHub client and GData.VirusTotal also gives his OK: I close the Issue.,,,,,,
166378366,615,Issue,"looks like you've done some work updating CONTRIBUTING.md and adding a powershell script to help with this, so I have just added a comment in the helper, reckon it is worth a PR?",,,,,,
166432187,615,Issue,"yes, that'd be great - let's close this out!",,,,,,
65891658,614,Issue,"so there was already a `Contributor` so i created a `RepositoryContributor`. not happy with it, any better ideas?",,,,,,
65921733,614,Issue,"Re: naming things, I can see the documentation refers to `Collaborators` rather than `Contributors` in the API:But on the website they're called `Contributors`In An Ideal World, I'd like the names of our things to reflect the API directly, but I'm happy to take `RepositoryContributor` at the moment until we get a chance to revisit this all the places we use identity - `User`/`Author`/`Assignee`/`Members`/`Collaborator`/`Contributor` all come to mind.",,,,,,
65921904,614,Issue,A couple of little polish things - the rest look good :sparkles:,,,,,,
65934394,614,Issue,ok i think i have addressed all your concerns. I also squashed,,,,,,
65970380,614,Issue,Any timeline on the release this might be included in. Just wondering if I can delay my usage so I can just run with the proper nuget,,,,,,
66033133,614,Issue,I'd like to get  `0.5.3` release out (which is just #605) but there's been extra things land in `master` recently which I'd like to tighten up before shipping a `0.6.x` release.- Optimist Me- next week sometime- Pessimist Me - add a week to the optimistic guess,,,,,,
66465173,614,Issue,"I see this was merged in to master and v0.5.3 was released, but I'm not seeing these changes in the v0.5.3 NuGet package. Was it somehow withheld from the release?",,,,,,
66517819,614,Issue,"my apologies, it didn't make it into 0.5.3 - It'll be out in 0.6.0 along with some other fixes -",,,,,,
66518246,614,Issue,Sounds good :+1: Thanks,,,,,,
65891466,613,Issue,so should this be `[Obsolete]` for a few versions?,,,,,,
65921340,613,Issue,that's the plan! :thumbsup:,,,,,,
66354902,613,Issue,"Hi, guys, can I snatch this issue? Anybody working on it?",,,,,,
66355463,613,Issue,I don't believe so. Be my guest!,,,,,,
66420332,613,Issue,Nice! :) I'll try to send you something in a few days.,,,,,,
66897854,613,Issue,Fixed in #622 and will go out in `v0.6.1`,,,,,,
65884721,612,Issue,I can have a look behind the scenes at why you might be encountering seeing this error sporadically.If you have a `X-GitHub-Request-Id` on the response that will help to correlate things on our end.,,,,,,
65899360,612,Issue,"Thanks , I am adding additional logging to my extension. Next time it happens I will hopefully have the information I need. :+1:",,,,,,
65950159,612,Issue,"Thanks for your help. It was the empty string for assignee, it needs to be null. I did some experimenting, milestone also needs to be null, not 0 and it is the same for updating the issue.I was confused by the API docs that says permission errors cause the various fields to be silently dropped. I incorrectly assumed that the API would be more forgiving because of that.",,,,,,
65956382,612,Issue,"This seems like a good place to propose an update to the API, where """" is treated as not having a user assigned. Do you have a place where users can file proposals like this?I'll pass this onto the API team for them to consider.FYI",,,,,,
65457747,610,Issue,"Ah, sounds like an oversight. Want to submit a PR? I'm thinking that it might make sense to add a `Contributor` type that inherits `User` and adds a `public int Contributions { get; set; }` property. Seem legit ?",,,,,,
65487655,610,Issue,:ok_hand: looks good to me!,,,,,,
65499938,610,Issue,PR... I was hoping u would say that,,,,,,
65512781,610,Issue,"Just ran in to this issue today. , if you don't have time for a pull request, let me know and I can help.",,,,,,
65513249,610,Issue,i have time. ETA saturday,,,,,,
65514418,610,Issue,:+1:,,,,,,
65876052,610,Issue,is gravatar_id deprecated?,,,,,,
65884398,610,Issue,yes  and I've added  to deprecate it in the future...,,,,,,
65006088,609,Issue,cool. thanks,,,,,,
66697666,609,Issue,"I think it is already implemented, unless I'm looking at the wrong place. See 58bae6f9fca7080aa84c55de27f96195c2d8608e If it is done, could you close this issue, guys?",,,,,,
66698247,609,Issue,"what I'd like to do with this issue is make it more discoverable - for example, from C# you could specify an `enum` for 2FADisabled, which is then transformed to the appropriate string under the hood when calling the API. this might be an adequate workaround for your use case",,,,,,
66698829,609,Issue,"Yep, makes sense. Tomorrow/the day after tomorrow I'll do it.",,,,,,
66724989,609,Issue,yeah that is a valid work around. but agree if the filter is one of two known values lets make it an enum,,,,,,
64897970,608,Issue,Now it's ready :). /cc,,,,,,
66191121,608,Issue,kindly requesting a new release that contains the fix :)/cc,,,,,,
66640076,608,Issue,The shipped Octokit 0.5.3 does not include this commit :(,,,,,,
66643260,608,Issue,We're about to ship  which I believe has it.,,,,,,
63760912,606,Issue,cc  to see if you are interested in these changes:- -,,,,,,
63761216,606,Issue,"Thanks for the PR and the detailed writeup .This all looks good, I'm just trying to wrap my head around whether this  will introduce some side-effects elsewhere - it's been a while since I've been inside the SimpleJson source.Perhaps  will know more.",,,,,,
67915709,606,Issue,Thanks for this  - I'll give this a test against our integration test suite before pushing it out in the next release!,,,,,,
63335540,605,Issue,This seems to include a ton of commits. Did you create your branch off of master?,,,,,,
63384278,605,Issue,Disregards - #587 will replace this,,,,,,
62667980,604,Issue,"Yo  when you get a moment. :smile: Also, look at that, AppVeyor Green!!!",,,,,,
64299517,604,Issue,"This is something we're planning to generalize, since it is a strong indicator of unintended behavior:",,,,,,
72339795,603,Issue,I consider the implementation ready for review.The pullrequest contains the following:- Implementation of a MergingClient that implements the github v3 merging api - Extension of the RepositoryClient and ObservableRepositoryClient with the MergingClient/ObservableMergingClient- UnitTests of the MergingClient- IntegrationsTest of the MergingClient,,,,,,
72340025,603,Issue,"Some context on why I added the Merging api:At job I wanted to optimize our deployment process by automating merging of our main development branch into a branch that reflects the currently live baseline.I tried using the PullRequest api, however since pull requests creates no-ff merges, we get bubble-commits instead of a simple ff merge.So since there was no implementation of the merging API i decided to write it.",,,,,,
72340368,603,Issue,"This is great! I just have a few nitpicky comments, but otherwise this looks very well done! :+1:",,,,,,
72340484,603,Issue,Cool - I corrected the findings! :+1:,,,,,,
72342290,603,Issue,Fixed - build is green again.,,,,,,
72344200,603,Issue,![selfie-0],,,,,,
61708887,602,Issue,My first reaction when reviewing this PR:![],,,,,,
61709047,602,Issue,"I would like this solution to work for our private repositories on GitHub, but we need a compatible authentication mechanism for raw content that works with srcsrv.dll in WindowsI'm around this week too - hanging out in the ASP.NET track. Hit me up.",,,,,,
61721842,602,Issue,"I might be doing this wrong, but I tried to open the modified PDBs in [PdbXtract] and I get this error:I even trashed my line endings to ensure I was doing the same behaviour as AppVeyor:Thoughts?",,,,,,
61723750,602,Issue,I do not modify the pdb files using my code. It is being modified using the Winows `pdbstr.exe`. I usually test using `srctool` and Visual Studio. Can you try `srctool -x file.pdb` first?,,,,,,
61875411,602,Issue,Couple of random notes:- `SourceLink` is not executed as part of the `CreatePackages*` step - should I include that?- Running `SourceLink` manually is broken on my machine - but that's my totally fault,,,,,,
61880416,602,Issue,"Can you try `srctool -x file.pdb` first?Yeah, this was PEBKAC on my part. It's all good now.",,,,,,
61893262,602,Issue,"However you want to do it. In the `appveyor.xml` file that I added, I just [added the SourceLink target there]. You are correct that it needs to be run before creating the packages.",,,,,,
61901449,602,Issue,"I downloaded the nupkg files build on appveyor and put them on a local file folder feed.I created a new test project using those packages, set a break point and stepped into the source that downloaded on demand. Here is the source:Screenshot as proof:Screenshot of actual download:",,,,,,
61901800,602,Issue,![],,,,,,
61902162,602,Issue,You are correct that it needs to be run before creating the packages.I'll fix that up once I've merged `release-0.6` back into master.,,,,,,
61902228,602,Issue,Thanks for this - was great to catch up with you yesterday and talk about all this stuff!![],,,,,,
61903249,602,Issue,Great meeting you! I really appreciate your enthusiasm about this. How should I follow up about getting the private repository support working? I plan on hunting down some more details soon.,,,,,,
61905515,602,Issue,How should I follow up about getting the private repository support working?Send me an email - details in my profile.,,,,,,
73496379,602,Issue,+1 to private repos!!!,,,,,,
61678782,601,Issue,"Perhaps this is just because Naming Things Is Hard, but `IssuesClient` has two method which are intended to mirror the API docs: - `GetAllForCurrent()` - `/issues`- `GetAllForOwnedAndMemberRepositories()` - `/user/issues`Let me know if this can be improved at all...",,,,,,
61706373,601,Issue,"Sorry I don't know if I use it the right way but in the three forms bellow written, the two methods return me the same list. And none has the issues created by that authenticate user in repositories of other users.",,,,,,
61718105,601,Issue,"And none has the issues created by that authenticate user in repositories of other users. I checked the admin tools and you don't appear to be a member of other organizations or external repositories, so that might explain why these lists are the same. Can you elaborate on what you're expecting to see here?",,,,,,
61724734,601,Issue,"What I want to achieve is to obtain a list of issues that appear on this image. (The first page when I sign in)![shiftkey foto en pregunta] But the issues that I've created in repositories of another user (TubCode), do not appear in any list using these methods... For example TubCode/TubCodeRepo  Issue pruebaTub prueba.Thanks for your time.",,,,,,
61728358,601,Issue,ok thanks! that gives me more to look into!,,,,,,
61729190,601,Issue,I don't think we're able to bring in that `TubCode/TubCodeRepo` issue due to the repository not being one you belong to.cc  to confirm this is by design,,,,,,
61800165,601,Issue,"Ok, Thanks!I have other question.Is this API docs  not yet implemented in Octokit.Net? or are there other methods to obtain the list of forks  in a repository?",,,,,,
61849846,601,Issue,Repository Hooks is currently in-flight,,,,,,
61852514,601,Issue,"cc  to confirm this is by designYup. The `/issues` API call predates the new Issues UI behavior, but you should be able to get the same results from the [Search API].",,,,,,
61876472,601,Issue,"ah yes, we can totally do that today!",,,,,,
61883305,601,Issue,"Thanks a lot!  I've got the list that I wanted with the Search API.Regarding forks, I will try to complete the Forks API.",,,,,,
61287614,600,Issue,You'll probably need to fork the repository and create a new branch for these changes - take a look at this to help get you started:,,,,,,
61284688,599,Issue,Would you be interesting in submitting a PR for it? It should be as easy as editing [ReleaseAsset],,,,,,
61285295,599,Issue,"Ok, I'll have look. I guess it is pretty easy.",,,,,,
61287259,599,Issue,"!###, I think I made a mistake with the PR. :-/",,,,,,
66856322,599,Issue,Are you still working on this?,,,,,,
66897834,597,Issue,Fixed in #608 and shipped in `v0.6.0`,,,,,,
60464441,596,Issue,![],,,,,,
60458019,595,Issue,Thanks! I added a few commits of stylistic changes.![selfie-0],,,,,,
60238048,594,Issue,"Yes, please add this.",,,,,,
60446185,594,Issue,and `CredentialCache.DefaultCredentials` aren't available for the PCL Profile259 or NetCore45 profiles we're targeting. Hmmm.,,,,,,
60447778,594,Issue,"Yeah, there's a bunch of cross-platform headaches I'd need to solve here (for example, did you know `WebProxy` doesn't exist in `NETCore45`? Good times all round)",,,,,,
70215967,594,Issue,"Octokit is already using the system web proxy on .NET per default, only authentication is not enabled. To enable proxy authentication (against the current Windows user) you can just set `WebRequest.DefaultWebProxy.Credentials = CredentialCache.DefaultCredentials;`, no need to configure something in Octokit...",,,,,,
182210882,594,Issue,"To enable proxy authentication (against the current Windows user) you can just set `WebRequest.DefaultWebProxy.Credentials = CredentialCache.DefaultCredentials;`, no need to configure something in Octokit...I assume you mean that the app developer who is using Octokit just needs to set that code, right? What are the implications of doing that?",,,,,,
185177330,594,Issue,"I assume you mean that the app developer who is using Octokit just needs to set that code, right?Yes that would be probably the correct way (or update the app.config, see link below). What are the implications of doing that?This should have no bad implications at all. Please note that this does only NTLM/Kerberos style authentication and never Basic/Digest, so your credentials are never exposed to a rogue proxy.I'm not sure why this isn't enabled per default in .Net. See here for additionally comments:",,,,,,
59843502,593,Issue,"Good question! Using versioned media types like `application/vnd.github.v3+json` are a great way for the API to stay backwards compatible between versions. Right now, Octokit.net only needs to support v3. It is foreseeable that when the API revs to v4 we would need to provide v4 types to serialize from and deserialize to.With that in mind, I don't think we should openly invite people to change the `Accept` header because, as a client wrapper I think it is our job to provide client side compatibility between media types. We could provide a way to amend the `Accept` header with `text` or `html` for example. Sorta like a mixed mode response. Octokit.net would always default to `v3+json` but allows you to specify an optional mode. Because `application/vnd.github.v3.html+json` for example only add's an extra property `body_html` and does not remove or change the response structure beyond that, the client side remains compatible.",,,,,,
59847040,593,Issue,"A historical example of this is around READMEs for a repository.You can grab the raw Markdown like this:Or just go straight to the HTML:Now I'm not saying this is a good example, but I would definitely lean towards hiding away the HTTP plumbing and making it clear through the API what you're getting.At a hand-waving level there's a couple goals I have in mind:- make it easy to discover **where** you can get different content types (lol Intellisense lol)- make it easy to **switch** between content types, without having to change your code significantly If you want to kick around some ideas, what did you have in mind for the client API? Are there things you think we should be doing differently?",,,,,,
59854789,593,Issue,"I agree with you 100% about hiding away the HTTP plumbing and I do like how the `GetReadmeHtml` is implemented vs the `GetReadme`, especially since they return different data structures.I guess what my real question was is regarding how, if at all, this can be applied to something like the comments of commits, pull requests, etc... since `body_html` or `body_text` fields come and go based on the media type where (on which objects) do you stick these members?For example, 1. Do you take existing response objects like `CommitComment` and stick in a ""BodyHtml"" member which may or may not get filled based on what the media type is? Perhaps the `GetComment` method has another parameter `withHtml` which triggers the media switch from json to json+html.2. Do you mimic what `GetReadme` has done and create a whole new function `GetCommentHtml` which returns a `CommitCommentHtml` object which inherits from `CommitComment` and adds the ""BodyHtml"" memeber.",,,,,,
59864927,593,Issue,"So  and I just kicked around a couple of things and I noticed that the `beta` behaviour is no longer supported: We don't actually lock the version to v3 anywhere in the codebase, so I think that's something we can/should do in the short term to ensure consistency.There was also a gap in my reply that I didn't acknowledge which  raised about letting the user specify the `Accept` header. I'm not averse to trying that out, but given the usages are relatively specific (we know which endpoints support different media types, and it's mostly around content) we've avoided doing this up until now - or the contributors have been happy to just consume Markdown.I thought there was another place where we did this but I can't find a good example here to point to history. So I'm :cool: with someone proposing a better solution than what we've currently got. PR review comments might be a good candidate for this, as that API is done.",,,,,,
59865578,593,Issue,"We don't actually lock the version to v3 anywhere in the codebase, so I think that's something we can/should do in the short term to ensure consistency. :+1:   about letting the user specify the Accept header.This should not be free form though. Perhaps as simple as an enum for each of the version3 types we support. Open to ideas. Like I said, because we are talking about media types within a version, each of these 'sub media types' only add extra properties to existing types. We can easily support this without creating a whole new set of types to deseralize onto.",,,,,,
59866112,593,Issue,"We can easily support this without creating a whole new set of types to deseralize onto.That'd be a good thing to test out before we dive into this - does our current deserializer support mapping ""body"" or ""body_html"" or ""body_text"" to the same CLR property?",,,,,,
59866409,593,Issue,"They wouldn't need to be the same CLR property. Having three separate properties would be legit, if you specify a mixed mode media type, you know that you expect body_html to have a value.",,,,,,
58924282,592,Issue,Minor nits on the release notes. Otherwise looks good.,,,,,,
58935460,592,Issue,:ok_hand: i'll clean those up. Thanks!,,,,,,
59034668,592,Issue,This is live,,,,,,
58789923,590,Issue,:heart:,,,,,,
58525565,588,Issue,:heart:,,,,,,
58237353,587,Issue,Putting this to [WIP] until I get feedback that this approach feels right...,,,,,,
58638645,587,Issue,I'm not hearing any objections from the crowd on this one? Is this thing on?,,,,,,
58680942,587,Issue,"Should we allow changing it after the `Connection` has been created? For example, could it be a property (with a default value) so we don't need to add another ctor overload?",,,,,,
58681786,587,Issue,"Setting the timeout for all requests is ok, but I think it would be more useful to set a timeout for a specific upload call, as it may be significantly larger than the default for other calls.Also, again specific to uploads, is it worth setting the timeout to null?",,,,,,
58698988,587,Issue,"Should we allow changing it after the `Connection` has been created?As in overriding a hypothetical `IConnection.Timeout` property? Perhaps. That would be relatively easy to expose if you want to do things more granularly. Setting the timeout for all requests is ok, but I think it would be more useful to set a timeout for a specific upload call, as it may be significantly larger than the default for other calls.Sure, but what's the harm in doing this globally? I'd love to avoid over-complicating this API, I just wish I had a second example to go alongside uploading assets to say doing it globally is a saner approach. Also, again specific to uploads, is it worth setting the timeout to null?OK, this one interests me. `HttpClient.Timeout` isn't a nullable `TimeSpan` but you could just pass it `TimeSpan.MaxValue` and achieve the same effect...Perhaps that's the compromise here, so you can do this sort of code: do you keep the `GitHubClient` around for multiple actions? Or would you dispose of it after the uploads are done?",,,,,,
58732969,587,Issue,"Typically we keep the client for a few actions, mostly create the draft release + upload assets to that draft.Usually upload timeouts would be large, so setting it globally I don't want to wait 60 minutes to find out the release creation was the one that timed out. Being able to change the default between calls is ok, but it just feels a bit icky to me.[HttpClient.Timeout] supports a value of [Infinite] so that would work instead of null.Also, here's where I'm using Octokit.",,,,,,
58746114,587,Issue,"fair enough, I've got a couple of ideas for isolating it just to `Releases`. I'll see how they feel.",,,,,,
58750110,587,Issue,"Alright, how does that test look and feel?",,,,,,
58754120,587,Issue,That ContinueWith gives me the heebie jeebies.,,,,,,
58754859,587,Issue,"That ContinueWith gives me the heebie jeebies.Yeah, it's Not The Best. Open to other suggestions to contain that side-effect.I don't want to be passing the timeout all the way through for the `Post` - perhaps there's some other pattern I can use here...",,,,,,
60443223,587,Issue,"Ok, so I threw away all that previous work and went down the path of just making `UploadAsset` support overriding.  let me know how that feels",,,,,,
62266679,587,Issue,:monkey:,,,,,,
62669616,587,Issue,:apple:,,,,,,
65522518,587,Issue,"Some of the integration tests are failing, but I'm gonna take this in because I no longer trust my CI setup :cry:",,,,,,
58220691,586,Issue,Looks good to me!,,,,,,
58226455,586,Issue,I didn't even get to include a rocking screenshot before it was merged? :stuck_out_tongue: ![screen shot 2014-10-07 at 3 41 25 pm],,,,,,
58916843,585,Issue,"Dropping this from the milestone, it's not a blocker",,,,,,
101487207,585,Issue,:boot: this one for now. If I get caremad enough I'll come back.,,,,,,
58187180,584,Issue,"JetBrains doesn't support xUnit in-the-box, but you can find the addin here:",,,,,,
58705667,584,Issue,"Looking good, just a bunch of little things. I'd love some unit tests if it's possible to ensure we don't break things in the future.",,,,,,
58738504,584,Issue,"Looking good, just a bunch of little things. Thanks, I have fixed the remaining issues. I'd love some unit tests if it's possible to ensure we don't break things in the future.Sure, I will try to find some time to add tests. It was easier to test it directly from my app than to dig into how tests are organize in Octokit.",,,,,,
58752192,584,Issue,"Sure, I will try to find some time to add tests. It was easier to test it directly from my app than to dig into how tests are organize in Octokit.Feel free to shamelessly borrow from the existing test suite. There's many examples under the `Octokit.Tests/Clients` namespace:",,,,,,
58844509,584,Issue,"FYI, I just released [SharpCLABot], the project that is using these WebHooks API.I will take some time in the coming days to provide some official tests of the web hook API.",,,,,,
94322913,584,Issue,Closing this PR in favour of #776,,,,,,
58185175,583,Issue,"I understand that the original code was able to serialize/deserialize list into comma separated values.To be honest, I'm not so sure it ever did. It would deserialize if the value was an array: `[ ""repository"", ""user"" ]` but in this case it appears to have been a comma-separated list for the longest time: `""repository,user""`. I've got a fix for this in  which I'll push out with v0.5 Another one is when deserializing a bool that can be null (It happens when receiving a webhook callback with mergeable property that is ""bool"" but had a null value in the payload). Do you have a sample test which will demonstrate this? I'd love to capture a regression test for it and review the webhooks part of the API for any others like it...",,,,,,
58187858,583,Issue,"This is the json I received on a webhook:  I first tried to deserialize this with a simple object with something like this:But you know what, I just tested it and it is working fine... :sweat_smile: Ok, forget about the bool fix then, I must have drunk  :beers:",,,,,,
58188983,583,Issue,I'll close this out and review #584 when I get a chance :v:,,,,,,
58035140,582,Issue,Thanks for the report! I have a bad feeling we used to have a custom edit to SimpleJson that's been lost with an upgrade. Though I thought we updated SimpleJson proper to support readonly collection deserialization.,,,,,,
58036728,582,Issue,"Btw, I was wondering why octokit is not using JSON.net?",,,,,,
58039192,582,Issue,We wanted as few dependencies as possible. Our original goal was to have a single drop-in dll. Not sure if we care so much anymore.,,,,,,
58045752,582,Issue,"To be honest, I'm happy to avoid all the ""JSON.net hell"" problems by internalizing our JSON dependency and doing a bit more work...",,,,,,
58184056,582,Issue,"To be honest, I'm happy to avoid all the ""JSON.net hell"" problems by internalizing our JSON dependency and doing a bit more work... Can you elaborate? I have not worked much with JSON.net, so can't really comment on the problem you point, but I would be glad to know more details about your griefs about it (that could help!)",,,,,,
58188920,582,Issue,"Can you elaborate?JSON.NET has been around for many years now (I think it goes back to .NET v1.1) and over time it's become very popular, so popular that Microsoft is now using it in their web frameworks, instead of duplicating effort with the `DataContractSerializer`.It's one of the most popular NuGet packages out there, and the downside to this is that many other packages depend on it. So when package A depends on version XYZ of JSON.NET, and package B depends on an different version of JSON.NET, you might get issues like:- unable to upgrade as existing/new packages depend on incompatible versions- strong naming issues (not so bad these days as the AssemblyInfoVersion is fixed for major releases)But JSON.NET is relatively stable library these days at the core so you should be able to depend on the latest version and be happy, but I've been happy with using SimpleJson (and contributing some patches upstream for things I've needed) and the benefit of SimpleJson is that it's internalized, so it bypasses all the possible incompatibilities you might see when dealing with NuGet dependencies...",,,,,,
58204332,582,Issue,Closed in #581,,,,,,
57919478,581,Issue,Can I get a :thumbsup: on these release notes ?,,,,,,
58034890,581,Issue,:thumbsup: on release notes.,,,,,,
58202871,581,Issue,This is live!,,,,,,
58203316,581,Issue,![selfie-0],,,,,,
57577379,579,Issue,I already hit this as part of #572 - I just need to push through the last step and ensure the build is now green.,,,,,,
57577437,579,Issue,"As soon as I can do that, I'll publish another release!",,,,,,
57609505,579,Issue,"Cool, thanks!",,,,,,
57146887,578,Issue,![]I can recreate this. Gonna add it to #572,,,,,,
68516879,578,Issue,I've removed this method in #656 as it was no longer necessary.If it comes back somehow I'll try and grab a Fiddler log of the problem,,,,,,
57145166,577,Issue,"Hi  - this is a good start, and there's more opportunity for contributions here if you're keen!",,,,,,
56902902,576,Issue,Thanks!,,,,,,
56959345,576,Issue,You're welcome :),,,,,,
56588516,575,Issue,Cool - will this also ensure the NuGet package gets correctly generated? (i.e. the `portable` string includes `wpa81`?),,,,,,
56592235,575,Issue,Based on the contents of Octokit.nuspec it looks like the supported frameworks stuff is being derived by nuget.exe but ive never used the implicit stuff to determine frameworks before so i don't really know if there is something hidden elsewhere.Edit: build.fsx is what determines the nuget package construction i will modify the PR with this once the NSubstitute failure is figured out.,,,,,,
56592923,575,Issue,"I'm not sure i understand the build failure that is present here, how has the addition of wpa81 to the pcl targets caused NSubstitute to not exist in the tests (for all of the test projects)?",,,,,,
56597163,575,Issue,"I'm not sure i understand the build failure that is present here, how has the addition of wpa81 to the pcl targets caused NSubstitute to not exist in the tests (for all of the test projects)?Not sure, this may be unrelated",,,,,,
56599705,575,Issue,"The NSubstitute thing is unrelated, fixing it over here #572",,,,,,
56608380,575,Issue,Is anything else required here?,,,,,,
56619259,575,Issue,Nope. Thanks !,,,,,,
56585235,574,Issue,I believe the Portable package needs to target Profile259 instead of 78. Can you create a PR to do this? If that sounds Scary‚Ñ¢ let me know and I can help you out with it.,,,,,,
56588295,574,Issue,I created a PR for this,,,,,,
57145899,574,Issue,Resolved by #575 - hoping to get this out in a new release this week,,,,,,
58642745,574,Issue,Just so you know why I asked in the first place: [OctoCentral] Thanks!,,,,,,
58648778,574,Issue,![],,,,,,
58674295,574,Issue,Cool!,,,,,,
56452038,573,Issue,"Oops, yeah, that's an oversight:If you're feeling courageous, you could add the xmldoc paths to [each] [package] and test out the result by running:",,,,,,
58226520,573,Issue,This will be published out in 0.5.1,,,,,,
59005824,573,Issue,Awesome! Thank you very much!,,,,,,
56332292,572,Issue,/khanify tests,,,,,,
56610546,572,Issue,The last outstanding issue is related to the AppVeyor build agent erroring out while updating the test results. I've raised a support ticket here to see if we can get it resolved:,,,,,,
57905574,572,Issue,![],,,,,,
57906063,572,Issue,I've captured  to make our API rate limiting a bit nicer when running CI (AppVeyor runs a build for the branch update **and** the merge commit for the PR) so this is exhausting our API limits damn fast:![screen shot 2014-10-04 at 10 44 13 am]Gonna merge this in and cut a release before I go completely insane...,,,,,,
56228606,571,Issue,Can we use the currently build Octokit.dll?Well that and Octokit.Reactive.dll. But I'm not sure I understand the question. What else would we use? Which files do you want to releaseRight now we use the default release approach of zipping up the source code. But it'd be nice if the release contained both nuget packages too.,,,,,,
56229059,571,Issue,"What I meant is: the build script retrieves the last octokit version fromnuget in order to publish the new one. That's a bit of a problem withstatic typing. Hen and egg if you will.On Sep 19, 2014 10:13 PM, ""Phil Haack"" notifications.com wrote: Can we use the currently build Octokit.dll?  Well that and Octokit.Reactive.dll. But I'm not sure I understand the question. What else would we use?  Which files do you want to release  Right now we use the default release approach of zipping up the source code. But it'd be nice if the release contained both nuget packages too.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
56233790,571,Issue,"OH! Like you want to use the Octokit we build to publish itself. That's crazy. But interesting. Yeah, I guess we use the last known good one. But maybe copy it somewhere other than build output?",,,,,,
56245467,571,Issue,So we just have to build a nice zip  right? Which files do you want to have in it?,,,,,,
56246510,571,Issue,"So we just have to build a nice zip right?  Which files do you want to have in it?I'll be honest, I haven't looked at it closely. I thought creating a release automatically gives you links to the zip of the source. So we'd only need to add two package files to the release. One for Octokit and one for Octokit.Reactive.",,,,,,
56256953,571,Issue,"Yes it gives you links to the source, but since everyone uses git sourcezips do not make much senseOn Sep 20, 2014 1:01 AM, ""Phil Haack"" notifications.com wrote: So we just have to build a nice zip right? Which files do you want to have in it?  I'll be honest, I haven't looked at it closely. I thought creating a release automatically gives you links to the zip of the source. So we'd only need to add two package files to the release. One for Octokit and one for Octokit.Reactive.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
68663419,571,Issue,"Not sure why I missed this initial discussion, but here's my thoughts:- why are we doing this? to let those who want to manage their dependencies by hand do bypass NuGet- don't bother with PDBs or other files, just the binaries- the root folder should contain the platform flavours, with `Octokit.dll` and `Octokit.Reactive.dll` (if applicable) in place- the PR just uploads Octokit.dll, which might not be suitable for non-desktop appsI'm not sure of the demand for this for non-desktop apps, so I'm happy to just start with a `net45/Octokit.dll` zip file if that makes your situation easier to work with...",,,,,,
75720218,571,Issue,Taking this off my watch-list.  feel free to get in touch if you want to revive this idea.,,,,,,
75721158,571,Issue,why are we doing this? to let those who want to manage their dependencies by hand do bypass NuGetActually the idea was to dogfood Octokit Relases API since basically the whole F# ecosystem (and all the new C# projects that use ) now uses Octokit with this script ;-)It would probably have shown that  is needed with the latest octokit release. A breaking change which is not listed in the release notes.,,,,,,
75722435,571,Issue,apologies for that - the class itself is in the wrong namespace and so it was updated incorrectly when we changed the response models over to be readonly properties.If you like I can revert that change for 0.7.1 which I was aiming to ship tomorrow my time.,,,,,,
75722763,571,Issue,"No all is well. Paket takes care of that. Everybody I know is using thegithub link feature and automatically gets my ""patch"".Still I'd love to Octokit dogfooding itself.On Feb 24, 2015 10:15 AM, ""Brendan Forster"" notifications.comwrote:   apologies for that - the class itself is in the wrong namespace and so it was updated incorrectly when we changed the response models over to be readonly properties.  If you like I can revert that change for 0.7.1 which I was aiming to ship tomorrow my time.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
75723410,571,Issue,"I've opened up  to address this anyway - it's wasn't in the right location, which lead to the problem at hand...Once I've dealt with some of the urgent issues (like Mono\* support) and the other outstanding PRs, I'll come back to this. Thanks again for the initial spike.",,,,,,
75725161,571,Issue,Sorry if this sounded angry. Actually I'm really really happy about the combination of FAKE+Paket+Octokit. It works very well in practice. It works so well that according to  I have already pushed 548 releases of Paket alone.,,,,,,
75730962,571,Issue,"it's all good, I'm mostly annoyed at myself for not picking that issue (and also for letting the release languish for so long).",,,,,,
56200048,570,Issue,Thanks! :+1:,,,,,,
56200936,570,Issue,I have to thank you - works like a charme Still think you should dogfood in Octokit's own build script ;-),,,,,,
56201269,570,Issue,^^ gives me 404,,,,,,
56201481,570,Issue,Whoops! Clipboard error.,,,,,,
56201513,570,Issue,Still think you should dogfood in Octokit's own build script ;-)We would love help in that. :smile:,,,,,,
55611548,567,Issue,"Hmm, I believe the file size limit is 50MB. I'm not aware if there's a different limit for unauthenticated users. Want to try that first? If it doesn't work, I can dig into it more.",,,,,,
55688621,567,Issue,this is for the Releases API I've not seen anything documented about size limits here:  so i'm now looking behind the scenes for more information...,,,,,,
55689857,567,Issue,Turns out I was authenticating first.,,,,,,
55690802,567,Issue,"Ok, so a colleague reported hitting a file limit of 20Mb. Meanwhile I was having issues with 10Mb.I suspect this is the culprit. The connection is timing out before the upload is complete. Yay for Australian internet speeds.",,,,,,
55691039,567,Issue,"Right, so it sounds like we need to merge  in",,,,,,
55691184,567,Issue,can you sit Fiddler in between and see that it's not an exception from the backend you're seeing (i.e. that it actually times out)?,,,,,,
55691860,567,Issue,"Yep, not seeing an error from the wire, so it's definitely a timeout. Also the exception I was getting was a Task Cancellation which I'm guessing comes from the HttpClient.",,,,,,
55691963,567,Issue,:cool: so we know where the problem lies at least,,,,,,
66897866,567,Issue,Addressed indirectly in #587 which went out in `v0.5.3`,,,,,,
55544216,566,Issue,"We don't have specific helpers for doing error reporting, but this is a rough script that could do the job:",,,,,,
55547807,566,Issue,Thanks! It was helpful!!,,,,,,
55551086,566,Issue,"And one more question sir...How can i specific label? example...Label l = new Label();l.Name = ""Bug"";l.Color = Red;issue.AddLabel(l);like this..Thanks.",,,,,,
55553014,566,Issue,"You can't create ad-hoc labels, but you can add existing labels when you create an issue:",,,,,,
55553540,566,Issue,Thanks a lot! it was very helpful!!!,,,,,,
55462446,565,Issue,LOL at the bug! Seems like an easy fix. Want to give it a try yourself and send a pull request? :smile:,,,,,,
55468033,565,Issue,"I have tried a very simple solution, but it didn't work :(I'll look into it more and make a PR if I get the chance/have the time.",,,,,,
57146960,565,Issue,Resolved in #576,,,,,,
55543696,564,Issue,"Not sure why that build is failing, but the build script is happily passing on my machine.I'll dig into that later.",,,,,,
52717248,562,Issue,"We've actually made a start on the documentation under the `docs` folder:You can see a writeup about how Releases work here:For those things that aren't covered by docs, we've got a suite of integration tests which should demonstrate how other areas of the library work:",,,,,,
58721437,561,Issue,"Looking good, just some minor feedback and questions...",,,,,,
58756264,561,Issue,"Thanks for the review ! I hope my comments make sense. I'm only adamant about the PATCH stuff because when I created CodeHub for iOS I found that if the fields were not completely nullable then I had to make a initial request to get the data so that I could set the non-nullable fields on the update request. This meant longer waiting for people whos internet connection was not up to snuff so I'm trying to avoid those issues here as I move all my code from  which I wrote when there was no official .NET client, to this repository.",,,,,,
58764295,561,Issue,"I'm only adamant about the PATCH stuff because when I created CodeHub for iOS I found that if the fields were not completely nullable then I had to make a initial request to get the data so that I could set the non-nullable fields on the update request.That's a great point - I have been designed the update flow for these components based on the assumption that the old data is readily available. I'm just trying to figure out the best way to incorporate these changes - I love that we're staying close to the API conventions, I'm just trying to keep in mind the developers who are coming upon this API for the first time.",,,,,,
58767221,561,Issue,These are all great points and make sense for updates. We should not require the existing data to be there. Especially if the API doesn't require that.,,,,,,
58791169,561,Issue,"I hit something similar a while ago with . TL;DR: there's some times when we **need** to send `null` on a `PATCH`, but they're very rare - and we have those hooks now.",,,,,,
58793084,561,Issue,I've cherry-picked this into the next release . Thanks for the hard work and great discussion!![],,,,,,
75678180,561,Issue,", Hey guys, with the new release 0.7 it looks like the changes I made to the IssueUpdate were reverted (f3d4b751cc7c255748c972a19b76467f0a50f39f - I think). With the reversion, it looks like you are unable to set the Labels to null, which as we discussed above, prevents you from _not_ modifying that field during the PATCH. E.g. You either have to know what the labels were set to previously, or you'll end up unsetting them all (empty array = no labels)",,,,,,
75678551,561,Issue,"apologies, I'm looking to put together another release later this week - I'll make sure we get that back in",,,,,,
75678778,561,Issue,", It's all good. Just wanted to make sure someone was aware of it. Let me know if there's any way I can assist.",,,,,,
75679077,561,Issue,at least this time I'll make sure to keep a regression test around for Future Me to ensure I remember this :trollface:,,,,,,
55543877,560,Issue,Just remove that `Size` parameter and I'm happy to merge this in!,,,,,,
56091750,560,Issue,Done!,,,,,,
56114546,560,Issue,Thanks! ![],,,,,,
52434807,559,Issue,"No particular reason, I suspect they just weren't of interest to those who were contributing to it...",,,,,,
54698236,559,Issue,I think `size` was left out because of future deprecation. It's very difficult to obtain a meaningful number.,,,,,,
57919823,558,Issue,"Oh man, this looks amazing :sparkles: :heart: :metal: Sorry for not looking at this earlier!",,,,,,
57921650,558,Issue,"Sweet! Any reason why the CI build seems to always fail? I've submitted a few PR, this being the more complex, but they all seemed to have failed",,,,,,
57925791,558,Issue,"Yeah, I've been fighting with the CI builds recently and it comes down to the integration tests. At this point I'm just going to pull them because they're more trouble than they're worth.",,,,,,
58713749,558,Issue,This looks pretty great! Just that coding convention issue - you can see this issue by running the `ConventionTests` project.Once that's in I'll rebase this on top of release-0.6 and send it out to the world!,,,,,,
59036586,558,Issue,Merged in here: 06e8616fa0eaca373d4167bdd7ff6001553f6ecc - should go out in v0.5.3Thanks!,,,,,,
52350752,556,Issue,"not sure why it failed, related to something else...PullRequestsClientTests.CanGetCommitsAndCommentCount [FAIL]48   Assert.Equal() Failure49   Expected: 250   Actual:   1",,,,,,
52358135,556,Issue,"Thanks! Yeah, we need to look into that test separately.",,,,,,
52358182,556,Issue,Thanks!![],,,,,,
51993444,555,Issue,![],,,,,,
51993754,555,Issue,Thanks Matt!,,,,,,
51730837,554,Issue,"Because i edited the file via github directly and did a copy and paste from a rdp session, a binary char was ""injected"" somehwere in the file (my fault). I removed it, but you will see ""binary data"" in the diff. Just ignore this, the file is now clean.",,,,,,
51731280,554,Issue,hey  how do you feel about this change?,,,,,,
51810826,554,Issue,"I try to avoid static properties like this.For example, you may have 2-different octokit instances (github.com and some github enterprise) instance and this would make it impossible to have different timeouts for each.If you want to set a default for all requests that can be easily overridden, I think the default timeout should an instance property on `IGitHubClient`.What do you think",,,,,,
51846964,554,Issue,":thumbsup: on moving it into the abstraction.The other part of me is thinking that we could(should?) isolate this to just releases itself, rather than make it global.I haven't had a chance to look at how this would look (or how hard it'd be to plug in)...",,,,,,
58705923,554,Issue,Going to close this in favour of whatever we agree on in #587 - thanks for starting the discussion,,,,,,
51496126,553,Issue,This is looking good. Would you be interested in adding the observable counterparts too?,,,,,,
51497437,553,Issue,done ?,,,,,,
51503895,553,Issue,I ran our conventions tests and it points out: Methods not found on interface `IObservableTeamsClient` which are required: - AddMember - AddRepository - RemoveMember - RemoveRepositoryWould you be willing to add those?,,,,,,
51586166,553,Issue,"Added. Sorry about that. Looking at it, it seemed like only methods that return anything other than a task would have an implementation here.",,,,,,
51619400,553,Issue,Excellent work!![fresh-prince-high-five],,,,,,
51006324,551,Issue,":thumbsup: to merging the two tests together.I actually like `CanListClosedIssues` better as it tests an issue is ignored, but totally up to you...",,,,,,
51006697,551,Issue,"Yeah I agree, maybe I didn't write it clearly enough.",,,,,,
51081176,550,Issue,Thanks!![],,,,,,
50965138,549,Issue,"Due to an outstanding bug when using Portable Class Libraries + Code Analysis (it would throw a StackOverflowException), we no longer support building Octokit on VS2012.I'm not sure why the `BNB` platform is being selected in that first screenshot, but I'd highly recommend getting your hands on VS2013 if you can.",,,,,,
50245093,548,Issue,"We don't have any plans, but there are a number of Python libraries out there to interact with the GitHub API - check the list here:I'd check out [PyGitHub] - that seems to be available for Python 2 and 3 and targets v3 of the API...",,,,,,
50245575,547,Issue,"Octokit will target v3 of the API by default (see ) but when we pull in a preview feature we'll opt-in to the feature using a new header, like this . For everything else, it should just work.I've started on some docs explaining how to get started with Octokit here:  but the basics is that you just specify the server to connect to:If you're seeing some weirdness with the responses from your GitHub Enterprise server I'd love to hear more details - what's not working, what the request/response headers look like, etc.",,,,,,
49862942,546,Issue,"I have an integration test for this as well, but wasn't sure what the project policy is on those. It seems quite brittle unless I create known teams and known repositories in the test setup?",,,,,,
49895389,546,Issue,Great! The [CONTRIBUTING.md] guide has some info about how we set up environment variables for integration tests. We do have the tests create the repositories they need in the setup.Here's a good example:,,,,,,
50016768,546,Issue,"Do you want to take it without the integration test, or would you prefer that got in their first?",,,,,,
50035263,546,Issue,"if you can include an integration test (and `Skip` it with a note) so we can see what it _should_ do, I think that's good enough for now...",,,,,,
58752011,546,Issue,Resolved via #546,,,,,,
49763688,543,Issue,"Hmm, after thinking about this, I have a simpler idea. The only header I really need to override is `accepts`.",,,,,,
100128720,542,Issue,"apologies for letting this languish and ignoring the CI issue (which looks like an intermittent issue). Thanks for submitting it.I've dusted this code off, updated it to our latest conventions and APIs and reopened it as #794.",,,,,,
49487600,540,Issue,What is the `Octokit.exe/Octokit.exe.csproj` file for? Seems unrelated to this PR.,,,,,,
49839752,540,Issue,"I only added the methods. Octokit/Helpers/ApiUrls.cs is the only one that matters. When I commited, this file was also shown as changed. I don't know what it is and because of that I didn't hit the ""revert changes"" button.",,,,,,
49895701,540,Issue,"That looks like a brand new file your commit added. I don't see it in the main repository. Probably safe to delete the ""Octokit.exe"" folder and commit that and push.",,,,,,
50866595,540,Issue,"I checked the status of my commit and it fails on one of your tests.Test assembly: C:\projects\octokit-net\clean-up-after-tests\bin\Debug\Octokit.Tests.Integration.dll46 47..........................................PullRequestsClientTests.CanGetCommitsAndCommentCount [FAIL]48   Assert.Equal() Failure49   Expected: 250   Actual:   151   Stack Trace:52      c:\projects\octokit-net\Octokit.Tests.Integration\Clients\PullRequestsClientTests.cs(214,0): at PullRequestsClientTests.d__67.MoveNext()Could you solve that, please ?Thanks",,,,,,
50904401,540,Issue,that's an integration test I've seen fail infrequently - I'm less concerned about that as it's not related to the current changes...,,,,,,
48957014,539,Issue,"The Search APIs require a search term, so that's obviously not what you're looking for.If you know what repository you want, the Issues API will do the trick:However we've found  which means you can't search for ""All"" issues at the moment.",,,,,,
48961623,539,Issue,"Thanks, you're right, this API was what I was really looking for.There was a small typo in the above (it's ""Issue"" instead of ""Issues""):var client = new GitHubClient(); var issues = await client.Issue.GetForRepository(""owner"", ""repository"",            new RepositoryIssueRequest {  });",,,,,,
48789293,538,Issue,![] And added an #if around using in RequestParameters.csNice spot! I haven't seen this come up when building in Xamarin Studio but totally a nice thing to have here.,,,,,,
48774094,537,Issue,:thumbsup:,,,,,,
48701194,535,Issue,"Right, that makes me feel less terrible![]",,,,,,
48701505,535,Issue,"So the build for the commit failed for an unrelated reason: But the build for the [merge commit] succeeded:Anyway, it's Friday and the beers are beckoning. I'm calling this :thumbsup:...",,,,,,
48625852,534,Issue,The one test that failed is due to not configuring `OCTOKIT_GITHUBORGANIZATION` which I just did.,,,,,,
48572604,533,Issue,"and `UserKeysClientTests.GetAll` are likely due to the account used, the other is more concerning...",,,,,,
48625557,533,Issue,I'm fine with skipping them for now until we get things set up properly.,,,,,,
58205796,533,Issue,"If these aren't being skipped when running CI, they will be :soon:",,,,,,
48570206,532,Issue,"No idea who set that up, but :thumbsup: to removing it.I know we were able to reach someone who does maintenance on these servers to get some stuff installed, but I've completely forgotten who it was. For some reason I think  and  might know...",,,,,,
48570486,532,Issue,I normally ping []. I think [] does (or did) a lot of the work on this.,,,,,,
48570590,532,Issue,Recently  and  have been servicing most of my requests.,,,,,,
48610107,532,Issue,"Hi, James has been less involved lately - but I'll be happy to help. First,  , you should be able to turn off notifications after you log in by clicking on your name at the top right, and then selecting the notifications rules tab.  Or, I'd be happy to archive the build if you want to go that way.",,,,,,
48613710,532,Issue,"I went to that tab this morning and added a rule specifically for octokit.net which only sends me an email when the first failed or first succesful build happens. I guess this will mask the rule which is inherited from the all users group (which I can't alter), for octokit.net only? It's not at all obvious from the UI what the order of precedence is.",,,,,,
48613951,532,Issue,"OK, I've just spotted the help box on the right. It looks like that will indeed solve my immediate issue.",,,,,,
48674649,532,Issue,"are you able to archive that build? It's no longer (or never?) been used, so it's just wasting space and resources over there...",,,,,,
48674967,532,Issue,"absolutely, I'll go ahead and do that.On Thu, Jul 10, 2014 at 5:47 PM, Brendan Forster notifications-at-github.com|github| j4464d63qt.com wrote:   are you able to archive that build? It's no longer (or never?) been used, so it's just wasting space and resources over there...  ‚Äî Reply to this email directly or view it on GitHub ..",,,,,,
48687699,532,Issue,![screen shot 2014-07-11 at 11 48 54 am]Thanks !,,,,,,
48697978,532,Issue,":thumbsup: thanks allOn 11 Jul 2014 04:19, ""Brendan Forster"" notifications.com wrote: Closed #532 .  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
48570751,531,Issue,"These failing tests are unrelated to the current PR:Aside from that, this is ready for review...",,,,,,
48627789,531,Issue,Nice work!,,,,,,
48626039,530,Issue,:thumbsup: to option 1,,,,,,
48690027,530,Issue,I am happy to help in any way I can.  My recent blog post on the Vary header  was my first step to fixing the current vary implementation and the next major task is do a persistent storage mechanism.  The current implementation is only an in-memory store.,,,,,,
48691218,530,Issue,"The current implementation is only an in-memory store.I think that's a ""good enough"" option for now for our use case, but perhaps down the track someone might want to implement their own backing store for it (imagine a service who wants to push that memory usage out of process, for example).",,,,,,
83293019,530,Issue,I created a naive implementation of the latter solution by creating a custom http client,,,,,,
83294910,530,Issue,![],,,,,,
83298953,530,Issue,![],,,,,,
83300198,530,Issue,Hubot img me Jonny Lee Miller 2015![],,,,,,
83301791,530,Issue,"Oh, where oh where are the other 48 hours I need in a day.![]",,,,,,
101636374,530,Issue,Status update: I'm ranting and raving over in #781 about first class support for `HttpClient/HttpMessageHandler` - once I get that right I think this will be trivial to add - and I already have crazy ideas in my head about how to do it...,,,,,,
110376604,530,Issue,Yesterday I did a major update to my [HTTPCache] to fix the problems with the way the vary header is handled.  I also renamed it because how it can handle being a shared cache too!  This also caused a change to the storage interface.  Next step is to produce a persistent storage mechanism.,,,,,,
112402035,530,Issue,so if I head down the road towards something like [this] does that make your life easier or harder?,,,,,,
114684343,530,Issue,Much easier.  Adding my cache would look pretty much exactly like you showed it in the example.,,,,,,
48434896,529,Issue,"Is there a preference to how I implement that portion  / ?Situations where I think it should be parameters in the method:- small number of parameters- all the parameters are required- the parameters are used in the URL, rather than the request payloadIn this case, not all of the parameters are required, so I think having a `CommitRequest` parameter is totally fine here...",,,,,,
48494375,529,Issue,"I believe this is ready to be merged.  I completed the implementations for GetAll and Get.  I also created a number of unit tests.  The AppVeyor build is failing, but it isn't due to any of the changes in my change set I believe. /  Can you guys take a look?Thanks",,,,,,
48575942,529,Issue,"If you can just merge `master` into this branch, see the tests run (and probably fail) again - and perhaps tidy up that last line, I'm happy to merge it in...",,,,,,
48632909,529,Issue,just finished with the cleanup and merging master back to my branchesthis should be ready assuming the build (mostly) passes,,,,,,
48675462,529,Issue,![]Thanks for the contribution !,,,,,,
48369940,526,Issue,Killing it!,,,,,,
48370471,525,Issue,"Whoops, can't merge it.",,,,,,
48427764,525,Issue,:monkey:,,,,,,
48554755,525,Issue,![download],,,,,,
48370969,524,Issue,![],,,,,,
48196203,522,Issue,:thumbsup:,,,,,,
48198073,520,Issue,is on :fire:,,,,,,
48261283,518,Issue,"The search APIs are slightly different to the the issues API.If you don't specify the `State` value, you'll get both `Open` and `Closed` issues.You can test this out using Caliburn.Micro again:",,,,,,
48261509,517,Issue,"You're using the Search APIs here, but there definitely needs to be the `All` enum defined here:If you're feeling courageous, you can submit a pull request to fix that and add a test here to show the `All` flag is used correctly:I'm happy to review and help you get started.",,,,,,
53214414,517,Issue,Looking to jump-in and noticed this issue may have been solved with #550. Does this need to be closed ?,,,,,,
53218635,517,Issue,"you're right, it's been fixed!",,,,,,
48255114,516,Issue,Turns out we specifically strip `null` values when serializing. Ho hum.And at that point we already have the mapped JSON properties (instead of the .NET properties) so my trick of using an opt-in attribute to indicate when the `null` should be set doesn't work.Hopefully I'm just missing something about the `IJsonSerializerStrategy`,,,,,,
48255170,516,Issue,cc   for their thoughts on this,,,,,,
48257064,516,Issue,Here's the spike:,,,,,,
48260135,516,Issue,"I _think_ there's a good reason for that code. -ogre wrote it and might remember.Here's what I propose. Let's add an attribute called `[AlwaysInclude]` or something like that. If that attribute is on the property, we always include it in the serialized JSON. This code path is under our control.",,,,,,
48260440,516,Issue,"Here's what I propose. Let's add an attribute called `[AlwaysInclude]` or something like that. If that attribute is on the property, we always include it in the serialized JSON. This code path is under our control.That's the path I went down, but the point where we ignore the null values is too late in the pipeline for us to reflect over the input object and look for annotations like this...",,,,,,
48265438,516,Issue,"It is? Looking at the code you linked to it looks like the line:We could just query ""getter"" for its attributes. I'm not in front of the keyboard to try it out though.",,,,,,
48266273,516,Issue,"![screen shot 2014-07-08 at 12 06 35 pm]It's not the .NET types we're using here, so the custom attributes from the property are not brought across :crying_cat_face:",,,,,,
48267789,516,Issue,![],,,,,,
46160445,513,Issue,"thanks! Remind me to shout you a :cocktail: next time we cross paths, as a thank you for keeping on top of this!",,,,,,
46137051,512,Issue,"As this is just waiting for me to do integration tests, the main changes are ready for review if someone has the time. :grin:",,,,,,
47602949,512,Issue,Looks great! Any idea when you'll get to the integration tests?,,,,,,
47604195,512,Issue,I'll try and get them done in the next couple of days,,,,,,
47814404,512,Issue,Integration tests are now dun! :smile: //,,,,,,
47814503,512,Issue,That failure seems unrelated to your work. Thanks!,,,,,,
47842066,512,Issue,![],,,,,,
47851799,512,Issue,anything else missing before this can be merged?,,,,,,
47853093,512,Issue,"Whoops, I thought I had merged it, but I got distracted. :smile:",,,,,,
47853229,512,Issue,:sparkling_heart:,,,,,,
46075519,511,Issue,well that makes it pretty simple then.  That leaves the review of array notation and the deserialize as the key stuff left to look over.,,,,,,
46305043,511,Issue,"Looking over the array notation that I used, I'm not sure that needs to change.  All of the array index accessors are in positive result test methods.  I'm still waiting for review of the changes to the SimpleJSON class from that repository.  Assuming that is accepted, this is probably ready for being accepted as well, unless someone else sees something I'm missing.",,,,,,
46438733,511,Issue,"In regards to this Pull Request and Item #439.  I've been looking pretty heavily at the GitHub API and the typical patterns for the URI.  #439 shows an example when an array is returned.  Looking at that GET request however, it should return an array, even if there is a single object, and the GitHub API does just that.The only time an object is returned is when the reference matches an endpoint, such as a branch commit when doing [`refs/heads/master`] or a specific pull commit [`refs/pull/507/head`] or other similar items.  However, when not at an endpoint, an array is returned [`refs/heads`] even if there is a single object being returned.After looking into this much more closely, I think we should close this Issue and #439 without any changes.  I'd like to have your opinions, and anyone else's, for that matter.",,,,,,
47603357,511,Issue,thanks for looking into this. I'm going to see if we can get this fixed on the github.com side of things.,,,,,,
46058190,510,Issue,that's interesting. We're using [SimpleJson] for this so perhaps we should also publish it there... have you seen this before? would you like it sent upstream?,,,,,,
46074178,510,Issue,fell free to send a PR to SimpleJson with the test that breaks and fixes this problem. Haven't seen this before.,,,,,,
46083186,510,Issue,do you have a (regression) test which causes this to fail? I'd like to see this for myself and capture it for posterity.,,,,,,
46225222,510,Issue,This test program exhibits the bug for me:,,,,,,
46293097,510,Issue,"thanks, I'll do some digging into it to see if we can address this without needing to update SimpleJson...",,,,,,
46395852,510,Issue,Tested this using SimpleJson in .NET and it correctly sets the name. This was the PR you sent that fixed it.  The only think I can think of this might be breaking is if Xamarin doesn't implement this api correctly. Can you check what this returns on Xamarin and .NET.,,,,,,
46508258,510,Issue,I'm not sure what you're asking me to check.,,,,,,
46535536,510,Issue,Execute `GetProperties(typeof(Ocktokit.User))` on Xamarin and desktop .NET 4.5 from Microsoft (not mono) and see if the number of properties returned are different.,,,,,,
46629986,510,Issue,They both report the same properties:26 props:prop GravatarIdprop SiteAdminprop DebuggerDisplayprop AvatarUrlprop Bioprop Blogprop Collaboratorsprop Companyprop CreatedAtprop DiskUsageprop Emailprop Followersprop Followingprop Hireableprop HtmlUrlprop Idprop Locationprop Loginprop Nameprop OwnedPrivateReposprop Planprop PrivateGistsprop PublicGistsprop PublicReposprop TotalPrivateReposprop Url,,,,,,
48160600,510,Issue,"Ok, so the problem comes down to this line:That doesn't map to a `bool` field - so :boom: :boom: :boom:.As an interim fix, I'll make this field nullable so it works on both the platforms.I'll see if I can get this fixed in the actual API for a future release, because it really should return `false` for organizations...cc",,,,,,
48161490,510,Issue,"As this isn't an issue with SimpleJson, I've opened #522 which fixes the bug.",,,,,,
46022047,509,Issue,"welcome! Have most of you changed to VS 2013 locally and just not checked in?Yes, but there's not really much to check in. One could make the projects/solution VS2013-only, but there's only been a couple of things that restrict us supporting VS2012 as well. If you find there's changes we should be making (given VS2013 Update 2 has just dropped) then I'm happy to review a PR about it. For example, [this] could be worded better :wink: The next problem I'm running into is during the code analysis against the octokit.portable project. For some reason, it is failing to output the results to the code analysis xml file. The combination of Portable Class Libraries + Code Analysis just didn't work in VS2012. This is why we went to targeting VS2013 - because they fixed it there.Let me know if there's any other specific questions you have.",,,,,,
46025192,509,Issue,That's perfect .  I've got the project up and running with VS 2013 without any hitches so far.  I'll be perusing the open issues as I learn the code base.  Hopefully soon I'll have a pull request for some minor changes just to get that process under my belt.,,,,,,
48682682,508,Issue,Once this is merged in I'll create a new release...,,,,,,
48683216,508,Issue,Squashed and merged in at 5f1a3fd9bb8a3630023e4a21ee1301b8ba3b0ab2,,,,,,
45561652,507,Issue,"One minor nit, otherwise looks aces.",,,,,,
45561740,507,Issue,LOL looks like I copied the wrong parameter name.,,,,,,
45561857,507,Issue,"Hmm, I noticed we use `number` elsewhere in that class. Not sure why, but oh well. :smile:",,,,,,
45561952,507,Issue,Want me to fix that too?,,,,,,
45562268,507,Issue,"Sure!On Mon, Jun 9, 2014 at 5:40 PM, Cameron MacFarland  .",,,,,,
45562487,507,Issue,"Ah, `number` comes from issue number. Given that it might be better to be consistent, otherwise files like  are going to have a mixture of `id` and `number`.So which is better?",,,,,,
45562520,507,Issue,"Let's go with `number` when it means ""issue number"" and make sure the doc comment is correct. Thanks a lot for your help!",,,,,,
45563231,507,Issue,Done,,,,,,
45564620,507,Issue,![],,,,,,
45567533,507,Issue,![Ron Swanson Moved],,,,,,
45465478,506,Issue,"I think you're probably right.Want to throw some tests in [here] around editing a release, to confirm it?",,,,,,
45465535,506,Issue,"Did you want me to fix it too? It's a pretty quick fix, I just wasn't sure how unstable the API is.",,,,,,
45465842,506,Issue,You have the power!,,,,,,
45465885,506,Issue,"I just wasn't sure how unstable the API is.The release APIs haven't changed in a while, and anything in the pipeline will be handled in the same way we do previews for new features or breaking changes (opt-in).",,,,,,
45471667,506,Issue,"`(Windows 8.1 required)` Well, that makes it difficult to build the project. :-1:",,,,,,
45472287,506,Issue,"it's because of the WinRT projects (they're targeting 8.0 still, but minor detail).I'm happy to do the PR testing on that OS if you don't have it, and we're rolling out the ability to do CI for those platforms :soon: so it'll catch things up front.",,,,,,
47055475,506,Issue,"I find that also cannot edit assets,should you fix it ?",,,,,,
47055609,506,Issue,"I've fixed it, but my fix hasn't been pushed to NuGet yet.",,,,,,
47057816,506,Issue,"ok, thanks much!",,,,,,
47060513,506,Issue,Ack! I'll look at cutting a release tomorrow.,,,,,,
47448902,506,Issue,"This is still an issue, as far as I can tell. Looking at the code, the [`ApiUrls.ReleaseAssets` template] is generating an incorrect URI for specific release assets:Notice that the release id is a part of the above URI template. However, the release id should not be a part of the URI template, as documented [here]:I suspect that the [`EditAsset`] method should be using the [`ApiUrls.Assets` template], and not the [`ApiUrls.ReleaseAssets` template]? /cc    The description of the [`ApiUrls.Assets`] template seems to be incorrect as well. That URI doesn't return ""all the assets for the specified repository"". It [returns a specific asset], defined by the passed in asset id.",,,,,,
47467416,506,Issue,"Any idea when this will be addressed?  As is, you cannot edit a release.  Thus, if I create a draft release, I cannot edit it so that it is published.  Waiting for the next NuGet release :smile:",,,,,,
47551996,506,Issue,I have a PR with a fix now.,,,,,,
47566677,506,Issue,I just pushed Octokit 0.3.5 to NuGet. Please try it out.,,,,,,
47617359,506,Issue,"Just validated that version 0.3.5 allows me to pass the necessary Release ID on the call to `EditRelease()`, and thus publish a draft release.  Thank you!  :white_check_mark:",,,,,,
112402331,505,Issue,Taking this off my radar for the foreseeable future.,,,,,,
143590216,505,Issue,"I wanted to check if this something that we want to do now.IMHO having samples would greatly improve people using this for their needs. I think linqpad is a great tool for doing that without much of ceremony. I use it very often to try out new API's. Based on this I forked    and updated with some more samples.  I updated the octokit's Nuspec locally with the linqpad-samples ![linqpad-samples]and when I use this nuget package it comes up with the samples in linqpad![samples]![samples-treeview]If it is interesting, then I could a do a PR with - the samples, - updated the build to include the linqpad samples and- also include a test to make sure any changes don't break the samples.",,,,,,
143606733,505,Issue,"Should this go in the main Octokit package or perhaps a special samples package? For example, we may want to create Octokit.Linqpad and Octokit.Reactive.Linqpad.",,,,,,
143610025,505,Issue,I agree it could more of like `Octokit.Samples` where we could use one of the options as Linqpad and we could use the same samples for XS/VS project sample.,,,,,,
143622650,505,Issue,:+1: for it to be it's own package,,,,,,
143893873,505,Issue,I would also prefer to have a separate package,,,,,,
145282069,505,Issue,"Should this go in the main Octokit package or perhaps a special samples package?The general guidance from the [Linqpad site] is to contain them in the main package: 1. Update your NuGet packing script to copy your samples into a folder called `linqpad-samples`. 2. Add the linqpad-samples tag to your NuGet submission to ensure free access.I gather this means the user will have them automagically after installing (rather than digging around for a second package). The site says you can have a separate package - if you're so inclined - but I'm not sure of the harm here if we do keep it all in one spot. Also, I'm not sure what that last step means.",,,,,,
145289625,505,Issue,Here is a sample  [Octokit.samples.0.0.1.nupkg] which would automatically show up in the linqpad samples.Should it be original nuget package or should be a separate nuget package?,,,,,,
145318428,505,Issue,"Also, I'm not sure what that last step means.From the nuget.org [docs]**tags**_A space-delimited list of tags and keywords that describe the package. This information is used to help make sure users can find the package using searches in the Add Package Reference dialog box or filtering in the Package Manager Console window._I guess LINQPad might be using that to determine if the package should be shown in the free version or not...",,,,,,
145318479,505,Issue,"And after thinking about this a bit more, I'd like to revise my vote for it to be in it's own package...as if I'm interested in the LINQPad samples, I'm obviously wanting to do something with octokit and then I'd have to install both the samples package AND the actual package...",,,,,,
145366146,505,Issue,"I think the issues for me is I have no idea how many people use LINQPad. I don't use it so this feature doesn't really matter much to me. Will there be other tools that want their own proprietary formats in our packages?If a lot of you DO use LINQPad, I will relent and go with it because I don't feel too strongly about it.",,,,,,
145366410,505,Issue,"could someone post what an example might look like? Perhaps if we could link to the examples in the README and make sure they're human readable as well as LINQPad readable, I'd be more favorable. That way they're useful to folks who don't have LINQPad installed.Also, I'm concerned about the maintenance cost of these samples over time. If they're not compiled and run as part of our CI, then they'll bit rot over time. Would someone sign up and figure out a way to do that? (Roslyn to the rescue?)",,,,,,
145367350,505,Issue,"files have a little bit of XML header, and then the actual code. They are very human readable.For example LinqPad can run scripts on the command line  and output them. Then you could use approval tests on the output.And if I have any sway over it, I'd like to see the samples in the main package. That way if you use LinqPad to experiment with nugets (which is a common use case of LinqPad) the samples are right there. Con is the package has some extra text files if you don't use LinqPad.",,,,,,
145367643,505,Issue,Con is the package has some extra text files if you don't use LinqPad.So I'm :+1: for adding these to the main package if we:- [ ] Write useful samples that we can link to in the README and can be read nicely online.- [ ] Make sure our CI validates the samples somehow.,,,,,,
145367942,505,Issue,"The linqpad has compilation options for compile check.   The -compileonly switch tells lprun to check that the query will compile, without actually running anything.I was planning to use that feature in the CI build to make sure the commits don't break the samples.",,,,,,
145381151,505,Issue,I was planning to use that feature in the CI build to make sure the commits don't break the samples.:+1:,,,,,,
145701512,505,Issue,Implemented this in,,,,,,
44997222,504,Issue,Possibly related to,,,,,,
48169882,504,Issue,Going to move this to post-v1 as I think this is hard to do without impacting existing APIs,,,,,,
123296460,504,Issue,"Couple of options maybe:1) Use the suggestion mentioned in #352 of storing the last ApiInfo.- Add a ApiInfo property to HttpClientAdapter (LastApiInfo).- Set the LastApiInfo in HttpClientAdapter.Send (amend the return BuildResponse)- In your code, manually new the HttpClientAdapter (so you can keep a reference), manually new a Connection (using the HttpClientAdapter) and pass into GitHubClient- In your code, call an API, then use your reference to HttpClientAdapter to get the LastApiInfo2) Create a base class for all Api models.  Within the base call, store the ApiInfo.  Given that some Octokit call will have multiple GitHub Api call, possible store all ApiInfo responses for each call (1 per page?).I'm currently using the former in some test code - but doesn't feel correct to add to a PR.",,,,,,
123487903,504,Issue,"I'm currently using the former in some test code - but doesn't feel correct to add to a PR.I think 1) is going to be a more maintainable solution in the long-term. The other solution means deserializing becomes a two-step operation (read the content, then read the headers). Would love to hear your concerns.",,,,,,
126395127,504,Issue,Gonna have a go at option 1 and produce a PR for review (hopefully next 24 hours)Basically just going to provide a property on the client which calls through to connection which calls through the HTTPClientAdaptor (which will store the last ApiInfo during the Send).Putting the chained calls all the way through the stack avoids having to keep a reference to the HttpClientAdaptor - which makes it easier for the user.,,,,,,
195230559,504,Issue,As this requires significant thought - and likely significant changes to the API responses - as well as there exists the ability to get this data using `IGitHubClient.GetLastApiInfo()` I'm happy to close this out for now.I've opened  to add some documentation for this feature before I forget.,,,,,,
45186925,503,Issue,:thumbsup: other than the one commonwealth typo. :trollface:,,,,,,
44372746,502,Issue,"What resource is this related to? According to the docs, it'll only be present [when fetching a single PR]. Looks like `merged_at` and `merged_by` will be there for most resources.",,,,,,
44372885,502,Issue,"You could possibly change it to a property with a backing field, then in the getter, if the field is empty, return `MergedAt.HasValue`?",,,,,,
44420427,502,Issue,"[List all pull requests] is the problem one.And indeed, using `MergedAt.HasValue` instead is the workaround.Let me see if I can't fix the backend myself so I don't need to update the client.",,,,,,
44438752,502,Issue,There's only so much an external contributor can do :wink:,,,,,,
44439025,502,Issue,:star:,,,,,,
178903437,502,Issue,"Found myself looking at `Mergeable` again for a side-project - turns out the list of pull requests doesn't return the field, and it's now computed on-the-fly: The value of the mergeable attribute can be `true`, `false`, or `null`. If the value is `null`, this means that the mergeability hasn't been computed yet, and a background job was started to compute it. Give the job a few moments to complete, and then submit the request again. When the job is complete, the response will include a non-`null` value for the `mergeable` attribute.Will test against the latest release and see what else needs to be done. Closing out as ""alot of time has passed"".",,,,,,
44701829,501,Issue,"Adding  ...A new build worker image has been deployed based on Windows Server 2012 R2 with Windows apps support and PCL. This image is default. Octokit build works like a charm :)Build console log: :  there is an experimental feature (and not yet documented :) that allows downloading specific GitHub commit via zipball. You can remove it to use `git colne` way.Build takes aprox 5 minutes (max run time is 30 min).Integration with messages:- to capture messages from `msbuild.exe you can add`/logger:""C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll""` parameter.- capturing `xunit` test results is trickier. Unlike NUnit or VSTest.Console xUnit doesn't provide extensibility mechanism to plug into test results sink, so we deploy to build workers our own patched version xUnit with built-in AV logging (very much like the one for TeamCity). I don't think it make sense to submit PR for v1.9, but I hope to make 2.0 through. In the meantime, we'll publish our version of xUnit to GitHub with runners on nuget.org.Please let me know if you have any questions.",,,,,,
44702447,501,Issue,":heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: Yeah, I'm not going to look into porting over those tests at the moment. I'll look into it in a future PR.",,,,,,
44702572,501,Issue,"Cool, will keep you posted!",,,,,,
44751367,501,Issue,"I don't think it make sense to submit PR for v1.9, but I hope to make 2.0 through. In the meantime, we'll publish our version of xUnit to GitHub with runners on nuget.org.Yeah, I'd certainly like to see if xUnit 2.0 would take those patches.",,,,,,
44779973,501,Issue,"mind if I email you through a few GitHub-related feedback things? (the email address on your profile, that is)",,,,,,
44780078,501,Issue,"Sure, please do! We love feedback! :)",,,,,,
43640472,496,Issue,Never come back!,,,,,,
47604834,495,Issue,"Hi , I'll try and review this soon. Any plans to finish the integration tests soon?",,,,,,
70816323,495,Issue,Any plans to merge it into master?,,,,,,
78138612,495,Issue,"Three questions.1) Is this pull request dead or is it still expected to be merged?2) Is it only waiting for integration tests that are missing before it can be merged?3) Where is the code located, so that the tests can be added, if they are only the missing prerequisites?",,,,,,
78145299,495,Issue,"Is this pull request dead or is it still expected to be merged?It's not mergeable in it's current form, so some more work is necessary on top of the current tasks. Is it only waiting for integration tests that are missing before it can be merged?As above, there's been a lot of change since this PR was last worked on. Where is the code located, so that the tests can be added, if they are only the missing prerequisites?You can find the branch here: EDIT: here's some CLI magic to get your hands on this branch",,,,,,
84634113,495,Issue,"Working on this, but is slow going, as I can not execute the tests with my Resharper. I can see that the update to the XUnit tests has been merged into master and I have tried running the tests on master and it works very well on my computer.What is the prefered way of getting master into my feature branch. Can I just do a merge from master to my branch or do I need to rebase it (As the original pr is old there is alot of manually handling the rebase).",,,,,,
84644143,495,Issue,Either is fine: merge or Rebase. Whatever is easier.,,,,,,
48142021,494,Issue,![],,,,,,
43400957,493,Issue,"Well, I Am An Idiot...![]",,,,,,
43401158,493,Issue,![]Great stuff !,,,,,,
43398090,492,Issue,Seems reasonable. Let me pull it down and test it out!,,,,,,
43398093,492,Issue,"My bad, fixed _too_ quickly all the Resharper's warning. Will remember this for next time. Anyway I removed the namespace. Let me know if there is any other issue.",,,,,,
43398129,492,Issue,"My bad, fixed quickly all the Resharper's warning.I think this is just the .csproj being configured incorrectly and R# getting over-enthusiastic!",,,,,,
43401050,492,Issue,![]Thanks for the contribution!,,,,,,
43395258,491,Issue,Ready for review :lollipop:,,,,,,
43372533,489,Issue,Huh? Was this PR an accident?,,,,,,
43387381,489,Issue,"we've tried supporting .NET 4 in Octokit in the past, but have stopped doing it for a couple of reasons:- we're not fans of the `Microsoft.Bcl.Async` magic that's used to bring async/await back to .NET 4- we're deprecating .NET 4 support for other projects we look after, because of lack of demand- the combination of .NET45 + PCL + Mono\* support is enough coverage over modern platforms",,,,,,
43321171,488,Issue,You can get a list of the authenticated user's emails through [`IUserEmailsClient`]: Read about the endpoint [here] :smile:,,,,,,
43321513,488,Issue,"Also, there's a note in the [documentation] for the user endpoint: Note: The returned email is the user‚Äôs publicly visible email address (or null if the user has not [specified a public email address in their profile]).",,,,,,
43321889,488,Issue,Thanks for your hint :-),,,,,,
43389053,488,Issue,"Just to echo what  said - the profile isn't the best place to look for their email address, because it might be private. I hope we deprecate that in the future.Instead, use the [User Emails] endpoint, as this gives you significantly more context. We let users specify multiple email addresses so their commits can be associated to their account.",,,,,,
43269734,487,Issue,"Why are you calling `task.Wait()`. Instead, just use the await keyword.If there's some reason you can't do that, access the task's `Result` property.",,,,,,
43274398,486,Issue,![],,,,,,
42723441,485,Issue,"Wow, I wonder how that got out of sync! Thanks! ![]",,,,,,
42678136,484,Issue,"Hi  we'd love to have your help! Did you follow the instructions here? The skipped tests are most likely integration tests. Those go against github.com so you have to create a test account and set up your environment if you want to run those. It's not strictly necessary if you're making small contributions as we'll run the tests on our CI server. But if you plan to do major contributions, it's nice to set up.Our tests are broken down into unit and integration tests. I think we currently have a few broken integration tests that we're working to fix unfortunately. Our unit tests _should_ all pass. I hope that helps.",,,,,,
43129915,484,Issue,"I also get 11 failures from a fresh clone. My test output is here It looks like 5 of them are integration tests, but there also tests failing from Octokit.Tests.dll, Octokit.Tests-NetCore45.dll and Octokit.Tests-Portable.dll.It seems to be the same 2 tests in each of those 3 assemblies:- Octokit.Tests.Clients.SearchClientTests+TheSearchIssuesMethod.TestingTheStateQualifier_Closed- Octokit.Tests.Clients.SearchClientTests+TheSearchIssuesMethod.TestingTheStateQualifier_Open",,,,,,
43131615,484,Issue,"Got it. It's a casing issue. The test is expecting ""something+state:Open"" but the SUT is producing ""something+state:open"" due to this line .I can PR this. Which way round do you want it? Should the SUT change or the test change?Would you mind waiting until tomorrow evening for a PR? This is perfect for a live contribution demo for my 'Open Source: Get Involved' user group talk tomorrow evening and is a chance for the project to get some public exposure.",,,,,,
43132391,484,Issue,"To confirm, after changing the test to expect lower case, `build.cmd` is green so this will resolve this issue.I can send the PR with that change, or I can make the test case-insensitive, or I can change `EnumExtensions` not to convert to lower case. Just say the word.",,,,,,
43133026,484,Issue,I've also tested changing `EnumExtensions` to not convert to lower case and that also results in a green build.So either way works.,,,,,,
43134207,484,Issue,I believe the GitHub api expects lowercase (but I could be wrong). I think we should change the test and not the `EnumExtensions`,,,,,,
43135155,484,Issue,Cool. Will do.,,,,,,
43147786,484,Issue,thanks for following this up,,,,,,
43170494,484,Issue,"NP, I'll send the PR today at about 16:30-17:00 UTC. It would be ultra cool if it got accepted during my talk :sunglasses:.",,,,,,
43174622,484,Issue,If I'm up at 2:30am I'd certainly keep an eye out for it :trollface:,,,,,,
43175985,484,Issue,Sorry for my late reply. I'm glad that this will be fixed :+1:    yes I followed the guidelines forked and created my branch.,,,,,,
43178726,484,Issue,Are you not in San Francisco? I thought that was UTC-7? 09:30-10:00 for you?,,,,,,
43189099,484,Issue,"nope, in Australia at the moment (UTC+10)",,,,,,
43197496,484,Issue,"Ahhh of course, remote working. So jealous :cry:",,,,,,
42120910,482,Issue,I believe the `ApiValidationException` is being raised because the release doesn't exist (or it doesn't match with an existing release).Either you need to create the release first:Or retrieve it from the API:The `id` field on the release is what you need to then start uploading release assets.,,,,,,
42146717,482,Issue,"Hi, i checked now the Release. The ID is correct.Also like in your Example i removed the .Wait();  but also no result.Here my code: if i wait for the task, I  get the same Error Message like above.",,,,,,
42150095,482,Issue,"Are you able to run Fiddler and share with me the raw request/response data? You can scrub anything that might be sensitive (the payload, for example) but I need more details to understand the situation...",,,,,,
42150936,482,Issue,Sure :-)  I first installed now  Fiddler. Never used it Sorry ^^Request:Response:Textview:Somehow...the Content-Length is empty (0)  i think thats the Problem.Mhm.,,,,,,
42151284,482,Issue,"EDIT: So the implementation is fine, you just need to move the stream back to the start:If you don't do that, the library will start reading from the end of the file.",,,,,,
41899635,480,Issue,![]PR incoming,,,,,,
41924796,480,Issue,"I thought I had fixed this. Be careful with the fix. When the value is from an enum, we should lower case it. But if it's a value coming from ""user input"" we can't. For example, the OAuth methods have a `state` parameter that's a CSRF token and casing matters there.",,,,,,
41880773,479,Issue,:metal:,,,,,,
41877290,478,Issue,Totally legit.Send in a PR if it's _really_ getting on your sensibilities :grinning:,,,,,,
41877607,478,Issue,Will do.,,,,,,
41877784,478,Issue,"Right, it looks like  has conflicting feels on this. I'll let you and him duke it out in that PR about the right way to do things...",,,,,,
41878666,478,Issue,This issue is about the inconsistent nature of a single class - one way or another this will get fixed by #479. I'll not submit a PR for this.,,,,,,
48265436,477,Issue,Haven't seen this one in a while.,,,,,,
41873065,475,Issue,Skimmed the FAKE docs and couldn't find it documented. have you had this requested before? Would you like a PR?The docs are plain and simple: pass `-Symbols` to `nuget pack`,,,,,,
41882332,475,Issue,see  it's already implemented. but be warned it might be buggy.,,,,,,
42130283,475,Issue,"But that option requires using a project file. It should also support just providing a nuspec file, right?",,,,,,
42135339,475,Issue,FAKE's current implementation is probably based on ancient Nuget.exe. Pull requests are very welcome.,,,,,,
42150174,475,Issue,all good. Once I've levelled up my F#-fu I might take a swing at it. But for now I can workaround it  by using a plain old nuspec.,,,,,,
61902452,475,Issue,"With #602 merged into master, I'm going to close this out. I _could_ create a specific symbols package and publish it to symbol source, but the fact that this now works without configuring symbols I'm happy to call this done...",,,,,,
41765377,472,Issue,Thanks!,,,,,,
41240262,471,Issue,Don't actually merge this in,,,,,,
41240479,471,Issue,"Ok , I won't.",,,,,,
41251705,469,Issue,"Getting repository commits is not implemented yet. See #333. Feel free to give implementing it a shot and send a PR :wink:The method you've found can also get a specific commit, but with a lot less data than the repository commit endpoint. The `reference` parameter is actually a commit SHA, I think it's just badly named. Also check out the documentation for [repository commits] and [git data commits]. The API should match the documentation pretty well.",,,,,,
48726450,469,Issue,This was implemented on #529 and merged yesterday.,,,,,,
41199097,468,Issue,+1!,,,,,,
41228820,468,Issue,this look good to you?,,,,,,
41229038,468,Issue,:thumbsup:,,,,,,
41173863,467,Issue,Seems like this is complete by itself. Should the encoding `q` parameter be another PR?,,,,,,
41218653,467,Issue,"Yeah, you're probably right. I'll address those integration tests in another PR.",,,,,,
41225879,467,Issue,So is this ready to merge? Any tests?,,,,,,
41226343,467,Issue,the tests now fail for a different reason (malformed URL not returning results) rather than the NullReferenceException which was previously occurring. I don't think it's worth spending more time on this fix.,,,,,,
41226511,467,Issue,"Oh, I meant is there a unit test for this specific change?",,,,,,
41226549,467,Issue,"Oh, right. I'll add a unit test to catch this regression...",,,,,,
41770390,467,Issue,So that last failing test is this one:And that's unrelated to all this. If it's still occurring after the merge I'll log an issue and investigate.,,,,,,
41103213,466,Issue,Thanks! :thumbsup:,,,,,,
40981930,464,Issue,It's the second parameter:,,,,,,
41137887,464,Issue,thanks,,,,,,
40912334,463,Issue,we've got a suite of [integration tests] which we use to test the library against the API.What would you like to see in terms of documentation?,,,,,,
40933464,463,Issue,"First, i'd like to apologise if my ticket sounded offensive, but i was a bit angry... By documentation i mean a website or at least a text document, where all the functions will be described and maybe even with some examples like authorization etc...",,,,,,
41142000,463,Issue,"maybe if you make a wiki in this repo and give me access to it, i may be able to dig through the in-code doc and put together some tutorials/examples/whatever...",,,,,,
41174474,463,Issue,"Rather than a wiki, maybe we should create a gh-pages Jekyll site with docs.",,,,,,
41195449,463,Issue,"sure, but i think it's better to have it ""under one hood""... And the wiki is made for this so..",,,,,,
41196054,463,Issue,it'd be under one hood. It'd be a branch of this very repository and could be versioned with the code base. We could even make it part of the  site.,,,,,,
41196265,463,Issue,"all right... so, when you make it, please let me know, i'd like to help you with the docs..",,,,,,
41218866,463,Issue,Something that'd be even easier to do (and portable to either a wiki or a gh-pages site) would be just a set of Markdown files under `docs`. Seem legit?,,,,,,
41225854,463,Issue,"Yeah, let's do that for now.",,,,,,
41313866,463,Issue,"in the meanwhile, I hope this blog post helps you get going.",,,,,,
41949778,463,Issue,So we just shipped an improvement to the wikis. I'm now open to trying them out as our documentation.  what do you think? Experiment with it?,,,,,,
71155464,463,Issue,"Sorry for  intervening, but is there a way to request list of public repositories as in   ?",,,,,,
71574516,463,Issue,this seems to have been overlooked. I've opened  to track adding it to the API,,,,,,
151809771,463,Issue,"why not go with the jekyll option, I do not mind getting the experiment rolling?That way we can be consistent with our ruby brethren. Anyhow if you do decide to go down that route, would you mind creating the gh-pages branch and nuking it for me, so I can start from there?Better than me creating a PR that contains deletions to sooo many files, I can simply start with **jekyll new** when I make my first PR for the documentation.- Get all documentation on one page (then split them up as we go along into tabs or whatever)- We need a link to an svg of the octokit.net logo- Use the markdown docs already created as the content for nowLet me know your thoughts on this.",,,,,,
151985168,463,Issue,"I'm down for that. ? If you agree, I'll create the branch.",,,,,,
151990008,463,Issue,"Not sure why I didn't raise this sooner, but I like how ReadTheDocs does this. Here's ReactiveUI's as an example:  - and the relevant PR - This is slightly different from the `gh-pages` approach for a couple of reasons:- it's markdown'd already - we've got some docs as a starting point- docs are alongside the code - easier to keep things in sync than with Pages- docs use tags to represent [versions] - we don't get this for free with a vanilla Pages siteFor style and stuff we can work on that after getting something going - I just feel this is a better starting point that a vanilla pages site.",,,,,,
152004068,463,Issue,"I would like to second the notion of not using gh-pages. There is a project I contribute to,  and updating the docs are a pain in ...  ... In other news,  there is  a little nifty tool I saw recently : .  I wonder if that can be hooked up which might make it easier /simpler to write the docs, which in turn ups the chance of them getting written.",,,,,,
152020989,463,Issue,readthedocs is cool too :+1: aspnet vnext is using that. The default styles look really good.Would we care too much about having documentation for different versions for octokit.net? Seems like an overkill for this library.,,,,,,
152021150,463,Issue,"Would we care too much about having documentation for different versions for octokit.net?It's something you get ""for free"" if you're tagging releases (like we are) - so I don't see it as much work for us.  But yeah, it's a minor bonus.",,,,,,
152021703,463,Issue,"Ok, we will need to create an account for readthedocs and import the markdown files into it I think. Shall I let you handle the account creation so admin rights are on your end - assuming that's how it works? (Never used it before but more than willing to help out on this).",,,,,,
152022241,463,Issue,"yeah, I should have some time to set up the basics tonight.Ideally it should just keep redeploying off of webhook activity for a certain branch.",,,,,,
152022955,463,Issue,"Due to the `.` in the project name :cry: the URL it gave me is .Gonna set up the other bits now and open a brief PR to get things going.EDIT: look at that, it's automatically picked up the existing docs. Glorious :sparkles:",,,,,,
152026466,463,Issue,"I've opened up #948 to track this work. There's a whole bunch of details here about the mkdocs format (which we're using here): Happy to discuss things in PRs targeting the `documentation` branch, and we can just iterate on stuff quickly while we get a feel for what this might look like.",,,,,,
152034215,463,Issue,:thumbsup: to whatever  says here. :smile:,,,,,,
40971896,462,Issue,you happy with this? :ramen:,,,,,,
40999479,462,Issue,Looking great so far. Just needs the `Observable` version to make the convention tests pass...,,,,,,
41054094,462,Issue,I hear Rx is dead.,,,,,,
41055718,462,Issue,:ramen:,,,,,,
41067788,462,Issue,:heart: itWould it be worth rolling together the url formatting with the redirect? I hear Rx is dead. It's totally done for :laughing:,,,,,,
41071852,462,Issue,"Would it be worth rolling together the url formatting with the redirect?Not in Octokit.net. After all, what exactly is a redirect? That would require we add a reference to System.Web. We're agnostic to ASP.NET etc. We could consider an Octokit.AspNet or Octokit.Contrib library that had such things.",,,,,,
41072177,462,Issue,"That would require we add a reference to System.Web.Ah, of course it would! :+1:",,,,,,
41104879,462,Issue,:ramen:,,,,,,
41105892,462,Issue,"If there's no more comments, would love to get this merged and shipped so I can get that blog post out. I'll ship the NuGet package.",,,,,,
40851520,461,Issue,"Ugh! I should have caught this in the initial review because I make this same mistake every time and think to myself, ""ALWAYS CHECK EVERY CONFIG!""![]",,,,,,
40851716,461,Issue,-sampson let me know if you're happy with this change. The build failures are related to unrelated tests - I won't have a chance to look into them until after the holiday break.,,,,,,
40859113,461,Issue,just tested a release build for win8 with no worries.thanks again,,,,,,
41313979,460,Issue,Done in #462,,,,,,
40671221,459,Issue,:shipit:,,,,,,
41873229,458,Issue,"Still occurring on master, let's discuss it over on #477",,,,,,
40646158,457,Issue,Nicely done. :shipit:,,,,,,
40627920,456,Issue,Have each test only create the parts of the world it needs and not clean up the world.This is no good either as it could lead to unintentional contamination between tests.,,,,,,
41873298,456,Issue,"Nudge nudge, wink wink:",,,,,,
49514575,456,Issue,"Also, this is still a thing to be wary of with our current Appveyor setup...",,,,,,
49601278,456,Issue,"On large test suites like this in the past where setting up was important, I've seen and used ""the world"" caching.  Essentially, a test creates something if it needs it and then caches it.  The cache is checked before each test's data setup to see if it was already cached during that test session.  I've only used this with the built in mstest, but it might work with xunit as well?",,,,,,
68512608,456,Issue,I've looked into enabling parallel builds with xUnit 2 but am hitting some issues with the integration tests running in parallel. My psychic debugger thinks this is related to contention with making requests to the same remote server...,,,,,,
68512773,456,Issue,"We could run the unit tests in parallel, but not the integration tests.",,,,,,
68512886,456,Issue,"Just tested this out, and it does shave off a couple of seconds:### Before### After",,,,,,
68513752,456,Issue,"Running the tests in the new VS test runner suffers the same problem as the command line, so I'd like to get to the bottom of this issue. But I can work around it in the meantime and run batches of tests...",,,,,,
40591989,455,Issue,Looks like we're finally running integration tests and Bad Things Are Happening.I'll test locally tomorrow and publish a new release if it's all clear.,,,,,,
40648654,455,Issue,Herp derp.,,,,,,
40648720,455,Issue,![] thanks!,,,,,,
40589396,454,Issue,I'm 99% sure this is a deserialization issue.Is this against a public repository I can test against?,,,,,,
40589658,454,Issue,I'm just using the repository search so it's not against any particular repository. The line that's failing is  is returning true in a Net45 app and false in NetCore45,,,,,,
40589901,454,Issue,"So the source for that is here (I'm fairly certain we're using the latest bits, if not that's easy to fix tomorrow):",,,,,,
40590198,454,Issue,It looks like the problem is ultimately caused by SIMPLE_JSON_READONLY_COLLECTIONS not being defined on Octokit NetCore45,,,,,,
40590396,454,Issue,Well now I feel like a clown. If you don't send me a PR I'll do it in the morning (and ship a release). :cool:?,,,,,,
40802152,454,Issue,"Something is still weird here, testing from source confirms the bug is resolved. However using Octokit from nuget (version 0.3.2) the bug is still occurring. Checking the assembly in dotPeek shows that it wasn't compiled with the flag SIMPLE_JSON_READONLY_COLLECTIONS",,,,,,
40849412,454,Issue,My psychic debugger suspects this is a Debug/Release mode issue and that [we only did it for Debug configurations],,,,,,
40850936,454,Issue,"of course, I'm an idiot :-/",,,,,,
40527733,453,Issue,![],,,,,,
40537613,453,Issue,"Given how much we actually depend on this, this seems like a good thing.  thoughts?",,,,,,
40540782,453,Issue,"Given how much we actually depend on this, this seems like a good thing.Do you mean ""given how **little** we depend on this?"" If so, I agree. Make it so.",,,,,,
40540906,453,Issue,"yeah, that's what my brain meant to say",,,,,,
40541209,453,Issue,:thumbsup:,,,,,,
40541251,453,Issue,"Ok, I'll hit the merge button after we get the CI running again.",,,,,,
40648833,453,Issue,Thanks !,,,,,,
40238619,452,Issue,"Oh, and I also forgot to branch, ah well, I think the demo was useful even if the resulting PR wasn't :wink:. I'll send another PR from a branch to supersede this one.",,,,,,
40427285,452,Issue,We await your new PR. :smile:,,,,,,
39817131,451,Issue,and `ObservableTeamsClient` need to be updated to also drop the `Team` prefix from their methods.Aside from that this is looking :gem: :gem: :gem:,,,,,,
39843060,451,Issue,Done! :),,,,,,
40648796,451,Issue,![]Thanks !,,,,,,
40649139,451,Issue,"Hehe, you're welcome. I'll work more on the team client since I need all the functionality of the underlying github API, a lot of which is missing currently. Hopefully I'll find the time sooner than later :)",,,,,,
40648596,449,Issue,"Ack, there are conflicts so I can't merge this yet.",,,,,,
41090849,449,Issue,Rebased and fixed remaining conflicts. I need this merge so that I can continue working on the rest of Teams API ;),,,,,,
41090966,449,Issue,don't merge yet. got a build error,,,,,,
41091109,449,Issue,Now it's ready :),,,,,,
41096672,449,Issue,would you mind adding the corresponding new methods to `IObservableTeamsClient`?,,,,,,
41097487,449,Issue,Done :)Just noticed how the CI works :)Also added missing null checks,,,,,,
41097746,449,Issue,The CI is manually launched for now since we want don't want to run arbitrary third party code automatically. :smile:,,,,,,
41098999,449,Issue,The failure seems unrelated to these changes.,,,,,,
41099053,449,Issue,![],,,,,,
39783847,448,Issue,"I think you're hitting on a permissions issue here.Can you try this snippet here (replace with the right details, of course) to see if you can reach the /repos/:owner/:repo/releases endpoint (instead of a specific release as you've been doing in the above case):If that one is also returning a 404, I'd recommend contacting GitHub Support so we can troubleshoot further...",,,,,,
39790500,448,Issue,"I just entered  in mybrowser and I got 304 Not modified and an empty JSON array. I guess thatmeans I can access the repository.2014-04-08 1:07 GMT+04:00 Brendan Forster notifications.com: I think you're hitting on a permissions issue here.  Can you try this snippet here (replace with the right details, of course) to see if you can reach the /repos/:owner/:repo/releases endpoint (instead of a specific release as you've been doing in the above case):  var client = new GitHubClient(new ProductHeaderValue(""appName"")); client.Credentials = new Credentials(login, password); var releases = client.Releases.GetAll(""owner"", ""repo"").Result;  If that one is also returning a 404, I'd recommend contacting GitHub Support so we can troubleshoot further...  ##   Reply to this email directly or view it on GitHub .## √≥ √ï√ó√Å√ñ√Ö√é√â√Ö√ç,√æ√Ö√í√ç¬£√é√é√è√ó √ß√å√Ö√Ç,√î√Ö√å. (916) 314-9324",,,,,,
39794788,448,Issue,I got 304 Not modified and an empty JSON array.Not sure about the **304 Not Modified** (that could just be browser headers triggering caching) but the empty JSON array makes me think the repository doesn't have any releases associated with it - which means trying to get `/repos/:owner/:repo/releases/1` is properly failing as expected - because the release doesn't exist...Does that make sense?,,,,,,
39795008,448,Issue,"The explanation does make sense, except that I'm sure repo have releases -they are on the ""Releases"" page.I just tried getting first release and got this:{  ""message"": ""Not Found"",  ""documentation_url"": """"}2014-04-08 3:07 GMT+04:00 Brendan Forster notifications.com: I got 304 Not modified and an empty JSON array.  Not sure about the _304 Not Modified_ (that could just be browser headers triggering caching) but the empty JSON array makes me think the repository doesn't have any releases associated with it - which means trying to get /repos/:owner/:repo/releases/1 is properly failing as expected - because the release doesn't exist...  Does that make sense?  ##   Reply to this email directly or view it on GitHub .## √≥ √ï√ó√Å√ñ√Ö√é√â√Ö√ç,√æ√Ö√í√ç¬£√é√é√è√ó √ß√å√Ö√Ç,√î√Ö√å. (916) 314-9324",,,,,,
39795119,448,Issue,I need more information about the scenario that's triggering this - can you email support.com with some details so we can discuss this further?,,,,,,
39795381,448,Issue,"Sure, will do.2014-04-08 3:12 GMT+04:00 Brendan Forster notifications.com: I need more information about the scenario that's triggering this - can you email support.com with some details so we can discuss this further?  ##   Reply to this email directly or view it on GitHub .## √≥ √ï√ó√Å√ñ√Ö√é√â√Ö√ç,√æ√Ö√í√ç¬£√é√é√è√ó √ß√å√Ö√Ç,√î√Ö√å. (916) 314-9324",,,,,,
39804127,448,Issue,"Ok, so as we found out, the answer for this specific repository is to fetch the tags instead:Relevant docs:",,,,,,
40562201,447,Issue,The build failure doesn't appear to be related to this change. It seems we have a 300 second timeout for the integration tests and the tests are taking longer than that to run. I'm trying to figure out where that timeout is specified.,,,,,,
40562216,447,Issue,/cc -ogre  please see previous comment in case you have an idea.,,,,,,
40562257,447,Issue,"Hmm, according to our FAKE build, the integration test timeout should be 10 minutes.  do you think this is a bug in FAKE? Or is something else timing this out?",,,,,,
40562319,447,Issue,Or might this be a QED setting -ogre?,,,,,,
40570519,447,Issue,Since it says 300s and we often use 5min default I assume the bug is somewhere in FAKE. I'll investigate. But usually we give a different error message.,,,,,,
40571264,447,Issue,OK I checked. I think FAKE uses the correct timeout.,,,,,,
40571848,447,Issue,"what do you mean the ""correct"" timeout? 5 min? If so, how do we change it? Or do you mean it's not FAKE causing this?",,,,,,
40572413,447,Issue,I meant from looking at code at  I'm pretty sure FAKE is using the specified 10min timeout and doesn't cause the build to fail.Also the reported message in the build log isbut in FAKE we throw something different (see ).I assume this is coming from QED,,,,,,
40572481,447,Issue,And here it is:,,,,,,
40588371,447,Issue,I'm gonna merge this in and see if I can help out with QED stuff next week.,,,,,,
40646764,447,Issue,I'll up the QED timeout for now.,,,,,,
40647077,447,Issue,(Thanks for finding that in QED !) :heart_eyes:,,,,,,
40648824,447,Issue,"Timeout fixed, but the build still failed:",,,,,,
40649208,447,Issue,"Ah, seems like a legit failure this time?",,,,,,
40686019,447,Issue,Turns out the github text search box is a really good blame tool ;-),,,,,,
39632145,446,Issue,Thanks!,,,,,,
39632613,446,Issue,Where's my animated gif?,,,,,,
39632670,446,Issue,![],,,,,,
39632714,446,Issue,:smile:,,,,,,
39036914,444,Issue,"is what you want, but it's not quite ready yet. :soon:!",,,,,,
47296824,444,Issue,I have implemented the code required to add the contents suppurt to the blobs client. I am happy to share or contribute back if you want.,,,,,,
47297241,444,Issue,that'd be greatly appreciated! How different is it to what's been done in #434?,,,,,,
78211455,444,Issue,"this was added in  which was released in v0.6.2 I'm not sure if you were referring to [Get a Blob] - which uses the Git object SHA for lookup, or [Get Contents] which lets you specify the relative path to the file.If you think there's something that can be improved in the BlobsClient feel free to add some more details here or discuss this in a PR.",,,,,,
39017284,443,Issue,I vaguely remember a discussion with the API team about size not being accurate and deprecated. I was told it wasn't worth using. I think it was  or  who told me that.,,,,,,
39020295,443,Issue,Say the word and I'll shut it down. But it was entertaining to correlate the data I saw with the subsequent API responses...,,,,,,
39030761,443,Issue,"It sounds like 'size' isn't that super useful, but 'isEmpty' might be, /cc   -i-cant-cc-github-api-but-wrong-org",,,,,,
39058132,443,Issue,"It sounds like 'size' isn't that super useful, but 'isEmpty' might beYou could try to fetch a list of refs instead. Assumably that'd be empty for an empty repo?",,,,,,
39078499,443,Issue,"perhaps, but that's still a second API call to make",,,,,,
39084874,443,Issue,"I vaguely remember a discussion with the API team about size not being accurate and deprecated.  I was told it wasn't worth using.That's good advice. :-)The `size` property represents KB on disk, but it can be wildly misleading for repositories with many forks due to the way git stores the network on disk. Since the `size` property is not a reliable/intuitive source of information, we will likely remove it in a future version of the API.",,,,,,
39102587,443,Issue,is there a cheap way to determine if a repository is empty? Could we get an `is_empty` property to replace `size` on repository?,,,,,,
39104165,443,Issue,Why not wait until there's a specific need for it?,,,,,,
39048001,442,Issue,"is the way forward. We added it to the API output, but we couldn't remove `master_branch` until the `v3` media type. We'll be [switching the API to return `v3` by default] soon.",,,,,,
39048270,442,Issue,:sparkles: :sparkles: :sparkles: thanks for confirming,,,,,,
48258453,441,Issue,an optional overload to the `/repos/:owner/:repo/statuses/:ref` endpoint which accepts a contextDone an overload to `/repos/:owner/:repo/commits/:ref/status` which returns the collection of statuses (don't deprecate the existing endpoint)I'm not going to implement this. One Way To Do The Job or something...,,,,,,
39371679,440,Issue,"Am I understanding this right - you're posting to a custom API with this `FullIssue` entity, which is then propagated onto the GitHub API? With the Markdown and the rendered HTML?",,,,,,
39374506,440,Issue,"No, I'm posting to the GitHub API directly. By changing the accepts header I can post the markdown, and when getting issues get both the markdown and html in one request.In the above code I'm making use of the Octokit connection and parsing etc but need to send the custom accepts header. However some of the underlying methods for Patch and Get don't expose an overload that takes accepts.",,,,,,
39375667,440,Issue,"Right, I misread the context. My bad.This all seems rather legit. Is it worth throwing any tests into the mix?",,,,,,
39797418,440,Issue,Done :-),,,,,,
38463786,439,Issue,Maybe the method should return a list of refs? Since the API can return it like this,,,,,,
38469002,439,Issue,So the suggestion here is to change the signature of the `Get` method of [`IReferencesClient`]fromtoo,,,,,,
38470097,439,Issue,"Yes, but if there is only one element it looks like its not an array of items but only that item, a little annoying :)",,,,,,
38471039,439,Issue,"yeah, we'll have to do some detection and just wrap a single ref in an array.",,,,,,
38508161,439,Issue,"yeah, ill maybe have a pull request tomorrow if you guys havet added anything",,,,,,
47603336,439,Issue,Closing per comment in #511,,,,,,
38331394,437,Issue,Nice :eyes: there !,,,,,,
38332032,437,Issue,Thanks,,,,,,
166763730,435,Issue,Dropping this from the VS2015 milestone - we're still waiting on upstream support for DNX Core from Rx.NET,,,,,,
531599939,435,Issue,"PCLs are dead, DNX is dead, long live .NET Standard (we target .NET Standard 1.1 these days for both libraries).Someone else can open a new issue about this if there's a chance to improve things.",,,,,,
37975460,434,Issue,I moved `GetReadme` and `GetReadmeHtml` to the new `IRepositoryContentsClient` to reflect [the API] better and obsoleted the old methods. Hope that's OK :smile:,,,,,,
37975638,434,Issue,"Also, if you want me to strip the first commit (changed `RepositoryComments` to `Comments` and `PullRequest` to `PullRequests`), please shout out.",,,,,,
37980534,434,Issue,"I moved `GetReadme` and `GetReadmeHtml` to the new IRepositoryContentsClient to reflect the API better and obsoleted the old methods.:thumbsup: Also, if you want me to strip the first commit (changed `RepositoryComments` to `Comments` and `PullRequest` to `PullRequests`), please shout out.:thumbsup:",,,,,,
37981722,434,Issue,Does that :+1: mean that you want me to strip the commit? :stuck_out_tongue_closed_eyes:,,,,,,
37982288,434,Issue,"Does that :+1: mean that you want me to strip the commit? :stuck_out_tongue_closed_eyes:My bad, pre-coffee me can be unclear. No, that's fine as-is.",,,,,,
37983998,434,Issue,"Uuuh, I just saw #231. It hasn't been updated in 3 months. Should I still follow through with this or wait for the other PR to land?",,,,,,
37984097,434,Issue,:thumbsup: to keep going,,,,,,
38001170,434,Issue,"To get the actual content, how do you feel about having a single method `Task GetForPath(string owner, string name, string path)` which gets the parent directory and checks if the requested content is a file, dir, symlink or submodule. It then returns either a list with a single file, symlink or submodule, or a directory listing. We could then provide extension methods that has relevant return values (and other validation?), e.g. `FileContent`, `SymlinkContent` or `SubmoduleContent`. This means that you don't have to know what type the content is before doing the call, but you have to cast (`OfType`) afterwards. I pushed a commit to show what I mean. It's basically what  mentioned in #231.",,,,,,
38002834,434,Issue,"Actually, the more I think about it, the more I'm leaning towards differentiating `GetFile`, `GetSymlink`, `GetContents`, etc. and just throw if you mess up. Most clients would start out at the root anyway, right? So it would be easy to switch on the type when enumerating from there. In that way you don't get the overhead of fetching the parent directory and checking the type up front...",,,,,,
39420159,434,Issue,Hey guys! Sorry I haven't been able to pull this through. I might have some cycles this weekend to take a look at it again.  Do we really want to do it this way? E.g. get parent folder and check whether it's a file/directory/symlink etc. or do we just want to make the user check or know up front?,,,,,,
39806307,434,Issue,"let's do the simplest thing that could possibly work and iterate from there- implement a `Get` which takes a path and returns a file- if the response is a collection (how to check this depends on the implementation), `Get` should throw to indicate the path is not a file- implement a `GetForDirectory` which takes a path and returns a list of items- if the response is an item, `GetForDirectory` should throw an exception to indicate the path is a file- other bad things happen due to misusing the API, just bubble them up to the userHow does that feel?",,,,,,
39822525,434,Issue,Yes! Let's take the pragmatic approach :smile: It felt a bit wrong to do 2 API calls for each requested file/directory.,,,,,,
39828406,434,Issue,"if the response is an item, `GetForDirectory` should throw an exception to indicate the path is a fileOne note on this, you can tell it's an item based on the `content` property:",,,,,,
52413857,434,Issue,Is this still being worked on?,,,,,,
52414546,434,Issue,"signs point to no. I think it has a way to go anyway, because we were still discussing how the API should look even then...",,,,,,
57895557,434,Issue,:+1:,,,,,,
57895609,434,Issue,What's the current blocker? Is there a punch list of what needs doing?,,,,,,
58241887,434,Issue,"I'm going to see if I can spend the next couple of weeks on clearing out the backlog of PRs - see the next major release here This one didn't make the cut because I'm still not sold on the API. I need to think on this some more before I can work out a way through it. Let me know if this is something that you're interested in contributing to, and I'll bump it up my priority list to revisit.",,,,,,
58242539,434,Issue,I can also punch the code if we nail the desired API down :smile:,,,,,,
58244400,434,Issue,"will you be at Summit? If so, that'll give me a hard deadline to put pen to paper... :stuck_out_tongue:",,,,,,
58255112,434,Issue,Yep :smile: Looking forward to the spec. then :wink:,,,,,,
67711422,434,Issue,"Just in case someone really wants to use new Contents API before the official merge is done, I created an implementation for delete/create/update APIs. It is very raw, but at least you don't have to it yourself. Here is a fork:",,,,,,
68317785,434,Issue,Just an update. i'm looking into this right now and will push a new PR that incorporates these PRs.,,,,,,
68317879,434,Issue,:+1:,,,,,,
68318159,434,Issue,"Great, can't wait to see the updates!",,,,,,
68323374,434,Issue,"Ok, I'm going to take this in a slightly different direction. Rather than have different types for Submodule, File, Directory, I'm just going to have a single type that has the union of all the properties. The properties not in use will simply be null in the response. This ends up keeping things really simple. I'll post a PR soon for comment.",,,,,,
68374405,434,Issue,:+1:,,,,,,
68419448,434,Issue,Closing in favor of #649,,,,,,
37959303,433,Issue,Thanks so much for submitting a pull request! I really appreciate it. There's a few comments I made on it.,,,,,,
37967184,433,Issue,"no problem, nice work :) ive updated from the comments,pushed it too fast without reviewing it myself :D so thanks for the the comments",,,,,,
37973746,433,Issue,"Hmm somehow the projects:Octokit-MonotouchOctokit-MonoAndroidFails for me, I cant open them in VS, but then I wonder why all the projects need them added, why not have a model assembly so they automatically added?",,,,,,
37974980,433,Issue,Run build.cmd FixProjects and commit changes.,,,,,,
37979913,433,Issue,Done :) thanks awesome!,,,,,,
37981925,433,Issue,There's definitely some overlap between this and #428,,,,,,
37982733,433,Issue,"Yes perfect, good that it isnt a complex implementation :) If you just change your model ill close my pull request",,,,,,
37985275,433,Issue,Closing pull request cause duplicate in logic from #428,,,,,,
37748920,431,Issue,"Is there some reason to keep the RX references targeting net40?If there is a reason, then according to [this link], we could probably remove the `requiresReinstallation` attribute, to remove the warning. If we detect that any of your packages were affected by the retargeting or upgrade, we‚Äôll produce immediate build errors to let you know. In addition to the immediate build error, we also persist a requireReinstallation=""true"" flag in your packages.config file for all packages that were affected by the retargeting, and each subsequent build in Visual Studio will raise a build warnings for those packages.",,,,,,
37749038,431,Issue,"Is there some reason to keep the RX references targeting net40?No, likely just some legacy NuGet stuff. If there is a reason, then according to this link, we could probably remove the requiresReinstallation attribute, to remove the warning.:thumbsup:",,,,,,
37997408,431,Issue,is there anything in particular left to work on with this?,,,,,,
37998739,431,Issue,That's all for this one I think.,,,,,,
37999119,431,Issue,Just needs a merge/rebase on top of master and this is good to :ship:,,,,,,
37999862,431,Issue,Done.,,,,,,
38000614,431,Issue,Thanks for the patch!![high-five],,,,,,
37718759,430,Issue,Leaving this marked as [WIP] while I review the PCL changes proposed here:,,,,,,
37719842,430,Issue,Confirmed - it works!,,,,,,
37732492,430,Issue,What's the benefit of this? Windows 8.0 still has like 60%+ of Windows Store marketshare and we're not using any Windows 8.1 features,,,,,,
37738709,430,Issue,"it's basically a toolchain issue forcing this upgrade. I'm not a huge fan either, I'd rather switch to the PCL projects but that's A Big Change Also.",,,,,,
37740340,430,Issue,"Actually, if we only add [the GUIDs], VS2013 asks if I want to install windows 8 support:Clicking this launches VS2013 setup (which I'm running as we speak... perhaps part of the problem was a missing VS setup feature?)",,,,,,
37740404,430,Issue,"if that's the case, this change becomes hella simple. Let me know how that goes and I'll rework this PR to suit.",,,,,,
37740411,430,Issue,Trying now...,,,,,,
37740556,430,Issue,(which I'm running as we speak... perhaps part of the problem was a missing VS setup feature?)I think this is something that  has hit with ReactiveUI (he's using VS2012 due to not wanting to upgrade like this). I wonder if there's a way we could script this as part of a bootstrap experience...,,,,,,
37740653,430,Issue,"And by ""script this"" I actually mean- check you have VS2012 or VS2013- if you only have VS2013, run the same commands to install the compatibility tools",,,,,,
37740672,430,Issue,"Yes, after VS2013 setup completed, the solution builds.So, without those GUIDs, VS2013 is not able to recognise that the csproj requires windows 8 tooling, and gives the obscure errors during build/compile.",,,,,,
37740715,430,Issue,thanks for digging deeper![excited]I'll tweak this PR so we only add in those GUIDs and re-test on my end.,,,,,,
37740904,430,Issue,thanks for your help,,,,,,
37744780,430,Issue,"![screen shot 2014-03-16 at 12 09 22 pm]So despite this lovely warning from VS, I can build the solution in VS and run the tests under `.\build` - which seems to be a fine compromise...",,,,,,
37744964,430,Issue,Rewrote PR description to make the bad ideas go away.Updated title.Removed [WIP] description.,,,,,,
37748474,430,Issue,"I am preparing a PR for a few very minor changes to remove some build warnings, including [one you mentioned above].",,,,,,
37748518,430,Issue,looking forward to it,,,,,,
37750044,430,Issue,"the history accurately reflects what happened. Are you trying to hide information from people? Umm, yeah. That's why we use Git and not SVN! :stuck_out_tongue: That's neither here nor there. Well done!",,,,,,
37262614,429,Issue,Come back QED we miss you cc -ogre,,,,,,
37263251,429,Issue,"Sorry , apparently there was a scheduled Azure VM reboot I missed. I guess it's time to bump the priority on making it a Windows service.",,,,,,
37395041,429,Issue,"-ogre :heart: was mostly curious why the build was marked as red when it was some trivial refactoring, but now it's green I can sleep at night!",,,,,,
37425598,429,Issue,:mushroom: :sparkles:,,,,,,
37092394,428,Issue,Addresses one of the features in #333,,,,,,
37616598,428,Issue,"Right, review away",,,,,,
37982527,428,Issue,Have you testet your compare on the live API? Since your datamodel is not correct. I startet to make mine the same way but the commit model is not good enough :)Look at this:,,,,,,
37982766,428,Issue,"I have integration tests in here which use the live real API. I'm happy to refine that model in another PR, just wanted to flag the possible duplication here.",,,,,,
37982886,428,Issue,_Added task to update commit model returned from API_,,,,,,
37983684,428,Issue,"As I can see you just count the commits, but not whats in them. The Commit model has a extra level, so you wont get the message or tree.You could just add it here, since it does not really show anything about the commit besides the sha that you can use?",,,,,,
37984583,428,Issue,"If you wont do it, I can just add it based on you pull request? :) the problem is I need the messages in the commit, thats why im so focust about it",,,,,,
37990091,428,Issue,"all good, I've made that change here. Let me know if there's anything else I've overlooked here...",,,,,,
37990123,428,Issue,:+1: thanks,,,,,,
38027472,428,Issue,When will this get merged?,,,,,,
38037664,428,Issue,"Let everyone sleep on it. I don't think there'll be any sudden issues...On Wed, Mar 19, 2014 at 9:33 PM, Harald Kj√¶r Nielsen  .",,,,,,
38097074,428,Issue,"So good. Just some really nitpicky shit. Also, it's not automatically mergeable. :smile:",,,,,,
38337903,428,Issue,"should be all sorted, let me know if I've missed anything...",,,,,,
38387462,428,Issue,Great stuff!,,,,,,
37116364,427,Issue,Flawless Victory!,,,,,,
37082532,426,Issue,What even are cultures. Thanks for the patch.![rad-2],,,,,,
37080819,425,Issue,"You've got two options when listing issues - for the current user:But this doesn't let you filter on specific repositories - you could do the filtering on the client-side though, but that's not great.The alternative is to use `GetForRepository` above and filter by username: **assignee**: Can be the name of a user. Pass in none for issues with no assigned user, and \* for issues assigned to any user. Default: * **mentioned**: A user that‚Äôs mentioned in the issue.But those aren't surfaced in our current version of Octokit.net - bah humbug...",,,,,,
37084221,425,Issue,"Cool, I looked at the API and saw assignee, mentioned and creator and thought Octokit.net would map the enum values in `IssueFilter` to that. I am already fetching all the open issues for the repository, so I can do the filtering on the client. doesn't work for me. I am working on a repository-centric workflow for a Visual Studio extension. My thought is that when you are working in Visual Studio, you want to see the issues for the code you are working on, not those for every repository you have access to.Now that I know how the API works, I can carry on. Can we leave this issue open low priority to add assignee, mentioned and creator to `GetForRepository`?",,,,,,
37084274,425,Issue,"Wow , you are quick. You've got the pull request done before I finished typing my reply. Good work :+1:",,,,,,
38013825,425,Issue,this fix has gone out in the v0.3.0 release,,,,,,
36850280,424,Issue,"I think the problem is with the async delegate. We should have similar with AssertEx.Throws, AssertEx.DoesNotThrow. Or simply call Star and Unstar without Assert.",,,,,,
43397809,424,Issue,should be fixed now :smile_cat:,,,,,,
144904066,423,Issue,"Will `new InvalidGitignoreTemplateException(""gitignore_template is an unknown gitignore template."");` suffice?",,,,,,
144933743,423,Issue,Yeah. But obviously use the returned message and not that literal string. :stuck_out_tongue:,,,,,,
36811784,422,Issue,you're right. I'll focus on the API changes.,,,,,,
36812030,422,Issue,I've also opened:- #424 to address a muted test- #423 to surface new validation messages when creating a repository,,,,,,
36814499,422,Issue,This is live:,,,,,,
78035020,421,Issue,I'm not sure what I was asking for here. I'll close this until someone else cares enough to translate.,,,,,,
41779522,418,Issue,"is this specific to the api?Those docs state, that we only really need the search term? If that is incorrect the api would need to be updated.Let's say we go into github.com, We are not really searching any repos specifically.This is quite an easy fix, to the class `SearchCodeRequest` we just need to add the repo as an argument that is required.Something like this...If you can confirm, I will open a new PR for this...",,,,,,
41781568,418,Issue,"If you notice in your example you said:  the repo name is jquery/jquery, whereas in the test:TestingTheRepoAndPathAndExtensionQualifiersThe repo name is octokit.net, would this also fail? it should be octokit/ocokit.net?Do we simply document this better so users understand a repo is actually the full name i.e. octokit/ocokit.net or is that understood?",,,,,,
36731901,412,Issue,"Removed `[WIP]` tag, ready for review",,,,,,
36780612,412,Issue,Nice work !,,,,,,
36780657,412,Issue,"Whoops, forgot to choose an emoji. :stars: :v:",,,,,,
36609187,411,Issue,What version of Octokit.net are you using?EDIT: reproducible with `0.2.1` from NuGet - let's see if i can get this into an integration test,,,,,,
36613514,411,Issue,"Yep, I forgot, 0.2.1 from NuGet.",,,,,,
36615317,411,Issue,"Ok, so we overlooked something with the JSON that wasn't caught with the code we wrote previous:![screen shot 2014-03-04 at 9 30 12 pm]I had a bash at switching over to a new response type here But our build of SimpleJson doesn't deserialize read-only collection properties :cry:ping",,,,,,
36685150,411,Issue,I think I added readonly collections to SimpleJson. So maybe just upgrade?,,,,,,
36685488,411,Issue,":cool:, i'll test this out here",,,,,,
36814556,411,Issue,This fix has been published in Octokit v0.2.2,,,,,,
36477659,410,Issue,![thumbsup-2],,,,,,
37740568,409,Issue,"Any :eyes: over this would be great, cannot figure out why on earth the tests are failing.",,,,,,
37745295,409,Issue,Looks like the `forks` parameter is being included in the search term.![screen shot 2014-03-16 at 12 38 20 pm],,,,,,
37745334,409,Issue,This line looks so lonesome (and possibly duplicated),,,,,,
37745545,409,Issue,"This line looks so lonesome (and possibly duplicated)That line is fine... [from github] The second way is to specify whether forked repositories should be included in results at all. By default, forked repositories are not shown. You can choose to include forked repositories by adding fork:true to your search. Or, if you only want forked repositories, add fork:only to your search. For example:github fork:trueMatches all repositories containing the word ""github,"" including forked onesgithub fork:onlyMatches all repositories that are forked containing the word ""github""githubMatches all repositories that contain the word ""github,"" that are not forks",,,,,,
37745584,409,Issue,"Looks like the forks parameter is being included in the search term.Ahhh - ok cool, need to fix this problem. Thanks for your review, I tried everything to figure out what went wrong. Let me think some things through and I will push my changes through.",,,,,,
37747402,409,Issue,"Only one failing test, ""sort"" will see if I can wrap that up tomorrow.",,,,,,
41776979,409,Issue,"I have managed to get everything working except one test, any eyes over this would be great. The test that is failing is the sort test. Cannot see why... Thanks!",,,,,,
44939894,409,Issue,Bump... :smile:,,,,,,
52340732,409,Issue,"this is ready to ship now, thanks for your help.It's really weird but once I rebased to master, I found an error with another test.This had nothing to do with my code, can you verify? Or am I seeing :star: :star2: :stars: That trailing dash should not be there...",,,,,,
52348226,409,Issue,"Oh, w e recently received a pull request that fixed it, but I bet it didn't fix the test. Mind just fixing it?",,,,,,
52348411,409,Issue,sure,,,,,,
52360689,409,Issue,this is ready to :ship:,,,,,,
36570762,408,Issue,Looks good! Just merge in (or rebase against) master so I can hit that green button. :),,,,,,
36579148,408,Issue,Is that what you were looking for?,,,,,,
36579874,408,Issue,"Hmm, I still can't merge it. It says there are conflicts. Did you make sure to fetch latest?",,,,,,
36580574,408,Issue,"I did. The commit history looks like it contains everything in master as well. And now the build is failing too, so I'll look into that...",,,,,,
36581223,408,Issue,![-575]^^^ That's what I'm seeing. That indicates that your branch isn't up to date with `master` on the server.,,,,,,
36581266,408,Issue,"It looks like the latest thing merged into master is pull request #410, and the build is now telling me that a file from that commit is missing in Octokit-MonoAndroid.csproj, Octokit-Monotouch.csproj, etc.Not really sure where to go from here...",,,,,,
36581298,408,Issue,Try running,,,,,,
36581316,408,Issue,And then commit those changes and push.,,,,,,
36582723,408,Issue,"If it still won't let you merge, then I'm at a loss unfortunately. Doing a fetch does nothing (because it's presumably up to date), and the same happens for merging master into this branch.",,,,,,
36587458,408,Issue,"Ok, I'll take a look at it tomorrow.",,,,,,
36684045,408,Issue,"So it looks like you pushed it in a conflicted state. When I pulled it locally, there was still a merge conflict left to resolve. I resolved it and pushed it to a new branch.",,,,,,
36684463,408,Issue,![] thanks for your contribution!,,,,,,
36684579,408,Issue,Oh geez. Thanks Phil!,,,,,,
36396598,407,Issue,"According to this  The payloads for all hooks mirror the payloads for [the Event types], with the exception of the original push event, which has a more detailed payload.So as we build out these event types, we'll end up with most of them except the push event.",,,,,,
46065103,407,Issue,"I'm interested in contributing to this. I'm confused though on why the push event would be excluded. It's actually the one class I'm interested in using in my app. Why is the push is being excluded?Below is a screen cap of what's actually being sent for a push. It's a bit different from the [documented Push event]!1. Would you accept a Push model class along with the other events?2. If so, how should I deal with the difference between the documented push event and the actual data being pushed?",,,,,,
46374954,407,Issue,"We'd accept a contribution. Feel free to fix anything wrong with our `PushEvent` class. I honestly haven't looked very closely at it so I'm not sure why it's different from the documentation. What's important to me is a working implementation. So if you're actually using this, then your contribution would be really valuable!",,,,,,
91406277,407,Issue,"Would you take implementations for the Create and Delete Payloads ?If so, what else needs to be done for this? - [ ]  implementing the classes in the ActivityPayloads folder.  - [ ] Add serialization tests to",,,,,,
36374656,406,Issue,"Think I got it all, apologies. I will update my resharper to match your style.",,,,,,
36375050,406,Issue,"Also, it looks like you created this off an old master branch. Please fetch and merge origin/master into your branch. Or rebase your branch off origin/master. Either way.",,,,,,
36382896,406,Issue,"I think I got it right (let me know if I didnt), through powershell and the Github for Windows app. Gave me a much deeper understanding of git. :thumbsup:",,,,,,
36384934,406,Issue,Great stuff! I'm going to run our build server against it and then I'll merge it once it passes.,,,,,,
36385407,406,Issue,Thank you! ![],,,,,,
36345699,405,Issue,"I submitted the pull request, so I will be the first to jump into the fray.First, let's make sure it is clear what we are talking about. This issue is about [Strong-Name Signing], not [signing the code with an SSL certificate] purchased from a signing authority.Strong-Name signing just provides managed assemblies with a globally unique identity, whereas the second is used to verify the publisher of the application, in this case GitHub. The signing key for strong naming is just a key that a developer creates on the command line and checks into the repository. Ideally they would be secured, but that does not work for open source projects.Public libraries should always be strong named otherwise they cannot be used by applications that are strong named or in Click-Once deployments. In my case, I am working on a Visual Studio extension which should be strong named. I can get around it, but that will limit what I can do in the extension.Look around at most of the most popular non-Microsoft open source libraries, they are all signed and are not putting artificial limitations on their users. Here is a short list, [Newtonsoft.Json], [NUnit], [NLog], [Ninject], [DotNetOpenAuth], [log4net], [AutoMapper], [Castle] (Windsor, MonoRail, etc). In all cases, their keys are in their repositories.If you want to troll around your bin directory and see what is signed, `sn -T Ninject.dll`So, to sum up, Strong-Name signing costs you nothing and allows your library to be used everywhere and play nice with others.Okay, who's next? Gloves off, Internet fight time...![Internet Fight]",,,,,,
36357725,405,Issue,"LOL.This is an issue on another public project I _try_ to help with.Let me throw this idea out there that I've been toying around with.  (Disclaimer: I've seen the idea on a few projects so it's not an original idea.)What if we were to set up the build server to generate two different sets of assemblies, one _Strong-Name_ signed and one not signed?  As a byproduct it would also generate two sets of NuGet packages.  The unsigned NuGet package would continue to have the same name.  The signed NuGet package would be named something along the lines of ""Octokit-Signed"".The one downside to introducing signed assemblies, _only_, is that it could lead to assembly version redirect issues for end-users.  log4net ran into this issue and got a little backlash from it.I'd like to think it makes people on both sides of the fence happy.  Thoughts?![tumblr_mh3kaa1r0m1qffb31o4_400]",,,,,,
36367167,405,Issue,"Two sets of NuGet packages is very bad for libraries that other libraries depend on. What package should they reference? This might not be as big a deal for Octokit.net.I believe that eventually, strong naming as we know it will be burnt down by the CLR team and replaced with something better.Using Octokit in Visual Studio seems like a core scenario to me. I would be :thumbsup: to taking the JSON.NET approach.1. Strong name Octokit.net and Octokit.Reactive.2. Freeze the assembly version at 1.0.0. The CLR assembly version of these DLLs would never change again.3. Continue to increment the NuGet version.In this plan, NuGet becomes the unit of deployment, not the assembly as has traditionally been the case with .NET.By freezing the assembly version, we don't have to worry about binding redirect problems in the future. Octokit is pre-release right now so I don't care about introducing breaking changes like this at the moment.",,,,,,
36367506,405,Issue,"Also, while you should never rely on strong name keys to verify an assembly, I do worry that people still do. So we should consider having a set of private keys in the project for builds and another set for the official releases that we keep private.The alternative is just to have one set of SN keys and have them in the project and hope people by now understand SN verification is a bad idea.",,,,,,
36370332,405,Issue,", I do agree that two NuGet packages are a bad idea.  That's why the other project I'm involved in hasn't proceeded in any direction yet.Freezing the assembly versions would work to resolve the binding redirect (I forgot the name for that) problems.  I can't think of any downside to this off the top of my mind, but can you think of any?",,,,,,
36373502,405,Issue,", I also agree that two sets of NuGet packages is a very bad idea, especially if you do freeze the assembly version number which takes away the only downside that I know of. We've been having the same discussions over on the NUnit team recently, but at least we have the advantage that unit tests are recompiled often.As for keeping the key private, if you want to, you could have the build check for the existence of a key and generate one if it doesn't exist. Then you just need to drop the key in on the build server.That said, from my experience, most open source projects just check it into the repository. I think the downsides of that are much lower than the consequence of ever losing the official key which would be a breaking change if you had to regenerate it. Plus there is just the headache of keeping track of the official key and making sure it is always used for the production builds.",,,,,,
36408442,405,Issue,"+1 on freezing the AssemblyVersion number. The AssemblyFileVersion can be used to store the real version number instead.If I'm not mistaken, you could increment the assembly version on major releases (i.e. 1.0.0, 2.0.0, 3.0.0) as those would be breaking and require recompilation anyway when following SemVer?",,,,,,
36420286,405,Issue,"I was thinking more about freezing the assembly version number and wonder if it is necessary for this project. There are usually only problems for libraries that tend to get pulled in from other libraries. For example, when a project uses two NuGet packages that reference different versions of log4net. I don't think that will be a problem for this project as it will probably be a top level package.",,,,,,
36425107,405,Issue,"If this ends up getting the thumbs up, I would be happy to take my original pull request and incorporate whatever is decided here. Just let me know.",,,,,,
36431747,405,Issue,"If the version number was to be frozen. What would the benefit be to freeze it indefinitely as opposed to updating it for major releases (i.e. breaking changes)? Don't we want it to break at a predictable time if the assemblies are not actually compatible?Also this :+1: I don't think that will be a problem for this project as it will probably be a top level package.Was going to say that I would also rather see the key be public and checked into the repository. But considering the above statement, using a private key becomes much less of an issue and I really have no preference one way or another re: public vs. private :key:In summary I would say Sign it!If we have to freeze the version number (not convinced that we do) at least update for major releases.No preference on public/private key for official releases.",,,,,,
37488696,405,Issue,"I hate it when  writes what I wanted to Every time a new contributor comes along, they now have to have an extremely demotivating fight with Visual Studio to get the project to build, or to replace the official binaries with ones they've built for testing.Anyone have a sample/blog post around about doing this **without touching the csproj** files so we can avoid this pain?But I'd lean towards Authenticode signing for this sort of thing, because It's The Real Deal.",,,,,,
37496776,405,Issue,"what paul writes about is a non-issue if we just include the official snk in the solution. Problem solved.Remember, we're not doing this for security reasons. We're doing it so people can use Octokit.net within a Visual Studio extension. I bet you can see the appeal of that to me. :wink:",,,,,,
37497638,405,Issue,"I mean, I currently use ReactiveUI in a Visual Studio Extension, I don't know where this ""You must SN every binary"" is coming from",,,,,,
37498224,405,Issue,"I mean, I currently use ReactiveUI in a Visual Studio Extension, I don't know where this ""You must SN every binary"" is coming fromPeople keep telling me this :poop:. If we don't need to sign it, then let's not. What the hell? Can I get some good intel here? :smirk:",,,,,,
37498404,405,Issue,"Can I get some good intel here? :smirk:This seems like an interesting breakdown of the VSIX situation: **Reasons for strong naming:** Also, if you didn't strong name sign, you do risk a name collision with another **extension**.   template wizards do require strong name signing, but only because they must be installed into the GAC  If your **package** exposes a public API which **other extensions** consume, you might be referencing a common DLL as the other people consuming your public API.   If you created a DLL called ""Package.dll"" and another extension also did, and neither of you strong name signed your binaries, it's possible the CLR will get a bit confused here. So if you weren't strong name signing, make sure your assembly name is ""unique enough"" to avoid this risk.Reasons against: If you are already VSIX-deployable and don't need anything in the GAC, then no, Visual Studio makes no requirement that you are strong name signed.Emphasis mine",,,,,,
37499747,405,Issue,"Also, if you didn't strong name sign, you do risk a name collision with another extension.lol ok template wizards do require strong name signing, but only because they must be installed into the GACIf you install Octokit into the GAC you've got bigger problems If your package exposes a public API which other extensions consume, you might be referencing a common DLL as the other people consuming your public API.This has happened before with libgit2sharp, it's the one legitimate reason you _might_ want to SN.",,,,,,
37528603,405,Issue,"I am the one working on the Visual Studio extension. Not signing the extension is not causing any major problems for me and as long as I keep my assembly names unique, I shouldn't have a problem. It does prevent anyone from creating a Visual Studio template extension with wizards which is a possible usage, but to be honest I can't think of an Octokit.net use case for a wizard. Maybe automatically create and populate a Github repository for new solutions?  Actually, that would be kind of cool :+1: , I've done template wizards before. It isn't Octokit that needs to be in the GAC, just the wizard, but it means that the rest of the extension (not in the GAC) needs to be signed and therefore all the assemblies you use with it.If anyone is interested in checking out or helping me beta test the Visual Studio extension, add a comment to  and I will get in touch.",,,,,,
38963541,405,Issue,"We have a huge application that we are trying to use ReactiveUI in. Our application is strongly named and it is up to our architects to allow removal of strong-naming which they refuse to. Now we are having a catch-22 with this ReactiveUI. Paul (I respect this guy) has not come up with a good reason not to have ReactiveUI strongly-named.I have never had trouble getting public libraries from NuGet because they generally are all strongly-named. We cannot maintain a branch just for strong-naming, it would be an extra effort for not a good reason.",,,,,,
41112291,405,Issue,note the VSIX+share appdomain issue also exists for msbuild tasks. in some cases you can have multiple slns sharing the same msbuild appdomain. SN does avoid this.But this should be a deployment concern for people writing a task or VSIX.Options - ILMerge your dependencies and then SN the result- manage your own appdomain to ensure isolation.,,,,,,
41205847,405,Issue,"I tried creating an unsigned package. People unhappy. I tried creating two packages. People unhappy. Eventually I just went with signing the assembly, freezing the assembly version at just major/minor versions, and nobody has complained since. I think the reality is this is the most accessible, least bad choice.",,,,,,
41207570,405,Issue,"If someone's going to bear the suffering of Strong Naming, it's going to be the people who want it, not the Open Source community and everyone else sane who _doesn't_ want it. -:100: to strong naming.",,,,,,
41208259,405,Issue,"Maybe my project is different, but I've never received in 6 years anyone asking to remove strong naming. Only to put it in. I error'd on the side of inclusion and maybe (?) pain for some, versus exclusion.I also dual licensed my project, which I didn't care about, but also led to inclusion for folks that can only accept MIT or Apache. But what can I say, I'm a pleaser.",,,,,,
41208361,405,Issue,"I agree with . I was strong naming first, nobody complained. Then someone convinced me that strong naming was bad (at least, it should be banned). However I get more and more requests to strong name it again. The downsides of strong naming are:1) ???And the pros are:1) People can decide whether they want to strong name themselves (both ways are working with strong named assemblies)2) You can use assembly redirects in your config files (and then it is up to the user whether he wants to redirect breaking changes versions (as in 3.x => 4.x)I know strong naming is nonsense for some, but as long as the users are happy, why not? It's not that it costs you money, takes a lot of time or is very complex.",,,,,,
41209958,405,Issue,"to add to those pros:3) Strong-named assemblies can only reference other strong-named assemblies. For me, this meant I locked out a ton of folks from using my library4) Some companies have arcane, insane policies around strong-naming ALL THE THINGS. It's not the developer's policy, so why punish them.Ultimately, my assembly versioning policy removed most (or nearly all) the pain of strong naming. I reversed my position as it was really pride that was the only thing keeping me from strong-naming. But, this really only applies to my library and how it was being used, referenced and applied. Dunno about OctoKit but thought I'd share my experiences.",,,,,,
41210097,405,Issue,"3 == 14) Agree, but is probably the reason why we ""need"" 1 ;-)",,,,,,
41213587,405,Issue,"I'm reminded of a Richard M. Stallman Quote:""This is where I am great. I am great at being very, very stubborn and ignoring all sorts of reasons why you should change your goal, reasons that many other people will be susceptible to. Many people want to be on the winning side. I didn't give a damn about that. I wanted to be on the side that was right, and even if I didn't win, at least I was going to give it a good try.""",,,,,,
41214131,405,Issue,"Depends on the ""right"" side. Everyone likes to be a visionary, the one that knew what had to be done. I just look at your latest message:""If someone's going to bear the suffering of Strong Naming, it's going to be the people who want it, not the Open Source community and everyone else sane who doesn't want it""1) What ""suffering""?2) I am part of the Open Source community, and what is wrong with strong naming?So can you please elaborate with actual arguments? I really want to add it to the list of cons in my previous posts, but I cannot put wise quotes there...",,,,,,
41214806,405,Issue,"Here's my previous write-up of this issue:Short version: SN fucks with the ""Getting started contributing"" story and the ""Build my version from source"" story",,,,,,
41215124,405,Issue,"From what I understand, you consider ""strong naming"" an enormous entry level burden to take when entering a project. I do this in my SolutionAssemblyInfo (shared over all projects):Every junior developer can build this, or am I missing the big clue here?And about new versions, you can redirect them (in case you are working on a diff. version than you are currently using on existing projects).",,,,,,
41229263,405,Issue,out of curiousity - why the two different keys?,,,,,,
41234087,405,Issue,"I still don't understand how SN fucks up the ""Get started contributing"". Developers pull down the source, compile in VS, and they have a signed version of the assembly. Or run the build, whatever. Where's the contributor pain exactly? I'm not trying to be an ass, I'm genuinely curious.The only time I've truly had problems with SN is when I try to recompile MS stuff and they don't distribute the key. I get around this by putting the key in the repo and removing build/revision numbers from the assembly version. Seems pretty straightforward to me, what am I missing?",,,,,,
41247040,405,Issue,"The keys must be relative to the obj folder (so even when you change the output (the default bin folder), the obj files are used for strong naming). For AnyCPU, this is easy (obj), but for x86 and x64, the obj contains an additional directory which you must ""step up"". So the keys are exactly the same, just different paths to conquer.",,,,,,
41351198,405,Issue,"Ok, so we've got a bunch of feedback about how to address the onboarding experience, and how to freeze the assembly version to ensure maximum compatibility. That's all fine.However what still isn't resolved for me is about the **when** strong-naming is necessary, and the impact of not strong-naming (as we're doing currently). Yes, I know many teams do strong-naming still, but I'm not satisfied with doing it for the sake of doing it.I've seen some mentions of scenarios above, so let me call out the specific scenarios I've seen mentioned so far:- installing into the GAC (some VS extensions require this)- VS extensibility scenarios where it's possible to have two different versions of an assembly in an appdomainWhat else have I missed? What war stories do other people have that we need to be aware of?",,,,,,
41351266,405,Issue,"also the VS extensibility story can be answered with ""ILMerge and then SN the result""",,,,,,
41355491,405,Issue,"Note of caution about freezing the assembly version: If someone GACs an old version of your library with the same version then every application will automatically prioritize the GACed assembly over the assembly in the /bin folder.The scheme I have settled on with json.net is to increment the assembly version only for major releases (i.e., infrequently) to balance the possibility of old versions being GACed vs the need for binding redirects.No matter what you do no one will be completely happy but that is the best solution I have found for keeping _the most_ people happy.",,,,,,
41355979,405,Issue,A strong named assembly can only reference other strong named assemblies. Weak named can reference both.  so that means anyone that strong names their assembly for any reason whatsoever cannot use this library.,,,,,,
41357800,405,Issue,"so that means anyone that strong names their assembly **for any reason** whatsoever cannot use this library.:cool:Given I haven't had to SN something of my own free will in many, many moons, I'd love to hear why people are doing this...",,,,,,
41368667,405,Issue,anyone that strong names their assembly for any reason whatsoever cannot use this library.That is not technically correct. They have the option of either strong naming this lib themselves or ILMerge and then SNing the result,,,,,,
41391123,405,Issue,"This is functionally correct, however. When I suggested this to folks usingAutoMapper when I removed strong-naming, I got...less than enthusiasticresponses. That's just not a viable option. There's noright-click-reference-click-strong-name in Visual Studio, making thischoice a non-starter.I also distribute as a PCL and a platform extension library. It's evenharder to modify an assembly's references to point to now a strong-namedassembly.‚Äã",,,,,,
41585775,405,Issue,"The main argument is ""my boss makes me do it"" or I need to GAC/Allow multiple in a single appdomain, we could mitigate this by creating a tool/exe/msbuild task which allowed you to easily strong name everything in the build output folder (which is not signed), optionally ILMerging everything in before it signs?",,,,,,
41629031,405,Issue,"For me it seems that you try to sag under folks who love monkey-patch and binary update all the things, when you yell arguments like 'the ""Getting started contributing"" story', and 'the ""Build my version from source"" story' and 'binding redirects pain'. So the problem here is to decide what you need - do you want more users of your library or not. If you do so, then sign the fcking assembly and go ahead. If you don't care about your users - continue to think up the reasons like ""my god does not allow me to sign my assemblies"".",,,,,,
41634387,405,Issue,"So the problem here is to decide what you need - do you want more users of your library or not.I started this discussion as a way to hear more about how/where people are using strong naming, in particular situations where they _needed_ strong naming to use Octokit.net. As someone who doesn't need strong naming, the input from others has been great to clarify things for me - as well as the various gotchas we've found from others who do SN on their projects. If you do so, then sign the fcking assembly and go ahead. If you don't care about your users - continue to think up the reasons like ""my god does not allow me to sign my assemblies"".We also had a long [JabbR chat] last week with some of the chaps at Microsoft about the strong naming situation. You should check it out (should be the afternoon of Friday 25th in your timezone). If we were violently opposed to strong naming, we probably wouldn't be having this discussion.",,,,,,
41635631,405,Issue,"oh wow!  ![hmmmm]So it looks like there are some suggestions for people to do things like this: or ILMerge and then SNing the resultUm, is it just me or that sounds like crazy-talk? Like, just because we _can_ do it .. doesn't mean we _should_ be doing it. What ever happened to Keeping thingS Simple?![..]My question about all of this, is this: 1. Who are your users?2. How will those users access this Octokit eg. (nuGet? clone + build?)3. What is the **easiest** way to use/consume OctoKit for these user, in their solutions?If the users are mostly Visual Studio Extension builders .. then some of the arguments (above) about SN + VIX might take preference. If the users are mostly ~~dark matter developers (oops. these folks don't use non MS libraries) or~~ your avg joe public making web sites or phone apps or maybe a desktop app ... then really, really do they cared about SN? Or putting it another way, does having the library _not_ signed make it easier for these type of users to easily consume OctoKit in their solutions? ![..]A tiny part of me wonders if the _vocal minority_ are those people who QQ for SN. The flip side - is it really hard for -them- (_if_ they are a minority) to clone + SN + build it, themselves?![..]If you have to SN it, then I've been a fan of the 'best of the worst' solutions to this: lock down the aseembly and use NuGet versions.![..]---Now for some useless opinion..Personally, people who are using the GAC still (eg _My boss makes me do it_ [sigh..] , etc)  ...![Burn them](But my opinion doesn't help solve this important question, though :blush: )My brain is too small ... I'll just go back and hide in Jabbr.![cry]",,,,,,
41636013,405,Issue,Signing is bad despite what argument  can come up with. Don't sign. Too much pain signing.,,,,,,
41637292,405,Issue,"C'mon, -haydon, do you want to discuss how you suffer from signing assemblies? Did you go to your local church or a psychotherapist to discuss that?",,,,,,
41638039,405,Issue,![],,,,,,
41638274,405,Issue,"Well I'm lucky, I don't go to church or follow any religious cults such as Christianity, so I don't have any need to see a psychotherapist.I don't really want to discuss how I suffer from signing, but we can discuss the benefits of signing:**Benefits of Signing:**![]",,,,,,
41639960,405,Issue,"-haydon there is an ""or"" between church and psychotherapist.But the huge benefits of signing that then users who need to sign their shit for whatever reasons can use your signed shit.",,,,,,
41639975,405,Issue,", it is just my general opinion on that religious ""problem"", it does not related to Oktokit.net, nor to you directly. I fully agree with   as he said that by removing signing or not signing a project you will just drop a lot of your currrent or potential users. And as he said - no one ever asked to remove strong naming from an assembly. So the problem is just made up by people who are to scared to press one button in VS to sing an assembly, or by people who ""suffer"" from binding redirects ""pain"" (never had this before), or by people who love to do monkey patching by dropping assemblies into a bin folder.",,,,,,
41640290,405,Issue,**Benefits of Signing:** ![]–ö–∞–∫–∏–µ –≤–∞—à–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞?![red heat-arnold-cocainum],,,,,,
41640976,405,Issue,"evidence is not required to ""not do something"".  is asking for ""reasons to SN"" that have a stronger backing ""because I need to SN"". Most orgs think SN provides some kind of extra security which is false. We already have agreement from some MS guys to remove mentions of the word ""security"" from the strong naming doco on MSDN.  Also here   has articulated the two legit reasons for people wanting SN. that being - installing into the GAC - extensibility scenarios where it's possible to have two different versions of an assembly in an appdomainI will add another one- tools that place an artificial requirement on assemblies being SNed. eg MS CRMAll of the above cases can be worked around using several mechanisms- ILMerge - rebuilding from source- SNing the assembly yourself- creating a SN wrapper that runs a non SN assembly (yes a SNed assembly can load end execute a non-SNed assembly) - careful use of assembly loading and AppDomains So the problem is just made up by people who are to scared to press one button in VS to sign an assembly, or by people who ""suffer"" from binding redirects ""pain"" (never had this before)I suffer the pain of SN and binding redirects regularly. My paying clients also suffer this pain with regular support incidents basically being ""you need to fix your binding redirects"". So the pain it causes is real, just as the pain of not SN is real for others. This discussion is about which pain is better suffered and how many people will suffer that pain- using SN and suffering assembly loading+binding redirect issues; or- not using SN and forcing people to ILMerge/workaroundFrom my experience, once you have ruled out the people who are requesting SN for security reasons, the number of people who legitimately need SN is so small that it is not worth SNingAlso I should note that, as the author of a MSBuild Task, I am one of the people who has a legitimate cause to use SN.",,,,,,
41641262,405,Issue,"All of the above cases can be worked around using several mechanismsI don't want to do any workarounds, I just want it to work without any efforts. Just because all these ""work-arounds"" make much more problems than ""binding redirects"" issue. Just because you do not upgrade your dependencies every minute, but build your software every minute.So let's discuss initial issue and work-arounds.1. Binding redirect issue.   - Happens _some times_ when you upgrade your dependencies   - requires 5 seconds to fix.2. ILMerge   - Need to ILMerge every time you try to release   - Consumes 1-5 minutes each time your build your release   - Needs at least one hour to configure3. SNing the assembly yourself   - Need to sign the assembly every time you want to upgrade your dependency   - You can not use nuget   - Needs some time to implement4. Wrapper / AppDomain - I'm not such crazy to implement this.",,,,,,
41641533,405,Issue,"Great comment! :+1: That all made sense :smile: ![yes!] From my experience, once you have ruled out the people who are requesting SN for security reasons, the number of people who legitimately need SN is so small that it is not worth SNingIt's metrics like this (if they could be .. grabbed), I think will help the OctoKit Krew determine which way they will decide to go, IMO.I've been under the (non scientific) guess that the numbers of SN people are small (and at times, a _vocal minority_) - which is why I've been a fan of not SN'ing stuff. And being OSS, these folks can just clone+SN+Build.So yeah .. who's the majority user base here?_Meanwhile .. while typing this comment_ Hazzik commented just now  Just because all these ""work-arounds"" make much more problems than ""binding redirects"" issue. Just because you do not upgrade your dependencies every minute.![.]This is what Binding Redirects (code smell) makes me think of...![..]Which leaves us with ...![..]",,,,,,
41641548,405,Issue,"If you can get away with it, I'd vote nay! Binding redirects and having to deal with GAC issues have caused me so much personal pain in my years of using .NET (which are many). If you have to do it, 's approach of only incrementing the assembly version for major versions seems reasonable. So far we've been able to skirt having to deal with this on the projects I work on. I hope sincerely we can continue to do that.",,,,,,
41641618,405,Issue,(code smell)HA-HA-HAFck it is so ridiculous.,,,,,,
41641707,405,Issue,"A long time ago I was working on a project when we were signing projects, and so we had to decide to do this ""workarounds"" or not to use the fcking unsigned library. Guess what my team chose? So my IMO: if you are doing some public shit - sign the fcking assembly. You can do whatever you want with your private stuff: ILMerging, include as source, include as source intro resource and compile, encode as brainfuck and execute with interpreter written in javascript.",,,,,,
41641839,405,Issue,"it should be noted that the approach taken by  has negative effects on those people who actually do need to GAC. Since the version is not updated on every release it is a last one wins case. So you could have a case where two apps install on one machine, both GAC diff file-versions but same assembly-version and now one app wont work.Not saying this is a bad approach, just that you should be aware of the side effects.I wonder if  had had many issue with the above effecting his users??",,,,,,
41641884,405,Issue,"of the ""reasons for needing SN"" i listed above which one do you most regularly fall into?",,,,,,
41641910,405,Issue,"Pretty sure he falls into the ""I feel it gives me a sense of security and because my boss told me so""",,,,,,
41641919,405,Issue,"I agree it's not perfect. It does address the virality of signing,  but I can see how it doesn't completely solve the GAC issue / creates new issues.",,,,,,
41641938,405,Issue,by the reason: I do public available assembly and for whatever reasons some of my users want it to be signed.,,,,,,
41641994,405,Issue,Be nice. This is your last warning.,,,,,,
41642021,405,Issue,can you contact some of your users and find out why they need things to be signed? it is the actual users we want feedback from.I would appreciate it.,,,,,,
41642161,405,Issue,"Isn't the more common issue here the virality? That a strong-named assembly can only reference other strong-named assemblies i.e. if we ship a library that is SN, it can't depend on Oktokit unless Oktokit itself is also SN?",,,,,,
41642211,405,Issue,I remember when I was in patterns & practices we had so many people wanting us to have signed Prism assemblies for this reason. It had nothing to do with GAC and everything to do with the fact that signed assemblies wanted to depend on Prism.,,,,,,
41642401,405,Issue,I'm nicer than ever. PS: I'm Russian and you can not scare my by any warnings.,,,,,,
41642479,405,Issue,"Isn't the more common issue here the viralityDisagree. Removing the virility would most likely address the artificial requirements of ""we need thing to be SNed for security"" or ""because my manager told me to"". Since these teams will be allowed to SN their assemblies in ignorance of the fact that things they reference are not SNedHowever it would not address and of the legitimate uses that i mentioned here But I admit removing the virality would prob make the arguments disappear. the people who understand what SN is actually useful and really need it can use the work-arounds. the rest can continue under the perception of ""SN is about security and I am being secure by using it""is that too cynical?",,,,,,
41642540,405,Issue,sorry its my fault. I'm winding him up.,,,,,,
41642639,405,Issue,I see your point on not solving the VS issue. My point is that the majority of requests from SN (in terms of numbers) don't stem from VS extension authoring requirements (at least based on what I have seen).,,,,,,
41643309,405,Issue,"If some one really suffers from fixing binding redirects errors, or his religion does not allow to use binding redirects at all, then he needs to use   [sn.exe -Vr &lt;assembly>]",,,,,,
41643438,405,Issue,"The Nancy nugets have well over 300k downloads and every now and then we get a question about strong-naming. Not a single one of them have been able to provide any tangible resigning beyond that a work policy requires it (for security reasons or other) or that they have a dependency on another strong named assembly. For the ""security related"" cases, not a single one have been able to provide us with an explanation was a signed assembly, from a couple of random people, would be able to provide them in terms of security - we're a not a ""trusted authority"" in any way + many OSS projects that sign assemblies put the key in the repository - further negating the security aspect.The headache grows when the strong-named assembly is frequently updated (and version bumped). I would advice against SN, but if you have to then please know your audience and make the path that causes the least amount of pain for the majority. Without having any firm metrics to fall back on, I am pretty sure that you have more non-SN-shop users than SN-shop users (due to the nature of the library). It is my personal opinion that VS extension authors are also in a clear minority and want this for convenience reasons..The ""Assembly X is strong-named so I need your assembly to be signed as well""-argument is the worst one. I for one won't help fuel a fire that someone else started",,,,,,
41643705,405,Issue,or (if we flip the coin) if anyone really suffers from the lack of strong-naming they can sign it themselves?,,,,,,
41643830,405,Issue,"I think the point against ""they can sign it themselves"" is then it's harder to consume the library than simply invoking nuget.",,,,,,
41643931,405,Issue,"vs. the friction that strong-naming does cause in many scenarios (as mentioned by previous posters) + you have to realise that a vast majority of signed assemblies has not taken the signing approach chosen by JSON.NET. Even if they had, it is not without friction. Jeremy Miller wrote a post about it recently",,,,,,
41644145,405,Issue,Recently the Lucene.NET developers have been talking about ditching strong naming from the project starting with the next version -  and it could be worth reading through the thread on there as well to get their perspective on the problem.For the record it is actually at a vote now - ![And that's the end of that chapter] And that's the end of that chapter,,,,,,
41644458,405,Issue,"I've also wasted more time on strong naming binding redirects than I care to repeat, and I've been strongly opposed to strong naming ever since which IMO it's incompatible with OSS and continuous delivery that disrupts the iterative OSS workflow, introducing friction in forking, making use of customized builds and contributing back changes.If you make your SN key public, just so forks can actually test their customized builds than that pretty much negates one of the major reasons why CIO's were asking for it in the first place (i.e. under the perception of increased security), in this case all we're left with is that we need to strong name to support existing users who can only use strong named dlls, with the original rationale negated.Eventually I've had to add support for strong naming in ServiceStack v4 as it's a popular requested feature of ServiceStack's enterprise customers who wish to use it in enterprise products (e.g. SharePoint) that mandate it. But as I didn't want to burden the majority of the user-base (myself included) who don't want it, I've added a parallel track of Signed packages with a **.Signed** suffix . It takes more effort on my side, but with this approach we can mitigate the effects of strong naming to only customers who really want it and are more likely hardened to deal with their effects.The one exception is the ServiceStack.Interfaces project which is always signed as it provided the most value with the least impact since only the binaries that requires sharing is the DTO dll which only needs a dependency on SS.Interfaces, and the only way for them to be shared with both Signed/Unsigned projects is to be signed. It's done in the least intrusive way where we keep the `[AssemblyVersion]` constant and resort to updating `[AssemblyFileVersion]` to report the true version number. Because its Signed only we're realistically able to make ""official"" changes and builds of ServiceStack.Interfaces and not any of the forks who are maintaining their own customized builds. This is only manageable because SS.Interfaces is rarely updated so has created minimal friction, it does mean anyone else either have to workaround solutions not making changes to SS.Interfaces or propose changes that have to be implemented on my side, then notify them when updated builds are available.I would've preferred it if strong naming had never existed, if it didn't CIO's would've thought twice if it was justified, if it was concluded some verification was needed, then the simplest solution that worked would've been created and not the unnecessary complexity imposed on us today causing an artificial divide between signed and unsigned packages and the support burden it generates. It doesn't in most other platforms and they're better off without this imposed artificial complexity that continues to plague .NET to this day.In future I see both the GAC and strong naming being marginalized whose benefits doesn't justify their existence. SN makes more sense if software was sealed and delivered waterfall, but by its nature software is continually evolving and updating where we're striving for fast iteration times, continuous delivery and replay-able automation. We're pretty far from this in .NET (and may never get there during our Careers), but I see the nirvana dev environment is to move to a more live-reload source-based module system where we can simply reference GitHub repos as dependencies and be able to run C#/F# as source files directly (i.e. by-passing devs seeing/dealing with dlls or other interim artefacts themselves) which I also see as one of the major appeals of projects like ScriptCS. Making a change in this world is just editing source code + hitting replay, likewise making a change upstream is simply updating modules after merging your pull-request (or can even switch reference to use your own fork). There's no place for strong naming in this world, it only hinders it.",,,,,,
41644737,405,Issue,"""I would've preferred it if strong naming had never existed"" :clap:",,,,,,
41644804,405,Issue,"I go play :soccer: and this is what I come back to? No matter what you do no one will be completely happy but that is the best solution I have found for keeping the most people happy., are _you_ happy with this? Would you do it again? Would you do it for a library like Octokit.net which is different in nature than JSON.NET. I'm just curious about your opinion given your experience.I mentioned that Octokit.net is different in nature and I should explain what I mean. JSON.net is a pretty fundamental library. It's the type of library that many other libraries need to reference. Thus the applications that reference _those_ libraries are affected if JSON.NET doesn't strong name.But I don't expect many other shared libraries will reference Octokit.net. I'd expect it would be referenced directly by applications. Therefore my gut is that the need to strong name is not as strong.If my assumption is correct, strong name isn't the only solution to the issues raised here. We could offer another `Octokit.Source` package that contained the source code for Octokit.net which would then get compiled into your own application. The strong name issue in that case goes away.",,,,,,
41650292,405,Issue,"Going to ask a stupid question and I am not even going to use any funny gifs. My team at Microsoft builds an Azure service and we ship our sdks on NuGet. Our sdks are integrated into the tooling experience in Visual Studio so they have to be strong name signed - we have no choice in the matter.If you trace the dependency chain for one of our [libraries], you will find it includes several projects discussed in this thread. Automapper, json.net, etc.My stupid question: what would you have my team do if the libraries in question stopped distributing strong named versions on NuGet? The only answer I can glean so far from this thread is to ILmerge. I'll admit I haven't actually gone through the exercise of trying this out, but doesn't this have some major problems? Firstly I don't think this works for frameworks that support rich extensibility. E.g if we IL merge in some version of automapper, how can our users reference and configure automapper themselves and have our framework pickup those changes? Secondly, I no longer get the very nice behavior of the user being prompted to accept the license of each of our dependencies.I genuinely am not interested into getting involved in the religious debate here. I just want to understand How To Make My Stuff Work(tm).",,,,,,
41650587,405,Issue,"when you ILMerge you would flag it as internalise which would hide the API from the user, allowing the user to continue to reference what ever version they wanted.This is what RavenDB had to do when JSON.net became signed. (if my understanding of the issue was correct)",,,,,,
41650773,405,Issue,"But that doesn't work. Now there are two automappers. There needs to bejust one, or the developer experience suffers. Automapper isn't animplementation detail for us - it's an important part of the dev experience.On Tuesday, April 29, 2014, Phillip Haydon notifications.com wrote:   when you ILMerge you would flag it as internalise which would hide the API from the user, allowing the user to continue to reference what ever version they wanted.  This is what RavenDB had to do when JSON.net became signed. (if my understanding of the issue was correct)  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
41650986,405,Issue,"Of course there's two, there's your one that you use internally for your library, and the one the consumer of your library uses, you don't use the consumers version, you use the version you internalised. The person consuming your library doesn't even know you're using automapper.",,,,,,
41651185,405,Issue,"I am not sure how to state it any clearer: Automapper is not animplementation detail for us. Our framework is not a black box.On Tuesday, April 29, 2014, Phillip Haydon notifications.com wrote: Of course there's two, there's your one that you use internally for your library, and the one the consumer of your library uses, you don't use the consumers version, you use the version you internalised.  The person consuming your library doesn't even know you're using automapper.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
41651585,405,Issue,"Then you've designed your API poorly in my opinion, you would need to expose your API for writing the consumers models to your implementation of AutoMapper, you're only using AutoMapper for your internal conversion of their DTOs to your own correct? So I would assume you only need them to register the classes that need to be converted from/to.But right now it sounds like you've forced the dependency of AutoMapper onto the consumer, not for your internal use, that's bad because you're forced into a life long dependency on AutoMapper. If you wanted to change AutoMapper for ValueInjector, you can't because you've given an explicit dependency to the consumer to configure on AutoMapper.",,,,,,
41652456,405,Issue,"Unfortunately I haven't given you the necessary context because I am in bedon my phone and I should be sleeping. Can we avoid the design debate andcontinue the discussion with my constraints as described? If we throw anargument about how to and how not to design a framework into the mix thisthread will probably gain sentience and destroy us all.On Tuesday, April 29, 2014, Phillip Haydon notifications.com wrote: Then you've designed your API poorly in my opinion, you would need to expose your API for writing the consumers models to your implementation of AutoMapper, you're only using AutoMapper for your internal conversion of their DTOs to your own correct? So I would assume you only need them to register the classes that need to be converted from/to.  But right now it sounds like you've forced the dependency of AutoMapper onto the consumer, not for your internal use, that's bad because you're forced into a life long dependency on AutoMapper. If you wanted to change AutoMapper for ValueInjector, you can't because you've given an explicit dependency to the consumer to configure on AutoMapper.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
41652716,405,Issue,"I can only comment on what I know, you asked about AutoMapper, I'm saying that you can internalise AutoMapper for your internal use, and this fixes the SN issue. But you're saying that the user will have 2 AutoMappers now, that's simply not true. The only reason they would have two AutoMappers is because you are exposing the AutoMapper dependency to the consumer, so your design prevents you from being able internalise.This is a problem with your design, not with the fact that SN can be solved by internalising AutoMapper.",,,,,,
41653949,405,Issue,"-haydon Try to imagine an opinionated .net based web stack that is hosted as a service and you might understand our scenario better. I think your assumption about hiding the dependency makes sense if you are talking about a library that acts as a black box, but that is simply not the case here. wrong team, and not constructive to the purpose of this thread.",,,,,,
41654282,405,Issue,"one example is in RavenDB where some parts of JSON.NET are interalized, but public and nested under their namespace. So when declaring properties you can do:It's actually nice because you can specify different serialisation options for different use cases. Likewise, AutoMapper uses a lot of static configuration (IIRC, it has been a while) so having a separate copy from a separate namespace might allow people to customise the way you use it, without affecting other libraries that use it. Not suggesting that this is the answer to ""should we SN or not"", just pointing out a shade of grey between ""reference a strong-named assembly"" and ""ILMerge and internalize"". I think it would be quite bad if everyone did this.",,,,,,
41655345,405,Issue,I'm going to suggest something radical because it's 2 AM and I should be sleeping. Everyone in the .NET OSS community should just stop strong naming everything. This will have network effects and eventually the GAC and strong naming in general will die on its own :smile: Somebody should make a logo for this movement.,,,,,,
41655416,405,Issue,eventually that will happen. Unfortunately there's a large company located somewhere in Redmond that make a lot of platforms that still demand strong named assemblies :),,,,,,
41655468,405,Issue,ILMerge is still an MSR project that I _think_ are run by the same people that run code contracts and pex. i.e. it's a tough call to rely on this stuff. (ILRepack seems to be showing some promise)*\* Really wish ILMerge / declaring references as private / internal was a first-class compile-time concern **,,,,,,
41655638,405,Issue,ILMerge can be called as a .net assembly and u can use c# code from within MSBuild ;),,,,,,
41655758,405,Issue,"Yeah, but not quite first-class up-in-your-face enough (imho)",,,,,,
41655825,405,Issue,lol. no. hence the  ;),,,,,,
41656616,405,Issue,"My 2¬¢ - if someone finds a library useful enough to want to use _and_ wants to strong name (for whatever reason), it should be them that feels 100% of the pain involved in strong naming it - they should absolutely have to build it themselves and strong name it in order to extract whatever benefit they perceive there being.",,,,,,
41656705,405,Issue,What  said!,,,,,,
41659443,405,Issue,"I ban strong naming and the GAC everywhere I work - it's a trade-off between maintainability and security, and the security benefits, particularly for OSS libraries are so weak that they don't override the maintainability benefits of not having SN. I'm honestly gobsmacked to discover that people still use SN and the GAC. No one I know has been using a SN/GAC approach post the first five years or so of .NET where they all got burned badly enough to kick it out. My estimation of anyone using SN falls, very rapidly.",,,,,,
41660403,405,Issue,"re  ""the security benefits,""   the Runtime only checks the strong name signing key/cert but does not Hash the DLL/EXE to match the key",,,,,,
41660440,405,Issue,"I basically agree with what  said, however I think we can make it less painful for people that still need SN - by improving the tooling.NuGet could simply apply SN with a provided key to any non-SN assemblies when it detects you want to install it into a SN-project.This was already discussed at length in [this thread] a few years ago and the conclusion by  and  was that auto-signing was a viable option. Did anybody of you change your opinion on this since then?Granted, there will be issues and edge cases, but IMHO in the majority of cases this should it make it less painful.",,,,,,
41661476,405,Issue,"I think we haven't reached a consensus yet, and I hope we can do that in a professional (non personal opinionated) way. I will try to list the pros & cons again. If you have additional pros and/or cons, please list them here:**Cons**1) Assembly redirects _can_ be a pain2) You cannot update assemblies separately. For example, you have product X which uses Y. Both are strong named and both have a newer version (thus X has a dependency on Y vNext). With strong naming you cannot handle this scenario (but as a developer, I would strongly recommend to update Y anyways).**Pros**1) People can decide whether they want to strong name themselves (both ways are working with strong named assemblies)2) You can use assembly redirects in your config files (and then it is up to the user whether he wants to redirect breaking changes versions (as in 3.x => 4.x)3) Assemblies can be used in the GAC4) You can load multiple assemblies with different versions (think for example of serializable objects (please, don't start a discussion on serialization techniques here)5) You can use the product **with NuGet** in products that require strong named assemblies (Sharepoint for example if I am not mistaken)6) No need to mess around with ILMergeI hear some people that see strong naming as a major drawback / pain. I hope they can add their cons to the list so the decision is not taken on personal emotions. Note that I didn't add security as pros because I don't think (and already mentioned in this thread) strong naming != security.In the end I really don't care what it will be, **as long as it is best for most people**.",,,,,,
41661904,405,Issue,"to remove the pain, people stop revving version numbers. So then if v1.0.0 is GACed then I want to use v1.8.0 I cannot GAC it.If your scenario is multiple versions in an appdomain (for example msbuild tasks), then the first one to load wins. So I build a project with v1.0.0 of a task, then I build another project which is using v1.8.0 I will actually get v1.0.0 and everything will blow up in a hard to debug way",,,,,,
41663485,405,Issue,Strong naming is a real pain and easy to get wrong. I wish I never had to familiarise myself with it and would have wished strong naming never exisited. Having said that:**Just don't strong name** is a mantra I would love to adopt but my main OSS project is a library that is often used by folks hooking up Elasticsearch with i.e Sharepoint or other frameworks that need strong named assemblies. The mantra is easier to hold up (or atleast an easier sell) for OSS frameworks vs libraries.I too follow  approach and still see it as best of both worlds. As much as I **detest** strong naming the greater goal is to service the most people and  's approach does just that so I'm not convinced I should drop that just because I do not agree with the necessity.,,,,,,
41665647,405,Issue,", are you happy with this? Would you do it again? Would you do it for a library like Octokit.net which is different in nature than JSON.NET. I'm just curious about your opinion given your experience. I'd sign again. Binding redirects can suck for people, and I've done my best to minimize the need for them, but it is no where near as bad as telling someone they need to ILMerge your library.I have noticed a lot of people don't understand strong naming, and blame other problems on it. Back in the day I released a new version of Json.NET that had a relatively uncommon breaking change in it and that was the version Web API picked up. Unfortunately RavenDB was hit by the breaking change. Lots of people incorrectly blamed strong naming but really the two frameworks/apps depended on incompatible versions of Json.NET and until RavenDB was updated to the new version of Json.NET there were going to be problems, and it had nothing to do with strong naming.I don't think Octokit.NET is terribly dissimilar to Json.NET - it is more likely that the app will depend on it directly rather than through libraries which is good because binding redirects will be needed less but at the end of the day it will still be deployed with applications. I don't think the reasons behind strong naming are terribly good but you have a choice of either going with it or spending time educating every developer/company who wants to use Octokit.NET and is strong naming on why they shouldn't strong name. I'm pragmatic and tend to go with what keeps the library usable to the most people.Edit:I should add that Json.NET gets a ludicrous number of downloads these days and I never hear about strong naming any more. I think when I released Json.NET 6, which incremented the assembly version for the first time in a couple of years I saw a SO question by someone about bindings and a couple of tweets with the same question and that was it, out of 1/2 million downloads.Do I hear about minor breaking changes I introduce to Json.NET: yes, but again that has nothing to do with strong naming :smiley:",,,,,,
41665679,405,Issue,Just to add fuel to the discussion strong naming assemblies post nuget instal won't always work:My project has 2 packages `PackageA > PackageB` Both are separate nuget installable packages but `PackageA` depends on `PackageB` If there was a post nuget strong name process on A and B then A won't be able to load B anymore because of a `pubblickeytoken` mismatch.My dumb approach to strong naming has always been to do an `sn.exe` sign post build but doing this on two separate dlls that depend on eachother will cause the link between them to break. So now I'm signing from visual studio / msbuild and have a complicated pre build event (both in the csproj files as well as the main FAKE build script) that generates a key to sign with in the right place before building so contributers can still checkout and F5. But sn.exe to create the keys is not something I can install locally from my build script so i have to redistribute sn.exe. Unlike i.e nUnit runners which I can install from nuget:This whole process should be a lot easier. The key reference is not relative by default if you hook it up from within visual studio. If the key does not exist in the location it should be way easier to generate one in place. SDK's should really be put in nuget as  already [blogged about wonderfully]I guess my point is that strong naming is not always something ILmerge or sn.exe post nuget install can solve. just tweeted something which to me presents a very nice middle ground:,,,,,,
41668508,405,Issue,"Thanks  it occurred to me after reading this thread that the problem isn't SN, it is what SN does to projects that rely on NuGet.  However that doesn't negate the case for SN, any more or less than shipping out multiple versions of the same assembly for different frameworks does.Here is my suggestion.  Why not treat SN as a separate platform/framework in NuGet.  Something like: **net40-sn** for a signed version of a .NET 4.0 library.If we had the following NuGet library:_\lib\net40__\lib\net40-sn_When adding this to a signed library, it would use the SN version, when adding this to a non signed library it would use the unsigned version.  And since this is merely a convention, it wouldn't effect any libraries that currently us the **net40** for signed libraries, because if SN isn't present than everything would simply used the **net40** libraries.What do you think, or am I totally off the wall, or suggesting something that has already been discussed to death?",,,,,,
41669057,405,Issue,"Although at first sight this might look like a solution, I think it is out of scope for this discussion. As  pointed out, he had 2 libs ([lib] and [lib]-signed => users were unhappy). I see more cons to that solution, which I will point out below:1) NuGet packages will double in size. I know most people are happy with providing a single platform or using PCL, but I want to provide """". Because I ship a core assembly with PDB (people can step through the source code), my packages are already 4,64 MB => meaning over 9 MB with that solution.2) What if I decide to SN a package after I have referenced a library (or vice versa), but I know we already have this mess when you change from NET40 => NET45 or any other platform changeAs I noted earlier, I think this is out of scope for this discussion and will not solve the problem on the short term (which we are looking for, right?). On the long term I think this should be covered by either the NuGet team or the .NET platform team.",,,,,,
41669322,405,Issue,"Let's move this (the part not related to Octokit specifically) over to the OSS .NET repo so it's easier for the framework team to follow/participate in the discussion... oh, wait... :wink:",,,,,,
41670771,405,Issue,"-haydon i really am curious what pain you're having. I removed the SN for AutoMapper 3.0, despite zero complaints, only to receive a number of requests to put it back in. Since I put it back in, zero complaints. From my project, the number of people negatively affected and complained about SN was zero (including myself). The number of people negatively affected and complained about lack of SN was more than zero.It's getting close to 1M downloads of AutoMapper and _literally nobody_ has asked that SN be removed, or even complained about it being SN'd. I took it away, and the complaints came in. This is one of those things that needs to come from a specific need or pain that users are _actually experiencing_.",,,,,,
41672142,405,Issue,"'s suggestion of treating strong naming as a separate platform has a :+1: from me in principle, though I'm not sure whether that comes with other problems.",,,,,,
41673293,405,Issue,"Huh? I've had no problem. I was answering his question... -----Original Message-----From: ""Jimmy Bogard"" notifications.comSent: ‚Äé4/‚Äé29/‚Äé2014 8:43 PMTo: ""octokit/octokit.net"" octokit.net.github.comCc: ""Phillip Haydon"" phillip.haydon.comSubject: Re: [octokit.net] Signed Octokit Releases - Yea or Nay? (#405)-haydon i really am curious what pain you're having. I removed the SN for AutoMapper 3.0, despite zero complaints, only to receive a number of requests to put it back in. Since I put it back in, zero complaints. From my project, the number of people negatively affected and complained about SN was zero (including myself). The number of people negatively affected and complained about lack of SN was more than zero.It's getting close to 1M downloads of AutoMapper and literally nobody has asked that SN be removed, or even complained about it being SN'd. I took it away, and the complaints came in. This is one of those things that needs to come from a specific need or pain that users are actually experiencing.‚ÄîReply to this email directly or view it on GitHub.",,,,,,
41673603,405,Issue,#NAME?,,,,,,
41673982,405,Issue,"I'm a committer for Lucene.NET, and we are pushing hard to removing strong naming. I went ahead and discussed this in length here: I'm assuming most place which _require_ SN, and their process can't really change easily, will also likely not being using nuget anyway (big corporate, government agencies, etc). While this is not always the case, I'm happy with assuming this and redirecting them to the download page.",,,,,,
41674340,405,Issue,"+1   I'm going to suggest something radical because it's 2 AM and I should be sleeping. Everyone in the .NET OSS community should just stop strong naming everything. This will have network effects and eventually the GAC and strong naming in general will die on its own :smile:  Somebody should make a logo for this movement.+1   Eventually I've had to add support for strong naming in ServiceStack v4 as it's a popular requested feature of ServiceStack's enterprise customers who wish to use it in enterprise products (e.g. SharePoint) that mandate it. But as I didn't want to burden the majority of the user-base (myself included) who don't want it, I've added a parallel track of Signed packages with a .Signed suffix I originally said that just having a separate NuGet package that is SN'd  would make everyone happy.  It satisfies both parties on the opposite sides of the fence until strong naming is removed from .NET.",,,,,,
41674386,405,Issue,"So are you saying that you guys/gals are 1. trying to remove SN from Lucene.NET's NuGet packages for various reasons (?? can you share those war stories here, so the OctoKit Krew can get some more intel..)2. _If_ you need an SN assembly, manually download it from a link u provide. Which means, you compile an SN version and provide both SN and not-SN assemblies for manual download?",,,,,,
41674667,405,Issue,"Really, if we had a second NuGet package that is SN'd for the people that need it, we wouldn't be here arguing and all this time spent could be used doing better things.  When the day comes that SN'ing is removed from .NET, then you can deprecate that NuGet package.",,,,,,
41674869,405,Issue,"I wouldn't do a separate package for existing projects. I tried that and it was both confusing and difficult to manage for users. It's too easy for the packages to get mixed in a solution - and when you have packages that depend on your package, everyone has to create these dual packages. Which they won't.",,,,,,
41674900,405,Issue,"Or  .. follow Itamar's comment and have an not-SN'd package on NuGet .. and maybe pop open a ReadMe.txt file which says in big ascii art: go here for a SN assembled, if you need it.Other people have said having multi-packages == confusion.",,,,,,
41674941,405,Issue,for a long while I had Package and Package.Signed but if your product consists of multiple separate libraries it ends up bloating nuget searches tremendously..,,,,,,
41687816,405,Issue,"In theory, someone could write an `Install.ps1` for a NuGet package that checked the target and if it was strong named, would strong name the assemblies ( can correct me if I'm wrong). Even if it's not possible, it should be possible and a PR to NuGet could fix that.We could even include a strong name key in the package for this script to use so the strong name is consistent.This doesn't solve every possible dependency graph situation, but for a large number of cases I think it would be just fine. If it made this perma-headache-thread go away, then I'd be open to including such a script in our package.But the Octokit.net team isn't going to write that. We have more pressing matters like completing the library to contend with.",,,,,,
41688577,405,Issue,"So it occurred to me we could do an intermediate step that would help some folks and even be simpler.Include the Octokit.net strong name key in the package and a PowerShell script that people can use to strong name Octokit.net.The `Sign-Package` script just signs every assembly that was in the lib folder.This would be much easier to implement than the fully automatic approach I outlined. Ultimately, we would want something fully automatic. But this could be a good stepping stone to that.",,,,,,
41692690,405,Issue,"that makes it incompatible with package restore though, as you'd need to check in the signed assemblies.The NuGet team is now working on v3, so it might be a good time to fix this in the tooling.",,,,,,
41694033,405,Issue,"that makes it incompatible with package restore though, as you'd need to check in the signed assemblies.:poop: you're right. Forgot about that.Never mind. Burn it all to the ground.",,,,,,
41694723,405,Issue,"Feels good seeing I wasn't alone in feeling the pain with SN.I support that the right choice :tm: is to drop it.(If only because it'll force the development of proper tooling around it, e.g. auto-signing by NuGet ?)The one approach I strongly advice against is to SN with a private key (as in ""not in the public repository"").It goes strongly against OSS in the sense that I need to ask the maintainer for a release/patch if I don't want to end up re-compiling every dll that depend on it, and you can't rely that much on people you don't pay.I've been hit by this and we since moved to a fork (although w/o any change) of the so-called OSS library (IKVM, not to name it), just to sign it with our key, and be able to patch it if the need arise.This is just sad, so you get my +1, even if I know it'll mean changes on my side (we moved to ~~ILMerge~~ ILRepack but still kept SN, for no good reaon).:+1:",,,,,,
41695728,405,Issue,"I think it's worth noting that the GAC was trying to solve a problem from the Win32 DLL/COM era when folks were sufficiently short of diskspace that installing multiple versions of a library on a user's machine (for it was pretty much client server in those days) that saving disk space by installing into the System directory looked tempting, but resulted in collisions as different packages overwrote dependencies or updated shared ones.Now it's possible devices still have that issue, or folks want sufficiently small downloads for clients that use of the GAC is still popular, but for my part the constraints that made me want to deploy in anything other than side-by-side mode have long gone away. So I'm uncertain why folks continue to deploy to the GAC. I'm sure someone might be able to enlighten me, but I have not used it for a long time.Once you move away from the GAC the issue with trusting an assembly that you download tends to lessen. IMO signed assemblies are about defending you from someone inserting a version of an assembly into the GAC which compromises consumers of that asembly. Drop the GAC and that goes away.I'm uncertain whether that signed assemblies is still the best mechanism to then use in a package manager - it was built for something else. Establishing the credentials of a publisher, for their own packages, and the dependencies that they require needs a mechanism that is tolerant to binary compatible differences in those dependencies. Strong naming doesn't provide enough protection, once the GAC is dead, to force us to put up with incompatibility based on version increments that are not a breaking change to the public api of an assembly.",,,,,,
41696825,405,Issue,"what about Mono/Xamarin? won't relying on a PS script inhibitusage on Mono?On Tue, Apr 29, 2014 at 8:50 AM, Phil Haack notifications.comwrote:   that makes it incompatible with package restore though, as you'd need to check in the signed assemblies.  [image: :poop:] you're right. Forgot about that.  Never mind. Burn it all to the ground.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
41700429,405,Issue,"Here's my thoughts:1) SN'ing the binaries after the fact (via ildasm/ilasm) is not going to help if a developer has other dependencies that they don't own that have built against the non-strong named versions. These AssemblyRefs will also need to be fixed up.2) If you want your library to be able to be deployed to an application with a plug-in-like environment (such as Visual Studio) strong naming is a requirement (assuming you don't want to force ILMerge on devs). If you don't, extensions with two different versions of the same library will break each other. We **won't** load non-strong named assemblies side-by-side, so whichever extension gets loaded first wins - if that happens to be an earlier version, then the one expecting a later version will break.If that environment uses the default Load-based (as opposed to LoadFrom) plug-in system, then incrementing version every release will also be a requirement, as GAC'ing your library is going to be the only way to load it side-by-side.3) With regards to the binding redirects, a couple of options:- Rely on NuGet to generate them. Unfortunately, its logic was lacking for our situations which lead to:- Having the package automatically generate them to reduce the pain. We took this approach for our packages, such as [HttpClient], [Async], etc. The downside is that you need to hook onto build via a targets file, which leads to package restore issues.- You could point consumers to turn on [Automatic Binding Redirects], a feature we added in Visual Studio 2013. By default it is only enabled for new 4.5.1 applications, but devs can turn it on for existing projects targeting older versions.",,,,,,
41700758,405,Issue,"Would that be possible to have only the releases that are on Nuget Gallery signed so users can ""use"" your library? People who don't wan't it signed can come to your github page and download the releases/sources. Any issue with that ?",,,,,,
41700864,405,Issue,Re: 2) If you want your library to be able to be deployed to an application with a plug-in-like environment (such as Visual Studio) strong naming is a requirement (assuming you don't want to force ILMerge on devs).My experience is that VS extensions do not have to be strong named unless they are wizards - is that not the case anymore?,,,,,,
41701453,405,Issue,"Not sure if this helps and may have already been covered (this is way too much for me to read through atm), but the way we solved this with Glimpse is by publish an unsigned copy to Nuget and we try and make it easy for people to sign if they want to.For us this has been discussed a few time, most notably:- !topic/getglimpse-dev/pXXazMOOdjE-",,,,,,
41701865,405,Issue,"Read the rest of the paragraph. :)The extensions don't have to be signed, but if you want your library to play nicely in that environment you will need to be signed. Imagine this setup:Extension1 -> Octokit v1Extension2 -> Octokit v2If Octokit isn't signed, and _Extension1_ gets loaded first, _Extension2_ will be loaded and bound against _Octokit v1_ breaking it if it was expecting any v2 behavior or APIs. If Octokit _is signed_, then we will load both versions of it side-by-side.If Extension1 or Extension2 are loaded in the Load context (as opposed to the typical LoadFrom context), then they will also need to have different _assembly versions_ as they will need to be dropped in the GAC to be loaded side-by-side.",,,,,,
41705685,405,Issue,"Glad to see you made it here David. If people want side by side they can rename the binaries (because for some reason the CLR ignores the version of assemblies without a strong name). Like I said on twitter, if you start with the existing solution that is strong naming, then it looks like you can't live without it.The truth is, other platforms have solved these problems and they don't have or need strong naming. .NET is not special, we just chose to be different and it causes more problems than it's worth. If we somehow the community could organize itself and stop strong naming things, we would be better off.",,,,,,
41705829,405,Issue,", Visual Studio extensions do not have to be signed, it is just strongly recommended that they are signed. If two extensions use Octokit and it is not signed, then the first one loaded wins. As  says above, if they are using different versions of Octokit, one extension will likely be broken.I have been working on a Visual Studio extension, so this is a concern for me. For now, since I don't know of any other extensions, I have decided to not sign, but I would prefer it if I could. Originally, I forked octokit, added it as a submodule and signed it. Until this issue is decided, I decided to leave my extension unsigned because I don't want to bother with keeping my fork up to date. Once I am ready to release the extension, I think I will need to sign it so I am voting for signing Octokit if just to save me the work of signing it myself.",,,,,,
41706829,405,Issue,"I believe either my question was misunderstood or I am missing something here... I am not talking about any Extension to VS. I am simply talking about the auto downloading and referencing process of nuget.If we could get libraries on Nuget.org signed so we could easily use ""Install-Package packageId"" command to download and reference library without thinking if my application is signed or not. That would be great.",,,,,,
41706963,405,Issue,you know what would be even better? If we could all organize instead of trying to hack our tooling to make half assed solutions to things. NuGet tried to solve the binding redirect problem (I wrote that code!) and it just doesn't work. The power is in the hands of the library authors.,,,,,,
41707464,405,Issue,the other option is to simply rename the Octokit DLL that you reference in your VS extension from octokit.dll to octokit-mine.dll.  That will prevent load collisions with other extensions.The scenario laid out by  is very real and something I deal with daily.  Today I use SN on my extension libraries because it's easy and it works.  Using a mangled DLL name would also solve the problem but it does have a bit more overhead than SN.  Probably some .csproj changes or a post-processing step.  Perhaps the first step is simply showing people how to do this properly?  Give people an existing solution to pattern off of.  Maybe there is already one available that I'm missing.  If so please do point me towards it.  But until there is a tutorial / guide out there to not using SN for this scenario I don't think there will be much initiative to change.  Yes I realize I could help write that guide.  May do it the next time I find myself with a bought of insomnia,,,,,,
41707903,405,Issue,"It's more than renaming the binary - you will rebuild the library itself and then rebuild anything with a dependency against it. The binder's not going to look in a binary called ""MyOctokit.dll"" if you build against an assembly with the name of ""Octokit"". It's not as simple as you are making it out.The other problem, is that extension writers aren't thinking about side-by-side, these issues are only found after they've shipped and playing in an extension ecosystem. If you want to run these plug-in environments (and it sounds like Octokit does), then you want to make sure these things ""just work"".",,,,,,
41707992,405,Issue,"IMO (and experience), merging is a better solution for this, because you don't get runtimes surprises e.g.:Octokit has some static state (not arguing it's clean code :tm:), Extension1 wants it set to A, Extension2 wants it set to B, it works if they don't use the same Octokit library, and starts breaking when they match (and both are installed).IMO (been there, done that) SN has been abused for extension frameworks because it was the closest thing to match the need (isolation) w/o resorting to dark arts (ILMerge), but it doesn't make it right.",,,,,,
41708075,405,Issue,"The failure is not in SN. It is in the devs and tools that do not know how to do proper SxS deployment, which is what SN was designed to solve.Tools such as VS, and especially Nuget are to blame for the issues with improper sub-dependency version conflicts (ie JSON.Net). Nuget should know the version specific assembly dependency graph, and automatically do correct side by side deployments. I originally made sure Simple.Owin would support multiple versions in one app domain. See App.config and DempApp.csproj in eddiegarmon/simple.owin as an example of what the tools should do.**Don't blame SN, blame and fix the tools**By not strong naming, all you are going to do is limit the number of possible consumers.",,,,,,
41708306,405,Issue,"Octokit has some static state (not arguing it's clean code :tm:), Extension1 wants it set to A, Extension2 wants it set to B, it works if they don't use the same Octokit library, and starts breaking when they match (and both are installed).That won't happen in a LoadFrom side-by-side world. Both extensions will see a separate copy of Octokit (assuming it's strong named).",,,,,,
41711446,405,Issue,"But do we think that extensions are a big enough use case that we should sign every assembly within a package manager? In terms of maintainability strong naming makes solutions more brittle, so we would want to see a benefit that makes that loss of facility a reasonable tradeoff. Are extensions really that common a use case for that to be true?",,,,,,
41712386,405,Issue,NuGet tried to solve the binding redirect problem (I wrote that code!) and it just doesn't workWell THAT explains it! ;),,,,,,
41712745,405,Issue,"How does this sound:The failure is not in ____ its in the devs who haven't devoted the necessary time into researching how to appropriately deal with its side-effects and intricacies resulting from the unnecessary complexity that was imposed upon them. These devs are also selfish in not appropriately allotting a part of their development time to help diagnose their user base ___ issues, which they're morally obliged to do given the majority users never wanted to deal with ___ and have expected their software to work transparently across updates and integration with 3rd party packages. By subscribing to be a .NET OSS developer you're expected to adhere to the unspoken rules of Enterprise .NET and pay the ___ tax which overrides any OSS philosophies you may have or believed you have concluding from the fact that no other platform incurs this burden. A good mantra to remind you of your duty as an OSS .NET developer is: The needs of the Enterprise few overrides the needs over the OSS many**Dont blame ___, blame the ecosystem and surrounding tools for not understanding it properly.**---By strong naming all you are doing is perpetuating an unnecessary complexity that should have never existed. [#nomorestrongnaming]",,,,,,
41716502,405,Issue,"But do we think that extensions are a big enough use case that we should sign every assembly within a package manager? That's exactly for you guys to figure out. :) Everyone can look back with hindsight (wonderful thing isn't it) and agree that strong naming is a complex over-engineered system, but if you look back with what they were trying to solve (sandboxing + dll hell), it would have made a lot of sense at the time. Now with sandboxing dead, everyone equates strong naming == strict binding policy. We can make blanket statements like ""no one should strong name"" but this isn't a solution. I think it is unrealistic to think that the ecosystem is going to change overnight to stop using strong naming (especially given there are existing requirements for being strong named), therefore I think time would be better spent coming up with short-term and long term strategies to make this painless.Do we have a current list of pain points that you run into when you start strong naming? Here's the ones I've gathered:1. Binding policy - requiring consumers to apply binding redirects if they have a versioning conflict2. The annoyance with needing to create a strong name key, associate multiple projects with it (VS tooling doesn't help with this)3. Being able to rebuild a OSS binary from same sources, drop it in as a replacement and have it just run (for example, MVC)Are there more?",,,,,,
41716837,405,Issue,"Demis, I agree it should have never existed, but it does, and we the OSS .NET community have to live with it whether we like it or not.There are really only 3 things WE the community can do:1 - Don't strong name, and limit our user base (tell the others to just buck-up cowboy, how sweet)2 - Sign with a song and dance convention that doesn't really solve the problem. (probably works in most cases)3 - Teach everyone to do proper SxS or Fix the tools. Don't tell me its my responsibility to add the feature, or that I am bowing to the Enterprise. SxS is a core tenant of library consumption, just do it right. Nuget was supposed to make it easy for **everyone** to use cool new bits, _with a right click_. When you propose that enablement scenario, you get what you asked for, usage by the non-trained.",,,,,,
41720222,405,Issue,"Alright guys, I've come up with an innovative new proposal - if you maintain an Open Source project, please consider following my lead:If you ever learn one thing from Economics, it's that 'people always respond to incentives'.",,,,,,
41720980,405,Issue,:+1:,,,,,,
41723627,405,Issue,:-),,,,,,
41728869,405,Issue,"A little late to the party and this may not be relevant to Octokit.net, but imagine you are building a WPF application that you want to deploy via ClickOnce and you find this great library that does a lot of fancy stuff you need.But it just happens that ClickOnce requires signed assemblies, so you try to use ILMerge, but ILMerge does not support WPF. Now you're in a world of pain.",,,,,,
41729976,405,Issue,ClickOnce doesn't require signed assemblies. Irrelevant to this discussion.,,,,,,
41730027,405,Issue,"Allow me to clarify, it does not require strong named assemblies.",,,,,,
41730201,405,Issue,I was also considering charging for signed packages  . Let me know you get any subscribers  :D,,,,,,
41730924,405,Issue,"Can you provide more information about the ongoing pain of strong names? ie Once gone through the pain of strong naming, and checked the private key into the tree. What is the ongoing pain? Is it just the binding policy? Or is there something else that I'm missing?",,,,,,
41737191,405,Issue,"if you maintain an Open Source project, please consider following my lead:  Of-course this is not going to work: it is the same issue as having two separate NuGet packages (Package + Package.Signed) or trying to rename your library.",,,,,,
41737459,405,Issue,"What is the ongoing pain? Is it just the binding policy? Or is there something else that I'm missing?It is just a position ""I don't want to sign my assemblies, because I don't want to sign my assemblies"", or as my 4-yo says: ""Just because""",,,,,,
41738235,405,Issue,Having separate **.Signed** packages has [worked well enough in practice for ServiceStack]. It takes strong naming away from the default packages and localizes issues to only users who really need it.No the position is: I shouldn't have to subject our entire user base and any potential contributors to un-necessary friction because of the few that need it.,,,,,,
41741542,405,Issue,:+1:,,,,,,
41742427,405,Issue,if I want to create a library which depends on your stuff what package/assembly shall I reference? Correct. I need to have 3 separated packages of my own library.,,,,,,
41745624,405,Issue,"the default packages unless you want signed versions, in which case the signed packages.",,,,,,
41749406,405,Issue,"Can you write 1 or 2 sentences of the friction both on you and your consumers? Not trying to troll here, want to make sure that my team (.NET Framework) aren't missing any pain points here.",,,,,,
41750734,405,Issue,"Great to see you here, in the convo!Quick newbie question (and trying very hard not to side track this convo): what is the reason for offering SN, anymore? Can't it be removed*\* from .NET vNext & VS vNext so this convo can be finally archived at the Computer History Museum? Does .NET still need it, to exist to solve problems for the -majority- user base?I also totally understand that, regardless, that doesn't help OctoKit & every other OSS package in the short term - hence trying not to side track this convo.*\* Not saying that's easy .. but asking if it could be sorta-realistic-possible.",,,,,,
41751369,405,Issue,"Can't it be removed from .Net vNext & VS vNext ... This question requires more context.  Anything in .Net can be removed if you are willing to pay the price involved for removing it :) I think a better way of going about this is to list the capabilities that SN provides or SN is relied upon for.  The ones I'm aware of are as follows (probably missed a few) 1. It is a pre-requisite for inclusion in the GAC2. It allows for SxS in process execution of different assembly versions 3. Binding redirect policiesIf SN was removed it's hard to see how the GAC could be reliably implemented.  It's rooted in the idea of strong versioning.   If SN was removed then presumably anyone could overwrite anyone else's assembly in the GAC hence it loses its authoritative nature.  I'm sure plenty of people on this thread would like to see the GAC die though but fact is that it's there, it's heavily used and IMHO there is no way Microsoft will give up on it.  SN is not a requirement for 2 but just a handy convenience.  If you removed SN people could just start mangling assembly names to get the same effect.  I'm not enough of an expert on 3 to comment too intelligently about it.  Others in this thread have covered this though.",,,,,,
41753196,405,Issue,"For the last few years I've managed to avoid any SN issues by ensuring all packages remained unsigned. During this time the only issue affecting ServiceStack packages were having to maintain a new Log4Net adapter when Log4Net bumped their version: We've been able to mitigate this by ensuring app code never had concrete references to Log4Net impls and instead only bind to the impl/dep-free interfaces maintained in ServiceStack.Interfaces. In this way only the host project decides which single concrete version of Log4Net gets used in order to avoid having to run dlls with different SN versions of the same library in the same app domain.Leading up to this I've suffered the normal SN binding hell of trying to make use of components with different dependencies on different versions of SN libraries where the solution ended up being to drop down and implement a custom assembly resolver to implement manual Assembly resolution, which needed to be revisited again when some SN dependencies upgraded.Now the pain point is primarily the overhead of maintaining parallel Signed packages which was only added in v4 based on some enterprise Customer demand. Ultimately I've decided on this as the best strategy with the least impact. The primary friction is with the Signed-only ServiceStack.Interfaces project which effectively every other project depends and I'm only able to create ""official"" builds for, this is manageable as this project is rarely updated so for the most part doesn't inhibit contributions.In the end, I'm hoping the ultimate solution in future revolves around unsigned dlls.",,,,,,
41755392,405,Issue,"(Standard disclaimer: This is entirely my opinion and does not represent Microsoft's) Good question. There's not a single bit that we can flip and everything is good[1]. The foundation of a significant number of features are built on top of them. The ones that I can think of the top of my head are: GAC, cross-AppDomain sharing, partial trust, framework unification, retargeting/portability (mscorlib-based PCL), fusion, shadow-copying, binding policy (publisher/machine/app policy, codebase refs, etc), app-local security servicing, side-by-side assembly loads, SQL CLR, plus a few more internal (to the CLR) features. This does not include any downstream impact on the tools & infrastructure built on top of the framework[2]If we were to completely remove the concept of strong names, we would need to make a decision about existing features that use it, do we remove the feature completely (partial trust would probably be an example in this bucket)? Or do we tweak these features (like Jared mentioned) to move away from requiring strong names (app-local security servicing would probably be an example)?If we do the former, this new framework looks very different to the previous version, and massively hurts adoption because a lot of code that relied on the features need to be changed or rewritten.As with any feature in any given project, the later needs to be offset against other features[3], and/or alternatives that could achieve similar result. For example, Phone[4], Silverlight & Store inherited strong names - but not the binding policy that required a strict match. This for the most part removed the ""in your face"" part of strong names from those platforms.  also proposed removing the viral-ness of strong names, which would enable enterprises that opt'd into strong names, to reference OSS projects that didn't.Thoughts?[1] Funnily enough we have tens of other conditional/#if'd for a lot of features from v1/v2, including COM, serialization, generics, but not strong names! :)[2] A good example would be any tool that made a decision on key to do something different. For example, I know immediately that some of the designers in VS and Blend would be broken by removing strong names.[3] Have you seen our new [JIT]? What about [.NET Native]?[4] Phone went as far as hiding the UI for creating strong names from project properties.",,,,,,
41767905,405,Issue,"I'm going to go ahead and give my primary vote for removing: the viral-ness of strong names so enterprises to reference OSS projects that didn't.Which IMO would alleviate the primary pressure facing OSS projects into releasing signed versions of their libraries. Effectively some form of ""We need signed versions because we can only use signed versions"" is the only rationale I've ever received for making signed versions of my libraries available.",,,,,,
41768089,405,Issue,"Excuse my ignorance, but what's the reason to force strong named assemblies to only reference other stong named assemblies in the first place?**EDIT** I found this When you reference a strong-named assembly, you expect to get certain benefits, such as versioning and naming protection. If the strong-named assembly then references an assembly with a simple name, which does not have these benefits, you lose the benefits you would derive from using a strong-named assembly and revert to DLL conflicts. Therefore, strong-named assemblies can only reference other strong-named assemblies.",,,,,,
41768363,405,Issue,"I think a lot of problems already will go away if the strict binding policies with assemblies is changed a bit. Today, an assembly has a version with 4 elements: Major.Minor.Build.Revision. It doesn't matter however which one is changed: if the assembly has a strong name, the assembly is seen as different by Fusion and it requires a redirect. If this is changed a bit, it will solve a lot of problems: What if fusion looks at it this way: All assemblies which share the same strong name and the same Major.Minor.Build version are equal, and the one with the highest Revision number is loaded. This is then controlled by an assembly scoped attribute which is by default 'off' (so if it's not there, Fusion will use the old behavior). One could extend this to let that controlling attribute tell Fusion which elements in the version can be considered 'equal' among all versions, it gives full control over what's loaded to the developer, as it should be, as the developer knows whether a change is breaking or not. This way, one could fix non breaking bugs in an assembly, strong name it and simply bump the Revision number. With the additional attribute in place in the assembly, it's just a drop-in replacement, no redirects needed. If a breaking change is added, the developer can decide to bump the build nr or minor version, to make sure the user of the assembly recompiles their code and is aware that the change is breaking: a drop-in replacement won't work, as intended, as it's a breaking change.This also solves the need for the workaround of using the fileversion as the real version with a revision number, as changing that today doesn't ripple down to users of your assembly when a bugfix release is published. I for one need strict binding policy based on versions. I don't care whether an assembly is signed or not, I think no-one really does these days, the main issue is solely about the version based binding. My runtime ships with OData support code, however as it has to support OData v1-3, I have to reference the WCF Data Services 5.6.1 assembly. There's a v6.x already but it ships with OData v4 only and isn't backwards compatible. Without strict binding policies, it would be expected that my code will load WCF Data Services v6.x, which shouldn't happen, the dependency is on v5.6.x This is just an example. As my runtime is in the middle of app -> runtime -> another_assembly, one would think that without strong names my life would be easier as changes in the strong name of 'another_assembly' would go away, but those are solely related to binding policy and it is required that _I_ control the dependency on 'another_assembly', as a breaking change in 'another_assembly' will break my runtime and therefore 'app'. No binding policy, no way to control that dependency. And please 'nuget already solved that' isn't correct. Not every assembly is on nuget.: it's enforced to ensure that the whole 'chain' is secure/trustworthy. At least that was the theory from 10+ years ago when signatures were still checked. A->B->C. If A is signed, it doesn't mean anything unless B is signed too.",,,,,,
41769563,405,Issue,So far:39 people have contributed to this thread:Those in favour of removing SN: 38 peopleThose in favour of keeping SN:,,,,,,
41769805,405,Issue,"-haydon Then apparently you haven't read the discussion correctly.... :-(The ones that see that you simply cannot remove SN by ignoring it: me, , ,  Unfortunately this thread is becoming too emotional for some. Too bad, we really could have come somewhere with the right arguments.",,,,,,
41769820,405,Issue,#NAME?,,,,,,
41769949,405,Issue,![],,,,,,
41769964,405,Issue,"Jeez, I'm beginning to think all those in favour of SN are the same people who lack any sense of humour. Sorry guys!",,,,,,
41777221,405,Issue,"Exactly, name and version work for most scenarios and the binding policy already works the way it should when you don't strong name. Given that:Why not just make it non viral first then fix the binding policy for those that have to keep strong naming (no matter how strange that reason is)?Can anyone think of an example of another platform with something like strong naming? Whenever I see people explain why strong naming is good or why they need to strong name they gloss over the fact that everybody else on the planet has the same problems and have found better ways to solve them.",,,,,,
41779116,405,Issue,"aren't assembly versions ignored if the assembly isn't strongly named? I.e. isn't Fusion loading the one with the highest version number no matter what the reference says? I.o.w.: if assemblies aren't strongly named, versions are ignored, which makes it impossible to take a dependency on vX.Y.Z",,,,,,
41792427,405,Issue,"I don't think this thread is whether or not SN is ""Good"" but whether or not it's necessary. Application-level frameworks like Nancy.Fx aren't typically referenced by other libraries, so there's not a clear benefit to SN them.Tool/utility libraries like JSON.Net and AutoMapper do make sense to SN because they're much more likely to be referenced by other libraries/extensions. I SN my assembly not because I _want_ to but because enough people want it and the people that don't need it aren't feeling any pain with it. Pretty much a no-brainer for me. The pain I've heard the most is really around the strict match binding policy. Even without SN NuGet has similar issues in resolving common dependencies of multiple packages.",,,,,,
41818451,405,Issue,"Thanks folks. Appreciate the feedback. For those that want provide feedback back to my team offline, you can contact me offline via my github alias @ microsoft.com.",,,,,,
41826264,405,Issue,thanks for contributing and listening.,,,,,,
41863958,405,Issue,:+1:  ! ![Davkean relaxing]--- Krew - after all of this - has it helped you folks re: making a decision?,,,,,,
41866395,405,Issue,yes. We'll follow up in the next few days.,,,,,,
41963557,405,Issue,What if we added strong name redirection?,,,,,,
36322754,404,Issue,"Ok, so there's two things in here which I'll address separately:## Signing AssembliesWhile I appreciate there are scenarios where assemblies need to be signed (sup VS), I'm fairly sure this isn't something we're interested in doing currently. I'll open up an issue and let people thrash it out there (I know many people who are opposed to it, but I'll make sure they play nice).If we were to sign these assemblies, we should do it with a proper key so that we can verify official releases. ## FxCop rulesI want to fix these, rather add exclusions to the solution. Can you open an issue with some more details so we can address this correctly?",,,,,,
36342382,404,Issue,"I figured you would might not want this, but made the changes for my needsso offered it up. I am happy to maintain my fork for my needs. I will enterthe code analysis issue and jump into the signing debate, we had the sameone on the nunit team recently.On 2014-02-28 12:19 AM, ""Brendan Forster"" notifications.com wrote: Ok, so there's two things in here which I'll address separately: Signing Assemblies  While I appreciate there are scenarios where assemblies need to be signed (sup VS), I'm fairly sure this isn't something we're interested in doing currently.  I'll open up an issue and let people thrash it out there (I know many people who are opposed to it, but I'll make sure they play nice).  If we were to sign these assemblies, we should do it with a proper key so that we can verify official releases. FxCop rules  I want to fix these, rather add exclusions to the solution. Can you open an issue with some more details so we can address this correctly?  ##   Reply to this email directly or view it on GitHub .",,,,,,
36302966,403,Issue,"yeah, i'll do another run today and see if I get the same results",,,,,,
36309260,403,Issue,"There we go, ready for review again. That last commit fixes some tests that I had inadvertently broken by doing the baseaddress+endpoint join myself instead of in httpclient.",,,,,,
36309332,403,Issue,This looks good to me. Once the build passes I'm :shipit: on this.,,,,,,
36310150,403,Issue,![],,,,,,
47604871,402,Issue,"Hi , any plans to continue this work?",,,,,,
47661065,402,Issue,YES!  I've been spending too much time renovating my house.  I'll continue working on the PR this long weekend.,,,,,,
47671055,402,Issue,C'mon ! Octokit is more important than YOUR HOUSE!:stuck_out_tongue: Good luck with the renovations. :house: -> :house_with_garden:,,,,,,
48512546,402,Issue,I'm not looking forward to updating the repo in the PR tonight  This is what happens when you neglect things ;),,,,,,
48564138,402,Issue,:disappointed: AppVeyor build fails because private repo quota exceeded in test account.,,,,,,
48569193,402,Issue,"yep, don't sweat it",,,,,,
48569384,402,Issue,Looking good ! Any plans for tests for the `AddMember`/`RemoveMember`/`GetRepositories` methods?,,,,,,
48606809,402,Issue,"Yep, unit tests coming.",,,,,,
100149904,402,Issue,"apologies for not coming back to review this PR properly. Thanks for the hard work you've done with it.As it's been a while, there's been other contributions and conventions tests added which I've pulled in and merged. I'm also not sure what state #331 is in, so I'm gonna review it over in #795",,,,,,
36271989,401,Issue,"And for the tests project I had to add a reference to Microsoft.Bcl.Build, to tackle a warning.Nope nope nope nope nope nope nope that dumb thing causes infinite annoyance. Veto anything that references Microsoft.Bcl.Build.",,,,,,
36272106,401,Issue,paulcbetts: how do we make this portable without it?,,,,,,
36272327,401,Issue,"Also, this will require updating the `Octokit.nuspec` file to include the new dependencies. NuGet now [supports grouping dependencies by target framework]. I don't want the net45 version to have these new dependencies because it doesn't need them.",,,,,,
36272369,401,Issue,Everything builds and tests fine without it. I just wanted to minimize my warning footprint. [8bbf2bf] can be rolled back or not merged. Whichever is easier.,,,,,,
36273112,401,Issue,"Do any of our public interfaces directly expose HttpClient types? I think we can do this a better way, where the PCL version only declares interfaces, and the platform version actually implements them. That way, we can create a Octokit-WP8 project that references `Microsoft.*` and leaves them out of all the other builds.Check out [Akavache] for an example of this, where the PCL version _only_ sets up interfaces, and the platform version actually brings the implementation. This is the counterintuitive part of PCLs, where the app version will actually _replace_ the PCL version, and the app version can do more.",,,,,,
36273666,401,Issue,I think all we expose is `ProductHeaderValue` which is super easy to abstract.,,,,,,
36279520,401,Issue,Hi. Does this mean that we will have a github WP8 app?,,,,,,
36290496,401,Issue,Hi. Does this mean that we will have a github WP8 app?No.,,,,,,
36308956,401,Issue,can we internalize `ProductHeaderValue` in a separate PR to nudge us towards this Brave New World?,,,,,,
36309059,401,Issue,feel free. :),,,,,,
37108481,401,Issue,"I need a bit of guidance on item 5 I have gone down the rabbit hole on both and think I like implementing a solution that has a separate portable nuget package, instead of trying to manhandle the nuspec. I am a huge fan of the current process for building the nuget package, and I think dirtying up the huspec with hardcoded elements is a bad deal. :toilet: I can do whatever to get this feature 'shipped' just need to know what the consensus is :rabbit: After playing in nuspec and the build scripts, I personally prefer building a 'portable' nuget. I have not found a way to build a single package without adding a reference to Octokit itself on Microsoft.Net.Http, though maybe that is what we want?",,,,,,
37116254,401,Issue,": I'm not sure i follow. What ""hardcoded"" elements would you need to add to the [nuspec here]? I have not found a way to build a single package without adding a reference to Octokit itself on Microsoft.Net.Http,Well you should only need to add references to Microsoft.\* for anything that's _not_ .NET 4.5. In the nuspec, that would be something like:^^^ What that does is ensure that `Microsoft.Net.Http` is a dependency when targetting any framework except .NET 4.5. For .NET 4.5, there are no dependencies.",,,,,,
37607745,401,Issue,"Thanks, Phil. Appears the nuget server (internal corporate) I was using was a tad out of date. Started using myget to test everything, much better :thumbsup:",,,,,,
37607937,401,Issue,"Removing WIP tag, this builds and nuget packages deploy as I would expect. Still wrapping my head around git (Paul Betts video helped), hence the abundance of commits. The only project that references Microsoft packages is the Portable project, as  requested.",,,,,,
38004289,401,Issue,"This is looking pretty great . I had a stab at this a while ago #284 but I like your approach of doing it side-by-side for the moment.I'll pull down the changes and have a play, I've already got lots of people asking for this!",,,,,,
38006375,401,Issue,Great work!,,,,,,
38010215,401,Issue,"Ok, so the only headache with this PR is that if you try and install `Octokit.Reactive` into a PCL project you'll get rejected.I've opened  to track this, but it's not a blocker for me.",,,,,,
38011126,401,Issue,"Cool! I didn't think of the reactive project until now :sweat:. I am happy to tackle #435 in a similar manner in the morning (Central Daylight Time), if no one gets to it by then. A very interesting part of this, to me, was tackling automating nuget and the build steps. That is a very nifty way to build a package without any thought.",,,,,,
38011765,401,Issue,Thanks for this. ![yes-nick-cage]Now to put together another release.,,,,,,
37085259,400,Issue,v0.2.2 has upgraded SimpleJson to 0.34.0...,,,,,,
36218039,398,Issue,whoops.,,,,,,
36218150,398,Issue,"Ok, this is ready now.",,,,,,
36249875,398,Issue,"Oh never even considered that. Think I just subconsciously assumed that it would not become a dependency since there's nothing in the lib folder. I'll get on updating the package as well, thanks~",,,,,,
36268076,398,Issue,"well if you use NuGet to create a package based on the .csproj file (one of several ways to create a package), it scans the packages.config file of the project and adds all those as dependencies to your package. This doesn't affect Octokit because we use a different process and explicitly specify a [nuspec] file. But it's just a good practice. :smile:",,,,,,
36217514,397,Issue,A couple of failing serialization tests in there. Good times...,,,,,,
36217752,397,Issue,Going to pull this for now.,,,,,,
36204681,394,Issue,Looks good. Perhaps making the test a bit more readable by using IsNotType is the only improvement I can think of...,,,,,,
36216941,394,Issue,:shipit:,,,,,,
36179248,393,Issue,Thanks!,,,,,,
36162852,392,Issue,![],,,,,,
36163109,392,Issue,This should have had a wip in the title but my internet died as I was putting it in :) I'll send a second,,,,,,
36084990,391,Issue,Notes:I have added tests for IObservable sync.I have squashed the test commits into the first test addition commit due to test file being moved. That means commits between the test addition and full api implementation do not build.,,,,,,
36118127,391,Issue,Ping  =D,,,,,,
36142665,391,Issue,Yeah yeah! I'm reviewing it. :stuck_out_tongue:,,,,,,
36144847,391,Issue,"Pushed again, thanks!It was using tabs since it was MonoDevelop's default. Fixed now.",,,,,,
36162560,391,Issue,![],,,,,,
36201069,391,Issue,"Thanks folks! Sorry, I'm a horrible person and dropped off the planet for a bit.",,,,,,
36201384,391,Issue,No problem! I just needed this merged. :octocat:,,,,,,
35845425,390,Issue,Thanks!,,,,,,
68196103,389,Issue,Hello  Do you know what links you want to be returned. I've found a few related to billing/account management and making a private repo a public one on the Help Site. Is there something more specific you're envisioning. Thanks.,,,,,,
146291044,389,Issue,Still wanted?,,,,,,
35651176,388,Issue,Yes please!,,,,,,
35699911,387,Issue,or -ogre mind reviewing this?,,,,,,
35753832,387,Issue,![:thumbsup:],,,,,,
35647953,386,Issue,"I have one issue: the JSON deserializer didn't match _links to Links; at the moment it's set to _links in Octokit/Clients/ActivitiesClient.csI submitted a PR to address the `_links` issue. Once that's in, let's update this.",,,,,,
35649814,386,Issue,"Helps if I'm not commenting on the individual commits, so that it's actually visible here.",,,,,,
35657561,386,Issue,"I updated the Test to be clearer, and added the DebuggerDisplay attribute just on Feed. I'll wait for the _link pull request , then fix _link.",,,,,,
35668100,386,Issue,"Excellent, looks good to me. :star:Maybe adding some documentation comments to the model classes as well for extra fun and profit!",,,,,,
35763200,386,Issue,Now that  is closed I was able to fix the _links name. Should be all set.,,,,,,
35772912,386,Issue,![],,,,,,
35610607,385,Issue,Step 1: You haven't added the Reactive interface:![screen shot 2014-02-20 at 10 15 47 pm]Step 2: You haven't added the right methods:![screen shot 2014-02-20 at 10 17 01 pm]Step 3: You have additional methods which aren't important:![screen shot 2014-02-20 at 10 19 05 pm],,,,,,
35610655,385,Issue,"Don't know if it'll affect anything, but generally I like to use Environment.NewLineYeah, I've been in a rush and a bit lazy. I'll make sure to tidy that up now...",,,,,,
35611179,385,Issue,![screen shot 2014-02-20 at 10 28 20 pm],,,,,,
35611828,385,Issue,![screen shot 2014-02-20 at 10 40 12 pm],,,,,,
35613873,385,Issue,![screen shot 2014-02-20 at 10 57 06 pm],,,,,,
37090548,385,Issue,![screen shot 2014-03-08 at 5 16 26 pm],,,,,,
37090765,385,Issue,Dropped the [WIP] tag as this is ready for review,,,,,,
37107317,385,Issue,Hell yeah!![],,,,,,
35602272,382,Issue,Doh - that one slipped through the cracks :open_mouth:  My intention was to provide an overload. Any reason why you prefer extension methods?  Either is fine with me.,,,,,,
35648600,382,Issue,"If it's an interface that's intended for others to implement, I tend to like minimalist interfaces implementations. The implementer only has to implement a single method and gets the extensions for free.Whereas if the interface has two methods, but one trivially calls the other, why make the implementer bother with implementing both? And worse, why give them the possibility of doing it wrong? That's why as a general principle of API design, I tend to not like overloads on interfaces and prefer extension methods.However, if the interface is solely for our testing purposes, I tend to like having the methods on the interface. It makes mocking it easier. :) However, if you write manual mocks, it actually makes it harder!",,,,,,
35652648,382,Issue,"If it's an interface that's intended for others to implement, I tend to like minimalist interfaces implementations.  However, if the interface is solely for our testing purposes, I tend to like having the methods on the interface. It makes mocking it easier. :)Yep, we should always favor library consumers, which most of the time means extensions methods in a case like this. But keep in mind we also want to make TDD easy for our library consumers as well, so if it's an interface we expect consumers to stub, we should consider making it part of the impl.(This case doesn't seem like a thing a typical consumer would stub.)",,,,,,
35652814,382,Issue,"(This case doesn't seem like a thing a typical consumer would stub.)And in this case, stubbing the one method is pretty easy. :)",,,,,,
36477042,382,Issue,I'm convinced - Extension method it is :+1:,,,,,,
35561443,380,Issue,:ship:,,,,,,
35518858,379,Issue,This is ready for review when someone has time. :),,,,,,
35558617,379,Issue,This looks good to me   :ship: it,,,,,,
35602012,378,Issue,the tests in DebuggerDisplayOnModels now pass :+1:,,,,,,
35606134,378,Issue,"Just pushed a little fix for the impacted tests (it converts `DebuggerDisplay` into a value to send to the API, oops)",,,,,,
35606926,378,Issue,![happy],,,,,,
35457679,377,Issue,Doh! I'll add these files.,,,,,,
35461154,377,Issue,`OverPrivateRepositoryQuotaException` `CannotCreatePrivateRepositoryOnFreePlanException`I don't think this can be improved on. It's perfection.,,,,,,
35470683,377,Issue,:shipit:,,,,,,
35519302,377,Issue,"From an API perspective, `CannotCreatePrivateRepositoryOnFreePlanException` is the same thing as `PrivateRepositoryQuotaExceededException` in that we get the same response. So if we wanted to distinguish that, we'd have to do it from context we have on the client side.",,,,,,
35469908,376,Issue,"I'll merge master into this tomorrow, but aside from that I think this is ready for review",,,,,,
35560973,376,Issue,We might want to add more information when the assert fails. Here's an example I got today.Not sure what to do with that.,,,,,,
35570531,376,Issue,"It's green, quick, ship it !",,,,,,
35570663,376,Issue,:thumbsup: Thanks .,,,,,,
35399254,375,Issue,"I did singular for the property names because `Users.Get` makes me think it's getting all users vs `User.Get` is clear it's one. But for the type name, I like the plural to match (more or less) the API. So :thumbsup: to `IActivityClient` as `Activity` is both singular and plural so we can't be wrong.",,,,,,
35428031,375,Issue,"We've already shipped public releases, the :sailboat: has sailed on this one. Don't Break People‚Ñ¢",,,,,,
35431919,375,Issue,"We've already shipped public releases, the :sailboat: has sailed on this one.Not sure I agree with this. We're pre 1.0 still and there's a lot of work to do yet before we get there.",,,,,,
35434853,375,Issue,"I agree with . We've deliberately not cut a 1.0 release for this reason. Also, [Octokit on NuGet has 557 downloads]. I think people will survive.It's a disappointingly low count, but we haven't really put our marketing muscle into it yet.",,,,,,
178894862,375,Issue,"We're doing an API audit in #1038 and have marked a few things as obsolete in the most recent release. I think we settled on singular for the naming convention, but we'll use that to keep things up to date (and later enforce this via convention/integration tests)",,,,,,
43437477,374,Issue,"This should do it. I was just wondering if we should have different commit objects as the returned payloads are different. If not the work is done :smile: I would consider throwing a more meaningful error when the JSON deserialization is failing. I was getting a meaningless NullRef, it should probably be wrapped in a try catch and rethrow with the name of the property and the value.",,,,,,
178904303,373,Issue,Looks like #976 was merged to finally address this. It's available in v0.18. Moving on.,,,,,,
35456512,372,Issue,And this is unblocked if someone wants to add it in,,,,,,
35461835,372,Issue,"I'll get this one, I could use the break",,,,,,
36138891,372,Issue,And then life happened. Should be able to start this soon,,,,,,
37111545,372,Issue,Should we really implement this feature?,,,,,,
37716925,372,Issue,"Good question, I'm not really sure at this point. I have this all finished since quite a while back but have been very busy with a tiring search and haven't had time to push it up.    is this something we still want to introduce? If so should it be introduced as already [Obsolete].If it's something that we do want I'll try and do the final polish and get this up. Sadly my VS2013 trial expired :trollface: and I currently only own a license for 2010. But as I said it's all already done and I just need to look it over once more.",,,,,,
37750401,372,Issue,"Yeah, if it's likely to be deprecated, let's not add it in the first place. I don't like adding already obsoleted methods.",,,,,,
35351811,371,Issue,:thumbsup:,,,,,,
35370261,370,Issue,Relates to #361 and #346,,,,,,
34820998,369,Issue,It shouldn't be too hard to compile this conditionally for .NET 4.5 and keep on going without ETags in WinRT.That gets my vote. I have a feeling  will come along with a crossplat lib that fixes that.,,,,,,
34823304,369,Issue,"That gets my vote.Done, Mono and WinRT is excluded from this.",,,,,,
34824949,369,Issue,"Why do you need WebRequest to get ETags? Won't it just be in `HttpResponseMessage.Content.Headers`? We don't have to implement general HTTP caching, we know that ETags work and `If-None-Match`, you can totally read all of that via HttpClient",,,,,,
34825025,369,Issue,"Why do you need WebRequest to get ETags?So the point here is that by using WebRequest we get the caching provided by WinInet for free. Octokit never even has to know about ETags or Last-Modified, Expires or s-maxage and all that crap. It's completely transparent and it'll use the system web cache to persist responses to disk.",,,,,,
35239914,369,Issue,"This should be good to go, :metal:",,,,,,
35410141,369,Issue,"Awesome! Can't wait to get this in. , once you merge/rebase master onto this branch I'll merge it if you're happy with it.",,,,,,
35445166,369,Issue,"Uh, that's interesting. Let me dig into it some more...",,,,,,
47604900,369,Issue,", any time to take another look at this?",,,,,,
48140075,369,Issue,"The problem with the Wininet cache is that it is fairly broken when it comes to Etags and freshness.  Once a representation becomes stale, any future 304s with new freshness information fail to update the freshness of the cached representation, so from that point on, every request goes back to the server.I wrote a replacement for Wininet that plugs into HttpClient here  and I started to integrate with Octokit, but haven't had chance to work on it recently.",,,,,,
48198425,369,Issue,The problem with the Wininet cache is that it is fairly broken...Is this documented somewhere? That seems like a serious bug.Thanks for chiming in !,,,,,,
48231217,369,Issue,"I provided repro code and full details here  has confirmed that he experienced the same behaviour.  IE does not have the same problem with WinInet cache, so I'm guessing the issue is somewhere between HttpWebRequest and WinINetCache.",,,,,,
48237776,369,Issue,Wow. I pinged someone I know at MS to see if he can get the right folks to look at it. I noticed there's been no answer and it's 6 months old.,,,,,,
48557308,369,Issue,Let's take a step back:,,,,,,
48585685,369,Issue,"#403 is part of this and I believe you still want that, no?",,,,,,
48596107,369,Issue,"I haven't nuked the branch, I'll see if I can get that branch merged into master as a first step",,,,,,
34658688,367,Issue,![]Thanks!,,,,,,
34655656,365,Issue,Thanks! I'll take a look.,,,,,,
34894090,365,Issue,Fixed the `GetOrCreateApplicationAuthentication` test and merged in master while I was at it.,,,,,,
35341412,365,Issue,"a couple of little improvements to make, but so so happy to see some bad tests corrected along the way!![excited]",,,,,,
35346694,365,Issue,Guess maybe I should put in a little comment as well.All done! :),,,,,,
35346859,365,Issue,Thanks!,,,,,,
34461640,364,Issue,![],,,,,,
34419094,363,Issue,I can take this.,,,,,,
34738349,363,Issue,This should be closed.,,,,,,
34386539,362,Issue,At this point we're down to 6 failures which are mostly method mismatches.- [x] implement `IObservableIssuesCommentClient.Delete`- [x] implement `IObservableIssuesLabelClient`- [x] add missing properties to `IObservableIssuesClient`- [x] add missing properties to `IObservableGitHubClient`- [x] add missing property/method to `IObservableRepositoriesClient`- [x] add missing property to `IUsersClient`,,,,,,
34393859,362,Issue,Well that wasn't as hard as I feared...,,,,,,
34394150,362,Issue,"I :heart: these convention tests! Great for contributors (get instant feedback from CI), great for you guys (don't have to nag contributors). Win-win! :grin:![]",,,,,,
34394311,362,Issue,I've captured some tasks here #363 for making the diagnostics even better (I don't want to debug the tests to interrogate the specific failures),,,,,,
35334394,362,Issue,Rebased because yolo.Paging  to the thread for a :eyes:,,,,,,
35343130,362,Issue,"Nevermind , I've got a lot of things which depend on this change",,,,,,
34378753,361,Issue,This is the raw output,,,,,,
35469533,361,Issue,I don't mind grabbing this one - it's gotta be done.,,,,,,
35469803,361,Issue,see #376 - it's mostly done aside from the DebuggerDisplay ones which I'm kinda procrastinating on...,,,,,,
35470295,361,Issue,"All good yeah, they are kinda lame grunt work. I'll do em tonight :)",,,,,,
48170143,361,Issue,"Oops, this was done ages ago. :trolleybus:",,,,,,
33960098,360,Issue,"No problem, man. Sorry I never ended up finishing it... We've been in crunch mode at the office for a while now and I really haven't had any time to give octokit any love :(Thanks for all the help!",,,,,,
35364098,360,Issue,**dropped the [WIP] tag**Ready to review,,,,,,
35365637,360,Issue,:+1::bomb::boom::fire:Strangely qed build **[673]** doesn't appear in the **[recent builds lists]**. Caching issue?/cc -ogre,,,,,,
35455270,360,Issue,![],,,,,,
35455316,360,Issue,"BTW, there's an alternate way to create a pull request using an issue number: It looks like this PR doesn't support that. Perhaps we can log another issue for that just to track it.",,,,,,
35456499,360,Issue,you mean this?  :trollface:,,,,,,
35456590,360,Issue,"Lo and behold! Once again, you are way ahead of me Mr. .",,,,,,
33929678,359,Issue,"Might be worth explaining what publish the branch to GitHub means perhaps with an example like other cases: `git push origin your-branch-name`.:thumbsup: It might be worth linking to the ReSharper team settings too.They're kinda boring, but I'll call out some of the non-standard things we do in a **Coding Style** section.",,,,,,
33933171,359,Issue,A common sentiment I hear from developers who want to help in open source is that they simply don't know where to start. They say they're missing two things: a) pointers to how the code is organized and b) pointers to areas that could use help the most / have the most obvious low-hanging fruit that could get a novice started.,,,,,,
33933985,359,Issue,:+1:It looks good. I noticed you mention the integration tests in the readme but maybe it's good to do it in the contributing guidelines as well?,,,,,,
33935409,359,Issue,"Ok, so I'm organising these files into three documents:- README - the introduction, what people see first- CONTRIBUTING - the nuts and bolts of the project- DEPLOYMENT - the ""how to ship a release"" stepsI think that should cover the three audiences (visitor, interested/contributor and the person doing the release)",,,,,,
34003862,359,Issue,"In `CONTRIBUTING.md`, maybe we could mention the use of WIP PRs with a TODO list and how that is useful as it'll show that someone is working on an issue, and also helps the contributor to think about what needs to be done.Or, to put a comment in the issue they have decided to work on.",,,,,,
37891865,359,Issue,"Ok, I'm gonna merge this in and address the git-specific issue in another PR.",,,,,,
33912727,358,Issue,Thanks !,,,,,,
33894342,357,Issue,Looks great! :cake:,,,,,,
34592766,356,Issue,"Looks like we've had some overlap with #323, which I've just merged into master.I've left the DELETE task open here #366 as there's a couple of questions about it.",,,,,,
47604952,355,Issue,"Hi , do you have interest in finishing the work for this PR? This would be nice to get in an upcoming release.",,,,,,
47630092,355,Issue,", certainly - sorry for the six month delay. I've fixed the method arguments, updated the `IObservableOrganizationsClient` and did other small things to make the build and tests pass.However, the AppVeyor fails with the error _""Specify which project or solution file to use because the folder contains more than one project or solution file.""_. Is this an error on my end?",,,,,,
47672277,355,Issue,that's not an error on your end.,,,,,,
48680763,355,Issue,Thanks  ![],,,,,,
33741438,354,Issue,when you get a moment. :),,,,,,
33760026,354,Issue,Always be fixing dem projects...,,,,,,
33760658,354,Issue,Is that something we could (possibly) include as a post build task in the project file...?,,,,,,
33763261,354,Issue,"Is that something we could (possibly) include as a post build task in the project file...?I'm kinda on the fence about this, but I'm definitely biased (as I've been involved with writing all the scripts for Octokit).If someone wants to take a stab at it I'm happy to review and see how it fits with my workflow...",,,,,,
33732724,353,Issue,"Just a note: you would create the topic branch off the `master` branch in your fork, and then send the PR from that topic branch to the `master` branch of the main repo.",,,,,,
33733617,353,Issue,K. I see it now - I must have missed that the first time in  [guidelines for contributing] Push your changes to a topic branch in **your fork** *of the repository.I'm very new at this.,,,,,,
33747085,353,Issue,I'm very new at this.All good - we were all newbies once :grinning:,,,,,,
33763736,353,Issue,thanks for the patch! ![kanye-approves]I think those contributing guidelines need some :heart: because it's been a while since we initially wrote them.,,,,,,
33649481,352,Issue,"For reference, this is how Octokit.objc does it: Maybe our clients need to return response objects and not just the actual entities.",,,,,,
33649836,352,Issue,"Maybe our clients need to return response objects and not just the actual entitiesI think that's the best place to put this data. It kinda sucks, but a simple abstraction to expose the HTTP data is the easiest way to do it:How this mixes with our `Task` responses is probably something worth spiking - I think it's a rather significant change...",,,,,,
33665608,352,Issue,"I kinda like what they have going on over in `octokit.rb` for this, akin to exposing an `IResponse GetLastResponse()` method/property/whatnot either on the connection or the client.Snipped from the  readme",,,,,,
33666482,352,Issue,"Pretty sure this approach will still cause issues with the reactive client methods that go through `GetAndFlattenAllPages` since there's no simple way to know when there's a new last IResponse available.Unless you expose an `IObservable Responses { get; }` on the reactive clients. Although initially that just sounds silly, I'll let it simmer.",,,,,,
33687925,352,Issue,"Ok, I woke up at 5 AM with a bit of inspiration about this I want to run by you. :smile:Let's take a step back and think about what the purpose of etags are in the first place. For the most part, they make caches more efficient in order to reduce bandwidth. They potentially reduce load on the server if the server has an efficient means to determine whether an entity has changed.So why should a client to Octokit.net care? Well, it allows them to make [conditional requests] which don't count against their rate limit. But this is a lot of work for a client to manage properly.**What if we did it for them?**We could maintain an in-memory cache of requests and responses indexed by etag. So if you call `GetRepositoriesForCurrent`, we'd make a conditional request and if it's not modified, we'd return the set from the cache.This in-memory cache could be replaced with other implementations. For example, you could inject a SQLite backed cache instead of an in-memory one.We don't have to be a perfect cache to be effective. We could use the most recently used approach if memory consumption was crazy. Alternatively, we could just automatically cache the etag (and not the response data) and just provide a method to make the conditional request test. This would allow clients to test if their cache is up to date.",,,,,,
33697285,352,Issue,"I didn't wake up at 5am! Mainly because I didn't get to bed until 1.But this pretty much covers what I was thinking as I was falling asleep. Just caching request/response pairs.Although I was envisioning a setup where the client was simply given the option to turn on/off caching and then optionally change the ""cache provider"" (i.e. the in-memory, file system, SQLite alternatives) Also possibly make the cache modular in some way so that you could share a cache between client instances. Not sure if people are going to be constructing clients left and right.",,,,,,
33711468,352,Issue,#NAME?,,,,,,
34788856,352,Issue,/cc  for your thoughts. Sounds like we might be able to plug-in Akavache.Http.,,,,,,
34789767,352,Issue,"I think there's a place for 's idea of `Response` regardless of etags, but I also like the idea of a cache provider for requests along the lines of what you describe. I think not caching at all is the best default behavior, but making it easy to ""turn on"" simple caching (like what you describe) or drop in your own cache provider would be pretty sweet.",,,,,,
48082297,352,Issue,I have a naive implementation of the discussed approach at,,,,,,
112396614,352,Issue,"Fun fact: we currently have this `IApiRespose` type which captures the relevant fields to do this:The part that I don't think we've tackled is how to apply the ETag on subsequent requests. I like pushing this down to the HTTP layer, so perhaps a wrapper like `Octokit.Caching` is still the way to go.Anyway, I'm leaning towards doing more `HttpMessageHandler`-based stuff through things like #808 - taking that to it's logical conclusion would likely support something like this...",,,,,,
113786813,352,Issue,If you plug in [Tavis.HttpCache] it will transparently take advantage of Etags/LastModified assuming you allow the response to be privately cached.  It will automatically convert a GET into a conditional if the cached response is stale and will serve the response from the cache if a 304 comes back.,,,,,,
535312267,352,Issue,"pointed me at this issue from #1636 where I added a big +1 to the issue of dealing with etags/last-modified.  mentioned that folks want support for this for caching, but for me the other big one (and the reason I commented in the first place) was dealing with concurrency issues.In my scenario I have GitHub spraying events at a webhook endpoint which dynamically scales and I have no real control over which endpoint gets the request. So the ability to query to see whether a change has occurred since I read an entity from GitHub allows me to introduce some serialization in an effort to enforce consistency (this is causing me some grief right now with check runs).For caching I think the ApiConnection support that exists today is _okay_ provided you don't have multiple threads rolling through the same GitHub client (I'm not sure if there are any protections for this already). But having something that is attached to the response or entities would be useful.The way I was thinking about this API was that it would be done via the entities, so you might end up with something like this:Behind the scenes, all types that participate in concurrency control would implement an interface which the client can use when making the request to set the appropriate headers. The act of constructing  passing in the  instance is signalling that you want to participate in the currency checks.When a request fails because of this an exception would be thrown so that the developer could react - but there would also be a non-exception version of the API, for example:Ideally you could use ETags instead of date time stamps for concurrency control as it provides stronger guarantees (making an assumption here about the GitHub backend) - but the interface that the entities implement would allow them to signal the kind of concurrency control they support.",,,,,,
33647224,351,Issue,![580],,,,,,
33646933,350,Issue,Can you run `.\Build FixProjects` to add the new files to the Mono\* projects?,,,,,,
33647782,350,Issue,Done,,,,,,
33649845,350,Issue,"Aside from merging master into here to resolve the csproj differences, I've got nothing else to say about this PR. Thanks for the work!![elmo]",,,,,,
33651158,350,Issue,"Whoops, sorted",,,,,,
33631206,349,Issue,Or perhaps not. Cannot publish my branch. Contributing does not seem as straightforward as  leads one to believe. Sigh!,,,,,,
33634753,349,Issue,"I think I know this one (I'm awful at batch files basically), so I'm glad you found it!Re: contributing, it sounds like a permissions issue. If you [fork the Octokit.net repo] and push your branch to your fork, you can then [send us a pull request] with the change.Happy to work through any other headaches you have getting started!",,,,,,
33855272,349,Issue,Fixed via #353,,,,,,
33631296,348,Issue,:+1:,,,,,,
33633749,348,Issue,:+1:,,,,,,
33634055,348,Issue,"![do-it]Wait, I mean :thumbsup:",,,,,,
33606702,347,Issue,:+1:,,,,,,
33631380,347,Issue,:+1:,,,,,,
33634504,347,Issue,Agreed. In addition to the ease of composing queries it also gives thecompositions clearer semantic meaning. That and it always feels niceto reduce the use of primitives.,,,,,,
33635199,347,Issue,"![ap07e]Sounds great, let's do it!",,,,,,
78211630,347,Issue,"Looking back on this, I'm kinda neutral on the idea.Can we think about some other areas here where things can be improved?",,,,,,
112397188,347,Issue,This has been sitting here a while. Please drop a comment in here if someone gets sufficiently caremad enough to tackle this.,,,,,,
34378867,346,Issue,Relates to #361,,,,,,
34631773,346,Issue,This should be closed.,,,,,,
33648088,345,Issue,"If you merge `master` into your branch, that test will pass. Not sure why it's like that...![]",,,,,,
33670314,345,Issue,I merged master into my branch and I see no changes. CheckClientInterfaces fails as before. Something is rotten here :).,,,,,,
33671961,345,Issue,"CheckClientInterfaces fails as before. Something is rotten here :).That wasn't the test I was referring to - see the [CI server output here].Anyway, running it again. Let's see how this goes...",,,,,,
33673371,345,Issue,"I see now :). Well, after I merged master, I ran the unit tests again and they all pass.",,,,,,
33885268,345,Issue,Is there a reason this is a separate project and not just part of our existing unit test suite?,,,,,,
33894338,345,Issue,"Is there a reason this is a separate project and not just part of our existing unit test suite?I wanted to run this like we do `CheckProjects` - so instead of running all the tests, you just run this one test (or perhaps just the convention tests).",,,,,,
33925537,345,Issue,"Is that because these currently fail? It seems like these should be a part of our regular unit tests. They're kind of different than `CheckProjects` in that these are directly related to the design of our code much like our unit tests are. But if there's good reasons to keep them separated, that's :cool: too.",,,,,,
33925716,345,Issue,"Is that because these currently fail?I suspect so, but that's probably because we missed some coding conventions. But we're testing that the API surface is consistent here, rather than the behaviour of components - that's why I'm leaning towards testing these at a different spot...",,,,,,
33978030,345,Issue,"I guess as long as they're in the build, that's fine. My only concern is a practical one. Tests that aren't in the unit test project don't get run as often. For slow tests such as integration tests, that's fine.But for tests like these, that means people won't find they've broken the conventions until they push and we run the test suite for them using QED. Most people are not likely to see them. But I could be wrong. Maybe folks run all tests all the time?In any case, just an observation. Carry on. It's nice to have such tests at all. :)",,,,,,
34338155,345,Issue,Can we merge this with #346? Because in order to implement that one I had to refactor a little.,,,,,,
34377389,345,Issue,"if we include this as it's own step in the `.\build` script, is that a good compromise?",,,,,,
34377800,345,Issue,![],,,,,,
34379087,345,Issue,This has been merged in. I've also opened #361 to track the failing convention tests.,,,,,,
33397588,344,Issue,Looking good so far. Just realized this is still WIP. :),,,,,,
33424192,344,Issue,"Thanks, always good to get an early review done, gives me more time to fix it up :grin:",,,,,,
34433970,344,Issue,"Just adding some integration tests, other than that this is ready for review.",,,,,,
34460329,344,Issue,Feel free to add the integration tests in another PR. Nice work! :thumbsup:,,,,,,
33338136,343,Issue,"I'm not quite sure about the naming of the API client, maybe `FollowersClient` would be a better name...feedback appreciated. :sparkles:",,,,,,
33342012,343,Issue,This is pretty much ready for a review while I write up some integration tests :smile:cc,,,,,,
33529506,343,Issue,"I'm not quite sure about the naming of the API client, maybe FollowersClient would be a better name...As **Followers** are a concept only relevant to users - you can have [watchers] and [stargazers] on repositories - I'm happy to simplify it to `IFollowersClient`",,,,,,
33530739,343,Issue,:+1: I'll get on that tonight,,,,,,
33578139,343,Issue,I think that should do it now :smile:,,,,,,
33673098,343,Issue,Here goes :pray:,,,,,,
33842711,343,Issue,"when you got a :hourglass_flowing_sand: could you cast your :eyes: over this one, I've merged in the latest changes from `master` so this should be :white_check_mark: now",,,,,,
33855435,343,Issue,The build is sad...,,,,,,
33859423,343,Issue,Dem projects got me again :'(---From: Brendan ForsterSent: 1/02/2014 10:07To: octokit/octokit.netCc: Henrik AnderssonSubject: Re: [octokit.net] Implement User Followers API (#343)The build is sad...---Reply to this email directly or view it on GitHub:,,,,,,
33887863,343,Issue,"![]Nice! Very clean. If you don't mind, I made some comments about the lack of comments. If you have time to address those in another PR, that'd be great.",,,,,,
33888965,343,Issue,"Yep I'll address your comments in a separate PR :-)---From: Phil HaackSent: 2/02/2014 10:18To: octokit/octokit.netCc: Henrik AnderssonSubject: Re: [octokit.net] Implement User Followers API (#343)![]Nice! Very clean. If you don't mind, I made some comments about the lack of comments. If you have time to address those in another PR, that'd be great.---Reply to this email directly or view it on GitHub:",,,,,,
33222097,342,Issue,"Reproduced for CreatesANewPublicRepository from outside VS.POST /orgs/testbal-org/repos HTTP/1.1{""name"":""public-org-repo-20140124012209011""}HTTP/1.1 404 Not Found{""message"":""Not Found"",""documentation_url"":""""}",,,,,,
33276421,342,Issue,"Unless you're user account that is used by the unit tests is a paid account (which has private repos available) `CreatesANewPrivateRepository` will always fail. fails for me as well, I'll investigate.",,,,,,
33276932,342,Issue,"<- that has something to do with it...unless you've created a test organisation on GitHub already (`var orgLogin = Helper.UserName + ""-org"";`) this will fail until that TODO is actioned, and it looks like there currently is no way to create an organisation using the API (or I am blind)?  I created a test organisation within my test user account and re-ran the test and it runs successfully.",,,,,,
33350805,342,Issue,"The same here. Maybe I shouldn't close the issue, so we have a record of why these tests fail.",,,,,,
33419363,342,Issue,"it looks like there currently is no way to create an organisation using the API (or I am blind)?Correct  Maybe I shouldn't close the issue, so we have a record of why these tests fail.+:100:",,,,,,
33422624,342,Issue,I like how this issue is labelled as `easy-fix` :stuck_out_tongue_winking_eye: :+1: for keeping this open,,,,,,
33423503,342,Issue,"I like how this issue is labelled as `easy-fix` :stuck_out_tongue_winking_eye:Oops, fixed",,,,,,
78212238,342,Issue,was moved over to `[PaidAccountTest]` in .  was moved over to `[OrganizationTest]` in .I think that's all that needed to be done here. :hocho:,,,,,,
65133213,340,Issue,Aren't those implemented under the [ISshKeysClient]?,,,,,,
65134875,340,Issue,Indeed! Marking as completed!,,,,,,
53224708,337,Issue,Nobody is working on this right? Can I start with this issue? I'm completely new to the project though. Would starting a new [WIP] PR with questions/concerns be the best approach? Thoughts  & ?,,,,,,
53228174,337,Issue,you may as well just ask questions here,,,,,,
33283295,336,Issue,#313 implements this,,,,,,
101493326,336,Issue,Actually completed in #776 and will go out in v0.12.0,,,,,,
37969129,334,Issue,Nooooo! This is not in yet? Has someone started on this? :smile:,,,,,,
37975136,334,Issue,"Someone has started it, here ->",,,,,,
78035217,334,Issue,This finally landed in #649,,,,,,
48726386,333,Issue,This can be closed now.  I completed the outstanding item in #529,,,,,,
36138401,331,Issue,"I started working on this issue and ran into something I wanted your feedback on.I am implementing the ""Get Team"" part of the API.  In the Octokit.ApiUrls class, there is already a method called ""TeamsUpdateOrDelete"".  The Uri for getting a team is also the same Uri as updating and deleting a team.  I'd rather not reference the method ""TeamsUpdateOrDelete"" in the TeamsClient.Get method I am implementing as I think it would cause confusion later on.I came up with two options and wanted your opinions on them or if you think a better approach is available:- Rename the ""TeamsUpdateOrDelete"" method to ""Team""- Create a new ""GetTeam"" or ""Team"" method.  Now granted, doing it this way would introduce two methods that retrieve the same Uri.  I'm not sure how I feel about this option.I was leaning more towards option 1, but I defer to you now rather than later in the PR.Thanks.",,,,,,
36138695,331,Issue,"‚Ä¢Rename the ""TeamsUpdateOrDelete"" method to ""Team"":+1:My vote would be for that as Uri's are about resources and the resource being identified is a team",,,,,,
36151034,331,Issue,"What  said. If there are other URL methods misnamed like this, we should fix those in a separate PR. :)",,,,,,
36163536,331,Issue,Would you guys prefer something like this method renaming be done in a PR separate from the new features in issue 331?,,,,,,
36163830,331,Issue,"For this specific rename, do it in your PR for #331. If you find other misnamed methods, I'd prefer that be done in a separate PR.",,,,,,
36164090,331,Issue,Thanks!,,,,,,
36182062,331,Issue,"So I finished working on the first part of this issue that ""gets a team"".  Everything in the build.cmd script works fine except for when I run the integration tests.  FYI, I created a ""test"" GitHub account and added the username and password as Environment variables on my Windows machine.There seem to be a bunch of them failing that don't seem related to the teams stuff I worked on.For example:- PullRequestsClientTests.CanBeMerged [FAIL] > Octokit.ApiException : Pull Request is not mergeable.I forked from the master branch of Octokit.NET.  I had an assumption that everything would work, but maybe I did something wrong?  None of the files generating the integration errors had changes in any of my commits.Does this sound like I'm doing something wrong?",,,,,,
36182915,331,Issue,"Some of them will be failing, specifically ones that require a paid account. Not sure about the one you're mentioning specifically as I haven't had a look at it yet. But I would say that you're probably safe :)",,,,,,
36183548,331,Issue,"Ok.  Sorry to keep bugging your team, but this is my first time contributing to this project.Is it okay to do a PR for just the first bullet on this issue or would you like me to complete the entire issue?",,,,,,
36184408,331,Issue,Not bugging anyone :) You can always start your PR as a work in progress and see where it goes from there. Just add WIP to the title of your PR.,,,,,,
36297774,331,Issue,"I noticed that one of the clients _OrganizationsClient_ has xUnit tests in Octokit.Tests, but no integration tests in Octokit.Tests.Integration.I made a test class in Octokit.Tests to pass the build script.  Did you want or require me to create integration tests for the Teams code I'm working on in this issue?",,,,,,
36298990,331,Issue,"If it's possible to write an integration test, we would definitely prefer it. You could do it in a separate PR if you want to get the code in. We haven't been requiring them because in some cases, they're very hard to get set up. But it would make us smile to have them.",,,,,,
36299858,331,Issue,I'll do the integration tests in a separate PR down the road.,,,,,,
112385980,331,Issue,Closing this out as #795 completed the missing bits,,,,,,
83999664,330,Issue,This has been fixed,,,,,,
52426686,326,Issue,I've taken a crack at these in #558,,,,,,
59036716,326,Issue,Closing this out. Thanks !,,,,,,
35787075,325,Issue,The #386 pull request should close this issue.,,,,,,
35787274,325,Issue,"Thanks! In the future, put ""closes #386"" in your commit message or in the PR message and merging the PR will automatically close the issue. :smile:",,,,,,
35787523,325,Issue,Thanks! Will do.,,,,,,
33195670,324,Issue,:thumbsup:,,,,,,
33300093,324,Issue,"just pushed a little fix to turn of xUnit's verbose output for unit tests, so you don't see the `Tests complete: X of Y` noise when browsing for failing tests...",,,,,,
33334197,324,Issue,Nice! :shipit:,,,,,,
33153779,323,Issue,Also looks as if this was already implemented in a different pull request.Should have checked and not just put my trust in the list :),,,,,,
33154072,323,Issue,"I really need to go back and revive those PRs that are languishing there, unloved...",,,,,,
33154901,323,Issue,"I'll update this to just add the Add method, however the current implementation has it sitting on the `UsersClient` and I created a separate `UserEmailsClient` for it.Do we want to keep them on the `UsersClient` or should it be on a separate client as the API structure would suggest?",,,,,,
33164645,323,Issue,"I really need to go back and revive those PRs that are languishing there, unloved...Their cries keep me up at night!If it helps at all I can have a look at some of the ones that aren't mine and at least give a :+1:  or :-1: (I could possibly even be nice and give suggestions/comments rather than just a thumbs down)",,,,,,
33887604,323,Issue,Sorry about the delay haven't been able to get around to it until now.,,,,,,
34554483,323,Issue,I think this has everything in it now. Except for the `Delete` method not being implemented because of the issues mentioned above.- [x] Client- [x] ReactiveClient- [x] Documentation comments- [x] Unit tests- [x] Integration tests- [x] DebuggerDisplay on EmailAddress.,,,,,,
34555223,323,Issue,I'm receiving the following two errors when trying to run build.cmd all of a suddenand,,,,,,
34555305,323,Issue,Apparently the above two messages was because I had a custom environmental variable set called MSBUILD that pointed to that directory. Something I had set up for a different build.,,,,,,
33066529,322,Issue,"We have a precedence for little enhancements like this: So I'm not opposed to it if it _feels_ core. Like it's a very very common scenario. But if we start to see too many of these, we may want to consider another wrapper library. But for now, I wouldn't be opposed to putting something like this in `Octokit.csproj`.",,,,,,
33066875,322,Issue,Extensions are fine when they work across all the platforms supported.The problem with the snippet above is that it depends on `WebAuthenticationBroker` which is Win8-specific. Moving to PCLs will kill off our ability to #ifdef in functionality like this at all.,,,,,,
33067157,322,Issue,"Ah, so this _has_ to be in a separate Octokit.Win8 library. But correct me if I'm wrong, is the actual behavior Win 8 specific? Or does it just happen to use Win8 specific libraries but could be generalized?",,,,,,
33067872,322,Issue,"showing a browser and getting some data from the result of the user's interaction is what the class does - we could hide that behind an abstraction (I know  has shown how to do that with PCLs before) but it then means we need to write a similar abstraction for desktop.In the short term perhaps shipping a `Octokit.WindowsRuntime` project might be easier - when multiple platforms want it, then we revisit generalizing the feature...",,,,,,
33068647,322,Issue,"showing a browser and getting some data from the result of the user's interaction is what the class doesAh, that seems important since that's the preferred approach for OAuth when it comes to 3rd party apps. So if we did that generically, I'd want it in Octokit core. I'm wondering if this `Octokit.WindowsRuntime` library is important enough for us to bother with it. Is there a demand?",,,,,,
33089497,322,Issue,Is there a demand?I'll leave it up to everyone else. I'm just trying to think a couple of steps ahead...,,,,,,
33091364,322,Issue,"Look at you, always skating to where the puck is going.![]",,,,,,
33103508,322,Issue,"I don't think that you absolutely have to supply an implementation of the abstraction on all the platforms you support.  On other platforms you can require the user to supply the implementation of the abstraction if needed.  Certainly it would be nice if you did it for all platforms, but better to have an in-the-box implementation in just WinStore than none at all.I think it would be great to have a library that supplied a portable way of doing OAuth.  Maybe this could go in , or it could be its own thing.Here's a great post on how to deal with this kind of stuff:",,,,,,
112400708,322,Issue,It's been a while since this thread last had any activity.I think the push towards doing more with `HttpMessageHandler` that's available to the consumer to craft and control means we can keep the library simpler.Please chime in over on #781 if you have any ideas for scenarios we should keep in mind.,,,,,,
33040777,320,Issue,Seems legit. I can do this today.,,,,,,
33058715,320,Issue,Forever uploading... :(,,,,,,
33065845,320,Issue,hmm...something went horribly wrong this morning clearly :confused: It was supposed to be a Carlton from Fresh Prince dance gif...not forever uploading..I blame Telstra!,,,,,,
33065986,320,Issue,"Oh, and it's LIVE! LIVE! LIVE!",,,,,,
33066407,320,Issue,![carlton dance 3 gif],,,,,,
33047009,319,Issue,"I think `RepositoryTag` is fine since this is the only place that I could find where this structure is used. If there were more than one place, then a more generic name would be appropriate.",,,,,,
33050238,319,Issue,"I guess that's what I get for copying existing comments and then modifying them. Forgot to remove the first ""the"". And apparently I did it for all of the comments that have the same format. I'll sort that out after work.",,,,,,
33052495,319,Issue,"Or maybe on the lunch break, because waiting until after work is just too long.",,,,,,
34602248,319,Issue,"Regarding AssertEx.DoesNotAllowNullArguments and DoesNotAllowEmptyStringArguments.I put these in here simply as a way to put the idea forward. I probably should have put them in their own pull request. I got carried away, my bad.If it's not something we're interested in I'll take them out and replace with the old tests for ensures.",,,,,,
34602387,319,Issue,"I put these in here simply as a way to put the idea forward. I probably should have put them in their own pull request. I got carried away, my bad.Let's address those separately - personally I don't mind seeing the `null` parameters there, but I'm open to alternatives...",,,,,,
34605818,319,Issue,Removed the assertion methods and cleaned up the commits.,,,,,,
35349435,319,Issue,"Ok, I think this one is good to go. Merge master in and :boom:",,,,,,
35351096,319,Issue,merged~,,,,,,
35351142,319,Issue,I did just realize that I didn't add a `DebuggerDisplayAttribute` on the `RepositoryUpdate` class however,,,,,,
35351598,319,Issue,Should be all done now,,,,,,
32980079,318,Issue,My gut feeling is that it's a security measure to prevent leakage of sensitive data - I can call this on an account which isn't a member of the repo and get the same thing. cc,,,,,,
32980644,318,Issue,So just a somewhat misleading response but at least functional :) Guess that means an integration test would have to be quite a lot more involved. Since the `ITeamsClient` isn't implemented yet I'll just scrap it for now.,,,,,,
32981039,318,Issue,"You have to be an admin for the repository to see the teams. We `404` in many places in the API to prevent leaking private repositories, though `403` might be a better option in this case.",,,,,,
32981212,318,Issue,"yep, it's a public repo so a `403` definitely makes sense here",,,,,,
32982227,318,Issue,"Of course, that all makes a lot more sense now. I had completely forgotten about private repositories and was wondering how giving a more descriptive http response code would give away any sensitive data.",,,,,,
33014143,317,Issue,"I can take this. ConventionTests depends upon ApprovalTests, Castle and NUnit. It might be easier to do it by hand or customize the generated code.",,,,,,
33041731,317,Issue,"Yeah, with reflection and linq, these types of tests are really easy to write. Sometimes you run into weird tricky cases, but a few choice extension methods can help clean those up.",,,,,,
33129248,317,Issue,"Many interfaces fail the test, but I don't see false positives.",,,,,,
33156341,317,Issue,"looking good, couple of ideas for what to do next:- could we isolate this under a `[Trait]` from xUnitContrib so it won't run by default with the existing tests- could this be a FAKE step, like `CheckClients` which runs this test and lets you see which projects are failing",,,,,,
33220623,317,Issue,Maybe I'm missing something but I don't see how you can specify a trait to exclude.,,,,,,
33259788,317,Issue,"Right, I might have been imagining that. The alternative would be to create a `Octokit.Conventions` project which we can run using the existing xUnit script.",,,,,,
33297587,317,Issue,Another interesting test to investigate:,,,,,,
33353175,317,Issue,"Sorry, but I'm missing your point about RepositoryHookConfiguration.I know it's a hack, but rather than create a separate project it would be easier to simply comment the Fact attribute on the method. It's only run on demand after all.",,,,,,
33420699,317,Issue,"Sorry, but I'm missing your point about RepositoryHookConfiguration.My bad, I should have been clearer.Someone opened a PR where they annotated their model classes with `[DebuggerDisplay]` attributes. I'm probably getting ahead of myself (as in, I don't have a consensus from the contributors here whether they're :thumbsup: or :thumbsdown: on it) here but it'd be nice to do this across the codebase to make the debug experience nicer. I know it's a hack, but rather than create a separate project it would be easier to simply comment the Fact attribute on the method. Ok, we can address that in a separate PR. It's only run on demand after all.Yep, but I'm lazy and don't really want to remember to uncomment it and recompile the thing. :grinning:",,,,,,
33434673,317,Issue,DebuggerDisplay all the things!,,,,,,
33435447,317,Issue,:+1:  on `DebuggerDisplay`,,,,,,
34972590,317,Issue,This should be closed.,,,,,,
34973087,317,Issue,In because peer pressure,,,,,,
32940474,316,Issue,"Typos in commit messages are pretty bawse, wtb spellcheck?Want me to fix the message and redo or just want to fix it when you merge it in? Assuming there's some way to replace my commit message at that point.",,,,,,
32940611,316,Issue,Go ahead and fix in your branch.,,,,,,
32940624,316,Issue,`git commit --amend` like it never even happened :trollface:,,,,,,
32952094,316,Issue,"I'd still have to delete the remote branch and PR though, right? Or am I missing some git magic?",,,,,,
32954219,316,Issue,"Use the Force (Push), Luke!",,,,,,
32955122,316,Issue,voodoo! done :),,,,,,
33050462,316,Issue,![1162],,,,,,
32912181,315,Issue,"You know what? I don't even care that this is just for a single method. This is great, have a gif!![]Thanks for the contribution!",,,,,,
32913871,315,Issue,"Figured I'd do a client at a time, that one only had one method  missing ;)",,,,,,
32783115,314,Issue,Thanks Steffen!,,,,,,
32720362,313,Issue,"thanks for starting this one off.One of the design goals we've been aiming for with Octokit is to structure these clients to mirror the Documentation structure (i.e. the sidebar here: )As you can:- get all hooks- get a single hook- create a hook- edit a hook- delete a hook- test a hookI think it's worth extracting this code into a `IHooksClient` (or whatever name makes sense). You don't have to implement all these right now, but it'd make that sample become:",,,,,,
32722827,313,Issue,I thought similar; just wanted to make a small change to get started. I'll work on the basis you suggest.,,,,,,
32764277,313,Issue,I've refactored to a RepositoryClient.Hooks approach; I've also implemented GetHookById and will be adding in other methods (currently throwing NotImplementedException from the client). Can you feedback on the approach to the RepositoryClient.Hooks while I implement the others?,,,,,,
32782633,313,Issue,"I have added further method implementations; I have a concern around the _TEST_ method which requires a 0 byte body to be sent it seems; I've implemented this with an empty stub class as the Post body, which works in my production environment but please do review the implementation in terms of style.",,,,,,
33297324,313,Issue,_[EDIT] added link to relevant issues_,,,,,,
33297497,313,Issue,![]Looks like some files are missing from the `Forks` components...,,,,,,
35299833,313,Issue,Any further work required following git add snafu?,,,,,,
35348824,313,Issue,"It's looking good. Unfortunately there's been a lot of change in `master` since you started this, so they need to be updated before I can merge this in.",,,,,,
35404860,313,Issue,"I've added a merge in from the upstream master, it pulled in some mono assembly that I had an issue with file copying (linking?) via the csproj, but that has been resolved now. Hopefully this is now merge compatible.",,,,,,
35409301,313,Issue,"Hmm, this failed the build. Try running `.\build.cmd` and see if it adds the Mono files to the right projects. Then commit those changes to your branch.",,,,,,
35600226,313,Issue,--c597449 fixes it up; the build.cmd now works locally.,,,,,,
43544421,313,Issue,Can I pick this up ? I'd like to get this functionality in.,,,,,,
43545911,313,Issue,Sure!Sent from my Windows Phone---From: John Du Hartmailto:notifications.comSent: √Ω19/√Ω05/√Ω2014 20:17To: octokit/octokit.netmailto:octokit.net.github.comCc: Andy Crossmailto:andy.comSubject: Re: [octokit.net] Implement Repository Hooks & Repository Forks (#313)Can I pick this up ://github.com/AndyCross? I'd like to get this functionality in.‚ÄîReply to this email directly or view it on GitHub.,,,,,,
47604785,313,Issue,This was picked up by  in #495.,,,,,,
32719849,312,Issue,I failed to update the RX component.,,,,,,
32720402,312,Issue,ProTip: once you open a PR you can push new commits to your branch and the PR will automagically update to include them.,,,,,,
32691908,311,Issue,Your use of not-completely-finished PRs with TODOs is :sparkling_heart: +:100:,,,,,,
32692937,311,Issue,"Well, I've learnt from the best :grinning: :heart:",,,,,,
33049722,311,Issue,Thanks!,,,,,,
32631144,310,Issue,Upon reading this I realised that this `GetEmails` method is not aligned with the other methods we have which return collections.It should be this (in `IUsersClient`):Update the implementation to the same signature and you can use `.GetAll` and thus not worry about modifying SimpleJson.,,,,,,
32831321,310,Issue,I think it's done.,,,,,,
33004293,310,Issue,Done.,,,,,,
33042267,310,Issue,"One last little fix:This test should now check for `GetAll`, not `Get`",,,,,,
33105788,310,Issue,"Done :) But two tests fail. CreatesANewPrivateRepository with ""422 Unprocessable EntityValidation Failed name can't be private. You are over your quota."" and CreatesANewPublicRepository with ""404 Not Found"". It seems unrelated.",,,,,,
33153311,310,Issue,I think this might be related to the test account used. Can you open a separate issue for that so we can investigate further?,,,,,,
32483144,309,Issue,Thanks!,,,,,,
32556374,307,Issue,Organization Members? (as per ),,,,,,
36840921,307,Issue,Public Gists,,,,,,
37983128,307,Issue,Look at all these new endpoints,,,,,,
37989075,307,Issue,Keeping us busy!![],,,,,,
39405521,307,Issue,"Oh man, I need this for organization members.",,,,,,
39461688,307,Issue,You should be able to put this parameter on every request without ill effect.,,,,,,
48149109,307,Issue,Gonna punt on this and do it incrementally.,,,,,,
32490314,306,Issue,I was actually thinking of maybe making it easy to set the `IWebProxy` on the top `IGitHubClient` object. But that's based on an assumption that no matter what you used to implement `IHttpClient` it would support `IWebProxy`.,,,,,,
32490328,306,Issue,But I'm :thumbsup: for this for now. :),,,,,,
32491067,306,Issue,I was actually thinking of maybe making it easy to set the `IWebProxy` on the top `IGitHubClient` object. With how `Connection` and `IHttpClient` interact I think it's gonna be a bit of a mess to setup internally for small gains.So is that a :ship: or are you still pondering this?,,,,,,
32492475,306,Issue,Pondering? That's too much credit for what I'm doing.:shipit::ship: it,,,,,,
32311998,305,Issue,:shipit:,,,,,,
32236385,304,Issue,Moving this to #107,,,,,,
32182981,302,Issue,So you could define your own implementation of `IHttpClient` which accepts a proxy server configuration: And then this snippet is how you can inject it into a `GitHubClient`:I'll leave this issue open to see if we can make this easier to inject...,,,,,,
32302588,302,Issue,"Yeah, I think we should make this easier to inject. That's pretty ugly, but at least it's possible now. :)",,,,,,
32302949,302,Issue,So what about these two changes?- an overload to pass in a custom `IHttpClient` - along with the `ProductHeaderValue` to the `Connection` ctor- bring in that custom `IHttpClient` in the gist,,,,,,
32399437,302,Issue,Could we start with just making it easier to inject the `IWebProxy`,,,,,,
32420339,302,Issue,as in an optional constructor into `HttpClientAdapter`? Sure,,,,,,
32431823,302,Issue,#302 has been reworked to drop the need to create a different type for supporting proxies,,,,,,
32155786,301,Issue,"The reason for sort:All searches - Search/Repo, Search/Users, Search/Issues, Search/Files have sort added to the query string, so we can get inherited class to simply pass us the string representation of whatever Sort means to them.",,,,,,
32155904,301,Issue,"Sounds good to me!---From: HaroonSent: 13/01/2014 19:38To: octokit/octokit.netCc: Henrik AnderssonSubject: [octokit.net] WIP: Base class for searching GitHub (#301)We are repeating a lot of logic inside the searches, hopefully this class will allow us to simply our searching.I will close  so we can keep our discussions on the octokit repo (if anyone else has any input).How do you want this to be merged?I have created the base class, so we can now iterate on it till it&#39;s right...Once this is merged - we can open a PR for every search to inherit from base class?  can then use it for his PR  and I can also use it for cc://   You can merge this Pull Request by running:  git pull  search-base-classOr you can view, comment on it, or merge it online at:  -- Commit Summary --- base class for searching-- File Changes ---- Patch Links -----Reply to this email directly or view it on GitHub:",,,,,,
32187079,301,Issue,"it still says ""WIP:"" in the PR - is there anything left to implement on this?:thumbsup: on this change, hopefully this tidies up a bunch of our boilerplate code",,,,,,
32221499,301,Issue,Nope... forgot to remove that. Was not sure if you wanted to add anything else to this.,,,,,,
32227079,301,Issue,removed the WIP... ready for review now.,,,,,,
32233909,301,Issue,"Given we already discussed a bunch of this over in , I don't have anything else really to find fault with.![thumbsup]",,,,,,
32129784,300,Issue,Whoa. Looks like that's missing a `Received` call.,,,,,,
32129866,300,Issue,"In fact, all these tests are suspect. :(",,,,,,
32129971,300,Issue,I'll fix it.,,,,,,
32135352,300,Issue,"That'd be my fault, sorry! :disappointed:",,,,,,
32136238,300,Issue,"No worries. I sent a PR with a fix. :)On Sun, Jan 12, 2014 at 1:54 PM, Henrik Anderssonnotifications.comwrote: That'd be my fault, sorry! [image: :disappointed:]  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
32146851,300,Issue,"To actually work wouldn't they have to `await` the call to `GetAll` to make sure that it has time to run.Which then opens up Pandora's box with a whole horde of other issues. Now that the code actually gets called the `NSubstitute` object quickly fails as it returns nulls in places where they are not allowed.In this case the first failure seems to be in `ConnectionExtensions.GetPages` and `IConnection`.The response requires a moderate amount of faking (`BodyAsObject`, `ApiInfo.GetNextPageUrl()` but `GetNextPageUrl` is also an extension method so we'd have to fake the `ApiInfo` rather than the method) while the connection requires less.Then build an actual `GitHubClient` using those. It starts to get quite tedious at this point and a lot of code for what seemingly should be simple tests.Been messing around some and we should be able to build a ""FakeConnectionBuilder"" that would be able to take a starting url and a collection of items, then automatically build the fake responses and connection from that.A simpler option would just be to convert `GetAndFlattenAllPages` to an interface method rather than an extension method. Since that is what's making it so hard to fake. But at that point we're really just testing how `GetAll` does something and the tests will have to change whenever implementation does.Unless I'm missing something really obvious these are seeming more and more as if they'll be a real chore to test.Hoping that I'm wrong.Anyway, it's now too late and my brain has stopped working.",,,,,,
32148093,300,Issue,"It's like populating a volume with enumerated objects, so if there's an arseload of clients in the GetAll, then it's going to take a while. This is going to be seriously looked at as, ""why are you querying me for how many I've got if you don't want to do anything to my contents"" and the program itself, were it sentient, would say you're wasting its time.If ConnectionExtensions.GetPages then queries those attached to those clients, further delaying the purposeless process, then the ""Stay-Alive"" purpose behind this do-nothing call should probably be stated, somehow. It still has a value in keeping a connection alive; perhaps the mistake is in the definitions.Kind of like relegating each program to it's own full-OS VM instead of assigning each app another username that has the option of messing up the base system. Ridiculous to fake at that point, when ""events"" return null; but only when simple TCP/IP services like pingback? (Y/N) then {verified} is easier than coming up with a whole new method that does fuck all.regards,-djmDate: Sun, 12 Jan 2014 21:51:34 -0800From: notifications.comTo: octokit.net.github.comSubject: Re: [octokit.net] Reactive client unit tests that do nothing (#300)To actually work wouldn't they have to await the call to GetAll to make sure that it has time to run.[Fact]public async Task RequestsCorrectUrl(){    var gitHubClient = Substitute.For();    var client = new ObservableEventsClient(gitHubClient);}Which then opens up Pandora's box with a whole horde of other issues. Now that the code actuallygets called the NSubstitute object quickly fails as it returns nulls in places where they are not allowed.In this case the first failure seems to be in ConnectionExtensions.GetPages and IConnection.The response requires a moderate amount of faking (BodyAsObject, ApiInfo.GetNextPageUrl() but GetNextPageUrl is also an extension method so we'd have to fake the ApiInfo rather than the method) while the connection requires less.Then build an actual GitHubClient using those. It starts to get quite tedious at this point and a lot of code for what seemingly should be simple tests.Been messing around some and we should be able to build a ""FakeConnectionBuilder"" that would be able to take a starting url and a collection of items, then automatically build the fake responses and connection from that.A simpler option would just be to convert GetAndFlattenAllPages to an interface method rather than an extension method. Since that is what's making it so hard to fake. But at that point we're really just testing how GetAll does something and the tests will have to change whenever implementation does.Unless I'm missing something really obvious these are seeming more and more as if they'll be a real chore to test.Hoping that I'm wrong.Anyway, it's now too late and my brain has stopped working.‚ÄîReply to this email directly or view it on GitHub.",,,,,,
32789416,300,Issue,"To actually work wouldn't they have to await the call to GetAll to make sure that it has time to run.Not for our unit tests. For our integration tests, that would be true. Our unit tests simply check that we call through to the connection correctly. We don't mock up the entire request chain.",,,,,,
32800364,300,Issue,"Our unit tests simply check that we call through to the connection correctlyYeah, I wasn't trying to imply that we should be mocking ""the internets! all of it!"". sorry if it came across as such.So the first flag that indicated to me that something was wrong here was when I rewrote the tests like soand then got this exceptionAs it turns out, NSubstitute gives you no help whatsoever with type parameters and my issue was that I did not change IReadOnlyList to List.(silly early post and edit because ctrl-enter is evil)Anyway, the above led me to have a quick look at the implementation of `GetAndFlattenAllPages`. Which at the time  looked to me as if even the first call to GetAsync was deferred (in which case it would never be called unless GetAll was awaited, etc etc), which just turns out to be wrong.",,,,,,
32802796,300,Issue,If jumping to conclusions was an Olympic sport that might have gotten me a spot in the games!,,,,,,
32940467,300,Issue,Ah! Cool. So we can close this issue then?,,,,,,
32951843,300,Issue,"Yeah, all done being wrong for now.",,,,,,
32952262,300,Issue,It's all good.![indiana-jones-idol-sand-bag],,,,,,
32107848,299,Issue,"I have a pull requests open here #284 which will enable you to use the one binary to target .NET45/Win8/WP8. It's a significant change, so I'm holding off until I can close out most of the outstanding pull requests.Is that what you're looking for?",,,,,,
32109095,299,Issue,"I am looking for a .xap file app of github somewhere in github, an official GH WP8 app.",,,,,,
32109170,299,Issue,"Is the same as Windows8 but in phone OS.hahahahahahahahahahahahahahaha I am looking for a .xap file app of github somewhere in github, an official GH WP8 app.GitHub doesn't have any plans to build an official WP8 app at the moment, but our mobile pages should work great with WP8 - try visiting github.com from your WP8 phone.",,,,,,
32117637,299,Issue,"I use GitHub on my WP8 phone, and I can't edit the files, when I change to desktop view to edit files, the style.css fails and the ""commit changes"" button does not work",,,,,,
38004454,299,Issue,"this repo is for working with the GitHub API, rather than the site itself.If there's something specific you're having issues with, please contact support.com so we can investigate further.",,,,,,
32090172,298,Issue,"Note to self, forgot to doc comment the ApiUrls.Doing that tomorrow.Also need to add remarks on some of the API methods with links to the documentation",,,,,,
32110361,298,Issue,Just document the interfaces and then run the `.\script\build` script and it'll apply the comments to the concrete class.,,,,,,
32110388,298,Issue,"I know, I built that. ;) The issue here was that I forgot to comment the ApiUrl methods I added, just a minor thing but it looked as if most the other ones were documented so I figured I should as well.One of these days I'll set up my gravatar to make me a little more recognizable :)",,,,,,
32110511,298,Issue,![],,,,,,
32110534,298,Issue,![oh-snap],,,,,,
32110546,298,Issue,"And thanks again for that contribution. I'll try hard to remember to associate  with that. :) In fact, that's one of the things i'm excited to [demonstrate on Monday]!",,,,,,
32115446,298,Issue,"Awesome! Good luck with the talk/demo, wish I could go but wrong part of the country. I do have some plans to flesh that project out further and maybe have it become an actual useful project of its own. But, time and such.Anyway, I think those added commits has me fairly satisfied with this PR. Unless tomorrow also turns into playing star wars with the kid I should hopefully get the Rx one started/done. But that will be a separate PR.",,,,,,
32177381,298,Issue,"The reactive clients are completed with the exception of some unit tests which are at the moment proving a lot more complex than initially thought, #300 They do however depend on a few things in this pull request so I'm holding off sending a PR for now.",,,,,,
32776391,298,Issue,"Was going to rebase this onto the changes that have already been pushed to master but after doing that locally I'm drawing a blank as to whether I can actually get that into the same PR somehow. Or do I have to open up a new PR?Seems like it would be rewriting history at that point and probably not something that would work, but the coffee hasn't quite hit yet.",,,,,,
32777037,298,Issue,"It's your branch at this point, I'm not fussed whether you merge master in or rebase to update it. What you'll see here is the commits appear after the last comment (if rebasing).Up to you.",,,,,,
32777434,298,Issue,"On second thought, I'm not even sure why I was trying to do that. Especially since there doesn't seem to be any issues with the pull request. I wonder if someone replaced my coffee with decaf. These are clearly ramblings of a madman and should be ignored.",,,,,,
32908782,298,Issue,Pushing the reactive clients into this PR as well,,,,,,
33916244,298,Issue,"Yeah, not sure what I was thinking there. Clearly I need to write 100 ""only use async void for fire and forget"" on the white board.",,,,,,
33916257,298,Issue,:sparkles: and this is why we have code reviews :grinning:,,,,,,
33918189,298,Issue,"Seems I also mucked up some stuff when getting the reactive client onto this branch. Calling the wrong method in some tests, etc. If only I'd have been drunk so I had an excuse.Also seems as if testing arguments is going be an issue on the create methods since they just call into the non-reactive client. Which is being Substituted. (We do have a number of other tests in our test suite that seem to be the same way. They're just not awaited so they don't actually do anything.(`TheUpdateMethod.EnsuresArgumentsNotNull` in `ObservableIssuesClientTests.cs` as an example)So I could either add the checks in the Create method on the reactive client and the tests will pass but we'll be performing the same Ensure calls twice in actual use.(This seems to be the route taken with `TheCreateMethod.EnsureNonNullArguments` in `ObservableCommitClientTests.cs`)Or we could just be happy that it tests that the non-reactive client is being called. Knowing that it in turn is covered by argument tests.A third option would be to make the substituted GitHubClient return an actual non-reactive client for the reactive client to call into. That way we get our tests on the reactive client so that the requirement is not forgotten in case it's one day decided that it should no longer call into the non-reactive client.",,,,,,
33918269,298,Issue,My vote is for the third option.,,,,,,
34602408,298,Issue,The functionality gotten from AssertEx.ThrowsWhenGivenWhitespaceArgument could be had using the assertion methods in #319 instead.,,,,,,
34602451,298,Issue,"And this should all be fixed now, unless I'm blind and missing something. It's amazing how quickly I go blind when looking at my own code compared to others.",,,,,,
34657857,298,Issue,Probably need to merge master into this again.,,,,,,
34658192,298,Issue,Looking pretty good to me. Just need you to light up that green button so I can merge it. :smile:,,,,,,
34723538,298,Issue,Merged in master and fixed the whitespace issues,,,,,,
34769981,298,Issue,![],,,,,,
32001812,297,Issue,How cool will it be when Octokit uses Octokit to deploy and release Octokit. :),,,,,,
32002748,297,Issue,![dr-mind-blown],,,,,,
32009285,297,Issue,That ^ :grin:,,,,,,
32043768,297,Issue,"Assuming no one else has started work on this yet, I will take it on.- [x] List Deployments- [x] Create a Deployment- [x] List Deployment Statuses- [x] Create a Deployment Status",,,,,,
32082594,297,Issue,Have most of this finished including some integration tests at  ; But have a language issue and a few other things I want to resolve before sending the pull request. When trying to use the name `Deployment` for the response model the compiler complains with:The conflict is with `System.Deployment.Internals`So I've currently gone with the name `GitDeployment` which I feel is a reasonable compromise although not completely satisfying. Currently leaning towards changing it to `RepositoryDeployment` as it is more in line with the API. But figured I should reach out for some input on the issue since it is part of the public API of the library.Another option obviously would just be to suppress the error and use `Deployment` despite the warning.,,,,,,
32088565,297,Issue,When trying to use the name `Deployment` for the response model the compiler complains with: `CA1724: Type Names Should Not Match Namespaces`That looks like a CodeAnalysis error. I feel like we should be ignoring it.,,,,,,
32089413,297,Issue,"Yes, it is. I assumed it was a warning (it was showing as a warning on msdn) escalated to an error because of build settings and figured there might be a reason for it. I didn't investigate further at the time. If someone really wants to use `System.Deployment` together with Octokit they can always give fully qualified names, I will go ahead and change the name to `Deployment` for the response model.",,,,,,
32002079,296,Issue,It's a good start!,,,,,,
32082952,296,Issue,"These set of API's are a little different to what we already have in that the operations are expensive. On the first request the calculation of the stats is queued up and you are returned a 202. You retry the request until the job is complete and a 200 is returned.Should Get be responsible for tracking the 202, and 200. Or do we provide a pair of operations - one to queue the job, and another to wait for its completion?The downside with the latter - the 'wait for completion' method would still need to take into account that the stats might need to be recalculated server side (which will happen on each push to master)I prefer the first option, but does anyone have any thoughts on how we want this to look on our client API?",,,,,,
32087468,296,Issue,"I like the first option. With the observable API, we could have calling `Dispose` on the subscription cancel subsequent requests.",,,,,,
32088532,296,Issue,"I prefer the first option because it takes away the pain of having to implement the ""poll until you get a 200"" logic - which could be implemented in wildly different ways by different developers causing all sorts of headaches...",,,,,,
32089591,296,Issue,"Just a suggestion. You might want to make sure that the client methods (the non-reactive ones, not sure how Rx deals with cancellation yet) have overloads that take cancellation tokens if the calls could take long enough that a client would want to cancel.",,,,,,
32194291,296,Issue,:thumbsup:,,,,,,
33920536,296,Issue,"One question I have - this API is not exactly user friendly. It likes to use arrays of ints everywhere. I would be keen to add some smarts to the objects being returned so that these are useable. For example #### Get the number of commits per hour in each dayReturns: `[ [2, 14, 25], ......]`Which actually means: Each array contains the day number, hour number, and number of commits: 0-6: Sunday - Saturday 0-23: Hour of day Number of commits What do people think if we beefed up the models being returned from the statistics client to make this a much more consumable/understandable object.",,,,,,
33922624,296,Issue,`.\build FixProjects` to sync up the Mono\* projects,,,,,,
33922923,296,Issue,"It likes to use arrays of ints everywhere.Yep, transforming this into a dataset that's easier to traverse is :green_heart: from me.A quick way to get started would be to tailor the response based on the specific API you're calling, which seems like you're already on that path.A crazy idea: encapsulate the data behind a more human-friendly API in the response.rather than exposing the array directly (well you could do that anyway)...",,,,,,
33923885,296,Issue,".\build FixProjects to sync up the Mono\* projects:heart_eyes:  A crazy idea: encapsulate the data behind a more human-friendly API in the response. rather than exposing the array directly (well you could do that anyway)...This is exactly what I was thinking :boom: love it. I'm not fussed on exposing the underlying array, we should be able to wing it so that people don't need this.",,,,,,
35177935,296,Issue,Anyone keen to give this puppy a review? It seems there are a bunch of tests in master that are also broken in this branch. Debugger displays missing etc - I fixed up those added in this PR. Apart from that. Keen for feedback :+1:,,,,,,
35335386,296,Issue,"Got those tests passing, now reading it a bit more closely",,,,,,
35336143,296,Issue,"A few little places in the new tests where parameters are crammed together, but I'm definitely into whitespace OCD now in terms of reviewing.",,,,,,
35336265,296,Issue,I'm happy to merge this in as a first pass for the feature - we can refine the data we return to the user in the future based on what users would like.Ping me when you're happy with the whitespace stuff and I'll :shipit:,,,,,,
35349015,296,Issue,we can refine the data we return to the user in the future based on what users would like.:+1:   ping... I'm happy with this now.,,,,,,
32150405,295,Issue,"According to the documentation, , they consider these types of lightweight tags just a reference, so that might make it a bit more eligible to call the References API if it receives a 404 from the Tags API...",,,,,,
32183063,295,Issue,"One of the downsides of going down that route is that now you have to map a `Reference` to a `GitTag`, but it might be the price we have to pay. At least we won't have to map them the other direction since there's no updating for tags.Makes me wonder what the reason is for the API to not return lightweight tags at `/repos/:owner/:repo/git/tags/`, it seems as if it should considering that they are returned by `git tag -l`",,,,,,
32185849,295,Issue,"For the moment I'm happy to leave this behaviour as-is .I'll leave this open as a reminder to indicate in the documentation that release tags need to be searched via the references, unless someone has a better idea...",,,,,,
32186404,295,Issue,"I guess I'd say it depends on whether we want octokit to conform more to the web API, or to the Git implementation. I would assume it's the former in which case it should probably be left as is. Maybe start a lobbying group to have the API behavior changed ;)",,,,,,
32186659,295,Issue,Maybe start a lobbying group to have the API behavior changed ;)cc  I'll see if I can chase you up :soon: about this :),,,,,,
271318546,295,Issue,Bumping this because it's pretty old.I'm thinking it would make sense to close this in lieu of a new ticket referencing this and suggesting the documentation changes that came from 's comment: Let me know if that's the right approach here; I'm happy to write up the new ticket.,,,,,,
271433830,295,Issue,"yeah, let's just document it rather than trying to be too clever here. Happy to discuss in a new issue.",,,,,,
31902703,294,Issue,We must have this! Will get cracking on this tonight :dancer:,,,,,,
31735700,293,Issue,Citation: (v=vs.110).aspxThanks for spotting this.![],,,,,,
31700579,291,Issue,Hey yo  can I merge this in?,,,,,,
31701538,291,Issue,![],,,,,,
31793052,290,Issue,This is ready for review. Just waiting for #293 so I can remove `Skip` on a few tests.cc,,,,,,
31803188,290,Issue,"oops, I meant to merge that in last night. Done!",,,,,,
31803702,290,Issue,"Sweeet, I'll update the skipped tests tonight :grinning:",,,,,,
31811605,290,Issue,"Dun, and ready for review :sparkles:",,,,,,
31826796,290,Issue,Didn't quite get all lines down to 80'ish...but should be better now....even an extra one in the Search Code tests...ooops..:grin:,,,,,,
31894495,290,Issue,"Didn't quite get all lines down to 80'ish...but should be better now.That's why I said ""or thereabouts"" :grinning: - much more easier to read now.The changes look great, just curious if we can make the tests a bit more robust...",,,,,,
31910590,290,Issue,"While testing this, I found that the query should be formatted like `q=searchterm+params` but the code currently does `q=searchterm params`, I have updated the code to:I just want to check if that is an acceptable solution.",,,,,,
31911521,290,Issue,![94]cc,,,,,,
31916224,290,Issue,:thumbsup:  with that suggestion,,,,,,
31916769,290,Issue,"Alright. I'll admit it, there was probably no good reason for using `StartsWith` and `Contains` instead of hard coded strings :disappointed: ...have refactored to use hard coded strings instead.",,,,,,
31917190,290,Issue,"Alright. I'll admit it, there was probably no good reason for using `StartsWith` and `Contains` instead of hard coded stringsDon't sweat it. We're only human.",,,,,,
31918059,290,Issue,"The changes look great, just curious if we can make the tests a bit more robust...Why not test out each search request? Every qualifier too? e.g. In, Author etc.That way we can assert each property does what it should? Quite a lot of tests to add mind you...",,,,,,
31918253,290,Issue,"That's what `d[""q""]` does, as it checks each property on the request and creates the query string from that.",,,,,,
31918647,290,Issue,"I'd prefer to test that we're sending the correct query format to the GitHub API (harder), rather than that the parameters are populated as expected (easier).",,,,,,
31920569,290,Issue,"Just a suggestion:One thing that I was thinking about whilst I was implementing the search api was ensure everything get's appending correctly to the term.I wanted to expose a TermAndQualifiers property so we can better test the outputThen we can test what the final string should actually look like, for example github search for a user called mike:",,,,,,
31927183,290,Issue,I'm *really* interested in the external behaviour of these actions - i.e. what the client sends to the server.Testing properties in this fashion is just testing a layer away from the important bits.,,,,,,
32233974,290,Issue,"#301 was merged in, so you should be unblocked now",,,,,,
32234069,290,Issue,:thumbsup:,,,,,,
32245776,290,Issue,Ready for another round of review now after move to use `BaseSearchRequest`cc,,,,,,
32668990,290,Issue,Fix them projects! :),,,,,,
32687562,290,Issue,![yes]Really like how this turned out - thanks for all the hard work on this!,,,,,,
32690714,290,Issue,"Awesome, we got there in the end :) Thanks for all the feedback!",,,,,,
31420553,289,Issue,ready for review :smile:,,,,,,
31700355,289,Issue,"one of the things I'd like to challenge you on is how those unit tests actually validate the parameters you set in the query.So we have a test like this:We know that the `q` value on the querystring parameter should contain something, so why not check it within the test, like this?cc  as this is relevant to #290",,,,,,
31700656,289,Issue,:+1:,,,,,,
31792688,289,Issue,When i get a moment tomorrow i will look at this. I agree the qualifiers should be tested a bit better.,,,,,,
31818374,289,Issue,"We know that the q value on the querystring parameter should contain something, so why not check it within the test, like this? I agree - I will implement this as per your suggestion.",,,,,,
33301905,289,Issue,ready for review.,,,,,,
33653769,289,Issue,"There's a few failing tests here because the enum types, such as `Language` and `AccountType`, that don't specify the parameter values necessary to map them to the lower-case values...",,,,,,
33845670,289,Issue,"thank's will fix them, to be honest I cannot see any failing tests (I mentioned this last time), everything just keeps on passing for some reason, I need to look into why I cannot see any failing tests, something must be broken with my scripts (I never made any updates to that at all).",,,,,,
33855301,289,Issue,"if you're running `.\build` you might have hit this issue #353 Alternatively, you can run `.\script\cibuild.ps1` which is the same script the build server runs (takes a bit longer)",,,,,,
33882635,289,Issue,"now that I have merged into master, I can run .\build,cmd and I can see 11 failing tests - oh my :smile:",,,,,,
34558455,289,Issue,"that's all done now. All tests are passing, anything else I missed, please let me know.",,,,,,
34593247,289,Issue,![slam-dunk]Thanks!,,,,,,
34612712,289,Issue,Lol... amazing!,,,,,,
31593157,288,Issue,I love it when a plan comes together![],,,,,,
31593446,288,Issue,It's nice innit :-D---From: Brendan ForsterSent: 5/01/2014 10:43To: octokit/octokit.netCc: Henrik AnderssonSubject: Re: [octokit.net] Return a more helpful error message if an invalid refs path is provided (#288)I love it when a plan comes together![]---Reply to this email directly or view it on GitHub:,,,,,,
31308255,287,Issue,"Damn, forgot to rebase from master...closing and sending a new PR...",,,,,,
31308351,287,Issue,"ProTip: pull requests will update as you add changes to a branch.Alternatively, you can just force push your branch and the PR will update too. No need to close and reopen it! :metal:",,,,,,
31308408,287,Issue,"D'oh, of course they do :+1:...:hangsheadinshame:",,,,,,
31281477,286,Issue,Thanks!,,,,,,
31285809,286,Issue,Fantastic stuff!![173],,,,,,
31303390,285,Issue,"Now that Releases is released, I assume we can use `application/vnd.github.v3` now.",,,,,,
31303403,285,Issue,/cc  does that ^^^ sound right to you?,,,,,,
31311607,285,Issue,Haven't needed it for a couple months :),,,,,,
31592502,285,Issue,thanks!,,,,,,
31992960,284,Issue,"So I just stumbled upon this little factoid: I agree that not having PCL support in Express is very unfortunate. That‚Äôs why we are planning on addressing this concern in the next release.Me: ![mdrw2]Why does it matter? I wanted to ensure that people could contribute to this without needing to have a paid version of VS. So I tested VS2013 Express for Windows Desktop and encountered this issue.I know it's a moot point, but it's a barrier to entry.",,,,,,
32001932,284,Issue,"![]Ugh, nothing is ever easy. I think we should continue down this path. It'll eventually get fixed. Maybe we can keep an old .sln/.csproj file around for a bit if we get complaints.",,,,,,
32002355,284,Issue,"agreed, I'm happy to let this one sit for a while  can you shed some light on the sort of timelines that we could anticipate for seeing PCL support in the Express SKUs of Visual Studio. A 2013 Update? Or VS201X?",,,,,,
38004312,284,Issue,Closing in favour of #401,,,,,,
31284124,283,Issue,"As of recent, all we need to do is target Profile78 and everything will be :moneybag:, possibly linking to Microsoft.Net.Http (but on Xamarin.\* they won't be used, the system one will trump it)",,,,,,
31285881,283,Issue,"Yeah, this is mostly a reminder for me to double-check this once I close out #284",,,,,,
48170671,283,Issue,Updated description with tasks to perform,,,,,,
48221361,283,Issue,"Now that Xam Studio fully supports NuGet, this is way easier, it'll almost certainly Just Work as long as you target profile 78",,,,,,
48247891,283,Issue,"yeah, just making a sanity check list to run through here",,,,,,
48270829,283,Issue,### Monotouch![screen shot 2014-07-08 at 1 18 39 pm]### Monodroid![screen shot 2014-07-08 at 1 54 37 pm],,,,,,
31303487,282,Issue,:shipit:,,,,,,
31307740,282,Issue,Just rebased on top of master,,,,,,
48557689,281,Issue,"Considering this was something only really relevant to my testing, and how long it's sat here without love (and being finished), I'm gonna let this go...",,,,,,
70943714,280,Issue,Done in 91811330d992ce566e444c8cdd0fb4c6436ed405,,,,,,
31249089,278,Issue,As the System.Net.Http assembly is part of the .NET framework this should suffice?,,,,,,
32606335,277,Issue,I guess it should be closed.,,,,,,
32620322,277,Issue,Correct! Thanks for the fix!,,,,,,
31412365,276,Issue,I got this :zap:,,,,,,
112409442,276,Issue,So this happened! :metal: :tada: :dancer:,,,,,,
32690981,275,Issue,I'll take this one,,,,,,
31308991,274,Issue,I'll take this one,,,,,,
31188215,273,Issue,"You'll need to run `.\build FixProjects` to sync these new files with the Mono\* projects...Aside from that, the tests are all passing and there's a few minor issues around naming things.",,,,,,
31201954,273,Issue,all done now :smile:,,,,,,
31207532,273,Issue,Thanks!![],,,,,,
31082683,272,Issue,I think I found it. Oh myy I should better review pull requests...,,,,,,
31082875,272,Issue,Ok. Seems to work now.,,,,,,
31153432,272,Issue,Thanks!,,,,,,
31146912,271,Issue,Done!,,,,,,
31210191,271,Issue,You'll need to run `.\build FixProjects` to include the `DateTimeExtensions.cs` file in with the Mono\* projects...,,,,,,
36191680,271,Issue,I think this can be closed? Or is there something useful that would require porting to #391 ?,,,,,,
31207494,270,Issue,Looks good - just a few little things to tidy up. I've opened up #277 to cover the integration test - we should have all the necessary bits to do this lying around.,,,,,,
31210184,270,Issue,You'll need to run `.\build FixProjects` to include the `Branch.cs` file in with the Mono\* projects...,,,,,,
31460635,270,Issue,"I've updated the documentation stuff you requested.  I ran build.cmd and didn't see any errors, not sure how else to verify the FixProjects thing.",,,,,,
31501704,270,Issue,"so we can pass arguments to `build.cmd` to specify custom tasks - that's how the `FixProjects` task is invoked.So running `.\build.cmd FixProjects` from the command line is how you can do that.Oh, and you'll need to merge master into the branch to resolve some merge conflicts with the `ApiUrls.cs` file.",,,,,,
31537014,270,Issue,Merged and projects have been fixed.,,,,,,
31592732,270,Issue,Thanks!![445],,,,,,
30972590,269,Issue,Thanks though!,,,,,,
31184949,267,Issue,The GitHub api at  says that you can only get open or closed milestones. The **default** is open.If you want to get the closed milestones - you can use the overloaded method.,,,,,,
31187225,267,Issue,What  said. This is where the magic happens:,,,,,,
30901907,266,Issue,#NAME?,,,,,,
30901988,266,Issue,"Scratch that, I know where this is occurring: #262 /cc",,,,,,
30905244,266,Issue,Did #262 not fix the issue?,,,,,,
30944981,266,Issue,the issue was fixed but the tests needed to be updated to reflect using `BodyWrapper`,,,,,,
30946706,266,Issue,DOH!,,,,,,
30959262,266,Issue,"Working on it, I will provide pull request as soon as possible",,,,,,
30959872,266,Issue,#268 resolves it if you like,,,,,,
30963330,266,Issue,You can choose which one you want now :).,,,,,,
30972315,266,Issue,"Thanks! I guess first come, first serve. :)",,,,,,
30899326,265,Issue,Hey  can you add me to the MyGet feed (same name as here) so I can investigate where my builds are going?,,,,,,
30905197,265,Issue,done!,,,,,,
31154611,265,Issue,Dropped a couple of commits in to get the unit tests and integration tests passing. Will publish a release candidate package up to MyGet when I next get an opportunity...,,,,,,
31187721,265,Issue,Here's the feed URL if you want to test out the install/upgrade experience to ensure I haven't missed something:,,,,,,
31207789,265,Issue,It's a Festivus Miracle!,,,,,,
31281366,265,Issue,![] Nice job!,,,,,,
30857252,264,Issue,:shipit:,,,,,,
30629009,262,Issue,Thanks!,,,,,,
30946751,262,Issue,"Hey , this broke a couple of tests that need to be updated to take into account the change to use `BodyWrapper`. Want to take a crack at it? /cc",,,,,,
30959167,262,Issue,"Well I should have catch that in the first place, so I will be happy to fix that./cc",,,,,,
33368447,261,Issue,This should be closed.,,,,,,
33420837,261,Issue,![indeed],,,,,,
30303907,259,Issue,:+1: :heart:,,,,,,
30343929,259,Issue,"Is this being driven by a real application need or a theoretical need?I'm a :thumbsdown: on it as far as `ObservableRepositoriesClient` is concerned. You should simply do:As much as possible, we've tried to drive implementation based on actual application needs. We also want to make the API fit the idioms of the language. So the Observable API should match the Rx + Linq idioms and the user shouldn't have to think about paging. Paging should be handled transparently as an implementation detail of the API.For the Task based APIs, that might be much more difficult and we might need to resort to parameter passing. But it's a lower level API anyways.Just to be clear, I'm not totally opposed to it, we've just been successful with extracting the implementation patterns based on what we needed in GHfW and I want to continue with that focus. Having a real application need really helps clarify our thinking about how it should be implemented./cc -ogre",,,,,,
30344106,259,Issue,"p.s.For the observable clients, `Skip` will still issue all the requests. That might be a case where sending the `page` parameter is more efficient.We've been using a HATEOAS approach so far which makes it very flexible for clients. The response has the next page. I wonder if we could continue this approach by issuing `HEAD` requests for `Skip`.",,,,,,
30344621,259,Issue,"Is this being driven by a real application need or a theoretical need?Yes, I'm the one who got the ball running on this one. I need it for GHfW and  was kind enough to help out. You should simply do client.GetReposOrWhateverItIsCalled().Take(100);But I still need all the results, I just want them delivered as they come in, I don't want to wait for all requests to be made. Also, looking at the repositories client the methods are just names ""GetAll*"" and that returns a full collection object once everything is done. I don't see how a `.Take` would help me here but then again this is the first time I've looked at Octokit so I might be looking at the wrong place entirely. Paging should be handled transparently as an implementation detail of the API.As I could actually get the results as they come in as opposed to sitting around waiting for all requests to be made _and_ had a way of cancelling when I got what I need I guess that'd be fine. What if I only want the first page of repositories returned from a search for example though (admittedly contrived example)?",,,,,,
30345376,259,Issue,"But I still need all the results, I just want them delivered as they come in...That's how it works today.The `Get*` methods return an `IObservable`.",,,,,,
30345431,259,Issue,Make sure you're using the `ObservableGitHubClient`.,,,,,,
30345751,259,Issue,"That's how it works today. The Get\* methods return an IObservable.Looks like I got confused by our internal wrapper client in GHfW, that was the thing which collected all results. Well, in that case I'm golden. All I have to do is use a Window so that I only update the UI once for each response and not once per repo. Thanks",,,,,,
242126757,259,Issue,Completed with [this release],,,,,,
30303589,258,Issue,"Octoclippy? NOOOOOOOOOOO!But seriously, that's just a fun little thing that you've stumbled upon. No plans to do any Serious Business with it - it'll just be our little secret.",,,,,,
30316944,258,Issue,:wink:,,,,,,
30096534,257,Issue,"The build task currently only runs when building Octokit. To make it also run for Octokit.Reactive all that's needed is to make the same changes to that project file.Plus, the name CustomBuildTasks is probably way too generic since it only really contains one task. It was a bad day for names, I'll rename it. :)~~It also currently does something with the very first line in any file that it rewrites, I'm trying to figure out exactly what it is that it's doing so that I can make it stop.~~",,,,,,
30097278,257,Issue,Seems the reason the first line was changing in every changed file was because I was not writing the Utf-8 Byte Order Mark to file. This has been fixed in the following commit.,,,,,,
30100934,257,Issue,Very cool! I'll try it out on Monday.,,,,,,
30369525,257,Issue,![thumb-up-community]This is really great! Thanks!,,,,,,
31208868,257,Issue,"So I'm trying to update Rx to v2.2 and I get this build error:    C:\Users\brendanforster\Documents\GitHub\octokit.net\Octokit\Octokit.csproj(289,5): error : Assembly file not foundLine 289 matches up with the `` taskAny input on how to debug what's happening here - or where the source to this lives?",,,,,,
31211419,257,Issue,"That is rather confusing, the only reason I can think of that you would get that is if any of the libraries for the build task itself are missing or if you have broken references in the project.I'll put up a repo with the source for it tonight, sadly it's kinda been put on the back burner and I haven't had time to pretty it up. But nothing like having it sitting public to pressure you into fixing it, right?",,,,,,
31211631,257,Issue,"You would debug this by going into Project Properties -> Debug -> Start action - > Start External Program should point to a copy of MSbuild. I've been using C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exeThen you add the path to the octokit.net project that you're having issues building in the ""Command line arguments"" boxHit Debug and presto",,,,,,
31216059,257,Issue,I've opened up this PR which resolves my issue,,,,,,
29918125,256,Issue,if this looks good i'll add some tests as well.,,,,,,
29919800,256,Issue,"looking good so far, just a few little things about documentationI'd also :heart: some tests if you've got time!",,,,,,
29973884,256,Issue,updated.,,,,,,
29975353,256,Issue,Good point. Updated again. (also added IDisposable for events which was also missing),,,,,,
29978908,256,Issue,can you also run `.\build FixProjects` to sync the new files with the Mono\* projects?,,,,,,
30003201,256,Issue,Done,,,,,,
30082286,256,Issue,: updated and added the same validation logic on the update class.,,,,,,
30084104,256,Issue,"Right, I'm all happy with this now. Thank for the contribution!![tumblr_inline_mncxgo2qq51qz4rgp]",,,,,,
30084119,256,Issue,You're welcome! Thanks for the effort and for taking it.,,,,,,
30084132,256,Issue,p.s.- don't forget to close the associated issue.,,,,,,
29900035,255,Issue,thanks for the code review. I've left some notes to ensure we keep our documentation consistent as we work through the API...,,,,,,
29914997,255,Issue,Thank you  for your guidance. This will definitely help us to ensure our documentation is consistent.,,,,,,
29919097,255,Issue,"looking good, just that minor whitespace issue and I'm happy to merge this in",,,,,,
29926865,255,Issue,I think you can go ahead with merge now. Thanks for approving my first ever github checkin,,,,,,
29980735,255,Issue,"thanks for the contribution, and welcome to GitHub!![386]",,,,,,
29770951,254,Issue,"Dear Azure SDK CI - since you are a computer program, I suspect you can _definitely_ code this up faster than any of us pathetic meatbags could!",,,,,,
29771532,254,Issue,"That's why one should not work past given hours of the day :) Anyhow, I've seen this one  and noticed the labels thing as i've hit it. Not top pri though as you probably figured.",,,,,,
30030850,254,Issue,The  Azure SDK CI has [commits on github].![wmfcrob],,,,,,
30084157,254,Issue,Closed via #256,,,,,,
29780421,253,Issue,This is a great start! Thank you so much for this.,,,,,,
29960907,253,Issue,"I could have sworn I left a comment on this, I guess not. My imaginary comment went something like this. What does ""instatiate"" mean? :trollface:Wow, that's all.. wow. Will fix. Hmm, this should be more descriptive. Maybe, ""A client for GitHub's Git Database API that lets you update raw Git objects.""I'll expand this to ""A client for GitHub's Git Database API"" for now and maybe add a second descriptive line to all of these down the line.",,,,,,
29964760,253,Issue,:thumbsup:,,,,,,
29985954,253,Issue,I'm happy to merge this in and keep refining it over time. Any objections ?,,,,,,
30084244,253,Issue,Thanks  for helping with this.![1291],,,,,,
29658688,252,Issue,Thanks!![thumbup-troy],,,,,,
143595140,252,Issue,Can you remind me why we needed the `BodyWrapper` class?,,,,,,
143662355,252,Issue,Uuuh. I don't really remember :confused: I think it might be because the API [expects an object and not just a string];Is it causing problems?,,,,,,
143808584,252,Issue,"Ah, right. Maybe `BodyResponse` is a better name, but no need to change it for now.",,,,,,
143828663,252,Issue,"If anything, it's a `BodyRequest` :wink:",,,,,,
143847027,252,Issue,Or `RequestBody`!,,,,,,
48265510,250,Issue,Haven't seen this one in many weeks.,,,,,,
29568147,249,Issue,![],,,,,,
29646210,248,Issue,Do it.,,,,,,
30030395,248,Issue,What about Xamarin Studio?,,,,,,
31187594,248,Issue,Xamarin Studio will continue to be supported. I just don't want to support both VS2012 and VS2013 while the differences between the platforms are so vast...,,,,,,
31190382,248,Issue,"Xamarin Studio will be fine, there is no such silly thing as Code Analysis",,,,,,
48170240,248,Issue,Just re-tested that Octokit solutions can be opened in VS2013 and Xamarin Studio v5.,,,,,,
31249863,247,Issue,"Has anyone started work on this?If not, I can start work on it.",,,,,,
31285854,247,Issue,"There's #239 and #271 which are implementing various parts of the Gist API in progress, but nothing specifically for Gist Comments.Make it so!",,,,,,
31286046,247,Issue,Hmm...should have checked the source I guess...bcae7efddef11c241dfb88afcae5d625c41be032 implements all the Gist Comments API methods...or am I missing something...,,,,,,
31286201,247,Issue,"Oops, there it is too: #252 My bad. I'll close this one out now too.",,,,,,
32787682,246,Issue,"So I started going through the API doco to see what's missing in the current `master` branch, I only got to Pull Requests, I'll go through the rest tonight.~~_**NOTE** I haven't crossreferenced with current PRs yet, will do that as well and put a reference next to any items that have PRs against them._~~Alright, I think this is the list of what's left to do, and any related PRs that exists.Activities- [ ] #325 - [ ] #326 - [ ] #327 IGistClient #328- [ ]  - PR #271 - [ ]  - PR #239 - [ ] - [ ]  - PR #271 - [ ]  - PR #271 - [ ] - [ ] - [ ]  - PR #271 ITreesClient #329- [ ] IIssueCommentsClient- [x]  - PR #315 **MERGED**IIssuesLabelsClient- [x]  PR #316 **MERGED**- [x]  PR #316 **MERGED**- [x]  PR #316 **MERGED**- [x]  PR #316 **MERGED**- [x]  PR #316 **MERGED**IOrganizationsClient #330- [ ] ITeamsClient #331- [ ] - [ ] - [ ] - [ ] - [ ] - [ ] - [ ] - [ ] - [ ] - [ ] Pull Requests- [ ]  - PR #173 - [ ]  - PR #228 IRepositoriesClient- [ ]  - PR #319 - [ ]  - PR #319 - [ ]  - PR #319 - [ ]  - PR #319 - [ ]  - PR #319 - [ ]  - PR #319 Repositories- [ ] #332 - [ ] #333 - [ ] #334 - [ ] #335 - [ ]  - PR #298- [ ]  - This is deprecated, any use to implement?- [ ] #336 - [ ]  - PR #313- [ ] #337 - [ ] #338 - [ ]  - PR #296Search- [x] - [x]  - PR #311 **MERGED**- [ ]  - PR #289- [ ] ~~Users- [ ] #341 - [ ] #339 - [ ] #340",,,,,,
32787900,246,Issue,Oh  you are awesome! Thanks for taking the time to do this...,,,,,,
32788126,246,Issue,Aww shucks! :blush: :sparkler:,,,,,,
32827604,246,Issue,"alright, list updated with what I think is _**THE**_ list of outstanding items to be completed ;) You'll have it done by the weekend right, with busted hand and all? :grimacing:",,,,,,
32912851,246,Issue,This is fantastic! We should probably create an issue per client. That way we can start pushing for new contributors to jump in. :),,,,,,
32913927,246,Issue,Sounds like a good plan :+1:,,,,,,
32951001,246,Issue,"Oh, and I just realised that we might need to review that the `IObservable` versions are also in sync. But that's just wrapping these, so I'm happy to push that out til after this.",,,,,,
32951685,246,Issue,I can have a look at those when I get back from work!,,,,,,
32959202,246,Issue,looks as if it's already implementedjust noticed as I was working on the repository ones,,,,,,
32960489,246,Issue,correct! (I've pulled it from the list),,,,,,
32960753,246,Issue,we might need to review that the IObservable versions are also in syncSounds like a ~~unit~~ convention test :wink:,,,,,,
32961470,246,Issue,opened: #317,,,,,,
33054416,246,Issue,#319 should cover all of the ones listed under `IRepositoriesClient`,,,,,,
33299370,246,Issue,Closing this as the tasks identified have been spun off,,,,,,
29638940,245,Issue,I'd love to see the number of tests run in the success output. I've had situations where I had too many skipped tests and noticed it only because the output had an absurdly low number.,,,,,,
29639407,245,Issue,I think that's something the ci server should display in the status result line. It's probably also something we could improve in fake.,,,,,,
48172613,245,Issue,"I'm reasonably happy with the current state of the build scripts.And Appveyor plugs in nicely (it does test discovery and package generation so we don't _need_ to have it run the same script).If anything nice comes up, I'll address it separately.",,,,,,
29638778,244,Issue,"Since this affects tests and I trust you, :shipit: when you're done. :)",,,,,,
31208735,244,Issue,"As I started doing some refactoring in here, I'm going to rework this PR to address these things separately:- updating the build scripts to create and use an OAuth token instead of credentials- test improvements- refactoring and adding overloads to make the API better",,,,,,
29427352,243,Issue,:heart_eyes: :two_hearts: :heartbeat:,,,,,,
29428998,243,Issue,"As these are just tests and minor fixes, and -ogre is rather happy, and the build is green, I'm gonna merge them in and keep working on these",,,,,,
29637923,243,Issue,:thumbsup:,,,,,,
31593166,242,Issue,Closed via #288,,,,,,
29343805,241,Issue,Lookin' good. :heart_eyes:,,,,,,
29352572,241,Issue,"-ogre seeing how QED likes this change, I'm gonna merge it in",,,,,,
29352589,241,Issue,:shipit:,,,,,,
31289924,240,Issue,"Let's see if I have understood this one correctly...For example in the ReferencesClient we have GetAll and GetAllForSubNamespace, which call ApiConnection.GetAll does, BUT also check the HttpStatusCode of the response and if it's a 404 return a human friendly error message?And this should be done for all the GetAll type methods?",,,,,,
31290126,240,Issue,"It's kinda fiddly, which is why I put it aside but here's the abridged version:- internally, `ApiConnection.GetAll` just calls `ApiPagination.GetAllPages`- `ApiPagination.GetAllPages` will enumerate all pages and likely return an empty collectionPerhaps we should have a consistent response inside `ApiPagination.GetAllPages` when you get a 404The example I'd like to get passing as part of this is #242 - because when you specify a namespace that is not valid, you should get a specific error message rather than an empty collection.",,,,,,
31290290,240,Issue,"OK, I'll see if I can come up with some ingenious solution to said problem :laughing:",,,,,,
31295397,240,Issue,"We could pass in the URI being called to the `ApiPagination.GetAllPages` and in the event of a 404, we return a `NotFoundException` with an error message of **_[URI] was not found.**_?That would at least inform the user specifically what was not found, instead of just **_Not Found**_.New signature of `ApiPagination.GetAllPages` would be:So the example test for #242 would look like:Happy to discuss, I have made changes locally with the above scenario in mind, I can send it through PR for review if you like.",,,,,,
31307563,240,Issue,I like it,,,,,,
29179396,239,Issue,"This is great! One thing I noticed is that the URL of Gist is a constant, but since GitHub Enterprise ships with its own Gist, we should parameterize this. The URL of Enterprise Gist is always ""/gist"" (i.e. ""https://theurlofmycoolGHEnterpriseInstance/gist"")",,,,,,
29179626,239,Issue,shouldn't [this overload] cover us for Enterprise instances?Or am I missing something?,,,,,,
29179916,239,Issue,"Never mind, I am an idiot, for some reason I remembered that the Gist API was hosted under a different root. Carry on...",,,,,,
29309352,239,Issue,"Looking good, just a couple of minor things and I think this is ready to :ship:",,,,,,
30083035,239,Issue,"Looking good, just needs you to merge master into your branch so you can test against the latest upstream changes",,,,,,
30368870,239,Issue,"Whoa, what happened there? Looks like a bad merge.",,,,,,
31152048,239,Issue,you might need to reset your branch back to d2e04905e6658c106c3a4fa1ead34830c3d977e2 and try that merge again,,,,,,
31208436,239,Issue,"I tried again, let me know if it's still hosed.  If it is, I might need some help.  First time working across repos and all that jazz.",,,,,,
35963063,239,Issue,Can this PR be fixed up? :D,,,,,,
35964115,239,Issue,care to help  with the commands needed to fix this up? Or perhaps do it and submit a new PR with his branch?,,,,,,
36072591,239,Issue,"the only way to fix this would be rebasing and force pushing, merging wouldn't help one bit, so a pull request won't do.The way I would do it would be:(or whichever is the upstream to octokit/octokit.net)",,,,,,
36074862,239,Issue,Why don't you do that and push to a branch under your account.Then you issue a PR and we'll close this one.,,,,,,
36074886,239,Issue,"But choose a better name than ""my-branch"" :stuck_out_tongue:",,,,,,
36076195,239,Issue,"Oh, true, yea. XD",,,,,,
36191579,239,Issue,I think this can be closed.,,,,,,
29170981,238,Issue,It's yours if you want it :smile:Real talk: I love how people get to this stuff before I can get around to it. Thanks!,,,,,,
29171215,238,Issue,"I'd love some feedback on how you'd like the `GetAll` overload that takes the subNamespace parameter. I think it might be better to use a enum value here. Do you do any validation on the client anywhere?The sub-namespace is a handy way organise similar references - `heads` and `tags` are some of the common conventions, `pulls` is another one you might have seen - but I don't think there's value in constraining it to a specific enum.When a sub-namepsace doesn't exist, the server returns 404 - we should check for that and propagate a more helpful exception to the user.",,,,,,
29172056,238,Issue,"Looking good so far, most of the feedback is about cosmetic stuff and typos.Some integration tests would be awesome (we have helpers for creating repositories and disposing them at the end of the test) but I don't consider it a blocker to merging this in.That ""sub-namespace not found"" code path I think is the only technical thing I'd like resolved at this stage.",,,,,,
29187562,238,Issue,"Thanks for great feedback! I also think it would be better to just drop the namespaces. They provide no value in the test project, I just added them for consistency. The whitespace in the using directives is a result of R#'s ""optimize using directives"", there should be a `DotSettings` for the sln with a separate one for test projects so it would be easier for contributors to follow the coding/naming style. Want me to file an issue?I'll fix the stuff mentioned ASAP :wink:BTW, I had trouble building the sln in VS2013. The build seems very brittle, about 3 out of 4 builds breaks with an error complaining about code analysis. I'll add a screenshot to #143",,,,,,
29188085,238,Issue,"One more thing. The `GetAll` with sub-namespace, what do you think of the name? I see that other clients have `GetFor` and `GetAllFor` names. Should we call it `GetAllForSubNamespace`?",,,,,,
29243481,238,Issue,Now the only thing missing is the 404 check and error message :smile:,,,,,,
29245306,238,Issue,Were you going to drop the namespace additions for the tests?,,,,,,
29406368,238,Issue,"I've opened #242 for us to track that 404 path, and I'll commit a failing integration test so we don't forget about it either.Thanks for the contribution!![thumbs up]",,,,,,
29148558,237,Issue,Just realised this is a duplicate of #143,,,,,,
29126038,236,Issue,![],,,,,,
28815480,234,Issue,![]:shipit:,,,,,,
28776311,233,Issue,can you try `var user = await github.User.Get('riteshventurepact');`Looks like the **await** keyword is missing...,,,,,,
28805677,233,Issue,"`.Get(""username"")` returns a `Task` - so you need to await this operation to get the result...",,,,,,
28721679,231,Issue,"No problem! THanks for getting involved. Also, try to avoid adding the GlobalSuppression.cs file. It added it as a binary file which probably means it encoded it as UTF-16. We shouldn't need to add that file at all hopefully.",,,,,,
28733354,231,Issue,"thanks for the feedback moved code as suggested & removed GlobalSuppression.cs file as well.Let me know what else I need to do, to get this accepted please.",,,,,,
28778739,231,Issue,as you can tell I am fairly new to all of this. So I appreciate your patience & great feedback.Fingers crossed third time is a charm,,,,,,
28804590,231,Issue,as you can tell I am fairly new to all of this. So I appreciate your patience & great feedback. Fingers crossed third time is a charmNo worries! Glad to have you helping out! This is a great project to start learning to contribute to OSS. I'm happy to help.,,,,,,
28841425,231,Issue,just pushed up your suggestion to the ContentsResponse object. Adding in comments & the enum (however having a slight issue with it & was hoping you could advise please),,,,,,
28908707,231,Issue,Great! I'm just waiting to hear about the rationale for the Contents API before I start thinking about how to handle it. :),,,,,,
28909375,231,Issue,"for my little own pet project rolled back to .NET HTTP Client in the mean time.Let me know what has been decided when you hear, so I can make the necessary changes as required.Thanks :octocat:",,,,,,
29032567,231,Issue,"So given we appear to have two different behaviours (return one file or return a collection of files) perhaps we should split this out into two method for convenience:It doesn't match 1-1 with the API, and there's a couple of scenarios I can think of that are weird:- Call `GetDirectory` with a file path - get array with one value- Call `GetFile` with a folder path - error?- How do we handle symlinks? Do we even care about symlinks?",,,,,,
29149489,231,Issue,what are the typical use cases for this method. Will the caller know in advance? Perhaps we need a `ContentResponse` class with a `Type` enum and methods `ValueAsFile` and `ValueAsDirectory` where one is null if the other is populated. I'm not sure people need to know in advance.,,,,,,
29310632,231,Issue,let me experiment with the API to see what feels natural. I'll get back to you on this cc,,,,,,
29642025,231,Issue,I look forward to the results of your experiment.![],,,,,,
29642271,231,Issue,"Hiya Guys  &  Looking forward to hearing what I will need to do or how I can help out, even if you take this task over & I just do testing.Cheers,Warren",,,,,,
29702164,231,Issue,"I can push up this branch later, but here's a quick brain dump of what I spiked up:I left `ContentResponse` as-is except for one change:I had some tests which would try and set Size to `null` and fail miserably, which can only work for a nullable value type.Anyway, back to the story:## Write Some Damn TestsI started with this test, to get the README file from a repo:Then I wanted this test to do something similar, but against a given folder:And then I wanted to get the contents at the root of the repository:And lastly, I wanted to be able to filter on files and folders (these are just extension methods using `.Where`):## What does that leave us with?This is the interface for `IRepositoryContentClient` at the end of this spike:I like `GetContents` over `GetFolders`/`GetFiles` as it sticks a bit closer to the concepts in the API.## What Sucks About This- I still don't like reusing the `ContentResponse` class everywhere, but the differences between a `Dir` and `File` type are small enough (and easy enough to hide away behind extension methods).- The actual `Content` properties aren't being populated on the files. I suspect that's related to [the media type used] - you should pass `application/vnd.github.v3.raw` to get the content as well.",,,,,,
29707236,231,Issue,sounds like you go this well under control now. Shall I close my pull request or something & let you continue with this?,,,,,,
29707525,231,Issue,don't close this PR - my experiment was building on what you've already done.This is just feedback for how I'd go about it - feel free to incorporate it into your PR.I think breaking out `GetContent` into multiple explicit methods is the best way to go about it right now.,,,,,,
29707607,231,Issue,OK I won't close this PR then. Is it possible to merge your changes into my PR and collaborate that way on it?Yes I think you are right about GetContent having multiple methods is the best apporach,,,,,,
29707708,231,Issue,Is it possible to merge your changes into my PR and collaborate that way on it?Let me tidy up the branch into these steps:- the change to `ContentResponse`- the extension methods for `Files()` and `Folders()`- the API changes for `IRepositoryContentsClient`- the integration testsAnd then you can merge these into your branch (like you would when working with `master`),,,,,,
29719126,231,Issue,I've published this up under `get-content-spike` -,,,,,,
29719363,231,Issue,"Oh, and don't forget to run `.\build FixProjects` to sync the new files with the Mono\* projects",,,,,,
30084884,231,Issue,anything I can do to help this along?,,,,,,
30084968,231,Issue,"I have been extremly busy with work & personal stuff this week :-1: So I haven't had a chance to look at this at all and currently not sure when I will get the time. I would still love to contribute but don't want to see me holding this up, so free free to jump in take over to get this closed & fixed.Thanks,Warren",,,,,,
30085001,231,Issue,"that's ok, just ensuring I'm not neglecting things I need to look at.Drop me a line when you're ready to review.",,,,,,
31210339,231,Issue,"Oh, and you'll need to run `.\build FixProjects` to add the new files to the Mono\* projects...",,,,,,
37984148,231,Issue,Closing in favour of #434,,,,,,
28664160,230,Issue,Nice catch! :+1:,,,,,,
28641106,229,Issue,Also a good spot! Thanks! ![],,,,,,
28650342,228,Issue,"For the `Create` [method] should I also ensure that the `HttpStatus` is `201`?If we don't get a `201`, we should throw an exception here, perhaps something like [`ApiException`] with a helpful message...",,,,,,
28650457,228,Issue,"Am I supposed to do anything with [Custom media types]?Let's not worry about it for now. If someone really wants it, we can discuss it when that comes up. `number` is implemented as Int32 currently, should we use Int64 instead (ie Facebook API)?I'd lean towards Int32 but perhaps I'm too short-sighted :trollface: should we assume at some point in the future that a repository may have more than 2^32 pull requests - or are we getting ahead of ourselves?",,,,,,
28650504,228,Issue,"I didn't write any integration tests as it would require at least two users. Could we write some tests where a user comments on their own pull request?And we have helper methods inside other tests to [create sample repositories] which are cleaned up after the test finishes - that should help you get some of the way.The other piece is creating a new blob, tree, commit, branch and then pull request - I'm not sure how far along that is.",,,,,,
28650960,228,Issue,"Oops, missed one: SimpleJson can't deserialize fields starting with an underscore (_links for example). Is this the expected behavior? Correct. But this is a different format to the ones we've dealt with earlier - like [Issues] for example.In the Issues case, we map the `Link` header values to the `ApiInfo` class inside `ApiResponse`.In the example above, the links are in the response. - we should be consistent with how links are representing in the API, so which approach is ""the right one""? - And I assume that, as it's a breaking change, we need to address this in the next version of the API...",,,,,,
28661688,228,Issue,"should we assume at some point in the future that a repository may have more than 2^32 pull requests - or are we getting ahead of ourselvesNotification and Comment resources might lead us to introduce ID columns as strings in a future version, but I don't think we'll need to do that for scoped numbers like Pull Requests or Issues.  we should be consistent with how links are representing in the API, so which approach is ""the right one""?While some resources have a `_links` hash, all of those relations can be found elsewhere in the resource in a `*url` attribute. Most collection resources have a `Link` header with pagination-related link relations, but those aren't in the resource body.",,,,,,
28739015,228,Issue,"Thank you for the feedback, I'll start to work on it tomorrow.",,,,,,
28937174,228,Issue,"And don't worry about the `_links` parameters - if someone _needs_ it, we can deal with it then",,,,,,
28959607,228,Issue,"If we don't get a 201, we should throw an exception here, perhaps something like ApiException with a helpful message...How can I access the Http Code in my [Create] method? Could we write some tests where a user comments on their own pull request?So I experimented with two users of mine:1. You can't fork an empty repository2. You can't fork your own repositoryThe way write integration tests would then be:1. User A creates a repository2. User A creates a blob3. User A creates a tree4. User A creates a commit5. User B forks the repository6. User B creates a blob7. User B creates a tree8. User B creates a commit9. User B creates a pull requestAfter this we can finally start to create / edit / delete / get review comments :smile: A few API are still missing:- [Create a blob]- [Create a tree]- [Create a fork]- [Create a pull request]I wrote one integration test that will be ignored for the moment as we need more features in order to test this. As soon as those features are ready I will happily add all the other needed integration tests.I removed the `_links` field from the object as the three links are present in other fields anyway.",,,,,,
29003349,228,Issue,How can I access the Http Code in my [Create] method?Something like this?,,,,,,
29035035,228,Issue,Something like this?Yes this worked perfectly. I commited the change.,,,,,,
29149700,228,Issue,Thanks for the PR. A few minor changes suggested but this is coming along well and is much appreciated! You probably need to merge upstream master into this now (or rebase it if you're into that sort of thing). :smile:,,,,,,
29151767,228,Issue,I incorporated the changes that you suggested.According to my testing `UpdatedAt` is set to the value of `CreatedAt` when creating a comment.After merging master into my branch I encountered a few issues:- `build.fsx` is rewriting incorrectly `SolutionInfo.cs`- `ThrowsTwoFactorChallengeFailedExceptionWhenProvidedCodeIsIncorrect` is failing,,,,,,
29559918,228,Issue,`build.fsx` is rewriting incorrectly `SolutionInfo.cs`Is that the issue where it would regenerate the `SolutionInfo.cs` with an extra `}` on the end? Run `git clean -xdf` to ensure you have the latest build of FAKE and try again... `ThrowsTwoFactorChallengeFailedExceptionWhenProvidedCodeIsIncorrect` is failingCan you provide some details about how this is failing?,,,,,,
29563178,228,Issue,I ran `git clean -xdf` and it fixed the issue for `SolutionInfo.cs` :smile: I also can't reproduce the failing test anymore! The test would fail occasionally before but I ran the `build.cmd` script multiple times and couldn't get it to fail again. The output of `build.cmd` in PowerShell is really different from what I was having before so It's probably because I has some old artifacts somewhere.Hey looks like I spoke too fast! The test failed again on my 5th build:Most likely a race condition as it doesn't fail consistently.,,,,,,
29563546,228,Issue,"thanks, I've captured that in #250",,,,,,
29599126,228,Issue,Do I need to do any other change?,,,,,,
29646036,228,Issue,"Great work! I had a couple more minor style comments. Also, be sure to merge upstream master into your branch (or rebase it if you're so inclined).",,,,,,
29668123,228,Issue,I replaced the read only fields by private setters in the auto properties and moved the constructors at the top.,,,,,,
30096764,228,Issue,I fixed the integration project. I also integrated blob and tree creation into my integration test.We still need `Create a Fork` and `Create a Pull Request`. Then I can start the testing. We also need to create a second test user in order to fork the repository (I don't think you can fork your own repository). What do you think of creating two extra environment variables:- `OCTOKIT_GITHUBUSERNAME_2`- `OCTOKIT_GITHUBPASSWORD_2`Of course this means that each developer will need two testing accounts.,,,,,,
30368781,228,Issue,What do you think of creating two extra environment variables:Maybe we can punt on these specific integration tests for now.,,,,,,
30371371,228,Issue,In this case (and if you're happy with the changes I made) I think we're done :smile:,,,,,,
30371516,228,Issue,I'll let  chime in here as he's been closer to this than I have. :),,,,,,
31188296,228,Issue,After reviewing the epic search API #226 this just needs to have master merged in.  We still need `Create a Fork` and `Create a Pull Request`. Then I can start the testing. We also need to create a second test user in order to fork the repository (I don't think you can fork your own repository).Correct. But we don't need to fork to create a pull request. If we just use a branch for the pull request does that still mean you are able to write an integration test for this?,,,,,,
31331799,228,Issue,"You're right. We don't need a fork in order to create a pull request. You can branch your own repository, commit a file and then you can create a pull request.However I still need `Create a Pull Request` to be [implemented] in order to be able to write the integration tests.",,,,,,
37169532,228,Issue,- so pull requests is now in master via #360. Would you like me to dust off this PR or would you like to wrap this up and :ship: it?,,,,,,
42120815,228,Issue,Sorry that it took so long. I've been extremely lazy :flushed: I wrote best case integration tests. Let me know if you want tests for when things go wrong too. If not I think we can close this one!Also I took the liberty to extend the timeout of the integration tests to 20 minutes (from 10) as it was consistently timing out before running all the tests on my machine.,,,,,,
43402930,228,Issue,anything else you need me to do finish up?,,,,,,
47605005,228,Issue,got any time to look at this again?,,,,,,
48563240,228,Issue,this looks pretty great (the tests all pass locally)!There's some cosmetic changes which I'll add in as part of getting this mergeable again. I'll see if I can speed up the tests as well while I'm in there.I'll do this in a separate PR.,,,,,,
28639959,227,Issue,Nice spot - thanks for the patch!,,,,,,
28535585,226,Issue,The only thing I need some review on is,,,,,,
28537806,226,Issue,"Given that `sort` behaves differently for each scenario, perhaps it's easier to have separate classes for each request type, and making this class look like this:And so on. This could let us tailor each class to specific scenarios, like:could be presented as:Given all the parameters map to querystring terms, it should make testing a lot easier.",,,,,,
28577378,226,Issue,"The other thing I'd like to explore with this is making the search parameters more .NET-friendly, rather than using raw strings: could be written as:But then `>=500` is an acceptable input, which can't quite be mapped to the same pattern due to the `>` or `>=` distinction...",,,,,,
28582143,226,Issue,That was the main reason why I left that all as strings as there was a lot off possible options...,,,,,,
28582579,226,Issue,"But then >=500 is an acceptable input, which can't quite be mapped to the same pattern due to the > or >= distinction...Yep - that one baffled me... stars:10..20 could be written as:I like your suggestion for that - this could work...",,,,,,
28582861,226,Issue,"I'd like to see some integration tests for these search results - they might change over time, but at least we can do some basic checks that we're using the API right.I'm happy to defer to strings in the short-term until someone has some better ideas for the filtering...",,,,,,
28623561,226,Issue,"I'd like to see some integration tests for these search results - they might change over time, but at least we can do some basic checks that we're using the API right.Cool I will get around to this hopefully this weekend. any suggestions on how we can add the extensive list of qualifiers as proper .net objects as opposed to strings?",,,,,,
28714840,226,Issue,A general ProTip when experimenting with API design - use some tests to represent how the API should be used.It'll help you spot Weird Things early and because you're using the API you suffer in the same way your users probably will...,,,,,,
28715452,226,Issue,"thanks for the tip - much appreciated :thumbsup:  I will write out some tests and see how this feels. Does the implementation look a bit off ideal to you?I thought about what yourself and  mentioned and I tried to design the class `SizeQualifier` accordingly, then apply the same principles to the other search qualifiers like `In` etc.",,,,,,
28716486,226,Issue,I'd love to write a test like this:,,,,,,
28716728,226,Issue,that looks sweet - so basically add an overload to my `ctor` that allows you to instantiate `Size` `In` or other search qualifiers.,,,,,,
28717465,226,Issue,"yes, rather than fiddling around with properties you have the ctor overloads which guide you down that pathBut there's also other options in there (languages, size, path, extensions, etc) but we can argue about those approaches later...",,,,,,
28754979,226,Issue,got those tests you wanted.,,,,,,
28971591,226,Issue,I got all those qualifiers and searching in with tests for each. I hope that is fine?I need some pointers on how to implement It is very similar to the `Range` class - I could create a similar class that takes in a `Date` and the relevant qualifier?,,,,,,
28971715,226,Issue,"Are you guys cool with the PR? It seems as though this searching has a lot of stuff in it, do you want it to be broken down a but more? A new PR for Searching Issues, Code, Users or just merge it all into one?The foundations have been done for them but looking at searching repos implementation there is a whole lot going on. That is without the depth of testing  wanted?",,,,,,
29060868,226,Issue,"Managed to get the `DateRange` class in which deals with the updated and created qualifiers. I think I am about done with searching repos. That is all the features needed to fully search repos and it is ready for review, please let me know where I could improve on.Thanks",,,,,,
29088730,226,Issue,I've been pretty busy lately. I'll try to review this over the weekend or on Monday.,,,,,,
29149887,226,Issue,wow! There's a huge amount of work to implement this API. Great stuff! Hope you don't mind my nitpicky comments.There's a lot of places where you try to not send a parameter when it's not specified. I think that's probably not necessary. Might as well just make sure our request objects have the default value set and be fine passing them all. That way you can use the `ToParametersDictionary` method and get rid of a lot of code.,,,,,,
29163334,226,Issue,"There's a huge amount of work to implement this API. lol - github's fault for making their search so good. Hope you don't mind my nitpicky comments.Don't mind - I appreciate it actually. There's a lot of places where you try to not send a parameter when it's not specified.Cool let me look at why - something was going through my mind at that moment, I think it was because of a lot of experimenting going on. I agree it's best to pass on the defaults especially for stuff like enums.",,,,,,
29193023,226,Issue,I got those fixes done. I have a comment at Let me know how you want me to deal with Just so we are on the same page.1. Searching Issues - basic implementation done2. Searching Code - basic3. Searching Users - basic   A new PR will need to be opened to extend the searching abilities for all 3 above (i.e. adding the search qualifiers).4. Searching Repos - hopefully this PR is a full implementation for that with the tests too. :smiley:,,,,,,
29548411,226,Issue,that's all in now and I have merged into master. Let me know what else you want me to do to get this merged in. Thanks,,,,,,
29559836,226,Issue,I'll give it a closer look this afternoon (will be in transit but online wherever possible),,,,,,
29571682,226,Issue,"cool let me know what you got I made some of those fixes anyway. With regards to optional ctor args []  mentioned to not do that here  [one of the diff comments - quoting some of it below]. Please don't suppress this one. For more details:   The constructor should only have parameters that are required. The caller can set the properties of the object for all the optional fields.If you want I can add some overloads but I don't think that will be of any benefit? Optional args are better but we are trying to avoid what  said so the next best thing is to instantiate the Search Request with only the search term then customize your search however you want - we don't care.Note - if we go down this route we will offer some consistency to our users with the 3 other search requests (code, issues and users).I have one suggestion that will work sweetly - that would be to instantiate the object then maybe `chain` the other search terms.If that can even be implemented like that?Let me know what you are thinking with this...",,,,,,
30085400,226,Issue,do you guys feel this is good to merge? :smile:,,,,,,
30090231,226,Issue,I'll have a look at it tomorrow while I'm waiting for a flight,,,,,,
30091884,226,Issue,ok cool thanks.Sorry if I did a bit too much work on this in one go - I should have broken it down into smaller steps by doing a simple search then gone on to extend the searching in more detail in simple digestible PR's. Lesson learnt though.,,,,,,
30368412,226,Issue,looks like you'll need to update this branch from upstream master.,,,,,,
30401360,226,Issue,looks like you'll need to update this branch from upstream master. that's done.,,,,,,
31040491,226,Issue,if there is anything I can do to help push this along please let me know. I have updated this with  the master branch now.,,,,,,
31151940,226,Issue,"Ok, I'm gonna land this one in master and open some issues to track tidying up things like - getting documentation more consistent- integration tests- code tidy-up and consistencyThis will help us iterate over the search API as we charge towards V1.Thanks for the hard work on this.",,,,,,
31167706,226,Issue,"it's cool, if you want. You can cc me in anything.I have a few other things I need to do I will look to implement them in smaller portions hopefully. (if anyone else has not taken the issue).",,,,,,
31184690,226,Issue,can the branch hahmed/search-api be removed please - mistake on my part. Thanks,,,,,,
31187195,226,Issue,I'm not clear on what you need me to do. I can't see the branch listed here so I assume you tidied it up:,,,,,,
31201795,226,Issue,sorry I should have been more clearer - I meant,,,,,,
31207158,226,Issue,"Ah, yes. Don't stress about those, they're easy to clean up...",,,,,,
28511800,225,Issue,"Looks like lots of the groundwork is in there for the rest of the Gist API - is that part of the plan or am I getting ahead of myself?A few little whitespace issues, and that failing test, but it looks promising so far!![]",,,,,,
28525269,225,Issue,well I only needed `Get`. happy to continue with the rest in the background. it is mostly manual work.the next thing I need is   is anyone working on this?,,,,,,
28533849,225,Issue,"happy to continue with the rest in the background. it is mostly manual work.I'm cool with that. Stub out out the other methods  with a `NotImplementedException(""You can submit a pull request for this to "")` exception so we don't forget them. cc  the next thing I need is  is anyone working on this?Blobs and Trees are underway #188 and #194 - which I'll review again and probably merge in today for a 0.1.5 release early next week.",,,,,,
28550008,225,Issue,turns out secrets gists have a non-numeric id. so dont merge this yet,,,,,,
28551298,225,Issue,so can this be merged?,,,,,,
28572683,225,Issue,"In it's current form, the magic ""Merge pull request"" button is disabled.I think the .csproj changes from `master` need to be merged in.I'll also just run through the latest changes just in case I missed something.",,,,,,
28573422,225,Issue,"Oh, and run `.\build.cmd FixProjects` to sync the new files across the Mono\* projects :sparkles:",,,,,,
28935798,225,Issue,![]Are you running it from Powershell or cmd or something crazy I haven't tested on?,,,,,,
28936154,225,Issue,was running in CMD. but fails in powerhell as wellbut i did notice another error flick up for a second. had to print screen it![2013-11-21 09_04_06-posh git octokit net master],,,,,,
28936461,225,Issue,do a `git clean -xdf` to clear up that file. cc  to remind me to review that script and try-catch the way out,,,,,,
28937209,225,Issue,same errorseems u have a bunch of stuff that assume existence of `tools\FAKE.Core\` which does not exist on my machine,,,,,,
28937985,225,Issue,I'm able to see this issue on `master` - digging a bit deeper into it,,,,,,
28938031,225,Issue,sooo. can we merge this one ;),,,,,,
28939260,225,Issue,Build.cmd is prompting. I thought we removed that prompt. It shouldn't have any sort of user interaction like that.,,,,,,
28939337,225,Issue,happy to screen share if u guys want to troubleshoot on my machine,,,,,,
28942920,225,Issue,Actually I broke fake for one or two hours. Sorry about that.  Maybe you got a broken version. Can you delete tools/fake and retry?,,,,,,
28944338,225,Issue,Build.cmd is prompting. It still is. Let me fix it. your `%LOCALAPPDATA%\NuGet\Cache\` is probably like this![screen shot 2013-11-20 at 3 38 33 pm] I'm still seeing the 0KB file be downloaded to the local cache - are you able to publish a new release?,,,,,,
28944608,225,Issue,yep i have a 0byte file.,,,,,,
28948913,225,Issue,Still broken??  Wtf,,,,,,
28949111,225,Issue,did u unlist 757? 756 looks good but i cant see 757. if u want to get nuget to fix it u prob need to push a fixed version with a higher number than the broken one,,,,,,
28949139,225,Issue,"Running `FAKE.Core.2.1.758-alpha` is now kicking off the build, but there's a different issue here with the generated `SolutionInfo.cs` file.That closing brace is causing some compile issues.",,,,,,
28950475,225,Issue,I'm really sorry. I hope it works now. Something broke during nuget push. It teaches me a lesson to finally release FAKE 2.0 in order to detach the important projects from the prerelease channel. I think everyone is already using 2.x so it should be ok,,,,,,
28970213,225,Issue,so the projects are now synced. anything else?,,,,,,
29001779,225,Issue,I'm still seeing the broken `SolutionInfo.cs` file in FAKE version 2.1.766.  is there something I'm missing?,,,,,,
29013211,225,Issue,This is so embarrassing. I reverted FAKE to a good version. Octokit now builds on my machine. I promise to release FAKE 2 today and then we can move Octokit and other important projects on the stable release channel.I'm really sorry that I broke it. But I will give my best to improve it.,,,,,,
29013537,225,Issue,that's fine - happens to the best of us. Let me know when it's :cool: and we can try again,,,,,,
29014100,225,Issue,"Thanks.Please try again the ""good"" (old) version is already on nuget.",,,,,,
29014778,225,Issue,"got it looks good, would be nice to test that some of the properties on the gist response - like `Owner` for example - is not nullLet's see if  has any issues",,,,,,
29026967,225,Issue,"well my intent was actually to do some serialization tests on a future PR. but I initially wanted to ""make it work"" then iterate on that",,,,,,
29028559,225,Issue,Fine with me,,,,,,
29029818,225,Issue,Merged and Closed = Win :) ![tailgate],,,,,,
28460794,224,Issue,What are folks using to run xUnit tests in Xamarin Studio?,,,,,,
28460885,224,Issue,From six months ago:,,,,,,
28505993,224,Issue,"No XUnit support in Xamarin, NUnit or bust when it comes to XS. :-/",,,,,,
28506461,224,Issue,maybe we can bribe .,,,,,,
28506555,224,Issue,Or log a bug here:  :(,,,,,,
28514193,224,Issue,Maybe the xUnit.net MSbuild task will work via xbuild for now?,,,,,,
28520197,224,Issue,#NAME?,,,,,,
28521611,224,Issue,"All these windows and IDEs are just a fad, anyways.",,,,,,
28529309,224,Issue,Is there a test runner API in Xamarin Studio?,,,,,,
28529671,224,Issue,Is there a test runner API in Xamarin Studio?I don't think so. I know the old NUnit runner in MonoDevelop was just a normal add-on that didn't use a specific test runner API.,,,,,,
28529866,224,Issue,"We aren't particularly interested in making GUI runners, so chances are we wouldn't do this. We would be happy to help a third party write a runner if someone is so motivated.",,,,,,
28534526,224,Issue,SpecFlow appears to support both windows and mono  but I have never personally used it before.,,,,,,
28540565,224,Issue,"xUnit.net should support mono just fine (console runner, MSBuild runner via xbuild).",,,,,,
46777233,224,Issue,Slight update on this -,,,,,,
195229734,224,Issue,Closing this out as low-priority - we'll be focusing on .NET Core support for Octokit soon (and that'll let us run the CLI tests everywhere) - after that we'll wait for the upstream support - or get involved there...,,,,,,
112393424,222,Issue,"Oh, this was fixed a long long time ago.",,,,,,
28456450,221,Issue,Have y'all had enough? Or are you thirsty for more?![Macaulay Culkin - Home Alone],,,,,,
28506869,221,Issue,Looks good so far! Bring on the :beers:. I'm thirsty for more.,,,,,,
28633709,221,Issue,"OK, . Care to throw some :eyes: over this one?",,,,,,
28675289,221,Issue,Looks good! ![thumbs-up-basketball],,,,,,
28477983,220,Issue,all that is done now. Want me to include the reactive version in this PR or a new PR?,,,,,,
28499119,220,Issue,Want me to include the reactive version in this PR or a new PR?Might as well do it now...,,,,,,
28532838,220,Issue,that's everything now hopefully. Anything else missing?,,,,,,
28534801,220,Issue,Excellent stuff! Thanks for the contribution![],,,,,,
28535275,220,Issue,it's cool. Thanks for the reviewing and feedback.,,,,,,
28416066,218,Issue,"Oh, and Immutable Collections are also part of this change.",,,,,,
28417527,218,Issue,I'll grab this today because I Might Have Already Started ThisOops.,,,,,,
38014871,218,Issue,No longer relevant,,,,,,
28427380,217,Issue,"This was not added to the list of things to doYeah, I got lazy. If you see any other missing things, please do create an issue. :smile:  If you do want this feature please let me know so I will open a PR.Yes please! :sparkles:",,,,,,
28433031,217,Issue,"PR is at: #220  It's cool - I would have just opened the PR I created but I was unsure how you guys wanted things to be done, but next time I will open a PR :thumbsup:",,,,,,
29406078,217,Issue,:boom: it's merged in,,,,,,
29550355,216,Issue,I've start implement the gist API. Shall I also implement the comments API as a subclient of Gist or I have to open a new issue?,,,,,,
29559299,216,Issue,"we're following the layout of the documentation site to be consistent with how users would explore it![screen shot 2013-11-30 at 11 34 46 am]In this case `Comments` are under `Gists`, so I'd expect `Comments` to be a subclient of `Gist`:",,,,,,
29560260,216,Issue,"I've opened up #247 to track the Gists Comments API, which is somewhat different to the Gists API.Feel free to leave a comment there if you've got any other questions.",,,,,,
29561304,216,Issue,thanks for the reply. I'll continue implementing the gists API and maybe afterwards implement the comments API as well. Regarding the gists shall I make a pull request for every one of above check boxes or only when all of them are finished?,,,,,,
29561722,216,Issue,Keep in mind that #239 is underway for creating gists,,,,,,
29562093,216,Issue,Thanks  for remind it to me :+1:,,,,,,
29563510,216,Issue,"Regarding the gists shall I make a pull request for every one of above check boxes or only when all of them are finished?Doing it incrementally makes for easier code reviews on my end, but up to you. The checkboxes are just there to ensure that duplication of work isn't happening",,,,,,
31070175,216,Issue,I made a pull request for some of the methods related to gists. I created a topic branch (implement-gist-api) when I for the repository and worked on this branch. I made the pull request and didn't merge my topic branch to the master first. Is this correct? This is my first attempt for a pull request.,,,,,,
31070263,216,Issue,"Except the above comment I have a question regarding the check if a gist is stared method. We have to make  a get request to /gists/:id/star url and based on the response code (204, 404) return true or false. I couldn't find an easy solution to access the response code through API connection. Any suggestions on how to implement this? Shall I add an extra method to API connection to access the request response?",,,,,,
28383086,215,Issue,related to #216,,,,,,
28434954,215,Issue,"I'm going to bet we don't handle that at all, but I haven't tried it. We might need to customize this case. Either ""files"" is a dynamic object OR files deserializes into a dictionary. The dictionary approach is my preference.",,,,,,
28435014,215,Issue,"If ""files"" is a `Dictionary` I wonder if this just works.",,,,,,
28436731,215,Issue,I **may** have time to look into this on the weekend.,,,,,,
28436771,215,Issue,but while we are here what is the value in returning a response like that? would not a simple list be better?,,,,,,
28437184,215,Issue,it _would_ be better but for the sake of not overcomplicating the deserializing hooks (or breaking things completely) you can just enumerate the dictionary:,,,,,,
28437331,215,Issue,r u sure you would not prefer and handle the fact that it is a dictionary internally?,,,,,,
28441871,215,Issue,"I guess it depends on whether it's useful to look up files by name. If not, then an `IReadOnlyList` makes sense.",,,,,,
28442109,215,Issue,well u can still look up by name since the name is also on the file. would just need a linq statement instead of a dictionary lookup.  I think in this case there will be little perf difference. unless people have 1000s of files a gist... is this likely?,,,,,,
28442239,215,Issue,Not likely so i agree with the list. :),,,,,,
28442291,215,Issue,collaboration FTW :),,,,,,
28442350,215,Issue,BTW is there any other place where you guys are doing custom deserialization so i can follow the same approach/conventions?,,,,,,
28447333,215,Issue,look over here,,,,,,
28453023,215,Issue,ok so i noticed you guys already support dictionary. so i am being lazy and leaving it as that for now :)before i do a PR i have a couple of questions.1. Do u want a PR to master?2. Should I be reusing the common `User` for `Gist.User` and `GistFork.User`?3. In my test `Gist.User` returns null. Is this because i am doing point 2 wrong?,,,,,,
28453185,215,Issue,"1. Yes2. Yes.3. Not sure.On Wed, Nov 13, 2013 at 5:48 PM, Simon Cropp notifications.comwrote: ok so i noticed you guys already support dictionary. so i am being lazy and leaving it as that for now :)  before i do a PR i have a couple of questions. 1. Do u want a PR to master? 2. Should I be reusing the common User for Gist.User and GistFork.User? 3. In my test Gist.User returns null. Is this because i am doing point    2 wrong?  SimonCropp://github.com/SimonCropp/octokit.net/commit/0b0661aa1e74aa84bed2c21d3a2abf1d0b3c7713  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
28454719,215,Issue,Regarding question 3: Note: When using the v3 media type the ‚Äúuser‚Äù field will become ‚Äúowner‚ÄùI think this is now the default behaviour.![screen shot 2013-11-13 at 8 30 33 pm],,,,,,
28506700,215,Issue,"Ah, let's make sure we're requesting the v3 media type then.",,,,,,
29490494,215,Issue,Fairly certain we've sorted this with #225. Closing.,,,,,,
28360180,214,Issue,I do not trust this shiftkey-tester fellow.,,,,,,
28376108,214,Issue,I wouldn't trust him either,,,,,,
28422896,213,Issue,"Nevermind, turns out I was just behind the curvecc",,,,,,
28438229,213,Issue,Sorry 'bout that :grinning:,,,,,,
28177965,212,Issue,We won't see the effects until we publish a new package.,,,,,,
28177993,212,Issue,"Actually, NuGet added the ability to edit package metadata online. I'll try it. :)",,,,,,
28176749,211,Issue,Thanks! We really needed this!,,,,,,
28154782,210,Issue,Thanks! ![],,,,,,
28155274,210,Issue,ProTip: remember to `git clean -xdf` to tidy up any old versions of FAKE floating around,,,,,,
28159962,210,Issue,See my latest pull request. It addresses this issue,,,,,,
28176770,210,Issue,yay!,,,,,,
28176793,210,Issue,![flying-karate-kick]^^^ This is what  did to our old crappy build.,,,,,,
28177586,210,Issue,"ÔºüÂèëËá™ÊàëÁöÑ iPhoneÂú® 2013-11-11Ôºå14:10Ôºå""Phil Haack"" notifications.com ÂÜôÈÅìÔºö yay!  ‚Äî Reply to this email directly or view it on GitHub.",,,,,,
28187992,209,Issue,done and done. :sweet_potato:,,,,,,
28436855,209,Issue,All looks good from here![],,,,,,
28139178,207,Issue,"So  has an undocumented feature where it rejects you for having an empty repository:Thus, we can't implement this test in an automated way until we implement:- blobs - see #188- trees - see #194- probably references too - #130",,,,,,
28139186,207,Issue,"I've extracted the build script differences to another PR, and added notes about what needs to be updated after that",,,,,,
28140245,207,Issue,"Hmm, when you create a repository, just set [`AutoInit`] to true. That'll create a non-empty repository.",,,,,,
28140248,207,Issue,Or am I missing something?,,,,,,
28144836,207,Issue,aha!,,,,,,
28130196,205,Issue,"Thanks for picking this one up . Let's see where we want that test data to live, but aside from that I'm happy with this change.",,,,,,
28130266,205,Issue,"Thanks, what is your eta for pull + release?(desperately need it :)And yes testing against one of our repos is the mother of all brittle tests:)Sent from my iPhone On 9 nov 2013, at 17:02, Brendan Forster notifications.com wrote:  Thanks for picking this one up .  Let's see where we want that test data to live, but aside from that I'm happy with this change.  ‚Äî Reply to this email directly or view it on GitHub.",,,,,,
28126466,204,Issue,This one blows as well:,,,,,,
28126929,204,Issue,Could it be that the published_at needs to be nullable?,,,,,,
28130857,204,Issue,"Thanks, do you guys have CI setup so I can get a updated nuget?Sent from my iPhone On 9 nov 2013, at 17:26, Brendan Forster notifications.com wrote:  Closed #204 via #205.  ‚Äî Reply to this email directly or view it on GitHub.",,,,,,
28145509,204,Issue,"Yeah, I'll push a new NuGet release on the main gallery soon too.",,,,,,
28145650,204,Issue,"Thanks Phil!Sent from my iPhone On 10 nov 2013, at 08:03, Phil Haack notifications.com wrote:  Yeah,   I'll push a new NuGet release on the main gallery soon too.  ‚Äî Reply to this email directly or view it on GitHub.",,,,,,
28176957,203,Issue,"Not sure how to merge all of these into the pr #189  done something wrong here.This is fine. I closed that one. I'll review this one instead. By the way - I have 3 failing tests.  Search Repo Search Code Search IssuesBesides these failing tests, is this PR done and ready for review? Maybe I can look into those tests.",,,,,,
28184709,203,Issue,"Yes this PR is ready for review: I need some feedback on my class - `SearchTerm` More specifically the `sort` property.How do you want this to be implemented? Shall I change it to a string? Rather than an enum?For Optional Sort field. One of stars, forks, or updated. If not provided, results are sorted by best match.Optional Sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. If not provided, results are sorted by best match.sortOptional Sort field. One of comments, created, or updated. If not provided, results are sorted by best match.sortOptional Sort field. One of followers, repositories, or joined. If not provided, results are sorted by best match.I wanted this class to be used for all 4 searches - not sure how to implement that. I could create 4 classes and have each Search take in 1 specific class that will only contain the options for that search so `SearchRepoTerm` or `SearchCodeTerm` (for lack of better naming).If I turn the property `sort` into a string then we are leaving it upto Github.com to deal with the query string, if invalid it will ignore? I can then clearly document this in the code - inside the interface and class SearchClient and ISearchClient what the valid values are for this property?",,,,,,
28184866,203,Issue,By the way - something is not right here... You cannot see all the files I have made changes to? I think it may be because I am merging my changes into the branch hahmed/search-api - which contains all the previous changes I have already done?,,,,,,
28239880,203,Issue,By the way - something is not right here... You cannot see all the files I have made changes to?  I think it may be because I am merging my changes into the branch hahmed/search-api - which contains all the previous changes I have already done?Yep. This should have been created against `octokit\master`. No worries. It's a holiday here and I'm travelling soon so it may be a bit of a delay before I get to it.  you around to review?,,,,,,
28255563,203,Issue,it's cool.,,,,,,
28455957,203,Issue,"Aside from the failing tests and a bit of excess whitespace, this looks good",,,,,,
28478148,203,Issue,looks like this PR needs to be closed and open a new one that will get merged into master? I am merging my changes onto the incorrect branch?How do you want me to do this? Thanks,,,,,,
28478580,203,Issue,what do you want me to do about:  ?,,,,,,
28478746,203,Issue,That rebase looks real ugly... Something went :boom:,,,,,,
28498545,203,Issue,my psychic debugger thinks you need to get master up to date before doing the rebase,,,,,,
28535450,203,Issue,replaced with #226,,,,,,
28130053,202,Issue,From the spec: A URL for the image to use as the icon for the package in the Manage NuGet Packages dialog box. This should be a 32x32-pixel .png file that has a transparent background.The current one is 337x310px - so we should probably change that.,,,,,,
28177571,202,Issue,"Yeah, but on the website it's displayed as 48x48 on the package search results page and 128x128 on the package details page. I'll create a 128x128 and see if that scales down better. Otherwise we can meet somewhere in the middle.",,,,,,
28177824,202,Issue,![octokit-128x128],,,,,,
28089674,201,Issue,Good catch! :thumbsup:,,,,,,
28078372,200,Issue,"I saw a dull task, and thought I'd see how easy it was to contributeHa! Thanks a lot!![thumbs-up-keanu]",,,,,,
28074734,199,Issue,You guys are amazing! You get a chuck norris!![thumbs-up-chuck-norris],,,,,,
28096363,199,Issue,does it also identify duplicates? I noticed one of the proj files had a duplicate interface and no implementation class added,,,,,,
28115276,199,Issue,"Oooh, duplicate detection would be amazing. That often happens due to git merges.  maybe consider adding that? :smile:",,,,,,
28123258,199,Issue,duplicate detection should be easy now...,,,,,,
28125667,199,Issue,Maybe I find time for the autofix tomorrow.,,,,,,
28136261,199,Issue,This stuff is awesome... Where can I learn this voodoo?,,,,,,
28137330,199,Issue,that build issue is fixed over on ~~#207~~ EDIT: #208   all the magic is just in the [build.fsx] file but other stuff can probably be found in the [FAKE] repo.,,,,,,
28137793,199,Issue,F# FTW,,,,,,
28153319,199,Issue,Autofix for duplicates files can be found in #210,,,,,,
28103648,198,Issue,+:100: love it,,,,,,
28020251,197,Issue,"Ideally, contributors would only need to add a file to Octokit.csproj and run a build script (or even better just compile the solution) and we'd automatically add it to the other projects. A post-build step to update specific csproj files sounds like the simplest way to get things done. Only friction might be with modifying a csproj file as part of a build, but shouldn't be too hard to spike.",,,,,,
28025182,197,Issue,"So the FAKE folks [might do this] now that we are abe to detect missing files we might add a ""fix it"" task.  stay tuned.",,,,,,
28054411,197,Issue,See,,,,,,
29232381,196,Issue,"Wouldn't copying the comments to implementations just lead to having to maintain the documentation in two (or more) places?If I'm not mistaken Visual Studio currently uses Interface documentation comments if there's not an explicit documentation comment on the implementation, in essence achieving the desired result already.Not certain that this is the case in Xamarin but it would seem likely.Just wanted to double check that this hadn't been overlooked before I started digging in.",,,,,,
29641932,196,Issue,"Wouldn't copying the comments to implementations just lead to having to maintain the documentation in two (or more) places?Yes, it does. It'd be nice if we had an automated way to do this. If I'm not mistaken Visual Studio currently uses Interface documentation comments if there's not an explicit documentation comment on the implementation, in essence achieving the desired result already. Not certain that this is the case in Xamarin but it would seem likely.I don't believe that's the case. I think plugins like Resharper do this, but a vanilla Visual Studio will use the comments on the specific reference you have. So if you have a reference to `IFoo` it'll use comments on `IFoo`. But if you have a reference to the concrete `Foo`, it'll use comments from `Foo` whether or not `Foo` implements `IFoo`.If this has changed, I'd be happy to know!",,,,,,
29653789,196,Issue,"I don't believe that's the case. I think plugins like Resharper do this, but a vanilla Visual Studio will use the comments on the specific reference you have. So if you have a reference to IFoo it'll use comments on IFoo. But if you have a reference to the concrete Foo, it'll use comments from Foo whether or not Foo implements IFoo.Seems I am mistaken as this is indeed the case in 2012, I have not been able to check 2013 yet to verify that it's still the same there. Guess that's one of the drawbacks of always working with Resharper.I'll send a PR later tonight with the ones I have so far once I check that noone else has covered them yet.In addition to the client API's is there a desire/need to document other public interfaces?Also might give the automation some thought if I find the time for it. Seems as if it shouldn't be terribly difficult at first glance.",,,,,,
29657378,196,Issue,In addition to the client API's is there a desire/need to document other public interfaces?We'd like to eventually doc _everything_. So any docs you contribute is much appreciated. Also might give the automation some thought if I find the time for it. Seems as if it shouldn't be terribly difficult at first glance.:heart: :heart: :heart:,,,,,,
29743256,196,Issue,"I few points regarding automation.It seems to me that a system where we leave implementations uncommented and only generate comments during build, comments that never make it back into the source, might be the way to go here.This way we don't have to somehow keep track of which implementation comments were copied from base types and which ones were entered manually (assuming that there might be cases where we would want documentation that differs from the base type). Something that I'd think would have to be handled either with a custom marker of some type or by just deciding that all comments are inherited and overwritten every time. (Or some variation thereof)Implementing a custom build task that checks all types in the solution and finds the comments that should be copied is quite trivial using Roslyn. (Already threw together something that does this during lunch) I'm not yet familiar enough with Roslyn to say if it's as easy to actually do the copy and output the new source.Could also be that there are better alternatives than Roslyn for this specific task, it was just the first option that came to mind. (Ok, the second one that came to mind after going ""No, not writing my own parser for this"")Just some first thoughts, if anyone has extensive experience in this area now would be a great time to chime in ;)",,,,,,
29780239,196,Issue,"It seems to me that a system where we leave implementations uncommented and only generate comments during build, comments that never make it back into the source, might be the way to go here.Yeah, I think that could be a good interim solution. We could ignore any comments on the actual implementation.Ideally, we'd get these comments back into the source and simply always overwrite implementation comments with the interface comments.Roslyn sounds like a good bet to me!",,,,,,
29783611,196,Issue,"Always overwriting the comments and pulling them into the regular source would be easier than trying to keep them out. I was just concerned that there might be cases where an implementation should have different documentation than the interface/base type, in which case copying the comments into the source instantly becomes a lot less pretty.Also confirmed that I could complete the whole process from finding the missing doc comments, copying them and outputting the new source. So now it's just a matter of putting it all into a nice little package, which will probably take longer :)",,,,,,
29783936,196,Issue,"I was just concerned that there might be cases where an implementation should have different documentation than the interface/base type, in which case copying the comments into the source instantly becomes a lot less pretty.I'm not too worried about that. We can tackle that issue when we run into it. :smile: Also confirmed that I could complete the whole process from finding the missing doc comments, copying them and outputting the new source. So now it's just a matter of putting it all into a nice little package, which will probably take longer :)![nice-job-data]Exciting!",,,,,,
30009762,196,Issue,"At this point I have a build task that does the following:- It pulls comments from interface declarations down to class declarations if the class implements only one interface.- If a class implements more than one interface no comments are copied to the class declaration. - It pulls comments from interface members to implementation members. No consideration has been given to checking if a member exists on more than one interface.- Compares existing comments to avoid copying if the comments are already in place.- Maintains the correct indentation by checking the indentation before the declaration that it's being copied to.- Keeps any trivia that is not a documentation comment before the declaration that it's being copied to, to preserve regular comments and white space.Things we might want to change/add:- It currently does not copy comments from base classes to sub classes. Didn't see many base classes in the octokit code base so didn't make this a priority.- Make it skip comments if a member exists on more than one interface that's being inherited. Especially since the current behavior is rather unpredictable :)I should be able to get a PR for this sometime this weekend if nothing else comes up.",,,,,,
30010317,196,Issue,Amazing. /cc -ogre,,,,,,
30010328,196,Issue,/cc,,,,,,
32108050,196,Issue,"I've been going back and forth on a couple of minor issues with  hereAside from that, I think this is done!",,,,,,
32108796,196,Issue,:sparkles:,,,,,,
27999648,195,Issue,So yay it found it's first bug ;-),,,,,,
28006562,195,Issue,"Yep! So some folks pointed me to Unfortunately that requires Ruby. I'm thinking that something F# based as part of the build might be cool. But my key requirement is that contributors should be able to use Visual Studio to add files to the ""source"" project `Octokit.csproj` in this case, and all the other project files could be generated or fixed up.",,,,,,
28012928,195,Issue,"now that we are abe to detect missing files we might add a ""fix it"" task.stay tuned.",,,,,,
28197819,194,Issue,With the latest Fake build do I still need to add the files to the other projects?,,,,,,
28238698,194,Issue,With the latest Fake build do I still need to add the files to the other projects?Not manually. Just run `.\script\build.cmd` in the root of the repository to fix it up.,,,,,,
28238809,194,Issue,"I did it manually for this PR, but it is fantastic to know I won't have to in the future!!",,,,,,
28436047,194,Issue,"You'll need to merge master into this branch (probably some csproj conflicts yay!)EDIT: nope, `ApiUrls.cs`",,,,,,
28536676,194,Issue,I updated the Mono\* files inline and merged this in by hand. Thanks for the work.![],,,,,,
28537910,194,Issue,I'm sorry this needed the mono files updated.  I thought I did that.,,,,,,
28538014,194,Issue,"that's okay. I made a change recently to the script to make it more thorough after some changes slipped through, so it's not your fault.",,,,,,
28538326,194,Issue,"Thanks for the scapegoat...but I did it manually....so the blame, as insignificant as it may be, rests over here.",,,,,,
27991839,192,Issue,"Thanks! Unfortunately we haven't set up our CI to build external PR branches just yet, so I'm going to merge this into my own branch and push it up so I can fix the build before we merge this. :)",,,,,,
27988221,191,Issue,Great work! You forgot to add the property to `IObservableOrganizationMembersClient`. I'll merge this and do it myself. It's simple enough and I have no idea what timezone you're in. :),,,,,,
27988299,191,Issue,![thumbs-up-two-emma-stone],,,,,,
27993151,191,Issue,"D'Oh! Again, thank you for adding it :grin:PS I'm in Brisbane, Aus so UTC+10 :smile:---From: Phil HaackSent: 8/11/2013 3:38To: octokit/octokit.netCc: Henrik AnderssonSubject: Re: [octokit.net] Implement Observable Orgs Members API (#191)Great work!You forgot to add the property to `IObservableOrganizationMembersClient`. I'll merge this and do it myself. It's simple enough and I have no idea what timezone you're in. :)---Reply to this email directly or view it on GitHub:",,,,,,
27996773,191,Issue,No problem! Isn't it like 6 AM there?!,,,,,,
27996961,191,Issue,"Almost, 5:15 AM right now :wink:Date: Thu, 7 Nov 2013 11:15:18 -0800From: notifications.comTo: octokit.net.github.comCC: henrik.a.andersson.comSubject: Re: [octokit.net] Implement Observable Orgs Members API (#191)No problem! Isn't it like 6 AM there?!‚ÄîReply to this email directly or view it on GitHub.",,,,,,
27927468,190,Issue,:shipit:,,,,,,
28082984,189,Issue,I deleted my repo as I kinda forgot about this PR. That means I cannot really checkout this PR? What should I do - close this PR and start again? Or can I checkout this PR and make more additions?,,,,,,
28090409,189,Issue,"Did you delete it locally or on the server? I was able to grab the branch and push what you had to a `hahmed/search-api` branch on octokit.net. So if you need to fork it again, do so and then work in that branch.",,,,,,
28096429,189,Issue,"deleted it from Github.com - I hope I still got a local copy, I think I may have will need to check it out. Else I will work on",,,,,,
27970417,188,Issue,Is there a list of possible encoding types somewhere in the documentation?,,,,,,
27972515,188,Issue,My take away from the docs is that the encoding is `utf-8` or `base64`.,,,,,,
27972679,188,Issue,That is a completely reasonable way to read the docs and I missed it.  Enum coming up.,,,,,,
27974798,188,Issue,"Ok...this isn't as easy as I thought it would be.   'Utf-8' isn't a valid value for an enum, and if I use just use 'Utf8' the Json serializer fails to de-serialize correctly.  The options I see to go forward are a) leave it a string b) edit the SimpleJsonSerializer to scrub '-' from enum values coming in c) use a method that I don't know about...yet.",,,,,,
27996939,188,Issue,b) edit the SimpleJsonSerializer to scrub '-' from enum values coming inThat actually seems safe to me. A C# property can never have a `-` so we'd be ok here.,,,,,,
28448191,188,Issue,"Couple of little things to clean up, but you'll also need to merge master into here to resolve the issue with the `ApiInfo.cs` file.Looking good otherwise :metal:",,,,,,
28450949,188,Issue,Can you clarify how you would like me to fix the merge problem?,,,,,,
28452550,188,Issue,"if you've got master up to date, run this:This will pull in the latest changes - and you should see a conflict that needs to be resolved.",,,,,,
28535577,188,Issue,There's a couple of issues here which needs to be fixed:- Some files are missing from the Mono\* projects - just run `.\build.cmd FixProjects` and that'll sync them- the `Octokit.Tests.Clients.BlobClientTests+TheCreateMethod.PostsToCorrectUrl` fails -  should it be a `BlobReference` on the assert?,,,,,,
28538083,188,Issue,Definitely have to give credit where credit is due....the FAKE team did an awesome thing with that fix projects command.,,,,,,
28538192,188,Issue,There is another conflict in apiurls....it is probably from my other PR....give me a second and I'll merge it back into master and push it up.,,,,,,
28538509,188,Issue,If you could run `.\build.cmd FixProjects` to sync the new files with the Mono\* projects that'd be :sparkles:,,,,,,
28538701,188,Issue,That is weird.  I ran the command and committed the new project files before the merge and after the merge they disappeared.,,,,,,
28539468,188,Issue,Thanks for the contribution!![],,,,,,
27884795,185,Issue,Thanks !,,,,,,
27885012,185,Issue,Why do we have that prompt? Shouldn't we just exit after the build is done?,,,,,,
27886535,185,Issue,"-ogre I think the FAKE guy put that in there when he was helping to port our build to FAKE. Not sure why. I should have caught that.Good news is, we should be able to build our packages on MyGet now. :)",,,,,,
27893772,184,Issue,"Heh, thanks!",,,,,,
27886401,183,Issue,Thanks! :thumbsup:,,,,,,
27843486,182,Issue,whoops Nice spot,,,,,,
27821423,181,Issue,"Is this ready for review or a work in progress? Also, you may want to rebase this against upstream master or merge master into your fork. Either way is fine.",,,,,,
27821788,181,Issue,Work in progress... Just going to do a rebase now.,,,,,,
27822840,181,Issue,How do I do a git rebase onto upstream master?,,,,,,
27823288,181,Issue,"How do I do a git rebase onto upstream master?Heh, this is #DangerZone so be sure to ""back up"" your current work by creating a new branch.You should have a remote named `upstream` that points to the original octokit repository. To very, run:If you don't have a remote named `upstream`, you can run this command:Now we're ready to go. All we need to do is fetch the upstream master now and rebase against it.After that, you can force push to your branch.Keep in mind, force pushing is a bad idea for shared branches. Only do this for a branch that you're the only one committing to. :smile:",,,,,,
27825113,181,Issue,have I messed this up? I cannot tell... defo dangerzone lol.,,,,,,
27825353,181,Issue,"Yeah, that doesn't look right. So this is why we created that backup branch.We can simply get back to your original state like so:Then try this. Let's get your local master up to date with upstream master.This should get your fork's master up to date with what's on `octokit/octokit.net`.Then, you can simply do this:That'll merge master into your branch. You'll need to deal with any conflicts along the way.Then",,,,,,
27826340,181,Issue,sweet! Merge conflict fixed.,,,,,,
27876732,181,Issue,"For some reason this is failing because of [below] - anyone have any ideas?Build FAILED.t) (5) ->       (CoreCompile target) ->         Clients\IOrganizationsClient.cs(19,9): error CS0246: The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?) [C:\Projects\octokit.net\Octokit\Octokit-NetCore45.csproj]         Clients\OrganizationsClient.cs(29,16): error CS0246: The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?) [C:\Projects\octokit.net\Octokit\Octokit-NetCore45.csproj]) ->         Clients\OrganizationsClient.cs(29,16): error CS0246: The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?) [C:\Projects\octokit.net\Octokit\Octokit-Mono.csproj]         Clients\IOrganizationsClient.cs(19,9): error CS0246: The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?) [C:\Projects\octokit.net\Octokit\Octokit-Mono.csproj]Time Elapsed 00:00:20.81Running build failed.Error:Building ./Octokit.sln failed.   at Fake.MSBuildHelper.build(FSharpFunc`2 setParams, String project)   at Fake.MSBuildHelper.MSBuildWithProjectProperties.Invoke(String project)   at Microsoft.FSharp.Primitives.Basics.List.iter[T](FSharpFunc`2 f, FSharpList2 properties, IEnumerable`1 projects)   at Fake.MSBuildHelper.MSBuild-1.Invoke(IEnumerable`1 projects)   at FSI_0001.clo-3.Invoke(Unit _arg3) in C:\Projects\octokit.net\build.fsx:line 44   at Fake.TargetHelper.runTarget(String targetName)---## Build Time ReportTarget         Duration---Clean          00:00:00.0652982AssemblyInfo   00:00:00.0154656Total:         00:00:21.8387490## Status:        Failure  1) Building ./Octokit.sln failed.  2) CS0246: Clients\IOrganizationsClient.cs(19,9): The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?)  3) CS0246: Clients\OrganizationsClient.cs(29,16): The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?)  4) CS0246: Clients\OrganizationsClient.cs(29,16): The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?)  5) CS0246: Clients\IOrganizationsClient.cs(19,9): The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assemb## ly reference?)(Q)uit, (Enter) runs the build again",,,,,,
27881686,181,Issue,"I think I added the files to the netcore45 and mono lib but the project is still failing.I get:Build FAILED.t) (2) ->       (_GetDefaultResourceLanguage target) ->         C:\Program Files (x86)\MSBuild\Microsoft\VisualStudio\v12.0\AppxPackage\Microsoft.AppXPackage.Targets(2626,9): warning APPX1901: The DefaultLanguage property is either missing from the project file or does not have a value. The fallback language is set to the Visual Studio language: en-GB. [C:\Projects\octokit.net\Octokit\Octokit-NetCore45.csproj]) ->       (CoreCompile target) ->         Clients\OrganizationsClient.cs(29,16): error CS0246: The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?) [C:\Projects\octokit.net\Octokit\Octokit-Mono.csproj]         Clients\IOrganizationsClient.cs(19,9): error CS0246: The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?) [C:\Projects\octokit.net\Octokit\Octokit-Mono.csproj]Time Elapsed 00:00:16.60Running build failed.Error:Building ./Octokit.sln failed.   at Fake.MSBuildHelper.build(FSharpFunc`2 setParams, String project)   at Fake.MSBuildHelper.MSBuildWithProjectProperties.Invoke(String project)   at Microsoft.FSharp.Primitives.Basics.List.iter[T](FSharpFunc`2 f, FSharpList2 properties, IEnumerable`1 projects)   at Fake.MSBuildHelper.MSBuild-1.Invoke(IEnumerable`1 projects)   at FSI_0001.clo-3.Invoke(Unit _arg3) in C:\Projects\octokit.net\build.fsx:line 44   at Fake.TargetHelper.runTarget(String targetName)---## Build Time ReportTarget         Duration---Clean          00:00:00.0772344AssemblyInfo   00:00:00.0134185Total:         00:00:18.0443914## Status:        Failure  1) Building ./Octokit.sln failed.  2) CS0246: Clients\OrganizationsClient.cs(29,16): The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?)  3) CS0246: Clients\IOrganizationsClient.cs(19,9): The type or namespace name 'ITeamsClient' could not be found (are you missing a using directive or an assembly reference?)---(Q)uit, (Enter) runs the build again",,,,,,
27892759,181,Issue,"Ok, it looks like you need to update your fork with upstream master again. I fixed a few bugs in the build. Hopefully that'll get you going on the right path.",,,,,,
27900556,181,Issue,"sweet that's done now.Still getting this though:407 total, 1 failed, 1 skipped, took 10.881 secondsRunning build failed.Error:System.Exception: xUnit test failed.   at Fake.XUnitHelper.xUnit.Invoke(String assembly)   at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source)   at Fake.XUnitHelper.xUnit(FSharpFunc`2 setParams, IEnumerable`1 assemblies)   at FSI_0001.clo-4.Invoke(Unit _arg4) in C:\Projects\octokit.net\build.fsx:line 49   at Fake.TargetHelper.runTarget(String targetName)---## Build Time ReportTarget         Duration---Clean          00:00:00.0981773AssemblyInfo   00:00:00.0191360BuildApp       00:00:18.9605569Total:         00:00:37.4800148## Status:        Failure  1) System.Exception: xUnit test failed.   at Fake.XUnitHelper.xUnit.Invoke(String assembly)   at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source)   at Fake.XUnitHelper.xUnit(FSharpFunc`2 setParams, IEnumerable`1 assemblies)   at FSI_0001.clo-4.Invoke(Unit _arg4) in C:\Projects\octokit.net\build.fsx:line 49##    at Fake.TargetHelper.runTarget(String targetName)(Q)uit, (Enter) runs the build again",,,,,,
27926660,181,Issue,"Ok, I'm not sure you've merged the latest into your fork. That output you showed shouldn't happen.^^^ Try that and run the script again.",,,,,,
27946524,181,Issue,I have merged into master again but the same issue as above appears when I run that script. Not sure what I am doing wrong?,,,,,,
27946965,181,Issue,"That is fixed now - I can confirm the build is completing successfully. Anything else you want me to do for this PR?Update: realised I have not implemented the update team method, just going to do that now.",,,,,,
27951545,181,Issue,This looks complete to me know - let me know if I have missed anything. Thanks.,,,,,,
27952030,181,Issue,"The code for octokit.Reactive is not there - I am assuming you want that to be a new PR, so I will wait for feedback on this PR and if it gets merged I can have a crack at that.",,,,,,
27998133,181,Issue,"The code for octokit.Reactive is not there - I am assuming you want that to be a new PR, so I will wait for feedback on this PR and if it gets merged I can have a crack at that.Sounds good! I had a couple comments.",,,,,,
28046886,181,Issue,"I have added all those changes however I get a build error. Not sure what it is:build.fsx(45,21): error FS0039: The value, constructor, namespace or type 'ProjectSystem' is not defined(Q)uit, (Enter) runs the build again",,,,,,
28075545,181,Issue,I'll look into the build failure. Did you see my comment here?,,,,,,
28075877,181,Issue,Delete your local `.\tools\FAKE.Core` folder and then run the build. I think I'll make `build.cmd` automatically update it if it exists.,,,,,,
28080472,181,Issue,Sorry - cant believe I missed  that. I have this building now. Do I need to rebase again or is this good to go?,,,,,,
28080980,181,Issue,![thumbs-up-poehler]Thanks a lot!,,,,,,
28081821,181,Issue,"Thank you - my first real contribution to any open source software, learned a lot especially about git.",,,,,,
28090452,181,Issue,:sparkles: :cool: :sparkles:,,,,,,
27919197,180,Issue,I am working on this.,,,,,,
27809399,179,Issue,Looks good! :shipit:,,,,,,
27819289,179,Issue,I'm going to accept a couple more PRs today and then update this branch. :),,,,,,
27791723,176,Issue,"I think I know how to get this all working, but it's going to require taking a different approach, so no more CI noise for a bit.",,,,,,
27785639,175,Issue,Did it work?,,,,,,
27785753,175,Issue,Not so far,,,,,,
27792594,174,Issue,"Looking good! I had a few comments. If you'd like, let's iterate on this and get it in and perhaps you could do the Observable client as a separate PR. Would that be cool?",,,,,,
27799024,174,Issue,Sounds good to me :thumbsup:,,,,,,
27806923,174,Issue,"Ah, so this PR doesn't include a way to navigate to this client. I think we just need to add a property to `IOrganizationsClient` for this. I'll do it.![thumbs-up-30-rock]",,,,,,
27807212,174,Issue,"Yea, I just thought of that as I was walking to the train...I'll add it when I get home from work!---From: Phil HaackSent: 6/11/2013 5:59To: octokit/octokit.netCc: Henrik AnderssonSubject: Re: [octokit.net] WIP - Implement Orgs Members API (#174)Ah, so this PR doesn't include a way to navigate to this client. I think we just need to add a property to `IOrganizationsClient` for this. I'll do it.![thumbs-up-30-rock]---Reply to this email directly or view it on GitHub:",,,,,,
27807316,174,Issue,I'll do it. :),,,,,,
27807470,174,Issue,"Alrighty then, thanks! :smiley:---From: Phil HaackSent: 6/11/2013 6:03To: octokit/octokit.netCc: Henrik AnderssonSubject: Re: [octokit.net] WIP - Implement Orgs Members API (#174)I'll do it. :)---Reply to this email directly or view it on GitHub:",,,,,,
27787855,173,Issue,"Thank you so much for this. This is great work. I had a few nitpicky comments.I appreciate that you remembered to add the project files to the NetCor45 project. Most people (myself included) forget. Could you also add them to:- [Octokit-Monotouch.csproj]- [Octokit-MonoAndroid.csproj]Unfortunately, I could not add these to the Solution so they're easy to miss.",,,,,,
27788724,173,Issue,"No problem!  Happy to help :)Already working on patching up those little things.  As for the MonoTouch and MonoAndroid projects, I see them included within the solution, but as you can see they aren't ""included"" yet.  I can certainly add the references manually, but I figured I'd check to make sure that something hasn't gotten screwed up with my development environment.![octokit]Thanks again for the great lib, you guys!  Can't wait to contribute more :metal:",,,,,,
27790982,173,Issue,"I think those project types only work in Xamarin Studio. Is that right . So for now, manually editing them is our only recourse. Or installing Xamarin Studio and opening them in there.",,,,,,
27791375,173,Issue,"Ah, gotcha gotcha.  That makes much more sense.",,,,,,
28041425,173,Issue,How's this coming along? Need any help? Looks like it's out of date with upstream `master`. Do you know how to update it?,,,,,,
28041624,173,Issue,"Sure do, just haven't gotten the time to dedicate to it these last couple days unfortunately. Planning on getting everything taken care of this weekend, though!",,,,,,
28041705,173,Issue,Great! Carry on! :cake:,,,,,,
28084981,173,Issue,"I think those project types only work in Xamarin Studio. Is that right . So for now, manually editing them is our only recourse. Or installing Xamarin Studio and opening them in there.They work in Visual Studio, but only if you have a Xamarin license which costs a fair amount of :moneybag:. Don't worry about verifying the build or anything, just add in the files. If it works in Octokit.csproj it almost certainly works in the Mono version too.",,,,,,
28369707,173,Issue,"So I'm pretty sure that this is all taken care of, but it should be noted that integration tests can't really be done until the Trees API is implemented (unless I'm missing something here).  I'm a little hesitant to call this ""done"" until those are implemented, but as far as I can tell, I've added in everything I can.As always, feel free to let me know if I screwed up anything!",,,,,,
29149945,173,Issue,"A few more comments. Almost there! Please merge upstream master into your branch (or rebase it if you're into that sort of thing).Afterwards, delete the ""tools\FAKE.Core"" and then run `build.cmd` again. Our new build script will add any missing .cs files to the mono projects for you so you don't have to worry about it anymore. :smile:",,,,,,
29405491,173,Issue,Done and done.  Loving that little utility to handle adding in all of the referenced .cs files!  Very handy. :+1:,,,,,,
29406134,173,Issue,"don't thank us, thank ! :grinning:",,,,,,
29406322,173,Issue,"you're doing the Lords work, my son.  :beers:",,,,,,
29562996,173,Issue,I've dropped a few comments in based on my testing and review. It's coming together!,,,,,,
29563124,173,Issue,Thanks a lot man!  Sorry that it seems kinda like amateur hour up in here... I'll get these patched up pronto.,,,,,,
29563478,173,Issue,"don't sweat it, take your time.",,,,,,
30084279,173,Issue,anything left on this? I'll review it the next time I have internet access but let me know if there's anything particular I should look at.,,,,,,
30084474,173,Issue,"Yep, still working on a few more details, particularly getting the integration tests sorted out now that I see Trees have been implemented.  Will let you know when this is all ready for a review, though.",,,,,,
30090670,173,Issue,:sparkles:,,,,,,
27750587,172,Issue,Thanks! Good catches.![thumbs-up-alec],,,,,,
27750659,172,Issue,:thumbsup:,,,,,,
27883717,171,Issue,"Aight, let me come at you bro :smiling_imp: It's probably my own misunderstandings about this codebase, but i'm becoming less convinced of that. i'm not entirely confident about this, so please bear with me while i lay it out (in many, many words).i think that [Skipped test] might be important because i'm seeing the correct next page Uri overwritten by old parameters when running through the `ApplyParameters` method. i'm only seeing this happen in situations where parameters are passed into the [`GetPage` method]. ## Reproductioni tried to reproduce this using the Milestones client in the master branch, but i don't know any repos with enough milestones for more than 2 pages (:rage:)! Maybe you know a good one to test? Make sure you pass some request parameters into the original API call.i've seen this behavior crop up when [developing my own PR](#161) based around the starred API. Try the following:- Fetch up to [this commit] in [my PR](#161)- Use the following code:When i run this, i get stuck in a bad state always requesting page 2 while the next Uri shows page 3 in the query string.## What i think is happeningSeems to me this only crops up when passing request parameters into the original call because this leaves `parameters` non-null in the `GetPage` method ([ref]).When the code gets around to getting the `nextPageUri`, the old parameters are still there and overwrite the _good_ parameters that are in the `nextPageUri` given by GH's api.## The End?i hope that was clear enough. i'm still reasoning through how all this is happening in my head. Thanks for letting me externally process a bit.Thoughts? Am i just Doing It Wrong?",,,,,,
27887401,171,Issue,"When the code gets around to getting the `nextPageUri`, the old parameters are still there and overwrite the good parameters that are in the `nextPageUri` given by GH's api.This would be very bad if that's the case. Perhaps we need an integration test that creates a bunch of milestones and then runs through this. did you test for this by any chance? Is this a concern?",,,,,,
27887518,171,Issue,I'm hoping to write a test for this when i get a chance. A failing test would be a lot better than my wall of text!,,,,,,
27897201,171,Issue,"Bummer, a `per_page` parameter would be super helpful right now. i guess i'll add that to my personal list of PRs to create.",,,,,,
27897404,171,Issue,What do you need that for?,,,,,,
27897716,171,Issue,Just a convenience for the way i was thinking to add to the Milestones client integration tests. i wouldn't have to create very many milestones to test over a few pages.,,,,,,
27897762,171,Issue,"Sorry, that wasn't super relevant to this...",,,,,,
27916269,171,Issue,"When the code gets around to getting the `nextPageUri`, the old parameters are still there and overwrite the good parameters that are in the `nextPageUri` given by GH's api.Sounds like something overlooked as part of the tests but I'm not sure what. Let me explain:This test covers- ensuring that new values overwrite existing values when generating the URL- that existing values are not stripped out of a URLBut if something higher-up in the chain is passing incorrect parameters into this (the fact that it's getting stuck at page 2 makes me think that's the case), it's gonna probably get stuck in that loop. I'll have a look at your branch and see if I can see what's happening here.",,,,,,
27923177,171,Issue,See  for the fix. Apologies.,,,,,,
27931879,171,Issue,"Not a problem, thanks!",,,,,,
27775532,170,Issue,Where should this be exposed?  Directly in GitHubClient or is there a better place?,,,,,,
27788486,170,Issue,"Great question! For context, check out my response to a similar question: In this case, I think we want an `Activity` property of `IGitHubClient`. Make it an `IActivityClient` that only has properties. Add the client you wrote as a property named `Event`. For consistency, you might need to rename the client you wrote to `IActivityEventsClient` and `IObservableActivityEventsClient`. Or should it be `*ActivitiesEventsClient` Naming is hard.",,,,,,
27788877,170,Issue,"I was struggling with the naming myself.  In the issue you refer to an 'Activity', but the Github documentation really only refers to 'Events'.  I seriously considered just IEventsClient and drop the activity name all together.   (And now that I type this and paste the doc. link in I see /activity/events!!!  Damn naming.)",,,,,,
27790592,170,Issue,"Yeah, I don't think we use events anywhere else in Octokit so `IEventsClient` would be fine.",,,,,,
27790760,170,Issue,"So much for jumping the gun....Which would you prefer?  IEventsClient, or IActivityEventsClient?",,,,,,
27790830,170,Issue,So to summarise:Let's try that out for size.,,,,,,
27791052,170,Issue,OK....so the class structure will be IGitHubClient.Activity.Event.GetAll();  So we are going to add one more layer to map to what the GitHub docs have?,,,,,,
27792807,170,Issue,"So we are going to add one more layer to map to what the GitHub docs have?Yep. That's been our approach. If we don't like it, we can change it later. But I think it helps for now because we don't have much in the way of Octokit docs, but we have a rich set of API docs. This allows us to just tell folks our object model maps the API.",,,,,,
27792886,170,Issue,I'm good with it...consistency beats creativity ever freaking time.,,,,,,
27819603,170,Issue,Is there anything else this needs?,,,,,,
27819939,170,Issue,"It needs me to review it. :stuck_out_tongue:  I'm going to review it now. However there's one thing I already noticed.We have other projects that we need to include the new files in. For example, right click on `Octokit.Tests-NetCore45`, click the ""Show all files"" button, and include the new test you wrote in the project.Do the same for the new files that you added to `Octokit.cspoj` for the following projects:- `Octokit-NetCore45.csproj`- `Octokit-Mono.csproj`And if you're feeling really generous, do it for:- `Octokit-MonoAndroid.csproj`- `Octokit-Monotouch.csproj`These last two require hand editing. If you can't get to it, I'll do it. :smile:",,,,,,
27821364,170,Issue,"Great work! Not a lot of comments. Only one more essential thing.In the same way that you added an `Activity` property to `IGitHubClient`, we need to do the same for `IObservableGitHubClient`So it'll follow the same exact pattern.- `IObservableActivitiesClient` <- With a property named `Event` of type `IObservableEventsClient`- `ObservableActivitiesClient`- `IObservableGitHubClient.Activity property`",,,,,,
27825585,170,Issue,All makes sense.  Let me dig away on those.,,,,,,
27830161,170,Issue,That should be everything except the enum deal.  Please triple check the hand edited mono files...cause they are hand edited :),,,,,,
27886876,170,Issue,![thumbs-up-funny]Thanks!,,,,,,
27739578,169,Issue,It's to do with the `ApplyParameters` extension we use. Here's a failing test:cc  if he wants to look into this fix,,,,,,
27740482,169,Issue,"I've started a PR for this fix hereI haven't confirmed the milestones client works as expected, but that's easy to chase down now...",,,,,,
27847852,169,Issue,i notice 0.1.3 is out. did this one make it into the release?,,,,,,
27847938,169,Issue,"""Fixed bug in applying query parameters that could cause paging to continually request the same page""looks like it. so shall we close this?",,,,,,
27886119,169,Issue,Can you try it out?,,,,,,
27896868,169,Issue,Works on my machine,,,,,,
27926603,167,Issue,I have just pushed the Commits API implementation. Hope it is ok,,,,,,
27926975,167,Issue,I noticed that each time I ran `build.cmd` it replaces my shared `SolutionInfo.cs` with a previous version (version without `AssemblyVersionInformation` as an internal static),,,,,,
27927153,167,Issue,Delete the `tools/FAKE.Core` folder and run `build.cmd` again. It'll reinstall itself with the latest version.,,,,,,
27927565,167,Issue,"Deleting the `tools/FAKE.Core` folder fixed the `SolutionInfo.cs` issue.  But unfortunately the build falls over on Code Analysis errors (that are not present when building in VS).  These errors are not on classes I have created, however I am happy to fix this up if it has not already been raised elsewhere.Thanks for the quick feedback",,,,,,
27927838,167,Issue,I recently fixed up a bunch of CA errors. Did you update your fork from master recently?,,,,,,
27927966,167,Issue,I did just before pushing but i'll try againUpdate: Just pulled again.  `build.cmd' still has CA errors.  There are only 2 but they are repeated a few times,,,,,,
27928378,167,Issue,"If you don't mind, please address those fxcop errors. That's really weird. :smile:",,,,,,
27928653,167,Issue,"Great stuff! Just a few comments and we need to nail down that class name. I like `Identity` for now.One more thing, if you don't mind. We need to add the files that you added to `Octokit-mono.csproj` to the other two Mono projects. But they need to be edited by hand.- `Octokit-MonoAndroid.csproj`- `Octokit-Monotouch.csproj`I'll merge this whether you do this or not (assuming you fix everything else) but I'd be ever so grateful. :smile:",,,,,,
27928857,167,Issue,I can do the mono fixes with the rest of the fixes.  I'll have to do this tomorrow now as approaching 1am and head is getting a tad fuzzy.  Should be ready for you when you hit the office tomorrow.  Will set the title back to WIP:,,,,,,
28014622,167,Issue,Hopefully I have fixed all the issues you mentioned.  Turns out the CA errors were because my very british environment couldn't forgive you for leaving the 'u' out of `Colour` :smiley:,,,,,,
28015259,167,Issue,I have also noticed that when `#SIMPLE_JSON_TYPEINFO` is defined in `SimpleJson.cs` the json deserialization does not deserialize inherited properties.  I managed to reproduce this in a test and have made a fix in a new branch [].   : Line 1723 - 1745Let me know if you want me to PR this as it may be beyond the realms of what you want me to tampa with.cc: -ogre (I think I remember this is your domain),,,,,,
28036048,167,Issue,Send a new PR for that fix please.,,,,,,
28036105,167,Issue,![thumb-up-ironman]Thanks!,,,,,,
28036907,167,Issue,"Actually, never mind. I cherry picked that commit from you. Would you mind submitting that as a PR to If we end up upgrading our SimpleJson, I don't want our code to break again. :)",,,,,,
28058547,167,Issue,By do you mean...,,,,,,
28078280,167,Issue,Yep! That's the one. My mistake!,,,,,,
27723663,166,Issue,:shipit:,,,,,,
27723460,165,Issue,Flawless victory!,,,,,,
27705934,164,Issue,I try to fix this in FAKE to keep it backwards compatible.,,,,,,
27708094,164,Issue,Ok. seems to work. I put the generated AssemblyInfo class into the System namespace. This is already opened  in Octokit so it doesn't break.See,,,,,,
27666500,163,Issue,i was just doing that :),,,,,,
27702332,163,Issue,:shipit: but do heed my note about SimpleJson please. :+1:,,,,,,
27724039,163,Issue,I've got an upstream PR for SimpleJson here  which I'll add that to.,,,,,,
27665501,162,Issue,"perhaps not catering for the ""_"" in `html_url`?",,,,,,
27665594,162,Issue,most likely. We don't want to use the DataContractJsonSerializerStrategy inside SimpleJson but I suspect that we might have to change that soon.,,,,,,
27665619,162,Issue,well it is either add some custom serialization or rename the property :),,,,,,
27665625,162,Issue,"perhaps not catering for the ""_"" in `html_url`?If so, it's a regression, as that should work just fine (we handle the underscore in many other places). I'll look into this tomorrow morning.",,,,,,
27665736,162,Issue,-ogre Even with renaming the field to `Html_Url` the problem is still there. Also `Url` is not mapped either for Issue (?!?!)...,,,,,,
27665772,162,Issue,did a find usages on octokit for `Issue.HtmlUrl` and `Issue.Url`  and got nothing.is this expected?,,,,,,
27665800,162,Issue,should there be an `issue.json` here  with related tests?,,,,,,
27665921,162,Issue,"is this expected?No. There's a test [here] for deserializing an issue, but we don't check the specific properties. See  for some related discussion on serialization.",,,,,,
27667677,162,Issue,"Confirmed issue with upstream, here's a patch:",,,,,,
27667709,162,Issue,why bother with `Uri`? wouldnt a `string` be sufficient ?,,,,,,
27667744,162,Issue,Because we use them a lot:![screen shot 2013-11-04 at 6 35 21 pm],,,,,,
27667884,162,Issue,fair enough,,,,,,
27663366,161,Issue,i plan to include tests and ping someone when i think they're ready for review.,,,,,,
27663457,161,Issue,i plan to include tests and ping someone when i think they're ready for review.Sounds great!![],,,,,,
27708700,161,Issue,Hop on the force push :trolleybus: :trollface:,,,,,,
27723967,161,Issue,Hop on the force push :trolleybus: :trollface:R E B A S EF O RL I F E,,,,,,
27724581,161,Issue,Y U shift from key git practices like force push?,,,,,,
27745027,161,Issue,"OK, ! i want to fill out the rest of the starring API, but i'll make those separate PRs (unless you think it'd be good to do them here).",,,,,,
27745897,161,Issue,"At the moment the branch needs to have the merge conflict resolved.Once you've got master up to date, switch to your branch and run this:Then push that merge commit up and it should ""go green"".Regarding the other things, there's not much left:- List Stargazers- Check if you are starring a repository- Star a repository- Unstar a repositoryThe last two are probably closely related, but it's up to you as to how you'd like to approach it. -ogre do we have any pointers on getting test data into the integration test suite? It'd be nice if we could setup the test data as part of the setup/teardown of these tests...",,,,,,
27746232,161,Issue,"Sorry, i didn't see the merge conflict (too bad it's not shown right on GitHub to the person submitting the PR as well). Or am i just missing something?i know there's not much left, but i figured i'd get whatever input i could before moving on. i've already got them in the works...Thanks for the explicit instructions :smile:",,,,,,
27746779,161,Issue,i'm hoping that does it... although i've busted the build on my machine here in the process <[sad trombone]>.,,,,,,
27746879,161,Issue,"do we have any pointers on getting test data into the integration test suite? It'd be nice if we could setup the test data as part of the setup/teardown of these tests...As far as the tests, i can copy some json responses into the test fixtures and construct some tests around that. i don't mind throwing in my own API responses for stuff like stars. Is that what you are asking about here, ?",,,,,,
28041471,161,Issue,How's this coming? Need any help?,,,,,,
28059237,161,Issue,"Thanks for the checkup , i really appreciate it.i have a few commits that have been sitting around on my machine for a while that i haven't pushed up. i'll shove them up here and then ask a few questions i have.",,,,,,
28065102,161,Issue,"OK, that implements all of the starring API (if my memory serves).i would like to add more tests and would appreciate some direction in what tests you'd like added. While that's going on, i think this is ready for some review!i did change the `DeleteAsync` to return `Task` [in this commit] so i could verify that i was getting a `NoContent` back from the request. i think that was OK, but i want to call it out as something you may want to look at.",,,,,,
28066163,161,Issue,i also had trouble getting the FAKE builds going on my machine :frowning:. Sorry about that.Right now i get:Any ideas on why that might happen and how i can fix it?,,,,,,
28078465,161,Issue,Delete the `.\tools\FAKE.Core` folder and then run the build.,,,,,,
28080079,161,Issue,"Good work! Please address the comments I made. Also, please update your fork from upstream master (if you don't know how, I'll help you) and then run the following command:That will make sure the new files you added are also added to the MonoAndroind and Monotouch projects (they're not in the solution).Thanks!",,,,,,
28080215,161,Issue,"Funny, i just pulled from upstream this morning. This project is speedy.Thanks , i'll get on it.",,,,,,
28133582,161,Issue,"OK, ready for another round of review?",,,,,,
28157124,161,Issue,"OK, i took care of your latest suggestions.i changed the name of the client variable in activities from `Star` to `Starring` and i left the client name as `StarredClient`. i'm not sure if that's the way to go, but i tried to make it closer to GitHub's API docs.",,,,,,
28176463,161,Issue,"And you tested the crap out of this, right? :smile:This is great work! Thanks!![thumbs-up-peyton]",,,,,,
28202942,161,Issue,"Tests!? bwahahahahaha. Yeah, i tested this a lot, using both unit tests and a little console app just to make sure i wasn't living in a dream world where all unit tests pass, but nothing actually works (Pleasantville, maybe?).Thanks for the encouragement and the review, ! :metal:",,,,,,
27638685,160,Issue,"Nice work. I made some nitpicky commenst, but they can be addressed in a separate PR. Imma gonna merge this. :)![thumbs-up-batman]",,,,,,
27638470,159,Issue,We should set code analysis to run by default on every build.,,,,,,
27642064,159,Issue,Fixed in FAKE 2.1.528-alpha on NugetAs a reminder: Since Nuget 1.7.x always installs FAKE even if no newer version is detected on nuget.org I introduced  to keep local builds fast.So you have to delete the ./tools/FAKE/ to get the latest version.On your CI server this should be no problem since it should clean all subfolders and retrieve FAKE on every build run.,,,,,,
27684380,159,Issue,"du you want the fxcop task to run during the ""normal"" build or only on CI? There is a (very small) tutorial at .But what do we do if the dev has no FxCop installed?- Do you want to skip the task? And print a message like we do with the IntegrationTests.- Do you want to fail the build?- Do you want to commit FxCop into the repo? Could be a license issue",,,,,,
27703735,159,Issue,CodeAnalysis is a built in part of VS2012 now. So I was just going to set it on the project.,,,,,,
27706269,159,Issue,And so this will be something which is not checked during CI build?,,,,,,
27706523,159,Issue,"No, it would be. Code Analysis is actually part of MsBuild.We can just set it in the project file though. Should we do this only for the `Release` builds? I'm not sure. It might be nice to do it for all builds. But I'd wait till nothing breaks first. :)",,,,,,
27713372,159,Issue,Have you managed to get this running on your CI box? I've found it either needs VS installed (something I hate resorting to) or it needs several hoops jumping through (copying DLL's etc.) to get it working.,,,,,,
27722727,159,Issue,"Have you managed to get this running on your CI box?Yeah, it works fine. We use it for GHfW.For Octokit, we need VS on the CI box anyways because we build a Win8 library. :(",,,,,,
27724204,159,Issue,"I added code analysis to our Release build so it runs on CI successfully. See  for details. Set ComVisible(false) on the generated SolutionInfo.cs file to resolve some warnings.I personally think this is wrong. This takes the choice away from the developer. If you want to set ComVisible(false), I think you should probably do it on `AssemblyInfo` per project. Or better yet, `Fake` should generate `SolutionInfo` as a Partial class so we can add assembly attributes into our own non-generated partial `SolutionInfo`.",,,,,,
27724263,159,Issue,"I personally think this is wrong.Ok, never mind. I just realized this is configurable in the build. Doh!",,,,,,
27724299,159,Issue,"Wow, I didn't know Win8 lib builds need VS. MS are often too IDE focused :unamused:",,,,,,
27724564,159,Issue,"Wow, I didn't know Win8 lib builds need VS. MS are often too IDE focusedIt makes me :rage: with the heat of a 1000 :sunny:",,,,,,
27724614,159,Issue,Thanks  and everyone involved!,,,,,,
27725231,159,Issue,"Ok, never mind. I just realized this is configurable in the build. Doh!Correctamundo. Wow, I didn't know Win8 lib builds need VS.I think it's more ""running the tests"" than the actual building of libraries.",,,,,,
27638730,158,Issue,"Nice work so far. I ran out of time to review this, so I'll get back to it later. Do you know how to rebase this against the upstream master? If not, don't worry about it for now.",,,,,,
27639503,158,Issue,I added the missing comments and removed the redundant Actor class.  I think I did the rebase against upstream master okay:)  Thank you for reviewing the pull request!,,,,,,
27705143,158,Issue,Nice! Thanks!![daft-punk],,,,,,
27628032,157,Issue,Mono 3.x is 4.5 compatible,,,,,,
27630520,157,Issue,Non-standard and UNSTANDARD code is not compatible. Over.,,,,,,
27635146,157,Issue,"and I noticed the usual MIT license stamp, but at the .NET 4.5 grade, that is conflict of interest.I'm not clear on what this exactly means. Rationally, this tells me there is no separation between specific paradigms for target audiences (who either work with or without THEORY).Same thing - what's the licensing issue you think is happening here?",,,,,,
27635083,156,Issue,should this be a closed PR?,,,,,,
27641846,156,Issue,Yep.  I reverted that package split in FAKE for the moment since it broke all kinds of important stuff.,,,,,,
27609036,153,Issue,Check out the class `JsonHttpPipelineTests.TheDeserializeResponseMethod`.You should add a test there. Perhaps something like (but please fix this):,,,,,,
27611908,153,Issue,I managed to get the serializer to work by enabling the `DataContractSerializer` (in SimpleJson.cs).  Not sure if I should be altering that file so please let me know if I have to find an alternative solution.  From what I can tell the options would be one of the following:- Rename the `Tag` class to something other than tag and rename the `Name` property to `Tag` so that automatic property binding works- Implement attribute recognition on the `POCOJsonSerializer` (similar to `DataContractSerializer` but we would be able to identify our own attribute to recognize and not rely on `DataContract` exising on the class in question)Thanks again for your patience.,,,,,,
27612098,153,Issue,"Please disregard my last commit. The `DataContractJsonSerializer` did not resolve the issue.  I'll re-visit this in the morning, however I believe one of the above alternative solutions may now be required...",,,,,,
27614861,153,Issue,#NAME?,,,,,,
27614983,153,Issue,Rename the Tag class to something other than tag and rename the Name property to Tag so that automatic property binding worksLet's go with this. It's the easiest solution and should work immediately. Perhaps call the class `GitTag` for now.,,,,,,
27617964,153,Issue,"I've implemented the above changes and my tests are all passing, however after pulling the latest version of master an running the new build script (which is great) I receive test failures.  I've gone through these and they don't appear to be caused by me as they were all passing pre mergeHere is the result of the build:",,,,,,
27632499,153,Issue,"-ogre worked on the serializer recently. Got any ideas?Sorry I'm late getting to this,. Let's go with this. It's the easiest solution and should work immediately. Perhaps call the class GitTag for now.:+1:. For now, I'd like to avoid turning on data contract serialization if we can.",,,,,,
27705381,153,Issue,"Which test is failing? Also, this branch can't be merged. You'll need to update it with the latest from upstream master. Do you know how to do that?",,,,,,
27706224,153,Issue,"Yeah, I've been trying to keep it up to date with upstream master but will update again as it has been a while.Re the failing tests: When I run in test explorer inside VS2012 all tests pass except 2 which create private repo's (not allowed on my test account).  When I run the build.cmd in powershell 37 tests fail, all of which are throw `System.MissingMethodException` as in the screenshot.I was kind of hoping Issue #162 which referenced this pull request was related?",,,,,,
27706638,153,Issue,The 2 private repos test failures are fine since your account doesn't allow it. The `MissingMethodException` sounds like a problem we fixed recently. So hopefully an update fixes all that. :),,,,,,
27707264,153,Issue,"Fingers crossed.  I've merged with master and re-pushed. Let me know if you need anything else. FYI: I haven't been able to create any integration tests as yet as I am reliant on some other api's, which have yet to be developed as yet.  I hope that doesn't cause too much of an issue although it is something I plan to do.",,,,,,
27707870,153,Issue,"Thanks! This is good work!![thumbs-up-abed-2]I went ahead and merged this. Could you clean up the `this.` stuff up in a separate PR?As for integration tests, if you have time later, they'd be appreciated. But this is fine going in now.",,,,,,
27708746,153,Issue,I'll fix up the `this` keywords (can blame my Resharper settings for that).  I will also update the other issues you raised in a new PR.  Thanks for making my first OSS contribution as painless as possible.  I'll try and tackle some of the other DB APIs once the tags api is cleaned up.P.S. Loving the gifs,,,,,,
27607154,152,Issue,Thanks! :+1:,,,,,,
27582514,151,Issue,"I think breaking changes like this are just fine right now. That's one reason we're version < 1.0. , chime in if you disagree.",,,,,,
27582566,151,Issue,Allow my merging of this PR to stand in as my yes. :thumbsup:,,,,,,
27582582,151,Issue,"I mean, ""yes"", I do not disagree.",,,,,,
27585176,151,Issue,:cool:,,,,,,
27581746,150,Issue,:shipit:,,,,,,
27580663,149,Issue,Thanks!,,,,,,
27581197,148,Issue,"Is this ready for review? The description says ""Placeholder for work..."". Not sure what you mean by that.If this is work in progress, we tend to like prefixing the title with ""WIP:"".",,,,,,
27585721,148,Issue,Comment edited for clarification.,,,,,,
27594225,148,Issue,"I have a commit with tests in it, but before I push it up I am having problems with the build.  The Build command is complaining that it is missing the Microsoft.Windows.UI.Xaml.Csharp.targets file.  It has this same error on the master branch as well.  Any thoughts on fixing the build so I can run the tests that I wrote and make sure they run correctly?",,,,,,
27598195,148,Issue,Are you running Windows 8?,,,,,,
27598336,148,Issue,Yes.,,,,,,
27598516,148,Issue,Can you paste in the exact error you're getting? Everything builds fine for me. Have you installed the Windows 8 SDK?,,,,,,
27624815,148,Issue,It appears a reboot fixed it.,,,,,,
27625388,148,Issue,This is ready for review now.,,,,,,
27638610,148,Issue,"Nice work! The one thing that's missing is there's no way to reach this client. Probably need to add a property to `IIssuesClient`.And the implementation.After that, I'm happy to merge this. Are you up for implementing the Observable version of this in `Octokit.Reactive`?",,,,,,
27643245,148,Issue,I'm up for implementing the Observable version if you guys are up for some hand holding.  Honestly the reactive portion of this project was what interested me as I have been looking for an excuse to learn/play with it.,,,,,,
27686548,148,Issue,"Ok...and now for a little more Git handholding:)  I have my issue-comments-uri branch.  I have pulled the latest master branch from upstream and it has the latest commits, including the one I am interested in the ObservableIssueClient commit.  Am I going to screw anything up in the pull request if I rebase the branch to the latest master?",,,,,,
27704061,148,Issue,"I have pulled the latest master branch from upstream and it has the latest commitsI assume you pulled those into your fork's local master, right? Am I going to screw anything up in the pull request if I rebase the branch to the latest master?That should be fine. But when in doubt, create a ""save point"".That'll create a branch that's a copy of your current branch.Then rebase against the latest master and force push to your fork's branch and you should be a-ok.",,,,,,
27714702,148,Issue,This is ready for review now.  It has the observable class and tests to go along with it.,,,,,,
27717928,148,Issue,p.s. you are correct that I pulled upstream master into my master branch.,,,,,,
27732366,148,Issue,Thanks!![thumbs-up-computer-kid-gif],,,,,,
27580808,147,Issue,Whoa! That looks like a braindead bug. Thanks for the fix!,,,,,,
27538116,145,Issue,"Hmm, looks like there are 17 commits in here with stuff from other people. Did you make a mistake with rebasing?",,,,,,
27539581,145,Issue,I wasn't sure how to handle incorporating dependent changes.  Should I just wait until the others are merged into master and send a separate pull request?  I'm a bit new at this and not sure what the best practice is.,,,,,,
27540136,145,Issue,"Ah, in general I prefer to wait for them to land. For example, I found an issue with one of 's changes. Now that issue is in your branch too. :)",,,,,,
27542626,145,Issue,"It's not an issue, it's a feature.",,,,,,
27601872,145,Issue,"Cool, thanks for the heads up.  I'll wait until the Reactive Milestone work is pulled in and try again.  Should I submit a new PR when my changes are ready or attempt to rebase / clean up this branch?",,,,,,
27519244,144,Issue,Sorry for missing the `IObservableAssigneesClient` references here - you probably want to include `ObservableAssigneesClient` as well.,,,,,,
27530708,143,Issue,I think the problem is related to  It's probably not VS2013. It's that I use a Win7 PC in this case.,,,,,,
27534260,143,Issue,sounds about right. We should update the notes to indicate that.,,,,,,
27535008,143,Issue,Is it possible to convert this into a portable lib?  claims that it woks in the windows store and can be built on Win7.,,,,,,
27535201,143,Issue,"I mean one day you want to support mono, right?",,,,,,
27538294,143,Issue,Please reopen. It's not fixed.,,,,,,
27538624,143,Issue,"At this stage we are not able to make this into a Portable Class Library because of the licensing issues with HttpClient and non-Windows platforms. We hope this changes in the future, but must soldier on as-is.Octokit.net has a separate solution which uses the Mono HttpClient implementation [here] so you can build this in Xamarin Studio.In terms of pre-Windows 8 support, you won't be able to run the Octokit-NetCore45 tests either (the tests are actually run within a Windows Store app last I checked). How should we proceed?",,,,,,
27539468,143,Issue,I can live with working on my Win8 box.,,,,,,
28703582,143,Issue,"i still see this issue on my Surface Pro on Windows 8.1. Is this something that the new licensing agreements and #219 will fix?When i build through `build.cmd` i see:and then the message described at the top.i'm glad to see i'm not the only one that sees this message. For a while i felt like i was taking crazy pills.Also, when i visit the link for more information i land on a search page. It's **extremely** helpful :rage1:.",,,,,,
28704372,143,Issue,That's just FAKE reporting that MSBuild exited with code 1. The interesting part is above in the MSBuild output. Can you show more?,,,,,,
28706767,143,Issue,Sure! [Here's a gist] of what's immediately above along with the entire output from running one build.,,,,,,
28707654,143,Issue,Ah yes. I didn't read your comment correctly. So FAKE reports 'File 'Windows.props' not found'.Sorry I can't help. I don't know where to get this file.,,,,,,
28714375,143,Issue,"you're using VS2013, right? I think there might be a Windows 8/Windows 8.1 tooling difference here that we need to catch. I'll reopen this as a reminder to investigate it further.",,,,,,
28716105,143,Issue,"Yeah, VS2013.",,,,,,
28722143,143,Issue,"do you have VS2012 installed as well? I have a theory on what's happening, but don't have an environment with _just_ VS2013 to prove it.",,,,,,
28722299,143,Issue,"Unfortunately, not on this machine. I have it installed on a Win 7 machine. Can we use that? If not, i don't mind installing VS 2012 today.",,,,,,
28723467,143,Issue,"ok, so my theory goes:- VS2012 supports building Windows 8 Store Apps- Octokit uses a Windows 8 Store App for the Octokit-Net45Core project- VS2013 supports building Windows 8.1 Store Apps (and strongly suggests upgrading your Windows 8 Store App to Winodws 8.1).- you're being nagged to upgrade the project to Windows 8.1, because you don't have the Windows 8 tools![screen shot 2013-11-18 at 10 19 31 am]",,,,,,
28741143,143,Issue,Not sure. When i make that switch:...and rebuild. i still get yelled at:i thought i registered with their developer program/whatever to put out Windows Store apps. i'll make sure that's up to date as well and see if that helps me build this project.,,,,,,
28741227,143,Issue,VS2012 downloads are hard to find now. Maybe tomorrow i can dig around the MSDN dvd collection...,,,,,,
29192065,143,Issue,"Not sure if it's related, but I'm also having trouble building the sln in VS2013. 3 out of 4 builds break with the following errors/warnings:![24-11-2013 23-35-12]Anyone seen this before?",,,,,,
29193880,143,Issue,"Yes , I get those too. I believe it's related to this issue somehow.",,,,,,
29195625,143,Issue,"I actually managed to get rid of the errors (not the warnings) by performing [this hack]. Don't know what other consequences it might have, though. :worried:",,,,,,
29196020,143,Issue,"Actually, I misread those; I don't get the CA errors, but I _do_ get the warnings",,,,,,
29213311,143,Issue,These changes will become redundant when we switch over to PCL builds in #218 The only significant change is that PCL + VS2012 + CodeAnalysis is impacted (you need to upgrade to VS2013 to get those benefits) but we can work around that while people transition.,,,,,,
37710053,143,Issue,Any movement here? I'd love to take some _easy-fix_ items but I still can't get it to build.,,,,,,
37710242,143,Issue,what's your OS?,,,,,,
37710264,143,Issue,Win 8.1 vs2013... I assume at this stage I need win 8 with 2012?,,,,,,
37710285,143,Issue,"that's bizarre, it's exactly the same as what I've got. Which SKU of VS2013?",,,,,,
37710412,143,Issue,I've never had 2012 on this machine. I'm on 2013 pro.,,,,,,
37710477,143,Issue,can you share a gist of the diagnostic MSBuild output for machine? Might help me to spot if it's something VS2012-related that we should :fire: down,,,,,,
37710574,143,Issue,Do you mean run `build.cmd` with some argument that turns on diagnostic logging level?,,,,,,
37710692,143,Issue,"nevermind, I think I've spotted the issue.![screen shot 2014-03-15 at 11 46 10 am]In the `Octokit-NetCore45` project can you switch that to Windows 8.1 and see if that fixes it?",,,,,,
37710771,143,Issue,"Oh, and you'll need to change the target framework the `Octokit.Tests-NetCore45` to .NET 4.5.1.",,,,,,
37710938,143,Issue,"OK, after doing that, this is my [local `git diff`].The build fails still, here is the output:",,,,,,
37711747,143,Issue,"well there goes that idea.I've got a bunch of logistical things to chase up this afternoon, but tonight/tomorrow I'll test it out on a Win8.1/VS2013-only VM to see if I can recreate it.",,,,,,
37711819,143,Issue,"OK, I'll stay right here and wait for you, hurry back :smile:",,,,,,
62427917,143,Issue,I fixed this issue by changing the main project (start up project) from .Net 4.5 to 4.5.1I'm using VS2013. Hope that helps!,,,,,,
27538558,142,Issue,"Ok, It's going to take me some time to review this. Thank you very much for submitting it!One thing I wanted to point out right away: Nuget packages are restoredWe decided not to restore packages with Octokit. It's a relatively small library with very few dependencies. We simply commit the packages into the `/packages` folder. For an application with a lot of NuGet dependencies, I would definitely restore packages. But for Octokit, we're not.",,,,,,
27538623,142,Issue,"So if I understand this correctly, when we're ready to create a new release, we'll just add a release note with the new version and everything gets updated to that version? That's pretty nice!",,,,,,
27538940,142,Issue,"> So if I understand this correctly, when we're ready to create a new release, we'll just add a release note with the new version and everything gets updated to that version? Yep.",,,,,,
27538977,142,Issue,"One more thing. We can't remove `cibuild.ps1`. For now, we should just change it to call into the fake script just like build.cmd does. `cibuild.ps1` is a convention for our internal build server. We're planning to move to a public CI server, but we're in the middle of it right now.",,,,,,
27539037,142,Issue,"Man, I'm very excited about this change. This may be the nudge for me to finally learn F#. :smile: I'm trying it out on my local machine right now. :thumbsup:",,,,,,
27539181,142,Issue,One more thing (I know I'm asking for a lot). Check out this commit We have 2 different unit test projects that are in the same directory. I changed them to build to different directories. We'll have to account for that change here.,,,,,,
27575310,142,Issue,Anything left?,,,,,,
27579510,142,Issue,"Regarding the open question, I think `Environment.NewLine` is correct. Unfortunately the release notes feature of NuGet needs some serious work. We had hoped to add support for a subset of Markdown, but I don't think anyone's gotten to it.",,,,,,
27581335,142,Issue,I don't think anything's left. Let me try this out.,,,,,,
27581417,142,Issue,"Oh, one last thing. Could you bring back cibuild.ps1 and have it run the build?",,,,,,
27582431,142,Issue,I'm not sure if ba5057a is what you need for the CI server but it runs the build ;-),,,,,,
27583045,142,Issue,So I got latest and tried to run `cibuild.ps1` and I got an error. Does it work for you? It says .\tools\FAKE.Core\tools\Fake.exe doesn't exist. Should we commit that tool?,,,,,,
27583178,142,Issue,Ahh sorry. In the build.cmd it's downloding FAKE. Have to do the same here,,,,,,
27583963,142,Issue,"We probably should add that directory to the `.gitignore` so that my git working directory isn't dirty after I run the build, right?",,,,,,
27584142,142,Issue,I thought I did this!?,,,,,,
27584275,142,Issue,"BTW: One day when  is released we should remove the ""if"" statement and trust NuGet.At the moment NuGet reinstalls even if it is the same package.",,,,,,
27584415,142,Issue,should ignore FAKE.,,,,,,
27584586,142,Issue,"Ok, i'm testing it locally. BUild seems to work fine. Just 1 test failed during my test run.",,,,,,
27584627,142,Issue,"Also, do you mind merging master into this or rebasing against our master? I can't automatically merge this.",,,,,,
27586016,142,Issue,>  Just 1 test failed during my test run.Is this related to the build? All UnitTests pass on my machine.,,,,,,
27586058,142,Issue,877aec6 is rebased.,,,,,,
27586428,142,Issue,"Ah, so the failing test is an integration test and it's on my machine. `Maximum number of login attempts exceeded` No need to worry about that.One thing I noticed in looking at the build output is that the tests run more than once each. I'd expect to see one test run for each of the following:- Octokit.Tests.dll- Octokit.Tests-NetCore45.dll- Octokit.Tests.IntegrationThoughts?",,,,,,
27587468,142,Issue,have to investigate this.,,,,,,
27587806,142,Issue,Maybe  matches old stuff and we have to clean this path.Can you git clean -xdf and see if it only runs once?,,,,,,
27588194,142,Issue,Does 2841441 help?,,,,,,
27601710,142,Issue,How do we make `build.fsx` parameterized? I think it'd be nice if we could call it with the configuration we want to build. So you pass in `Debug` or `Release`,,,,,,
27609309,142,Issue,"Very nice! One last question, hopefully. When I run `script/cibuild.ps1` here's all the output I see.![-403]Before, I remember seeing a bunch of output and that it ran the unit tests. Did you change that? It's fine, I just want to make sure what I'm seeing is correct.",,,,,,
27609552,142,Issue,"Not a Powershell expert, but I think this has to do with the way you (?) wrote the original build script. see  I assume it's all captured in $output.",,,,,,
27610364,142,Issue,if you want to have this logged on the console than I can probably google how to do it.,,,,,,
27613973,142,Issue,"You are absolutely correct! I assumed it was something in your build script, but it was ours. Nevermind. :)",,,,,,
27614026,142,Issue,", Thank you for your persistence with this change! This is great work! I'm probably going to convert a lot of my projects to use this approach. :)![thumbs-up-bruce-lee]",,,,,,
27614154,142,Issue,"I assume it's all captured in `$output`.Yep. I remember now. We don't want to fill our build reports with a bunch of useless output, so we capture it and only display it all if it fails.However, I'd love to display a brief summary on success. I think the way to do that is to add ""markers"" in the FAKE output we produce and then have parse that out in the `cibuild.ps1' and`Write-Output` just that portion.It's not urgent, so I won't worry about it now.",,,,,,
27496411,141,Issue,cc,,,,,,
27513550,140,Issue,"Ok I tried to rebase on Octokit.Net master to get the build to function properly, and now I have a pull request that has a bunch of other peoples commits in it.  Any suggestions on how to fix this PR?",,,,,,
27537664,140,Issue,"Whoops! So in general, you should always do your work in a branch. Even when you're working in a fork. It makes these things easier.Probably the easiest way to fix this is to create a new branch and cherry pick your two commits into that branch.That way, the branch `issue-comments-uri` will have just the two commits you made. At that point, you can push this new branch to your fork.Then visit your fork on GitHub and there'll be a convenient button there to create a pull request.",,,,,,
27537854,140,Issue,"At this point, your fork's master branch is still messed up. We can fix that up.You should have a remote named `upstream` that points to the original octokit repository. To very, run:If you don't have a remote named `upstream`, you can run this command:After that, you should get your `master` up to date with the `upstream` `master`. This is one reason why I suggest always doing your work in a branch. Your fork's `master` should always match `upstream` `master`.Hope that helps!",,,,,,
27561615,140,Issue,Thank you for the help.  Not used to working with pull requests and this has definitely been a learning experience.,,,,,,
27493448,139,Issue,"I'm seeing some test failures on this branch, but not the serialization failures. Also, why the heck isn't CI running for anymore!?",,,,,,
27496738,139,Issue,"After fixing up the Release targets and fixing up CI, I see the serialization errors now.",,,,,,
27505292,139,Issue,All the tests pass on my machine. Weird.,,,,,,
27505365,139,Issue,"In fact, all the tests pass on my machine in both DEBUG and RELEASE builds.",,,,,,
27505535,139,Issue,Ha! I think I see the problem. :smile:,,,,,,
27506507,139,Issue,"OK, I have to run. I can repro this when running build.cmd locally.",,,,,,
27459933,138,Issue,Prereq for #126,,,,,,
27538437,138,Issue,"Thanks a lot for submitting this! I had one comment on something that looks incorrect to me.Also, would love to see some unit tests (or at the very least, an integration test).",,,,,,
27547206,138,Issue,"Now with ‚àû more tests, though no integration test that exercises paging.",,,,,,
27607230,138,Issue,Thanks!![applause-joker],,,,,,
28535541,137,Issue,that pr #226 is hopefully with the correct base. I think the commits look ok only 1 o/s issue then that should be cool.,,,,,,
28535558,137,Issue,Sorry about messing up with the other 2 PR's,,,,,,
31185071,137,Issue,"o/s issues for search apiFor all 3 below I have implemented the basic search api - however we need to add all the qualifiers to get this fully working, similar to Searching Repos.I will hopefully start on one of them pretty soon unless someone else decides to jump at it before me. (If anyone does, please do open a separate PR for each item below please)Searching IssuesSearching CodeSearching Users",,,,,,
31187520,137,Issue,Searching Issues Searching Code Searching UsersCaptured here: #274 #275 #276,,,,,,
28362693,136,Issue,"I started to work on this one and implemented ""_List comments on a pull request_"" but the returned object has a few extra fields compare to the documentation (`diff_hunk`, `original_position`, `original_commit_id`, `html_url`, `pull_request_url`, `_links`). As they're not documented I'm wondering if I should I also read those fields?",,,,,,
28441732,136,Issue,"Hmm, hey . Any ideas why these fields are not documented?They sound useful so I'm inclined to add them. But for now, don't worry about it till we hear back.",,,,,,
28443159,136,Issue,"Yup, those are legit. It looks like we need to [update our docs]. Patches welcome. :smile_cat:",,,,,,
28638943,136,Issue,I sent a pull request :smile:,,,,,,
27692732,134,Issue,how do you want org teams to be implemented (I am new to this so please bear with me).Would something like this work?Then should I add a property onto the org class calledJust wondering what the best way to go about this is... Thanks.,,,,,,
27704798,134,Issue,"Thanks for offering to chip in. Take a look at the other clients, especially the Orgs client to get an idea of how clients are implemented.For example, instead of `ICollection` we use `IReadOnlyList`.We also tend to create classes specifically for creating and updating entities. For example, we'd have a `NewTeam` and a `TeamUpdate` class for the `Create` and `Update` methods.Also, for the enum, use standard .NET naming conventions (aka Pascal casing) for the fields: `Admin, Push, Pull`.Our JSON serializer will fix it up to match what is expected by the API. Then should I add a property onto the org class calledNo, you'll need to create an `ITeamsClient` interface and implement it `TeamsClient`. Then add a property to `IOrganizationsClient` named `Team` of type `ITeamsClient`. make sense?",,,,,,
27765808,134,Issue,"It's cool, love to help - hope I can be of help.So far I got:Never understood this bit: Then add a property to IOrganizationsClient named Team of type ITeamsClient.",,,,,,
27791512,134,Issue,go aheand and open a pull request. Just prefix it with WIP to let us know it's in progress. Much easier to discuss this in the pull request. In pseudocode,,,,,,
27821528,134,Issue,"Does that mean you want the Teams Api to be only available to end users via OrgsClient.For example:OrgsClient.Team.GetAllTeams(string org);OrgsClient.Team.NewTeam(string name, Permission permission = Permission.Pull) //(default param)etc.I assumed you wanted the TeamClient to be separate like I did so in my PR?",,,,,,
27822540,134,Issue,Does that mean you want the Teams Api to be only available to end users via OrgsClient.Yep. We're trying to map our API to the structure of the GitHub API For context see:,,,,,,
28148096,134,Issue,if the above pr gets merged I think that is everything that I needed to implement this feature. Let me know if I have missed anything so I can get this feature fully wrapped up.,,,,,,
28176172,134,Issue,:cool: I found a potential issue with the PR. But most of it looks great!,,,,,,
27639635,133,Issue,"I'd like to take a stab at this one, I'm assuming this will be a ""sub-client"" of the OrganizationsClient?",,,,,,
27668007,133,Issue,that seems like the most logical approach,,,,,,
27668816,133,Issue,"Cool, since that's the way I've started implementing it :smile:Thank you and regards,Henrik AnderssonSent from my Windows Phone---From: Brendan ForsterSent: 4/11/2013 17:45To: octokit/octokit.netCc: Henrik AnderssonSubject: Re: [octokit.net] Implement Orgs Members API (#133) that seems like the most logical approach---Reply to this email directly or view it on GitHub:",,,,,,
27573024,131,Issue,I'd like to contribute.  Since the 'easy-fixes' have all been gobbled up I thought I'd take a crack at one of the API implementations.  Would this one be a good place to start? Seems to be one of the easier ones to implement...,,,,,,
27580409,131,Issue,"If you follow the patterns of the other clients, they should all be ""easy fixes"" to be honest. :smile:This is definitely a good one to start with. I'm happy to help if you run into problems.",,,,,,
27581306,131,Issue,"Ok, thanks.  I'll get cracking... do I need to publicly mark this issue as something I am working on or could someone else come along and fix it up quick-sharp?",,,,,,
27583207,131,Issue,Hopefully people will read the comments and see it's being worked on before they waste their time on it. I guess I could assign it to myself since you're not a member of the Octokit organization.,,,,,,
27584104,131,Issue,"No, don't worry, just wanted to be sure I wasn't missing anything",,,,,,
27598901,131,Issue,Should IObservableTagsClient be added to the IObservableGitHubClient? I noticed not all observable clients have been added and can't see the reason why?,,,,,,
27599500,131,Issue,"Great question! Let me answer the second part first: I noticed not all observable clients have been added and can't see the reason why?Some clients are ""sub-clients"". For example, when you navigate to the [Issues API] you'll notice there's an endpoint for issues. But in the right navbar, there are these other APIs such as [Assignees] and [Milestones].We've tried to mirror this structure. So the `IObservableMilestoneClient` isn't a direct property of `IObservableGitHubClient`. Instead, it's a property of the `IObservableIssuesClient`. And thus you can get to it by going to `client.Issues.Milestones`. Should `IObservableTagsClient` be added to the `IObservableGitHubClient`?This case is slightly different from the `Issues` scenario because there is no top level DB API. It's just a grouping of apis. However, I still think it might be beneficial to group all these DB related clients as properties of some `GitData` property.So what I'd suggest is this:Add the interface `IGitDataClient`. This interface would not have any methods. It would just have properties. Add `IObservableTagsClient` as a property of this new interface. Add this new interface as a property of `IObservableGitClient`/cc -ogre seem legit to you?",,,,,,
27599781,131,Issue,"I like that plan , although I think `IGitDatabaseClient` might be a better name, given the general ambiguity of `Data` (and in the API it's generally referred to as the Git DB API; not sure why we chose Git Data for the menu).",,,,,,
27599905,131,Issue,:thumbsup: to `IGitDatabaseClient` and have the property be `GitDatabase`.,,,,,,
27600258,131,Issue,"Thanks for the speedy response guys.  That sounds good to me, I'll implement that now.",,,,,,
27601039,131,Issue,Just to clarify `IGitDatabaseClient` should live in the `Ocktokit.Reactive` project but should _not_ be `IObservableGitDatabaseClient`,,,,,,
27602117,131,Issue,"Ah, good question. No, all of the client classes in `Octokit.Reactive` should have `Observable` in the name.### `Octokit`### Octokit.Reactive",,,,,,
27602362,131,Issue,I thought as much but just wanted to clarify.  Thanks again.,,,,,,
27608577,131,Issue,Hope the PR is ok (usual first time nerves).  Thank you both for your guidance through this.  If the Tags implementation is ok I'd be happy to try and complete the remaining DB API tasks.,,,,,,
29560205,131,Issue,Closed via #153,,,,,,
27888287,130,Issue,Looking at the sources the client should be implemented in the IGitHubClient interface exposing itself as a property.Am I right?,,,,,,
27893966,130,Issue,"No, this client should be exposed as a property of [`IActivitiesClient`].I'm thinking the interface for this client should be `IReferencesClient`",,,,,,
27895755,130,Issue,"Okay, I'm going to implement the References API in the ActivityClient.Thx for the heads-up!",,,,,,
27923836,130,Issue,shouldn't this be under the IGitDatabaseClient?,,,,,,
27923896,130,Issue,shouldn't this be under the IGitDatabaseClient?Yes.,,,,,,
27927247,130,Issue,Yes! Whoops! Sorry about that.,,,,,,
27458749,127,Issue,More better?,,,,,,
27459053,127,Issue,![applause-hogwarts]Thanks!,,,,,,
27457749,126,Issue,"I'd love to help, but am crazy new at this - just cloned the repository and looking through it now.",,,,,,
27458336,126,Issue,great! You can look at the other Observable clients to get an idea on what to do. Let me know if I can help in any way. I recommend doing your work in a branch of your clone. :),,,,,,
27459009,126,Issue,I'll take care of an `IObservableMilestonesClient` for you to use in `IObservableIssuesClient`,,,,,,
27459138,126,Issue,thanks!  I'm having trouble executing all of the tests after working through the setup / build instructions - 32 of them fail with a `System.MissingMethodException` on a Task method.  Looks like it's tied to test classes with async tests?,,,,,,
27459317,126,Issue,I can see the same thing here. Investigating.,,,,,,
27459741,126,Issue,Appears to be some shims we had in for .NET 4.5 compatibility are no longer necessary. Sending up a PR now.,,,,,,
27460152,126,Issue,#139 will fix this issue (ignoring the test weirdness),,,,,,
27482173,126,Issue,"Thanks , as I was working on it I just realized I need that too :+1: - what's the best way to incorporate your changes?  Should I just wait until it gets merged into master?",,,,,,
27482877,126,Issue,"that took care of the test issues on my side, except for four of the integration tests (creating a new private / public repository, retriving closed issues, and ""IsALukeWarmObservable"").  I would expect the private repository test to fail with the account I'm using but it looks like it's creating public repos just fine.",,,,,,
27490910,126,Issue,what's the best way to incorporate your changes?To rebase your changes on mine:,,,,,,
27531771,126,Issue,Here's a pull request - let me know what I can do to make it better!,,,,,,
27960135,126,Issue,Is there anything left on this?,,,,,,
27454793,125,Issue,Seems legit :thumbsup:,,,,,,
27454901,125,Issue,I'm good with OCD.  Honestly some days I need a little more.,,,,,,
27454933,125,Issue,it's always easy to be OCD with someone else's code,,,,,,
27456991,125,Issue,Thank you!![applause-oscars],,,,,,
27503390,125,Issue,"Pro tip. If your commit message incudes the text ""Fixes #XXX"", it will close issue XXX when we merge the commit into the master branch. :smile: This Fixes #115",,,,,,
27457043,124,Issue,Doing the lord's work! :shipit:,,,,,,
27453076,123,Issue,:shipit:,,,,,,
27451245,121,Issue,"Just one question. I am not sure how to evaluate this. Also, you might need to fix this so it merges.",,,,,,
27451383,121,Issue,:shipit:,,,,,,
27450487,119,Issue,or even better: open up your CI ;-),,,,,,
27450838,119,Issue,"I used  in the past for ColorCode, but I'd rather find a true CI host. Most of the ones out there don't currently quite do all we need (building all branches is a big one).",,,,,,
27451007,119,Issue,"I repeat ""or even better: open up your CI ;-)""",,,,,,
27451105,119,Issue,"I repeat ""or even better: open up your CI ;-)""I'm not sure we even can just for this project. That would be kind of ideal. Then again, I'd rather do this on something like Travis CI or AppVeyor.",,,,,,
27451227,119,Issue,"I repeat ""or even better: open up your CI ;-)""It's not something that can be opened up.",,,,,,
27451340,119,Issue,I have no idea what the status is of TravisCI and Windows - can someone translate [this insane issue thread]?,,,,,,
27451463,119,Issue,I have no idea what the status is of TravisCI and Windows - can someone translate this insane issue thread?I don't think it's quite ready for public use. Still waiting on the announcement.,,,,,,
27452671,119,Issue,Let me rephrase that: I don't know any public .NET CI server apart from,,,,,,
27456485,119,Issue,"I used  in the past for ColorCode, but I'd rather find a true CI host. Most of the ones out there don't currently quite do all we need (building all branches is a big one).How do you mean ""true CI host""? TeamCity should be able to support building all branches... /cc",,,,,,
27456570,119,Issue,"How do you mean ""true CI host""? TeamCity should be able to support building all branches...Poor choice of words; sorry. I meant designed to be CI-as-a-service.",,,,,,
27456704,119,Issue,"How do you mean ""true CI host""? TeamCity should be able to support building all branches...Also, I didn't mean to say TeamCity doesn't do this.",,,,,,
27457939,119,Issue,"Hi all, I run the CodeBetterCI server, (thanks for the ping, ) and you're welcome to host this project on CodeBetterCI if it meets your needs, since all we require is an open source license, which I see you have. BTW, Your MIT license would be nicer if it had a title on it, though you do at least have the title on your README-take pull requests?Regarding your question about branches, see this post by Hadi: It's talking about pull requests, but given that they're branches, it should be easy to configure something similar for other sorts of branches. (Hopefully I'm not completely mischaracterizing that since I'm talking to people who would actually know..ahem.)Anyway, if you have other questions about  or TeamCity's capabilities, let me know and I'd be happy to help!",,,,,,
27458305,119,Issue,Hi  that sounds like exactly what we need. What do we need to do to try it out?,,,,,,
27458420,119,Issue,Hi  that sounds like exactly what we need. What do we need to do to try it out?I think I still have an account there for ColorCode. I'll see if I can dig it up.,,,,,,
27458657,119,Issue,"Anyone can create an account over there - of course I can reset passwords if you need it, -ogre !  has a bit of info about the build server - mostly about what is NOT on the build agents. Anyway, once you log in, you'll see at the top is a little yellow box with a link to a bit of info about a form to request access (easy to make sure we get all the info we need if you fill that out) Fill that out and I'll get your build set up.... and whoever you want to be an admin on the project can be-just specify who you want. (can be multiple people)",,,,,,
27473088,119,Issue,#NAME?,,,,,,
27475810,119,Issue,I'm tracking my progress for #116 at It compiles locally but seems there are some bits missing on the CI server.,,,,,,
27485453,119,Issue,"TravisCI is GREAT but doesn't support Windows/actual .Net, and though the same project can do both, it's a) not a freebee to get it running\continuing to run on both, and b) having CI for one and not the other (either way) is definitely not ""enough""-we support Mono too (some people like their stuff all in one place) and I see the trouble they have getting their builds all to work at the same time, especially initially. If you all want to support Mono and not .Net, TravisCI will be enough. Otherwise, you're stuck with me too. Given the way TravisCI operates-not to mention that insane thread  linked, it's hard to imagine them supporting a Windows build anytime soon, if ever, given their approach and the current automation-unfriendliness of Windows... at least as compared to Linux. Looks like that build will need to run on our newer server that supports .net 4.5... I just moved that build over (builds get moved there on an as-needed basis until we work out upgrading all the servers). But your main problem is that it looks like we're missing a targets file your project is expecting. (no VS on the servers) Easiest fix - I'll see if I have it locally and copy it up. Or maybe you have it if I don't. We'll get it working. (Also, I've got the same id everywhere, email me at gmail or tweet me if you'd like to take this off-thread)",,,,,,
27492241,119,Issue,": We love Travis too, but until they have true Windows support it's just not viable., : We currently depend on VS being on the CI server for the RT projects.",,,,,,
27493364,119,Issue,-ogre actually it's worse. On my machine with VS2013 I get:On the VS2012 machine the build is ok.,,,,,,
27512727,119,Issue,"Can you please open a separate issue about VS 2013? I'm not using it yet, and I'm not sure  is either.",,,,,,
27513768,119,Issue,see #143,,,,,,
27728035,119,Issue,"CodeBetter CI can't accommodate Octokit.net for now because we need VS 2012 in the server. Internal CI is working for now, so that's okay, and I'll continue to look at other options.",,,,,,
28446007,119,Issue,"Does Travis CI support very recent version of Mono? That would honestly get us like 95% of the value of CI, the platform differences should be really quite minimal.",,,,,,
28452968,119,Issue,"Honestly, I'm not that familiar with TravisCI's capabilities, so can't helpyou there, unfortunately-I can speak for CodeBetterCI, though, which has aMono build agent you're welcome to use-and if it doesn't have a version ofMono that works for you, we can fix that.On Wed, Nov 13, 2013 at 5:44 PM, Paul Betts notifications-at-github.com|github|j4464d63qt.com wrote:   Does Travis CI support very recent version of Mono? That would honestly get us like 95% of the value of CI, the platform differences should be really quite minimal.  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
29352695,119,Issue,I'm going to keep this open just a bit longer until I switch the hooks over to use [QED].,,,,,,
29352742,119,Issue,"Whoops, curse that magic syntax",,,,,,
29969812,119,Issue,"I've switched the web hook to point at QED for builds, so I'm closing this.",,,,,,
29970217,119,Issue,you should link the QED build in the readme,,,,,,
29974155,119,Issue,done,,,,,,
27487825,118,Issue,"Hi,I added a IntegrationTest target for this. But how do you want to specify the user?Evironment-Variable? Build-Param? Constant?Cheers,Steffen",,,,,,
27489104,118,Issue,"Sorry , I should have mentioned when I created this issue that we use [an environment variable] and [an xUnit class] to run the integration tests. All the code is done, I just need to set the environment variables up on our current CI server (and maybe revisit this when we move to a new CI server).I'm so sorry you did that work because I didn't note this adequately!",,,,,,
27491229,118,Issue,No it's all fine. Then my solution will work out of the box.,,,,,,
27524293,118,Issue,yep integration tests work. see You can set it using environment variables OR in the build.bat like:,,,,,,
27449865,117,Issue,Looks good! :shipit:,,,,,,
27450848,117,Issue,![thumbs-up-jackie-chan],,,,,,
27449860,116,Issue,Shameless plug:  - it even works on mono (sometimes).,,,,,,
27450920,116,Issue,"Ha! Well this is less about choosing a build platform and more about doing the right steps in the first place. Right now, we have to manually update our nuspect files for each release. That's dumb.",,,,,,
27451189,116,Issue,just saying..,,,,,,
27451308,116,Issue,"That looks like I'm reading Greek. But tell me something, what does this do?Is that generating the nuspec? If so, I'm sold. As long as this'll work on MyGet. :)",,,,,,
27451622,116,Issue,"It's generating the nuspec (by replacing placeholders in ), building the package and (if it's finding the key in the params) it publishes it on the nuget server.",,,,,,
27451678,116,Issue,That is very elegant. I really need to learn F#. Would you like to submit a PR that ports us to Fake?,,,,,,
27451704,116,Issue,yep I'd like to do that :-),,,,,,
27451706,116,Issue,Though we don't need the automatic publish part. I'll do that from MyGet.,,,,,,
27452025,116,Issue,"Also, for Octokit.Reactive, we should just call nuget.exe against the nuspect. I'll update our build script to do that.",,,,,,
27452332,116,Issue,I'll send you a PR tomorrow. Just to clarify the ' (fun p ->  {p with ..}) ' part. The idea is: we give you a default record with all the properties filled in by our best knowledge (e.g. we search for nuget.exe in every subfolder). And now you can overwrite it.,,,,,,
27453245,116,Issue,"So if I happen to install a new package into Octokit.csproj, does the script pick that up and fix up the package without me having to do anything?",,,,,,
27453254,116,Issue,"In other words, does it know to add that as a dependency in the resulting package?",,,,,,
27479541,116,Issue,is  what you meant?,,,,,,
27448797,115,Issue,:+1:,,,,,,
27449237,115,Issue,#109 is not resolved.,,,,,,
27478279,115,Issue,Is there anything left in this issue?,,,,,,
27503482,115,Issue,Nope!,,,,,,
27447808,114,Issue,"This not only prevents Mono users from using the tool but also prevents it's usage in open source projectsI'm going to submit a PR to add Xamarin.\* / Mono builds, and they won't have any reference to Microsoft.Bcl.Async",,,,,,
27447816,114,Issue,This not only prevents Mono users from using the tool but also prevents it's usage in open source projects.Note that we don't distribute these with our code. They're only used to compile the project. You can look at the NuGet packages to see that.,,,,,,
27447844,114,Issue,"Also, see",,,,,,
27447858,114,Issue,nice!,,,,,,
27450020,114,Issue,#117 has dropped the Microsoft.Bcl.\* packages and targets .NET45,,,,,,
27450823,114,Issue,":cake: in my face! I messed that one up, but we fixed it. Thanks !",,,,,,
27447338,113,Issue,Ack! I think I did this as a force of habit. I'm used to writing code that calls tasks from an application and not used to writing task based libraries. :stuck_out_tongue: Would you want to send a PR to fix it up? Is there any real difference under the hood for those watching from home?,,,,,,
27447397,113,Issue,"Is there any real difference under the hood for those watching from home?At the IL level I suspect there's some unnecessary wrapping and unwrapping of tasks, but that's something we can chip away at over time.",,,,,,
27447461,113,Issue,":+1: to fixing this, it'll save an extra marshalling stuff back to the calling SyncContext (i.e. the ""You called this on UI thread so Imma make sure it comes back on UI thread"" stuff).",,,,,,
27448013,113,Issue,Seems like low hanging fruit for someone interested. :smile:,,,,,,
27452325,113,Issue,"Also worth mentioning: for any (valid) remaining uses of async/await, consider using `ConfigureAwait(false)` to avoid the marshaling costs that  mentions.[Stephen Toub says it best]: As a library implementer, it‚Äôs a best practice to always use ConfigureAwait(false) on all of your awaits, unless you have a specific reason not to; this is good not only to help avoid these kinds of deadlock problems, but also for performance, as it avoids unnecessary marshaling costs.",,,,,,
27452790,113,Issue,"Agree with what  says, any time we legit use `await`, we have to suffix it with `.ConfigureAwait(false)`.",,,,,,
27453255,113,Issue,"R# can automate (simple instances of) this - search & replace:With:With the appropriate placeholders - you should constrain `ex` to `Task` isn't covariant in `T`), or when awaiting observables.Unfortunately [R# bug RSRP-274520] makes this harder than it should be (R# strips the comments and access modifier from any methods affected), so you can't really use automated replace.At the least this helps to locate them, it's something I've added to my custom patterns catalogue.",,,,,,
27453296,113,Issue,"Thanks! When Steve Toub speaks, I listen!",,,,,,
27726527,113,Issue,can we close this now?,,,,,,
27727097,113,Issue,:boom:,,,,,,
27902023,112,Issue,I didn't phrase the fix correctly in the pull request.  Please close this.,,,,,,
27446762,109,Issue,:shipit:,,,,,,
27447290,109,Issue,If I look at the specs at  I don't see the problem.looks like the test. But it doesn't compile here.I use Octokit.Reactive via Nuget.,,,,,,
27447556,109,Issue,"Ah, if you use Octokit.Reactive:You can of course combine that into a single statement. We should probably provide an easier to use ctor for ObservableGitHubClient.",,,,,,
27447688,109,Issue,ProductHeaderValue is missing,,,,,,
27447711,109,Issue,"If you're interested in contributing, that's some low hanging fruit. :smile:",,,,,,
27447828,109,Issue,haha.Please fix it until the next 1000 devs are complaining ;-),,,,,,
27448119,109,Issue,I mean it would be cool to be the first contributor (apart from github) but you published blog posts ;-),,,,,,
27448818,109,Issue,I opened a separate issue for the `ObservableGitHubClient` constructor.,,,,,,
27448970,109,Issue,I switched to plain Octokit - same here.,,,,,,
27449045,109,Issue,Please reopen,,,,,,
27449210,109,Issue,Have you referenced System.Net.Http and added `using System.Net.Http.Headers;`?,,,,,,
27449364,109,Issue,Please add this to the readme. VS2013 is not telling me I have to add it.Then I get:,,,,,,
27449496,109,Issue,"The code snippet in the README isn't intended to be a full example, and is missing a number of other using statements and such as well. It's just to give you a gist of how to use the library. We'll be adding some true samples soon, per #107.As for the other problem you just hit, we're looking at it. I'll create a separate issue for that.",,,,,,
27449516,109,Issue,ok this one is really weird. I can't reference the dll. Need to investigate. But please add System.Net.Http to the docs.,,,,,,
27449572,109,Issue,even if it's not intended  as a full example. A link to a getting started would be nice.,,,,,,
27449656,109,Issue,"even if it's not intended as a full example. A link to a getting started would be nice.Yeah, we'll definitely link to the full samples as soon as we have them up. Thanks for letting us know, and for giving that code a go! :smile:",,,,,,
27449991,109,Issue,To get that sample in the readme working you have to install the Microsoft.Bcl.\* pkgs as that's the System.Threading.Tasks dll it's looking for. Once I installed those pkgs it worked a treat...,,,,,,
27450046,109,Issue,To get that sample in the readme working you have to install the Microsoft.Bcl.\* pkgs as that's the System.Threading.Tasks dll it's looking for. Once I installed those pkgs it worked a treat... is fixing things up so that you won't have to do that. We'll have a new version up on NuGet shortly.,,,,,,
27450115,109,Issue,:thumbsup:,,,,,,
27455382,109,Issue,We've just published 0.1.1 to NuGet which fixes this issue with `Microsoft.Threading.Tasks`,,,,,,
27456119,109,Issue,"Yep, tested and it works like a charm",,,,,,
27469230,109,Issue,Thanks.,,,,,,
27446485,108,Issue,"It's not missing , we just didn't update the README. We need to know about your app to construct a user agent (see #98). I'll fix that sample.",,,,,,
27446645,108,Issue,Thanks. At the moment I'm lost.,,,,,,
27446560,107,Issue,"I started a WP8 app a while back, using a custom GitHub API implementation, I could repurpose that app and clean it up if that would be useful as a sample. :smiley:",,,,,,
27500418,106,Issue,Do you have special tool you'd like to use? created  which can be used to create something like  Not sure how good it works on C# projects.,,,,,,
27506411,106,Issue,It seems this doesn't work at the moment.,,,,,,
27510239,106,Issue,"The tool is F#-only at the moment. If people are interested in making that C# compatible, then I can explain what would have to be done to support that (and I'd be glad to accept pull request :-)), but it is not currently on my todo list for the project.",,,,,,
27510403,106,Issue,"I'm currently thinking NuDoq, as it'll generate Markdown, but first I have to actually finish documenting all the types in Octokit and Octokit.Reactive. :smile:",,,,,,
27611380,106,Issue,> documenting all the types in Octokit and Octokit.ReactiveYou should start today. Otherwise you have this marathon like me (see )18 days and I'm not finished ;-),,,,,,
27617652,106,Issue,"Yeah, I know that pain . I've started this, and should be finished soon.",,,,,,
32236612,106,Issue,"After hacking on some code samples with  for his Octokit talk, I'd rather we didn't focus on doing 1-1 API docs.I'd rather we focus on scenarios that users might be interested in - perhaps others can submit theirs as well - to go beyond the basics.Thoughts?",,,,,,
158204826,106,Issue,Not heading down the generated path -  is moving along nicely.,,,,,,
27442376,105,Issue,:shipit:,,,,,,
27442187,104,Issue,Fuck it. I know the code is good. :shipit:,,,,,,
27442650,104,Issue,:shipit:,,,,,,
27442658,104,Issue,"Heh, ok  gave me the thumbs up. No cowboy coding here. :smile:",,,,,,
27355363,103,Issue,![ship it],,,,,,
27354969,102,Issue,![outstanding]:shipit:,,,,,,
27326831,101,Issue,"I'm good for you to :shipit:, but I wonder it might be a too-rare case for a typed exception.",,,,,,
27350983,101,Issue,"Yeah, we don't strictly need this anymore. It doesn't hurt and it might be nice to have typed exceptions for all the major status codes.Could you comment on #89 and I'll merge/close this based on what we decide there?",,,,,,
27263605,100,Issue,A++ WOULD REVIEW AGAIN:shipit:,,,,,,
27266422,100,Issue,"Thanks shiftkey! Hey -ogre and , would love to have your opinion on the API changes given you raised concerns about having a default user agent. Do you feel this addresses the concerns appropriately?",,,,,,
27281768,100,Issue,"It feels a bit funny to me to mix our agent info and theirs in a single product token and comment, instead of doing a separate, subordinate product token and comment for our stuff after the one they supply. For instance, here's my browser user agent, with several product tokens and comments in order of significance:That seems more in line with [RFC 2616]. That said, this is something we can change down the road, so I'm not going to push to change it. The downside to doing it the more ""proper"" way is we'd need to validate the user agent they give us, since it's easy to get wrong if you don't know how to make one.",,,,,,
27281879,100,Issue,"The downside to doing it the more ""proper"" way is we'd need to validate the user agent they give us, since it's easy to get wrong if you don't know how to make one.Yeah, that's kind of why I went this route. gets away with this by exposing the user agent as a `HttpHeaderValueCollection`. So you can add as many `ProductInfoHeaderValue`s as you want.I don't think we want to do that.If this were a general purpose browser or http client, I'd agree with you on this. But the clients are only making requests to Github servers. So I'm not sure what the benefit of letting them add extra comments would be. We'll understand what these user agents mean. :)",,,,,,
27358978,100,Issue,:+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1:,,,,,,
27188101,99,Issue,Looks good :shipit:,,,,,,
27151094,98,Issue,"I'm very :-1: on this - we should explode unless the user explicitly sets a user agent. We could append a bunch of useful stuff on the string they give though. Having a default user agent means that when we go to ban the abusive Octokit user who inevitably uses the default string because they're lazy, we now have trouble distinguishing them from everyone else using the default",,,,,,
27151229,98,Issue,"do we block by user agent? Couldn't someone just as easily copy our GHfW user agent? BTW, I'm not convinced we should have a default either, but I'm not yet convinced we shouldn't.",,,,,,
27151589,98,Issue,"do we block by user agent?We can sometimes in a pinch, if somebody's affecting the reliability of the site.  Couldn't someone just as easily copy our GHfW user agent?I think the worry here isn't explicitly malicious people (you're totally right), it's being able to recognize / contact / mitigate people who are doing it by accident or because they're not good at the codez.",,,,,,
27153988,98,Issue,"Ok, I think I'm convinced. -ogre, any thoughts?I think what I'll do is provide a better exception than the default when the user agent is wrong. You have to format it correctly and that can be a pain for folks.",,,,,,
27154049,98,Issue,"Is there a middle ground here, where we require at least an app identifier and build the rest of the user agent to include the stuff we want (OS, CPU, Octokit version)?",,,,,,
27160761,98,Issue,"Is there a middle ground here, where we require at least an app identifier and build the rest of the user agent to include the stuff we want (OS, CPU, Octokit version)?Yeah, I think regardless of what the user puts as the user agent, the one we actually _send_ includes all of the OS info",,,,,,
27235431,98,Issue,"Ok, I think I'll go this route. I'll have them provide required product information and we'll format the user agent for them.",,,,,,
27240147,98,Issue,Closing this in favor of #100,,,,,,
27150353,97,Issue,I'm going to merge this as I got implicit approval in issue #94. :smile:,,,,,,
27259852,96,Issue,Fixed by 4683dbd8d4be218ae4683b6081f95c932cfda638,,,,,,
27129460,95,Issue,:shipit: when it can be cleanly merged. :),,,,,,
27111529,94,Issue,"I like everything here save having separate folders for client impl and interface. I like having the close to each other, and there aren't going to be very many interfaces.",,,,,,
26917047,93,Issue,I'll clean this up and merge it.,,,,,,
26772262,92,Issue,"So the Issues api has some sub-apis:- Assignees- Comments- Events- Labels- MilestonesI'm wondering if these should just be top level api clients or if I should have them be ""nested"" within the `IssuesClient`.We're starting to have a lot of properties of `IGitHubClient`, so grouping them as properties of `IIssuesClient` kind of makes sense. It follows the structure we have here: But at the same time, making them top-level can make them more discoverable. But that's not necessarily a good thing if they're not used as often as our main top-level APIs.Anyone have thoughts on this?",,,,,,
26772544,92,Issue,"+1 to having these things inside to `IIssuesClient` - they're all kinda intertwined concepts (I can't use labels elsewhere, milestones relate closely to issues, etc).",,,,,,
26775024,92,Issue,"The API looks good. I like the direction it's headed, and I think it'll be easy to use. I'm going to build some sort of client with it to give it a test run, to get some actual usage feels.And I think all of the sub-API stuff you listed belongs on `IIssuesClient`, like .",,,,,,
26952194,92,Issue,Seems legit. :shipit:.,,,,,,
26953817,92,Issue,"Thanks ! -ogre would love for you to take a look at this later too, but I'll go ahead and merge it for now.",,,,,,
26744036,91,Issue,:metal:,,,,,,
27948940,91,Issue,IssuesClientTestsLooks like the calls below should be **update** and not **create**? (stumbled upon this whilst I am writing my test for teams api - update_team method).,,,,,,
27991591,91,Issue,"If you're commenting on the code, it's best to comment on the specific code within the PR or commit.",,,,,,
28047386,91,Issue,sorry my bad!,,,,,,
28078223,91,Issue,"Looks like this is done, no?",,,,,,
27352747,89,Issue,"I personally feel like there are too many exceptions here. I don't want to create exceptions unless we expect our consumers will actually catch them, especially when we already have a base exception type that has all the information required to properly handle it. So I think for every exception we create, we need to justify it with expected scenarios. A question I ask myself is, what code would I write to handle that exception differently from `ApiException`? If the difference is only in what message I show to the user, the status code seems like enough.Of the ones we have, I like `AuthorizationException` because I might try to get the user's credential again and retry. Similarly, the 2FA exceptions make sense to me.I'm not sure where I'd use `ForbiddenException`. I know _we_ use it in some cases, but as an API consumer, I don't know what special action I'd take when it was thrown.For `LoginAttemptsExceededException`, I don't think I'd do anything except show an error to the user. This one is helpful though because the status code alone doesn't tell the whole story.Ditto `RateLimitExceededException`, except I could see automatically retrying in some cases.As for the rest that we haven't implemented yet, none of those jump out to me as having a clear reason to exist. But I honestly haven't given each exception enough consideration to say there aren't compelling scenarios where I'd use them.",,,,,,
27353356,89,Issue,"Yeah, I'm kind of leaning towards only implementing them as we need them. For example, I'm about to submit a PR to GHfW that shows how the `NotFoundException` cleans things up a tiny bit. :smile:",,,,,,
26632658,88,Issue,Preeety. :shipit:,,,,,,
26619038,87,Issue,Deal with it. Gonna merge this.,,,,,,
26573009,86,Issue,Fixes #85,,,,,,
26575406,86,Issue,"Seems legit, and some nice :lipstick: in there as well.:shipit: (with or without my suggestion)",,,,,,
26567298,85,Issue,I'm going with `ForbiddenException` right now with a `Reason` property to try it out. It's less work and I think will meet my needs.,,,,,,
26567646,85,Issue,"We have a pretty good idea which API calls will throw a 403 for actual authorization reasons, so in unexpected situations it is most likely going to be for rate limiting. I like a specific rate limiting exception because you probably have some general retry logic or message you show the user when you've been rate limited; you'd never catch that on specific calls. I'm not sure about the value of a forbidden exception; feels like you could just catch `ApiException` and check the status code.",,,,,,
26567694,85,Issue,Which API calls use 403 for actual authorization reasons?,,,,,,
26567789,85,Issue,What I've noticed is the docs here says authorization errors return `401` or `404`. But this page doesn't mention `401` and only mentions `403`. /cc,,,,,,
26567836,85,Issue,I do like the idea of having a `RateLimitedException` and have the `Reason` property there as there are multiple possible rate limitations.1. Too many login attempts2. Too many authenticated api requests3. ???,,,,,,
26567848,85,Issue,"I can't recall any real 403s off-hand, actually. We return 404 in most cases so we don't disclose anything.",,,,,,
26567892,85,Issue,"I do like the idea of having a RateLimitedException and have the Reason property there as there are multiple possible rate limitations.Yeah, if we think the reasons matter, that seems reasonable.",,,,,,
26567896,85,Issue,"So  far, the only 403 I've run into is this one. :)",,,,,,
26567935,85,Issue,"A quick search for 403 against the API docs doesn't yield anything except for rate limiting. Let's see what  says, but I suspect a `ForbiddenException` won't really be useful to anyone.",,,,,,
26567973,85,Issue,"By the way, I don't think this is technically a ""Rate Limit"" exception.Here's the full response.According to the docs here: If we were being rate limited, we should see the following headers in the response:But we're not seeing that.",,,,,,
26568007,85,Issue,"The point is, I think we should probably _also_ have a `RateLimitedException` that exposes those three properties.But in this case, I'm inclined to make this a `MaximumLoginAttemptsExceededException`. Unless you have a better name.",,,,,,
26568051,85,Issue,is rate limiting done by IP address?-ogre integration tests for these exceptions will kill all our other integration tests. :trollface:,,,,,,
26568150,85,Issue,"Yeah, this is an area that's nigh impossible to write integration tests for.You're right, `RateLimitedException` doesn't make sense for login attempts exceeded. I like having the two exceptions; they'd be handled in very different ways.",,,,,,
26568185,85,Issue,"-ogre ok, that's what I'm doing. Got a name for the other one or is the one I proposed fine?",,,,,,
26568240,85,Issue,"I like `RateLimitExceededException` and `LoginAttemptsExceededException`. A little longer on the first, a little shorter on the second, and just enough words to clearly indicate what happened.",,,,,,
26568248,85,Issue,"Octokit.rb [uses inheritance], but I think either approach will work. Be sure to catch those [`401` variants], too.Rate limiting goes like this:| Type | Rate | Based on || --- | :-: | :-: || Unauthenticated | 60/hr | IP || Basic Auth | 5000/hr | Username || OAuth | App's rate/hr (default 5000) | Username |",,,,,,
26568281,85,Issue,what about the max login attempts? What does that mean? Does it reset?,,,,,,
26568299,85,Issue,"Oh, sorry. Max login attempts is by IP and is 10/minute.",,,,,,
26568349,85,Issue,"-ogre so I can actually write an integration attempt for max login attempts, but it'd kind of have to run last. :)",,,,,,
26568388,85,Issue,"-ogre so I can actually write an integration attempt for max login attempts, but it'd kind of have to run last. :)Not only that, but you really need to have the test pause the runner until it resets, as other CI builds can be kicked off right after. For now, I think we don't have an intregration test for this. I'll noodle it.",,,,,,
26568460,85,Issue,Is there anything in your world like [Webmock]? This is [how we do it].,,,,,,
26568549,85,Issue,"we can mock the response no problem. The problem is that sometimes, the exception message coming from the .com API changes. So it's nice when we have an integration test that actually hits these exceptions on .com so we know when the message changes.We can't rely on the status code because sometimes multiple different messages have the same status code. I wish we had an api-error-code in those cases so we don't have to rely on the message.",,,,,,
26568668,85,Issue,"If we care enough I have an idea how we can test this stuff for real (with a separate account in tests that run on a schedule in CI), but I think the unit tests are good enough for now.  I wish we had an api-error-code in those cases so we don't have to rely on the message.Yeah, not having to do string checks would be nice.",,,,,,
26568798,85,Issue,"-ogre looking at the Octokit.rb code, seems like a base `Forbidden` class might not be a bad idea.",,,,,,
26568810,85,Issue,"Yeah, not having to do string checks would be nice.I see that Octokit.rb uses a regex. That's a tiny step up. :stuck_out_tongue:",,,,,,
26568854,85,Issue,I'd love to see some domain error codes in there one day.,,,,,,
26615460,85,Issue,the docs for rate limiting mention the response you get looks like this:I noticed that other error responses now use a `documentation_url` field. So should this be:,,,,,,
26616019,85,Issue,Yup.,,,,,,
26616891,85,Issue,"let me clarify, is the documentation incorrect or that API is returning an incorrect response? :smile:",,,,,,
26617347,85,Issue,"Sorry, the docs should be updated with:Note the `s/See//g.",,,,,,
26469519,84,Issue,I'd like to.,,,,,,
26436674,83,Issue,":+1:octokit.objc [does something similar], in that it returns a cold signal (observable) that doesn't begin until subscription. However, _after_ that point, all subscribers receive the same results and the network request is never duplicated.I've gone back and forth on whether that's really a good thing (vs. an _actually_ cold signal), but it may be worth thinking about.Separately, one of the things I want to do for ReactiveCocoa 3.0 is [focus a lot more on cold signals] ‚Äî perhaps even removing some ways to create hot ones ‚Äî¬†for exactly the reasons you mention. We'll see how that pans out.",,,,,,
26437490,83,Issue,"I think either a completely cold observable, or a sort-of cold observable like  describes, would work nicely for API calls.",,,,,,
26452125,83,Issue,"However, after that point, all subscribers receive the same results and the network request is never duplicated. thanks for chiming in!I can definitely see the benefit of this. This makes sure you don't make too many API requests on accident.But does that mean that `Retry` can't work unless you also wrap your API call in an `Observable.Defer` (I hope this translates over to that objective-c funny business)?",,,,,,
26452467,83,Issue,"It does mean that, yes. That's a great point in favor of making it completely cold.",,,,,,
26463876,83,Issue,"Yeah, it's a tricky trade-off. I have a feeling that a lot of people will make mistakes and over subscribe. Then again, I think the only reason people tend to oversubscribe is that most reactive APIs they use are unclear about the behavior and inconsistent. I feel like if they were all either strictly hot or strictly cold, you'd learn the right patterns and not make that mistake. That would also make operations like `Retry` meaningful.",,,,,,
26464080,83,Issue,#NAME?,,,,,,
26469377,83,Issue,I'm all for using cold observables everywhere. I think it's simpler and safer by default.,,,,,,
48172287,83,Issue,b u m p,,,,,,
68461307,83,Issue,I think we should do this before we call Octokit.net 1.0. This is the direction we're taking with GHfW and there are many advantages to always being cold.,,,,,,
68461637,83,Issue,Not super excited about breaking compatibility here.,,,,,,
68462650,83,Issue,"If you're going to do it, now's the time. I'd love to see this change.",,,,,,
68463002,83,Issue,-ogre Legit; from a philosophical perspective I agree as well,,,,,,
68473580,83,Issue,:thumbsup: we can plan this as a standalone release to reduce impact downstream,,,,,,
531599710,83,Issue,"This issue has sat inactive for a long while, and given I'm currently seeing the downloads for Octokit.Reactive are 2% of the downloads for the main Octokit library for the most recent release I'm going to close this out. There's plenty of other things I need to invest my time in currently.",,,,,,
26436851,82,Issue,"Nice work . This feels like a better API than putting the list in what's returned, even if I don't have a clear idea how we'd turn that into paging down the road.",,,,,,
26441836,82,Issue,"So, I actually am not so sure about this change - streaming the results in usually ends up in more complicated code for the caller and I usually prefer an IO",,,,,,
26450436,82,Issue,so we're following the lead from the Octokit.cocoa folks here. I believe this is what they do.  do you have more to say about it?We didn't want our API to reflect the paging nature of the API unnecessarily.,,,,,,
26450978,82,Issue,"Yes, octokit.objc returns a signal of _each individual object result_. I'd argue that this makes for less complicated _and_ more optimized code, since:1. You're handling values uniformly2. You're handling values as they arrive, instead of _after_ they've all arrived3. You can be oblivious to how many pages there are, and how big each page is4. You can apply transformative operators (like `Select` and `Where`) to the whole result setIn ReactiveCocoa, at least, there are operators to turn a `Signal` if desired ‚Äî¬†but signals/observables are explicitly modeling streams anyways, so why not just take advantage of that?",,,,,,
26451756,82,Issue,"You're handling values as they arrive, instead of after they've all arrivedWell this isn't exactly true, right? The first value of each page is being handled as it arrives, but the rest of the values of that page of data already arrived but effectively being buffered.",,,,,,
26451851,82,Issue,"Yeah, sorry for being unclear ‚Äî I meant vs. sending a list of _all_ results (which may or may not be what  was suggesting).To be clearer, there are distinct advantages over _both_ sending lists per page _and_ sending a list of all results.",,,,,,
26452480,82,Issue,"Thanks for the clarification !  the four points  mentioned are reasons -ogre and I like this approach. It keeps the API surface very simple and clean.However, I do value your input as the resident Rx guru. Does this convince you or do you have other specific concerns?",,,,,,
26452545,82,Issue,"Note, it keeps the API simple and clean, but it will make properly implemeting things like `Take` complicated. But that's a problem we have to solve rather than our users. And even if we returned pages of data, we _still_ have to solve it.",,,,,,
26452761,82,Issue,"Why is that more complicated?In octokit.objc, the algorithm works like this:1. Create a cold signal representing the page to retrieve.2. Send each result to the subscriber.3. After all results, start at step 1 again, and concatenate with that signal.This way, disposal naturally cancels any further pagination, and this percolates down to operators like `Take`.",,,,,,
26453425,82,Issue,Here's the other reason you don't want to do this:,,,,,,
26453533,82,Issue,"Here, we see the async/await in its natural habitat: disaster.",,,,,,
26463657,82,Issue,"That wouldn't work even if we returned an `IObservable` so I'm unconvinced. In that case, you'd get a single page.",,,,,,
26463730,82,Issue,"Also, wouldn't `allTheItems.GetType();` return `Repository` in this case? When you `await IObservable` I thought you got the first `T` as the result.",,,,,,
26465083,82,Issue,It used to be that you got the first T and now it's the last T,,,,,,
26465710,82,Issue,"It used to be that you got the first T and now it's the last TWell in that case, there's no way they'd be confused and think they got ""all the repos"" right? Hard to confuse a single `Repository` with a collection of them. :smirk: In fact, if we _did_ return `List` that might be more confusing. They'd have a list of repos and might thing they got all of them when they only got the last page.At least with returning a `T`, they can't possibly think they got them all.Put another way, if someone really did want this to work:Then that person should use `Octokit` and not `Octokit.Reactive`. In core `Octokit`, we aggregate every page of repositories up and return them as the result of the `Task`. We don't really have another option because `Task` doesn't have a notion of streaming data. Unless we wanted to return a Task that had a property to get the next page of data and they'd need to await that.Therefore, if someone choosess to use `Octokit.Reactive`, I think we should be free to assume some familiarity with Rx.So given that, are there _any other_ concerns we're not seeing here?",,,,,,
26466616,82,Issue,"Why is that more complicated?Heh, it's more complicated because my code didn't work. But I just realized the error of my ways and fixed it. It works fine now!",,,,,,
26532487,82,Issue,:shipit:,,,,,,
26379433,81,Issue,:shipit:,,,,,,
26372031,80,Issue,"So many :sparkles:, these are great changes that make using the connection happier. Can you add a test for passing a `Stream` as the data object please? Other than that, I say :shipit:",,,,,,
26361767,79,Issue,:squirrel:,,,,,,
26356112,78,Issue,:heart:,,,,,,
26953904,78,Issue,ping  we're getting close to releasing this. Do you know where the Octokit.net illustration is? Or what we need to do to get it on the website when we're ready?,,,,,,
26954136,78,Issue,Looks like they're all in the same Illustrator file on that place that we go to check chat hwhoops,,,,,,
26954153,78,Issue,"Nevermind , I found it!",,,,,,
27033873,78,Issue,-ogre: did you want to clean up the secrets? I think we can ship 0.1.0 publicly without a public CI in place.,,,,,,
27033923,78,Issue,:heart:,,,,,,
27109136,78,Issue,-ogre: did you want to clean up the secrets? Will do. I think we can ship 0.1.0 publicly without a public CI in place.Agreed.,,,,,,
27276266,78,Issue,Any way we can get this out by Thursday so I can use it for this week's episode of Live Coding?,,,,,,
27276543,78,Issue,"If you need an extra pair of hands to help get it out the door, just shout",,,,,,
27276640,78,Issue,I think we can do that.,,,,,,
27277961,78,Issue,": I changed test-octowin, so the secrets are all good. I'm going to get as much done as I can on docs and samples, but I say let's get this shipped and we can continue on with that stuff until we're happy with it.",,,,,,
27279921,78,Issue,So getting this shipped is also dependent on getting GHfW release branch shipped. I'll update the release branch after I shower. Just got back from the game. We won! :soccer:,,,,,,
26289013,76,Issue,":fist: :punch: :shipit: I admit, I don't think I understood exactly what you were going to do here. But putting the `T` on each method totally makes sense! :)",,,,,,
26277287,75,Issue,:shipit:,,,,,,
26176383,74,Issue,:shipit:,,,,,,
26115396,73,Issue,![screen shot 2013-10-11 at 4 25 16 pm]I ENDORSE THIS PRODUCT AND/OR SERVICE:shipit:,,,,,,
26103386,72,Issue,:shipit:,,,,,,
26102632,71,Issue,Should there be a default Timeout? Is us setting a null Timeout going to stomp on any default?,,,,,,
26102713,71,Issue,"Yeah, let's set it to 100 seconds which happens to be the default.",,,,,,
26102748,71,Issue,"Yeah, let's set it to 100 seconds which happens to be the default. Alternatively, only set it if it's not null, letting HttpClient just do its thing?",,,,,,
26102757,71,Issue,"cannot be null, it's a struct.",,,,,,
26102786,71,Issue,"Timespan cannot be null, it's a struct.I hear `?` is what the cool kids use.",,,,,,
26102879,71,Issue,Ewww. I'd rather avoid making something that can't be null allow null values. I'd rather just provide the default. :),,,,,,
26102958,71,Issue,Ewww. I'd rather avoid making something that can't be null allow null values. I'd rather just provide the default. :)Fair enough. It just means if they change we're no longer the same. Can you somehow get to their default and use that as the seed?,,,,,,
26103128,71,Issue,"Alternatively, I could set the default for ours to a negative timespan and in that case I don't set it. :)",,,,,,
26103184,71,Issue,"But really, I'm not all that worried about them changing it. 100 seconds seems fine for Octokit. We should set the default to a value we think is appropriate.",,,,,,
26103263,71,Issue,I'll wait before merging this one. :stuck_out_tongue:,,,,,,
26025562,70,Issue,"Hmm, I think it may be time to add a separate unit test project: `Octokit.Reactive.Tests`.",,,,,,
26066916,70,Issue,"-ogre Also, what do you think of the exception names? I was contemplating changing `AuthorizationException` to `ApiAuthorizationException` to make it more specific to Octokit, but at the same time, I like the cleanliness of the current name.",,,,,,
26067791,70,Issue,"Also, what do you think of the exception names? I was contemplating changing AuthorizationException to ApiAuthorizationException to make it more specific to Octokit, but at the same time, I like the cleanliness of the current name.I kinda like ApiAuthorizationException better, both for collision reasons and because of the derivation. Then again, that doesn't work for `TwoFactorAuthorizationException`, so yeah, I vote for just `AuthorizationException`.",,,,,,
26070025,70,Issue,"I'm going to stop putting ""Moar XML doc"" all over the place, and instead just say, ""Please have XML doc for all the public stuff"".This is really good stuff, and I feel bad for all my nit-picks. Once you've gone through and made all the revisions, I'll make another review pass. :heart:",,,,,,
26095203,70,Issue,"Ok, rather than create another test project, I just added a `Reactive` folder to `Octokit.Tests`. We just have to remember to _not_ add that folder to `OctokitRT.Tests`. Seem reasonable -ogre?",,,,,,
26096238,70,Issue,"Ok, rather than create another test project, I just added a Reactive folder to Octokit.Tests. We just have to remember to not add that folder to OctokitRT.Tests. Seem reasonable -ogre?Yup.",,,,,,
26096257,70,Issue,"There's still some missing XML doc, but I can get it when I go through the whole thing. :shipit:",,,,,,
26096346,70,Issue,Gah! I'll take another pass later myself too.,,,,,,
26016692,69,Issue,:shipit:,,,,,,
26001782,68,Issue,:shipi:,,,,,,
26001800,68,Issue,Doh! :shipit:,,,,,,
25995087,67,Issue,:shipit:,,,,,,
25992316,66,Issue,:shipit:,,,,,,
25937839,65,Issue,:shpiit:,,,,,,
25937311,64,Issue,:shipit:,,,,,,
25936073,63,Issue,Nice! :shipit:,,,,,,
25934440,62,Issue,"Why are you half-assing this? The unit tests still have namespaces. :trollface:Seriously though, since we use the test class approach, should we just get rid of _all_ namespaces in the unit tests?",,,,,,
25934492,62,Issue,"Why are you half-assing this? The unit tests still have namespaces. Man, R# let me down. I'll make a sweep through the unit tests and git rid of them all.",,,,,,
25934539,62,Issue,Let's merge this and do that as a separate PR. :shipit:,,,,,,
25926936,61,Issue,Few thoughts:- I've not typically seen the culture included- Why not use OSVersion.VersionString instead? It gives you all the goods- I feel like the OS info should come first in the parenthetical set; I'd expect something like (Windows NT 6.2; WOW64),,,,,,
25927809,61,Issue,"Culture is included in most I've seen.Ex...  Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405  Why not use OSVersion.VersionString instead? It gives you all the goodsReasons. I think I tried that, but it didn't give me the 3rd octet of the version and we wanted to know that for GHfW. I feel like the OS info should come first in the parenthetical set; I'd expect something like (Windows NT 6.2; WOW64)Yeah, makes sense.",,,,,,
25928117,61,Issue,"Culture is included in most I've seen.Huh. I don't see the culture in Chrome right now. I'm cool with adding it regardless; it certainly doesn't hurt. Reasons. I think I tried that, but it didn't give me the 3rd octet of the version and we wanted to know that for GHfW.We care about that for the OS version? I can see caring about that for Octokit.net's version, but not the OS version.For the order, let's go with: `Octokit.net/{version} ({os}; {cpu}; {culture})`. Cool?",,,,,,
25928457,61,Issue,Related:,,,,,,
25929899,61,Issue,"We care about that for the OS versionYeah, it's how we know the number of XP users etc. Analytics.",,,,,,
25930007,61,Issue,seems good to me.,,,,,,
26643730,61,Issue,Another option is to require a supplied user agent and never have a default. What do you think?I think it might make it slightly less usable as you'll get an exception if the user agent isn't in the correct format.,,,,,,
26643734,61,Issue,Here's the code I'll use if we decide to have a default.,,,,,,
27108715,61,Issue,: Do we want to get `Environment.OSVersion.Platform` in there somewhere as well?,,,,,,
25857696,58,Issue,This is ready for your :eyes: .,,,,,,
25904705,58,Issue,"The only thing left to do is to add the corresponding method to Octokit.Reactive's `IObservableRepositoriesClient` and implementation.Other than that, :shipit: Nice work!",,,,,,
25904777,58,Issue,"Ah, right, I didn't even think about the need for making changes to the reactive client. Thanks for that!",,,,,,
25905205,58,Issue,Well the good thing is it's stupid simple to port methods over to the reactive client. :smile:,,,,,,
25820686,55,Issue,:shipit:,,,,,,
25741969,53,Issue,#NAME?,,,,,,
25742065,53,Issue,": For now, I like going singular. I had another approach in mind, as well, but I need to think on it a bit more and poke around before I pitch it.",,,,,,
26643408,53,Issue,I did this in 9a33c68dbc67c9ff18c652492fbfdcdb8d32817b,,,,,,
25673140,52,Issue,+1 to not taking nameWithOwner.,,,,,,
25674026,52,Issue,I think the whole nameWithOwner thing could confuse users. :+1: on separate parameters...,,,,,,
25705722,52,Issue,"Yep, separate seems better.",,,,,,
25707555,52,Issue,"Ok, well that's what we have today so I can close this issue. The only downside is that GHfW passes `nameWithOwner` everywhere. I just wrote an extension method within GHfW to handle that.",,,,,,
25708151,52,Issue,"Prolly need to think about ID-based overloads at some point, too, because that's where we're headed. I actually used URL-based arguments for most of the [new Releases stuff in Octokit.rb], because Hypermedia:I'm considering doing some args massaging to allow you to pass a URL _or_ `""owner/repo"", id` for all methods across the API that currently need that, encouraging folks to embrace Hypermedia. It's silly how many times we have to deconstruct a URL to get `name_with_owner` just to regurgitate it back to build a URL again.",,,,,,
25710716,52,Issue,"just so I understand, what do the Octokit.rb methods accept _today_ to get a repo? A single ""name with owner"" string?",,,,,,
25713820,52,Issue,A  [`Repository` argument object] that parses a few formats.,,,,,,
25717957,52,Issue,I wish C# let me do shit like this:,,,,,,
25651102,50,Issue,1. Change our default accept header to have a list containing the two known Accept values we know about. (I believe Accept is a list).I like this option because it's less invasive (and how often do we need to be explicit with the `Accept` header - let alone allow our customers to choose different/incorrect `Accept` headers) because the method signature could become this:And then inside that you merge together whatever was provided with the default values:,,,,,,
25651214,50,Issue,The only headache I have with this approach is that `contentType` is both a required value and something that could be inside the header collection...,,,,,,
25662119,50,Issue,"The other potential problem with 1 is I'm not sure how the API handles accepts. For example, as I understand it, the server will give priority to the `Accept` list in order. Some endpoints might be able to respond to any accept, but there's one specific type that's more appropriate.We might not have that problem, but I need to ping  about whether any endpoints can respond to multiple accept types.",,,,,,
25662194,50,Issue,"The only headache I have with this approach is that contentType is both a required value and something that could be inside the header collection...Good point. Since we require it, I think we'll just overwrite what's in the headers collection.",,,,,,
25697983,50,Issue,"Many methods support multiple media types, but you can only pass a single value. Comment bodies and pull request formats are the big ones. Check the [media type docs] for the scoop.",,,,,,
25707725,50,Issue,"Thanks ! So it sounds like we _should_ give end-users a choice, but we could give them a restricted set of choices. Just the ones that make sense for each api endpoint.",,,,,,
26643377,50,Issue,I'm  going to close this for now till it becomes a problem.,,,,,,
25589095,49,Issue,"Yeah, i'll set it up.",,,,,,
32237464,48,Issue,cc,,,,,,
112399009,48,Issue,do you think this is worth keeping around?,,,,,,
112483802,48,Issue,Nah.,,,,,,
25577857,47,Issue,I moved the releases API into ReleasesClient.,,,,,,
25586566,47,Issue,"Wow! Great stuff ! Only one minor suggestion. Please add the property to `IGitHubClient` interface. You added it to the concrete type only. Otherwise, the change looks perfect! :sparkles:",,,,,,
25590442,47,Issue,"Thanks ! Things are pretty well-organized, so it was pretty easy to find the right places for things. IGitHubClient has a Releases property now.",,,,,,
26643361,45,Issue,This was done by -ogre in e1dbeb4551e4913bea181e2b4d0ffe2470328578,,,,,,
25279547,43,Issue,I'mma just merge this. It's straightforward. Feel free to review after the fact -ogre,,,,,,
25272868,41,Issue,I'll fix up the RT tests later. :shipit:,,,,,,
25273070,41,Issue,I'll fix up the RT tests laterOkay. I'll dig in and see if I can understand how we're doing with the RT asms.,,,,,,
25264159,40,Issue,"NOTE TO -ogre: This new integration test retrieves a private repository, which I think is important to have. But it's going to fail for everybody but us even if they set the environment variables for running integration test. I think that's probably ok for now. If folks complain, we can add one more environment var. Something like SKIP_GITHUBBER_ONLY_TESTSSo, the way I'm going to handle this, when I finally get back to writing code, is have it create the private repo using the configured account. That way it will work for anyone.",,,,,,
25272299,40,Issue,#NAME?,,,,,,
25128749,39,Issue,:shipit:,,,,,,
25019501,34,Issue,-ogre this is a rote change so I went ahead and merged it. Feel free to take a look after the fact. :),,,,,,
24964232,31,Issue,"Since this is existing code, I'm going to merge this in now. -ogre feel free to review later if you have concerns about anything.",,,,,,
24956230,30,Issue,Sweet! :shipit:,,,,,,
24562908,29,Issue,This is ready for review .,,,,,,
24599154,29,Issue,:shipit: Looks good!,,,,,,
24550135,28,Issue,:shipit:,,,,,,
24851853,27,Issue,Nice! :shipit:,,,,,,
24936083,27,Issue,Thanks! I'll rebase this against master and push one more time here before merging.,,,,,,
18291040,26,Issue,Looking good! Write dem tests! Any idea why the build fails?,,,,,,
18292000,26,Issue,No clue but it's hella jacked,,,,,,
26661837,26,Issue,Need to figure out a way to add integration tests. This doesn't implement the full notifications API but it's a good start. -ogre can I get that squirrel?,,,,,,
26736535,26,Issue,:shipit:,,,,,,
18291140,25,Issue,Should we just make a custom exception type (`ApiException`) and add the response body as a property of it? Dealing with dictionaries seems lame. The original exception could be an inner exception.,,,,,,
18291948,25,Issue,"That might be reasonable, yeah",,,,,,
25017704,24,Issue,I think we decided this change was unnecessary.,,,,,,
25030118,24,Issue,"I don't see how this is unnecessary, we have to have a user agent, and even if the API doesn't 403, it would certainly make our lives easier at GitHub.com the website",,,,,,
25040726,24,Issue,Oh whoops! Sorry . I meant the String.IsNullOrWhitespace change. I forgot there were other changes. I'll merge this in later.,,,,,,
25041150,24,Issue,:cool:,,,,,,
26643348,23,Issue,"-ogre I think we discussed this. The default is `30` items. An org like GitHub will make a LOT of requests to populate it.However, I think we're fine with this. It'd be nice if we made this configurable and changed it to 100 for GHfW. What do you think?",,,,,,
27108787,23,Issue,"I feel like we should stick the default unless the performance is really bad. The request overhead shouldn't be that bad, and we're bringing the same amount of data over the wire either way.",,,,,,
27113682,23,Issue,"Fine with me. This actually turns out to be a bit of work due to our current design. If we don't do this, our design should be fine for the time being.",,,,,,
12795205,18,Issue,"I agree whole-heartedly on letting an acual app drive the design for now. I think at some point we need to ""fill in the gaps"" to make Octopi a generally useful lib, but the longer we defer that, and build the API from actual use, the better. :heart:",,,,,,
12729542,15,Issue,"I'll take silence as acquiescence. Plus, I think it won't be too hard to change it if we decide to try a different approach later.",,,,,,
12741577,15,Issue,Going to merge this in so I can do the rename. Feel free to review after the fact. :),,,,,,
12346081,13,Issue,How's that look -ogre?,,,,,,
12386470,13,Issue,"Sorry, meant to :+1: this last night . Looks great.",,,,,,
12124159,11,Issue,:+1:,,,,,,
12122444,10,Issue,This will probably mean removing the code that builds up the middle ware stack ala rack and OWIN. Doesn't seem appropriate to our client api.,,,,,,
12105585,7,Issue,"I'm pretty sure this isn't in keeping with how you'd do things with the intention of deploying to NuGet, but I don't know how to make it right.",,,,,,
12106342,7,Issue,"WinRT!? Bleh. ;) Hmm, I think I'll have to add this to our build script too.",,,,,,
12106913,7,Issue,"Shit, you can only build WinRT libs on a Win8 box, so we can't build this in Janky. We may need to log an issue to make our library a portable library.",,,,,,
12074053,4,Issue,"Going to merge this one myself. Feel free to review after the fact. Once we publish this, we should get even more strict.",,,,,,
12070580,2,Issue,"Ok, I verified this works now. :)",,,,,,
12067722,1,Issue,"I noted some small corrections, but looks great. :+1:",,,,,,
446813203,2224,PullRequest,"PullRequestCommit Author and Committer fields were mistakenly typed withCommitter when they should be of type User.Previously the types of properties were:* `PullRequestCommit.Author/Committer`: `Committer`* `Commit.Author/Committer`: `Committer`Correct types should be:* `PullRequestCommit.Author/Committer`: `User`* `Commit.Author/Committer`: `Committer`These fields always fail to deserialize in the API calls but produce noerrors, only objects with default values.",,,,,,
445453188,2221,PullRequest,I implemented the GitHub Actions Secrets API calls within octokit.net splitting the clients into repository and organization secrets clients ([link]).I also created an intermediate client class for repository and organization actions that sit off of the RepositoryClient and OrganizationClient respectively to enable future implementation of actions APIs.,,,,,,
444600719,2220,PullRequest,Documentation was still refering to files on the master branch,,,,,,
444128114,2220,PullRequestReview,Thanks for catching this and contributing the fix !,,,,,,
438327653,2217,PullRequest,Solves Issue #2149,,,,,,
430563690,2202,PullRequest,"This component was marked as obsolete in `v0.47.0`, and the next release will drop this code as it shouldn't have been part of the public API at the time.",,,,,,
426458010,2197,PullRequest,"This PR closes #2195. It adds support for handling the  field when present on Check Run event payloads. This field is documented in the developer docs, but wasn't exposed in Octokit for .NET:- [x] New type defined- [x] Type exposed on existing check run event payload- [x] Test JSON updated and assertion added",,,,,,
425589722,2197,PullRequestReview,"Thanks for the contribution !I'm aiming to cut a release over the weekend to test out some infrastructure changes, so I'll ensure this goes out with that...",,,,,,
426137866,2196,PullRequest,"# TL;DR* Adds new read-only property `ServerTimeDifference` of type `TimeSpan` to the `ApiInfo` class. An optional argument is added to the existing contructor.* The `HttpClientAdapter` will inject a synthetic header named `X-Octokit-ReceivedDate` into the response headers providing an RFC1123 date-time-string specifying the time as obsoverved locally on the client when the response was received. The synthetic header name is added as a publically visible constant on the `ApiInfoParser` class.* Adds a new instance method `GetRetryAfterTimeSpan` to `RateLimitExceededException` that allows clients to obtain the amount of time to wait until the RateLimit-Window resets.# DescriptionIn some scenarios it is useful to be able to calculate the appearent difference between the clock on a client computer and the clock on the server. While it is probably safe to assume that GitHub's server have a reasonable accurate clock, the same cannot be assumed for a client.As part of the standard HTTP response headers, the GitHub API server responds with a `Date` response header that gives a best-effort estimate for the current server with a 1-second accuracy.By storing the current time at the client as soon as possible after a response is received, these two times can be compared to calculate a reasonable estimate for the difference between the client and the server clocks.The server time difference is useful whenever the client deals with point-in-time information provided by the server and needs to perfom calculations on that time.An example of this is when dealing with `RateLimitExceededException`s. The exception instance as well as the `ApiInfo.RateLimit` instance for the last request both provide the time when the next Rate-Limit window starts. If a client does not have an accurate clock, it will not be able to calculate how long it needs to wait until the next rate-limit-window starts.By exposing the server time difference in the `ApiInfo` class, clients can easily use that information in other scenarios as well.# DetailsIn order to keep fluctuations of response processing as small as possible, the received time must be captured as early as possible, preferably immediately after the HTTP headers have been received.In order to keep the changes to existing types and methods as small as possible, the information is stored as a synthetic HTTP header in the response.If for some reason the new synthetic header value does not exist, or if the server did not repost a server time (by omitting the `Date` header), the server time difference is assumed to be 0.If both the client and the server have reasonably accurate clocks and agree on the current time, the server time difference will be close to or exactly equal to `TimeSpan.Zero`. In such cases, the only deviations are caused by network processing and propagation delays.# ExampleFor the following examples, both the server and the client are assumed to observe their local time in the UTC-timezone. All calculations use round-tripping time formats, automatically accounting for differences in time zones. Furthermore, this example assumes a network request to be instantaneous.The current time as observed by the sever `api.github.com` is `2020-06-01T12:00:00Z`. The client currently observes the time `2020-06-01T08:00:00Z` (being 4 hours behind GitHub).The client receives a rate-limit exceeded response GitHub states that the window will reset at `2020-06-01T13:00:00Z`.If the client uses its own clock, it will now have to assume that it needs to wait for 5 hours until the next request can be made.Instead the client can extract the server time from the HTTP response (the `Date` reponse header) and compare that time against its own clock. The result of the comparison will result in the time-span value `-04:00:00`. This difference can now be added to the Reset time of the exception, resulting in `2020-06-01T09:00:00Z`. Using that time, the client will correctly assume that it needs to wait 1 hour until the next requst can be made.## Code Example",,,,,,
425834439,2196,PullRequestReview,"I'm liking where this is going, and had a couple of small changes to make before we land this :tada:",,,,,,
425854610,2196,PullRequestReview,Thanks for the contribution !,,,,,,
436379823,2196,PullRequestReviewComment,:art: to be consistent with the other private member,1,0,0,0,0,0
436380237,2196,PullRequestReviewComment,"Can you add a check to the existing `HandlesMissingHeaderValues` test inside `Octokit.Tests/Exceptions/RateLimitExceededExceptionTests.cs`, as well as a new test using the expected headers to ensure we're not erroring somehow when doing the parsing?",1,0,0,0,0,0
436402438,2196,PullRequestReviewComment,I added new Assertions to the existing test and added new unit tests for both the Exception and the `ApiInfoParser` class.,1,0,0,0,1,1
425485609,2194,PullRequest,"The `ChecksClient` constructor originally took a concrete `ApiConnection` object as an argument. This PR changes the constructor to match all other clients in the library that take an `IApiConnection` argument.This PR also adds a unit test theory, that asserts that all clients nested under `GitHubClient` follow this behaviour.The assertion ensures* All client interfaces have a publically visible concrete implementation type* The Implementation type has a publically visible constructor that takes either `IConnection` or `IApiConnection` as its single argument.",,,,,,
425831774,2194,PullRequestReview,Thanks for the contribution !,,,,,,
416753033,2189,PullRequest,This one goes out to  and all the other hecklers,,,,,,
413177762,2187,PullRequest,"Fix #2148 Add IsTemplate, add header, add method from",,,,,,
425835392,2187,PullRequestReview,"Thanks for getting this started ! I think you're on the right track here, and the new tests are great - there's just some work needed to update the existing tests to be aware of the new preview header.",,,,,,
436380903,2187,PullRequestReviewComment,"In addition to this link, you need to pass in the accepts header to ensure the `Repository` response returns the additional field:This will also require the corresponding tests to be updated.",1,1,0,0,0,0
436381252,2187,PullRequestReviewComment,"You have some failing tests in `Octokit.Tests/Clients/RepositoriesClientTests.cs` because the assertions are not set up to look for this new preview header. These need to be updated, like this:We avoid using the `AcceptsHeader` value here as it feels like a shortcut - we want to assert the header value received matches what the API should see.",1,0,0,0,0,0
411020538,2185,PullRequest,"The v3 GitHub API [now supports adding Pull Requests as project cards], which was disabled when support for project cards was initially added to OctoKit. This PR reintroduces support for PRs as cards, including a new integration test.### Plan of Action- [x] Write an integration test- [x] Update enum to support Pull Requests- [x] Test successfully passes",,,,,,
425836040,2185,PullRequestReview,Nice spot  - and thanks for adding that test to verify the behaviour works again!,,,,,,
409164825,2182,PullRequest,Resolves #2181,,,,,,
425837260,2182,PullRequestReview,I've tidied this up so we can get it out in an update. Thanks for getting it started !,,,,,,
402726976,2177,PullRequest,"This PR is a helpful first step towards refactoring the internals to no longer use `IResponse`/`IRequest`, by making it easier to create these in tests. This should help with evolving the internals to rely more on `System.Net.Http.*` abstractions, and have less mocking of models. - [x] review changes - [x] CI passes - [x] tidy up tests and unnecessary usings",,,,,,
401662706,2176,PullRequest,"While I've contributed to other repositories in the past, this is my first open-source contribution to another C# repository! I'm currently working on adding integration tests.Design question: Should there be an enum for the Code of Conduct key? Currently there are two officially registered conducts with GitHub, which is the Citizen Conduct and Contributor Covenant.",,,,,,
391871017,2176,PullRequestReview,"Thanks for starting this off ! I'm happy to work through the C#-isms and conventions in the codebase, but this is a promising start! Should there be an enum for the Code of Conduct key? Currently there are two officially registered conducts with GitHub, which is the Citizen Conduct and Contributor Covenant.I'm üëç to exploring this. Here's an example of an enum that we use elsewhere in the API (defined in the same file as the client interface):",,,,,,
407217162,2176,PullRequestReviewComment,"Are we able to move these out to their own interface? `GetAll` here might not make sense until you look at the response type, so I was thinking that having these under their own interface would mean the API looks like this:I actually prefer this API, which more closely matches the route itself:I know we have `GetAllEmoji()` below but I feel that's an anti-pattern we shouldn't follow any more.",0,0,1,0,0,0
407217416,2176,PullRequestReviewComment,If we're using the preview API we should also pass in the accept header:This will require adding a new const for `CodeOfConductPreview` to `Octokit/Helpers/AcceptHeaders.cs`,0,1,1,0,0,0
408341894,2176,PullRequestReviewComment,"Because this API doesn't support pagination details, you can add this attribute to get one of the convention tests passing:",1,1,1,0,0,0
408342251,2176,PullRequestReviewComment,This could just be `Get` to keep the API as concise as possible:,1,0,0,0,0,0
408345916,2176,PullRequestReviewComment,"The other build error is the missing corresponding client for our reactive API. It's failing because it expects`Octokit.Reactive/IObservableGitHubClient.cs` to have a similar API, which internally just calls your original API. Have a look at `Octokit.Reactive/Clients/ObservableMiscellaneousClient.cs` for an example of how this works, and it looks like you've found the right bits to add that it should look familiar.",0,0,1,0,0,0
401494890,2175,PullRequest,"Related to #2161 but probably not the full fix, given we pass around a dictionary and lookup by key, rather than following the HTTP spec and supporting case insensitive headers.I chatted with some others inside GitHub and they reminded me about [RFC 2616, section 4.2]: Each header field consists of a name followed by a colon ("":"") and the field value. **Field names are case-insensitive.**I'd love to get to a place where we can leverage `HttpResponseHeaders` but we are very tightly coupled to `IResponse` in the internals, and it's this component that manages the headers as a dictionary:The setup is here, which converts the `HttpResponseHeaders` into a dictionary:You'll also note that headers can have multiple values, so the eventual refactoring would need to support that.  - [x] identify other places where we `TryGetValue` without handling case-insensitive headers",,,,,,
401485771,2174,PullRequest,Just a helper script when working locally,,,,,,
399256923,2172,PullRequest,"Addresses #2132Please let me know if you agree with these changes. If you agree with the changes, I will add the unit tests. Thanks.",,,,,,
399215654,2171,PullRequest,"Addresses #2132Please let me know if you agree with these changes.  If you agree with the changes, I will add the unit tests.  Thanks.",,,,,,
391810835,2171,PullRequestReview,Thanks for opening this up  - here's some initial feedback!,,,,,,
407127472,2171,PullRequestReviewComment,"Can we move these new methods out to a separate file? They're not exactly string-based, but I'm fine with a single file for these ""other"" types...",1,0,0,0,0,0
407128355,2171,PullRequestReviewComment,The `application/vnd.github.cloak-preview` header should be in `Octokit/Helpers/AcceptHeaders.cs`.Are you able to do these two things to be consistent with the rest of the codebase: - add a const for this header in `Octokit/Helpers/AcceptHeaders.cs` - add this as a valid preview header in the convention test so the build doesn't fail,1,1,1,0,0,0
407129051,2171,PullRequestReviewComment,"ü§î I need to have another look at places where we need to handle date inputs, and see if this is a chance for us to standardize on date input.",0,0,0,0,1,0
408053247,2171,PullRequestReviewComment,"I created 2 new files (DateTimeExtensions, and BooleanExtensions.)",0,0,0,0,1,0
408059731,2171,PullRequestReviewComment,"I created the constant.  I also created a new array for non standard preview headers in the test since this header does not have ""+json"" at the end.",0,0,0,0,1,0
414228421,2171,PullRequestReviewComment,have you decided on this?,0,0,0,1,0,0
426620740,2171,PullRequestReviewComment,Any update?,0,0,0,1,0,0
399145112,2170,PullRequest,Contributes to #1646,,,,,,
391808590,2170,PullRequestReview,Thanks for the contribution !,,,,,,
398885482,2169,PullRequest,They don't render on,,,,,,
391808634,2169,PullRequestReview,"This is a great find,  - thanks for submitting the fix!",,,,,,
396560687,2164,PullRequest,"is from a time before we had the ability to wrap a result in a `Task`, and as part of simplifying tests to be able to refactor the internals I decided to drop these usages.You may also note the `TestSetup.GetApiResponse` helper function - that helps eliminate repetitive code and make the tests more readable.",,,,,,
390390144,2157,PullRequest,This builds upon #2124 now that I've given it a first pass at auditing using the `octokit/routes` schema - [x] review diff,,,,,,
389808160,2156,PullRequest,"Resolves #2052## TestingTo aid with testing this PR, you can add a `NuGet.config` file to the root of your project that adds our beta packages feed:Then, switch your version to the beta release just published, currently `0.45.0-fix-teams-deseri0005`, and try to verify the fix. I'm still working to try and reproduce this on my side, but I have an idea of where it's lurking...",,,,,,
393812609,2156,PullRequestReviewComment,I used `null` in my code s well as for the ParameterAttribute for the enum. `PermissionLevel` appears to use the word `none` as its value though. Do you need to change this to be `none` instead of `null`?,0,0,0,1,0,0
393815854,2156,PullRequestReviewComment,"I prefer `null` here to explicitly indicate no value was found, and I want this to be different to the `none` scenario that might be valid here. In the test itself you'll see that I can't parse out a valid value from this enum.This fixes the deserialization issue, and leverages our existing string-like enums to handle unknown values rather than mapping this `null` to `none`.",0,0,0,0,1,0
393816611,2156,PullRequestReviewComment,"Ahha, that makes more sense, thanks!",0,0,0,0,0,1
389521904,2155,PullRequest,"Initial commit, first baby steps",,,,,,
376086971,2155,PullRequestReview,Thanks for starting this off !I added some suggestions to help flesh out the important parts - there's probably more we'll uncover as we go...,,,,,,
393721135,2155,PullRequestReviewComment,You'll need a `SearchCommit` result that matches the shape from here:,0,1,0,0,0,0
393722530,2155,PullRequestReviewComment,"doesn't exist yet, but should be `search/commits`",0,1,0,0,0,0
407124161,2155,PullRequestReviewComment,Are you able to restore this file? This is helpful for me to work in VSCode,0,0,0,1,0,0
407125101,2155,PullRequestReviewComment,We have a convention in this codebase to ensure response models are properties defined with `{ get; set; }`. Are you able to add these?,1,0,0,1,0,0
407125299,2155,PullRequestReviewComment,To get the build passing you will need to this rule to the `previewKeys` array in `Octokit.Tests.Conventions/PreviewsTests.cs`,1,1,0,0,0,0
407125372,2155,PullRequestReviewComment,"I'm not sure why these files have been deleted, but it'd be great to keep them around.",1,0,0,0,1,0
388800524,2154,PullRequest,This PR reviews and marks the preview headers that are no longer currently documented on the [GitHub Developer site]. - [x] add test - [x] mark headers that are now out of scope - [x] cleanup APIs that have graduated,,,,,,
388719612,2153,PullRequest,"Resolves #2122This is a breaking change in several ways due to changes the API made while under preview: - requesting teams is now supported, so the response and requests payload had to change - pagination is no longer supported, so those overloads have been removedTo use the new API there are two static constructors to differentiate between ""request users"" and ""request teams"":",,,,,,
387635880,2152,PullRequest,They were using [Fact] instead of [IntegrationTest] so they would run and fail if no credentials are supplied.,,,,,,
374259153,2152,PullRequestReview,Great find - thanks for submitting !,,,,,,
387525665,2151,PullRequest,This allows to spare a little over 100ms in my tests on small files vs using the `GetAllContentsByRef` API.Fixes #1651,,,,,,
391873248,2151,PullRequestReview,"Thanks for the contribution  - I merged in the latest changes to ensure this is all working as expected, and tidied up some unnecessary changes rather than hold this up.",,,,,,
407220365,2151,PullRequestReviewComment,This is a nice bit of cleanup for my more explicit example above - thanks!,0,0,0,0,1,1
385321541,2150,PullRequest,Resolves #1915 - [x] Implemented User.GetAll() - [ ] Tests -- will make in next commit,,,,,,
425838579,2150,PullRequestReview,"Apologies for the delay, and while this is feeling pretty far along I wanted to dig into how this API would work with pagination...",,,,,,
436384459,2150,PullRequestReviewComment,"This is not really important for the discussion but we generally ""flatten"" observables to not return lists, so I pushed a commit to change this to return `IObservable` as that will be more familiar to callers of the API.",0,1,1,0,0,0
436384563,2150,PullRequestReviewComment,This is almost correct - we have `IReadOnlyList` here which is just what we need for this situation. I've updated this and pushed a commit.,0,0,0,0,1,0
436386040,2150,PullRequestReviewComment,"So while the other tests are looking good this one is the test I was waiting to dig into.Because of how it's currently written, this API is only going to return the first page, with no options available for following the pagination. This doesn't really feel like a `GetAll` API, right? But we want to avoid this running forever, enumerating the millions of GitHub accounts, so how can we find this middle ground?We have our existing pagination support so we could write the test like this:However this API doesn't provide a `page=` parameter so if we used that it would just continue forever without returning any records to the user. We'd need to provide custom pagination logic for this case, as well as making more strict what the user can pass in with `ApiOptions`.",1,1,0,0,0,0
384819318,2131,PullRequest,"A follow-up from #2128 for a case that wasn't caught by our conventions, because it was created in the `Octokit.Clients` namespace rather than the root `Octokit` namespace.This updates the namespace and adds the necessary route attributes to get the build passing again.",,,,,,
384259978,2130,PullRequest,Fixes #2127 This removes code that was marked as obsolete back in `v0.32.0` and can be removed as the last supported version of GitHub Enterprise (2.14) was only supported up until July 2019.,,,,,,
384016967,2128,PullRequest,Review the codebase for each of the previews from  : - add attribute usage for each place in the codebase - review usage matches the documentation OR - open an issue to track supporting the preview APICurrent preview support: - [x] Migrations - [x] Enhanced deployments - [x] Reactions - [x] Timeline - [x] Integrations - [x] Projects - ~[ ] Commit search~ #2132 - ~[ ] Community profile metrics~ #2133 - ~[ ] User blocking~ #2134 - ~[ ] Repository topics~ #1707 #1720 - ~[ ] Codes of conduct~ #2135 - ~[ ] Add lock reason~ #2136 - ~[ ] Require signed commits~ #2137 - [x] Require multiple approving reviews - [x] Check runs and check suites API - [x] Project card details - ~[ ] GitHub App Manifests~ #2138 - [x] Deployment statuses - ~[ ] Repository creation permissions~ #2139 - ~[ ] Content attachments~ #2140 - ~[ ] Interaction restrictions for repositories and organizations~ #2141 - [x] Draft pull requests - ~[ ] Enable and disable Pages~ #2142 - ~[ ] List branches or pull requests for a commit~ #2143 - ~[ ] Uninstall a GitHub App~ #2144 - ~[ ] Enable or disable vulnerability alerts for a repository~ #2145 - ~[ ] Update a pull request branch~ #2146 - ~[ ] Enable or disable automated security fixes~ #2147 - ~[ ] Create and use repository templates~ #2148 - [x] New OAuth Applications API endpoints - ~[ ] New visibility parameter for the Repositories API~ #2149,,,,,,
383994758,2124,PullRequest,"This PR adds attributes to each client action to provide context about where each client method is sourced from. This comes with two main benefits: - by including the verb and path for each route, this will help me audit what parts of the API are not implemented currently - using `ManualRouteAttribute` will help me to track which code was hand-crafted, and hopefully which ones are generated by tooling in the futureI also noticed some places where things are likely broken, and some long-obsolete APIs, and I might need to make changes to this metadata down the track, but I can follow-up with other PRs later once I've given this another look.  - [x] review diff  - [x] extract issues for follow-up - #2125 #2126",,,,,,
383454736,2123,PullRequest,Related to #2122,,,,,,
368796828,2123,PullRequestReview,Thanks for the contribution !,,,,,,
387629260,2123,PullRequestReviewComment,"Given we have `RequestedReviewers` above that is configured in the same way, I think this is all we need to do.Is there any other feedback you're looking for ?",0,0,0,0,1,0
387673253,2123,PullRequestReviewComment,This is half the success of issue #2122I think we can merge it but the issue will not be resolved totally,0,0,0,0,1,0
387681447,2123,PullRequestReviewComment,Now I understand. I'll merge this and add some more context to #2122 about the second item on the list once I know what needs to change.,0,0,0,0,1,0
382940841,2121,PullRequest,* The equivalent of `public static DateTimeOffset FromUnixTime(this long unixTime)` exists in the framework since .NET Framework 4.6: * The equivalent of `public static long ToUnixTime(this DateTimeOffset date)` exists in the framework since .NET Framework 4.6:,,,,,,
367976975,2121,PullRequestReview,A great bit of cleanup - thanks !,,,,,,
382635356,2118,PullRequest,Minor improvements to a couple of tests inTheGetOrCreateApplicationAuthenticationMethod to verify the interestingpiece of the request object. This brings these tests into line withrecent changes to tests in TheCheckApplicationAuthenticationMethodet.al.,,,,,,
367595391,2118,PullRequestReview,"This is great, thanks !",,,,,,
382509693,2116,PullRequest,"Per ['Deprecating OAuth Application API']the HTTP API endpoints called by CheckApplicationAuthentication,ResetApplicationAuthentication and RevokeApplicationAuthentication arebeing deprecated.This PR updates those APIs to call the new HTTP API endpoints asdocumented at the above link.# DetailsAmend CheckApplicationAuthentication, ResetApplicationAuthentication andRevokeApplicationAuthentication to create an object containing the OAuthaccess token and to call the single arg version ofApiUrls.ApplicationAuthorization. The object is used as the requestbody.Amend CheckApplicationAuthentication to use POST.Amend ResetApplicationAuthentication to use PATCH.Remove the two arg version of ApiUrls.ApplicationAuthorization as it isno longer called. Amend the single arg version to use the new API path.Amend unit tests to account for the above changes.",,,,,,
367393000,2116,PullRequestReview,Thanks for the quick PR !Just one thing about asserting the change works as expected...,,,,,,
386543638,2116,PullRequestReviewComment,"Can we assert that the object has the expected `access_token` parameter here? I think we have some other examples of this floating around (I'm not sure whether it can be `AccessToken` and is serialized later to `access_token`, or must be `access_token`) but it'd be great to verify the behaviour...",0,1,1,0,0,0
386566240,2116,PullRequestReviewComment,"Refreshed my memory a bit and it turns out that we don't do any conversion, so you're right to use `access_token` here:The use of anonymous types however makes testing a bit of a pain. I was able to put together this one-liner to verify it, but I think we can do better on a follow-up PR. Thoughts?",1,1,1,0,0,0
386568280,2116,PullRequestReviewComment,"Yeah, was just going down that rabbit hole. I think to do better we would need a concrete type for the structure that has the access_token field. Happy to add that in a follow up PR. If we do add a concrete type, we should probably make a similar change for other cases where we just use an unadorned Args.Object in the test case. (e.g. TheGetOrCreateApplicationAuthenticationMethod.GetsOrCreatesAuthenticationAtCorrectUrl)",1,1,1,0,1,0
386571325,2116,PullRequestReviewComment,Because these are internal types (rather than ones the user creates in code) I'm fine with leaving them as-is. We don't have great test coverage over the parameters sent in `Post`/`Patch`/`Put` but I'm open to improvements here.,1,0,0,0,0,0
379947833,2114,PullRequest,"As per the [Reactions docs], there's 2 reactions that are not available to ocktokit.net clients. They are added in this PR.Let me know if there are any tests that need to be updated or added for this.",,,,,,
379562188,2110,PullRequest,Supersedes #1934Fixes #1933 - [x] review outstanding feedback from previous PR - [x] add new unit tests for omitting `refs` - [x] update xml-docs - [x] add integration tests for including or omitting `refs`,,,,,,
384163419,2110,PullRequestReviewComment,"I ended up going with this approach to make the fixes more explicit, and I'd like to eventually do away with the `ApiUrls` shorthand because it makes correlating things to API routes harder...",1,0,1,0,0,0
379289374,2108,PullRequest,Supersedes #1934 and #2104 and maybe also #2107Fixes #1933 - [ ] figure out why Appveyor is unhappy - [ ] review outstanding feedback - [ ] add regression test - [ ] ???,,,,,,
379260803,2107,PullRequest,Supersedes #1934 and #2104Fixes #1933 - [ ] figure out why Appveyor is unhappy - [ ] review outstanding feedback - [ ] add regression test - [ ] ???,,,,,,
379256914,2106,PullRequest,- [x] drop `app.config` file with hella old binding redirects - [x] reformat code to catch an oopsie,,,,,,
379254416,2105,PullRequest,Supersedes #1956üé© for the failing test,,,,,,
379119956,2104,PullRequest,Supersedes #1934 Fixes #1933 - [ ] figure out why Appveyor is unhappy - [ ] review outstanding feedback - [ ] add regression test - [ ] ???,,,,,,
376284950,2102,PullRequest,"Hello!I have faced with issue that Event model doesn't contain `project_card` property that is important for all events that are related to GitHub boards (Projects).For example, for event `added_to_project`, it contains the name of column where issue is added.For event `moved_columns_in_project`, it contains the previous and new column names.This PR includes the following changes:1) Change `EventInfo` model to `IssueEvent` (please see note below for details)2) Add model `IssueEventProjectCard` accordingly to [GitHub API description]3) Add header `IssueEventsApiPreview = ""application/vnd.github.starfox-preview""` that is needed to get `project_card` value4) Update tests5) Update `Octokit.Reactive` with the same changes**Note:** Why `EventInfo` model was replaced by `IssueEvent` in `IssueClient`:These models are pretty similar but `IssueEvent` contains additional fields like `Issue` and `ProjectCard`.I am not sure why some methods in `IssueClient` used `IssueEvent` but some methods used `EventInfo`. Based on API, all methods in `IssueClient` should use `IssueEvent`.",,,,,,
363422346,2102,PullRequestReview,"-lobanov this is looking really great - thanks for the contribution.Only bit of feedback I have is about updating the tests to assert on the preview accept header, everything else looks great!",,,,,,
383291466,2102,PullRequestReviewComment,"Can we assert that the preview URL is received here, rather than asserting that any header was found? Here's an example from elsewhere in the test suite:We also include the preview header in the test rather than couple it to `AcceptHeader` to make preview headers more visible when reviewing.",1,1,1,1,0,0
383293938,2102,PullRequestReviewComment,:art: this is great - thanks for documenting both these current parts as well as the new property!,0,0,0,0,1,1
383307422,2102,PullRequestReviewComment,Done! Thanks for the feedback,0,0,0,0,0,1
376270056,2101,PullRequest,"Hello!Recently, I have started to use this library and I have faced with issue that loading of events for some issues fail because of unrecognized events.Unfortunately, I didn't find these events in the list of events in [GitHub API] page (it looks like it is pretty outdated) so I can't guarantee that my list is full. But I just added events that I have found in my repo so if you have the full list, please let me know",,,,,,
360334997,2101,PullRequestReview,Thanks for the contribution -lobanov!,,,,,,
373062649,2094,PullRequest,Follow-up to #2055,,,,,,
372907217,2092,PullRequest,Fixes #1979,,,,,,
372905289,2091,PullRequest,Fixes #2056 - [x] CI passes - [x] diff makes sense,,,,,,
372847757,2090,PullRequest,Resolves #2047,,,,,,
372843717,2089,PullRequest,- [x] Appveyor passes - [x] Actions passes - [x] tidy up about global tools - [x] review diff,,,,,,
376942849,2089,PullRequestReviewComment,"Instead of this, you can use for compiling with mono.",0,1,1,0,0,0
376973058,2089,PullRequestReviewComment,"I'm already using `Microsoft.NETFramework.ReferenceAssemblies` in this project, and this workaround was due to an upgrade issue that I uncovered related to .NET Core 3.1 and Sourcelink. The details are over here, if you wanted to follow along:",0,0,0,0,1,0
376974725,2089,PullRequestReviewComment,Neat üëç Thanks for sharing.,0,0,0,0,1,1
371934650,2085,PullRequest,"I'm still digging into why `FormatCode` decides to insert some stray CR characters on Windows, but for now I'm making this optional rather than always running for local builds.",,,,,,
371762308,2084,PullRequest,"Fixes #2044 Hello,I went with the easy way, double quote all labels. It will save us the check (whether the label has spaces or not) since having quotes on normal labels doesn't change anything.I changed the test to include a test case `label 2` and tested it separately on this repository.",,,,,,
355615104,2084,PullRequestReview,Thanks for the contribution !,,,,,,
371633856,2082,PullRequest,"See #2078 - Feedback Requested!Hello! I'm putting this up in order to get some feedback on this initial implementation before I take the time to start polishing and getting ready for a real mergeable PR. Any feedback would be great!Things still to do:- I haven't spent any time whatsoever on documentation - I'll clean that type of stuff up once I get some confirmation that we're past the ""major changes required"" stage.- There are some tests missing on the Observable side; I'll add those later.- I haven't really tested this implementation live against the API in anger yet. I see that there are integration tests, but I'm not sure how you'd suggest we approach those.- There are now 3 different types of Token (AccessToken, RunnerRegistrationToken, and RunnerRemoveToken). This doesn't seem great, since they're all the same. I would have created a generic Token class, but I wasn't sure how the project handles changes to existing APIs (AccessToken already existed). Thoughts?- I added some missing fields to CheckSuite and updated the tests.Please let me know your thoughts - I'm happy to make changes as required. As I mentioned, I'm not really a C# developer, so any thoughts on where things can be made more idiomatic, etc., would be appreciated. Thanks!",,,,,,
370602305,2081,PullRequest,"While CI has been fine for a while, I've not been able to `sourcelink test` locally for a while, and it prevented me from publishing packages from my local machine. After trying a bunch of things that might have explained why my development environment was different to Appveyor (where this works fine) I've decided to try and back out the commit that I think is to blame.I want to get to a point where I can release from GitHub - push tag, CI passes, packages published to NuGet - but for now I'd like to just be able to publish to NuGet without dirty workaround.- [ ] verify AppVeyor passes- [ ] verify local Windows build passes- [ ] verify GitHub Actions passes (or pause for now)- [ ] ???",,,,,,
370588615,2080,PullRequest,"Hey Dotnet SDK team üëã I work on the team which maintains checks at GitHub and I wanted to add this conclusion ahead of release. This check conclusion will be fully documented on release.I would also like to note that we could add new check/status states at any time, since adding states would be an additive change. The client-side logic should reflect this in some way so that new states don't break integrators systems.",,,,,,
370509873,2079,PullRequest,TODO: - [ ] ???,,,,,,
368144638,2077,PullRequest,"Hello!There is currently an undocumented check suite conclusion (""skipped"") that exists in the wild (see ) that causes this library to throw an exception while attempting to load check suites with that conclusion. Since I can't seem to get an answer as to whether or not this has been added to the Checks API, I'm assuming that it has and that this is a documentation deficiency. I'm therefore submitting this trivial PR to add it. Unfortunately I don't think that I was able to run all of the tests (I'm not on Windows) - hope that's okay.Additionally, do you have any plans to release another version soon? In addition to this issue, I would love to have access to the organization membership methods that were added two commits after v0.36.0. Thanks!",,,,,,
368070557,2076,PullRequest,TODO: - [ ] ???,,,,,,
368000408,2074,PullRequest,"I want to do away with the use of `DotNetCliToolReference` inside here (there's a kludge that I'll explain when we get to it) and for now it looks like `Microsoft.SourceLink.*` are the current ways to achieve this (with some options that I might look into later).For now, I just want to confirm this works and passes `sourcelink test` for each build.",,,,,,
367990716,2072,PullRequest,"This was a vestige of the days when we needed Mono to target the classic NetFX targets, and shouldn't be needed now.",,,,,,
367676848,2070,PullRequest,"This feels like it might close out #2069 but I'm not even 60% sure.EDIT: this has turned into a bit of a yak shave but once I've figured out why TestSourceLink is failing for specific files just on Windows, I'll extract and PR the fixes in a more logical order.",,,,,,
367632565,2068,PullRequest,"There's a release or two planned before #2055 which increases the minimum supported platforms, and I realise there's some prominent places on the README that list the versions.These will need to be refreshed when we drop support for older platforms :soon: .",,,,,,
367623879,2067,PullRequest,![],,,,,,
367598689,2066,PullRequest,This PR revives #2015 now I have a better grasp on why it was failing locally: - [x] get build working for Linux - [x] get build working for macOS - [x] get build working for Windows - [x] tweak config to only run builds for PRs and `master`,,,,,,
367578113,2065,PullRequest,"Following on from #2064 Not sure why some of these dependencies aren't being detected by Dependabot, but for building and linking on Linux without Mono these upgrades are useful.The change from `SourceLink.Create.GitHub` to `SourceLink.Create.CommandLine` was recommended in  due to problems raised previously with this project (the switch didn't happen earlier because it seemed to be an intermittent issue).",,,,,,
367508454,2064,PullRequest,Looking to review some of the infrastructure things because how I build and cut Octokit releases currently is very fiddly.This PR starts us off with reducing our dependency on Mono for builds by adding the `Microsoft.NETFramework.ReferenceAssemblies` package. This shouldn't affect our CI builds but I've tested locally on Ubuntu without Mono and (combined with some other small PRs) should get us to a good place.,,,,,,
366506953,2063,PullRequest,"This PR pulls in some whitespace tidy-up, as well as addressing this outstanding warning about the NuGet metadata:  Successfully created package 'C:\Users\shiftkey\src\octokit.net\packaging\Octokit.Reactive.0.37.0-beta0010.nupkg'.C:\Program Files\dotnet\sdk\3.0.100\Sdks\NuGet.Build.Tasks.Pack\buildCrossTargeting\NuGet.Build.Tasks.Pack.targets(198,5): warning NU5048: The 'PackageIconUrl'/'iconUrl' element is deprecated. Consider using the 'PackageIcon'/'icon' element instead. Learn more at  [C:\Users\shiftkey\src\octokit.net\Octokit.Reactive\Octokit.Reactive.csproj]The documentation link recommends this approach:",,,,,,
366490579,2062,PullRequest,* Update to Cake.Frosting 0.36.0,,,,,,
360530688,2060,PullRequest,"This PR fixes issues #1979 and #2031 (stack overflow when attempting to retrieve events on issues due to large ID numbers) and replaces the seemingly-abandoned PR #2037.In addition to changing the types of the relevant field and parameters, the names of the parameters have also been updated (from `number` to `eventId`) to better reflect what's expected to be passed.",,,,,,
345032661,2060,PullRequestReview,"LGTM, thanks for the contribution -ca!",,,,,,
356666807,2054,PullRequest,"The problem: 1. The request timeout is hard-coded inside Request class constructor (TimeSpan.FromSeconds(100))2. GitHubClient.SetRequestTimeout() method does not change the request timeout as expected: hard-coded Request.Timeout is applied instead.3. GitHubClient does not provide an ability to get/read an effective request timeoutThe solution:- The method ""SetRequestTimeout()"" replaced by ""RequestTimeout"" property: addresses the problem 3- Request.Timeout property is initialized with ""RequestTimeout"" property value: addresses the problem 1 and 2",,,,,,
350469003,2051,PullRequest,LICENSE.txt,,,,,,
350441561,2050,PullRequest,[.github/ISSUE_TEMPLATE/feature_request.md](url) [_config.yml](url)[.github/ISSUE_TEMPLATE/bug_report.md](url),,,,,,
342343515,2046,PullRequest,"This allows someone to use `Teams.Get(""organizationName"", ""teamName"")` to retrieve a `Team` object in cases where someone may not know the team ID off-hand. NOTE: This uses `.First()` on the result of `GetAll()`, which I think is sufficient in this case as we'd want an error to occur if no matching team is found. However, let me know if you'd like this error to be more expressive.",,,,,,
318617305,2046,PullRequestReview,":wave: jumping in with some quick feedback before this goes too far.I don't want Octokit to get into the business of incorporating convenience APIs that could be extension methods outside the library itself. I want it to be as thin as possible on top of the GitHub API, as there's enough API surface to maintain currently.I've added some notes about where I think this diverges from typical Octokit behaviour to explain more about things from my end, but if you're interested in seeing functionality like this land I think a PR for [Get team by name] here would be great to see supported in the library, because it has these benefits for the client: - no need to paginate through all teams - leverage conventions when 404 occurs - no feature flag needed for nested teams (I believe)",,,,,,
347592973,2046,PullRequestReviewComment,‚ÑπÔ∏è I think `CurrentCultureIgnoreCase` is acceptable here but want to call attention to it just in case.,1,0,0,0,0,0
347599920,2046,PullRequestReviewComment,"By hiding `GetAll` here we don't let the caller control pagination, which means for orgs with a large # of teams it'll take several requests to fetch them all, before doing the filtering.",0,1,0,0,0,0
347600609,2046,PullRequestReviewComment,"I'm not a fan of `.First` here because it's behaviour is different to how Octokit itself handles cases where an entity cannot be found. In these cases the API response returns a 404, which we convert into a `NotFoundException` and throw as part of the plumbing. I'd prefer we stick to this pattern to avoid callers having to handle multiple things.",0,0,1,0,0,0
339009976,2043,PullRequest,Also adds support for the `Nested Teams` preview APIFixes #2036,,,,,,
318254985,2043,PullRequestReview,Thanks again  for the contribution!,,,,,,
309297121,2040,PullRequestReview,This is a wonderful contribution - thanks so much !,,,,,,
332870883,2039,PullRequest,* Cake.Frosting 0.35.0* Cake.Coverlet 2.3.4* Cake.Codecov 0.7.0* Codecov 1.7.2* Make dotnet-format execution more robust (currently can fail if not installed globally),,,,,,
332241724,2038,PullRequest,Fixes #1607,,,,,,
316243361,2038,PullRequestReview,thanks for the contribution!,,,,,,
341441508,2038,PullRequestReviewComment,"Actually found that this part didn't use to Parameter so named languages such as CPlusPlus was parsed as ""CPlusPlus"" instead of ""cpp""",1,0,0,0,0,0
332140214,2037,PullRequest,Fixes #2031 - Updated Model with long Id - Fixed tests - Updated IssuesClient and interface - Updated IssuesEventsClient and interface- Double checked that the same tests still failing for the same reasons.,,,,,,
308445487,2037,PullRequestReview,"thanks for submitting this PR. I think we can avoid changing the `number` parameter from an `int` to a `long` here as these are for the `Issue` itself, not the `EventInfo` `number` that is being deserialized. This will simplify the diff of changes.",,,,,,
340026157,2037,PullRequestReviewComment,The `number` used in this interface is not the one overflowing. Can we undo the changes in this file to simplify the diff?,0,1,0,0,0,0
340026754,2037,PullRequestReviewComment,Same thing here - this `number` used in this interface is not the one overflowing. Can we undo the changes in this file to simplify the diff?,0,1,0,0,0,0
340027399,2037,PullRequestReviewComment,"Same thing for this file - `number` here is the issue number itself, no the `EventInfo` number that is being deserialized.",0,1,0,0,0,0
340027616,2037,PullRequestReviewComment,"Same thing for this file - `number` here is the issue number itself, no the `EventInfo` `number` that is being deserialized.",0,1,0,0,0,0
331690410,2035,PullRequest,"Fixed this issue by changing the model property to be a long.The Working fix:This is one of my first pr's, so let me know if I'm missing something. We don't appear to need to change the docs for this one.",,,,,,
329480917,2032,PullRequest,Related to #2030 If there is need to add more languages let me know and i could get working on that :),,,,,,
304898187,2032,PullRequestReview,Thanks !,,,,,,
326481768,2028,PullRequest,Resolves .NOTE: I took a first stab at this when I had some time and anyone else should feel free to continue to run with it if you've got more time / focus. I don't mind someone else using this as a starting point.,,,,,,
324535437,2024,PullRequest,Fixes Fixes,,,,,,
323020467,2019,PullRequest,Modifies `SearchCodeRequest.Extension` to be a list for filtering by `x` number of extensions. Helps reduce the number of required API calls.Question: Is there an open issue to support the negation of qualifiers (`-extension:{0}`)? I couldn't find one.,,,,,,
320773645,2017,PullRequest,"Recent Travis builds on Linux seem to now have `System.Range` available, which clashes with our `Octokit.Range` type:This should disambiguate it without impacting the other builds.Oh, and the second commit is to tidy up the last xUnit warning (by opting in and skipping the test with a warning).",,,,,,
320732889,2016,PullRequest,"Back in the day I added [`shiftkey/Octokit.CodeFormatter`] to this project, but that predates the global tools support for .NET Core. I had a look around today before I took a shot at updating it and found [`dotnet-format`] has shipped, so I'm going to retire that in favour of this.This PR now adds in the `FormatCode` step as a local build (so devs can run `./build.ps1` or `./build.sh` and have their code tidied up for free) and tidies up what is currently on `master`.",,,,,,
320706476,2015,PullRequest,"- [x] `A fatal error occurred, the required library libhostfxr.so could not be found.` - [x] `No executable found matching command ""dotnet-format""` - [x] `error MSB3644: The reference assemblies for framework "".NETFramework,Version=v4.5.2"" were not found.` et al - [ ] `error : unable to find repository origin with: dotnet sourcelink-git origin ` - [ ] ??? - [ ] get Linux build working",,,,,,
320287330,2014,PullRequest,- [x] Unit Tests- [x] Integration TestsFixes octokit/octokit.net#1959,,,,,,
304899876,2014,PullRequestReview,Thanks for this  - gonna try and get this in for the next update!,,,,,,
327107731,2014,PullRequestReviewComment,"I'm not 100% sold on the naming of this `enum`...we now have 3 quite similarly named `enum`s:- This newly added one- [OrganizationMembersRole] - this has the same roles as the one I've added, but with an extra value `All`- [OrganizationMembershipRole] - this one has **very** different values",1,0,1,0,0,0
327108630,2014,PullRequestReviewComment,"I'm not 100% sold on this name either, maybe it should be singular `Membership` rather than plural `Memberships`...",1,0,0,0,0,0
329301480,2014,PullRequestReviewComment,So I just found [`MembershipState`] ü§¶‚Äç‚ôÇ,0,0,0,0,1,0
329301528,2014,PullRequestReviewComment,"Now that I found the `MembershipState` `enum`, I'm thinking that `MembershipRole` is a better name for this `enum`?",1,0,0,0,0,0
320086246,2013,PullRequest,These tests were originally in #1415 but are useful for #2010,,,,,,
320079068,2012,PullRequest,Follow-up from #2010,,,,,,
320045912,2011,PullRequest,"Supersedes #1415 which predates a lot of nice things: - the cleanup of csproj files - maintainers being able to push to PR branches (so I can rebase the work)I hadn't started reviewing it at the time, but maybe we can get this out to improve our Enterprise support. - [x] builds and tests pass - [x] review and merge #2010 which will simplify this diff further - [x] rebase on top of `master` - [ ] extract PRs for internals changes that are not critical - [ ] address hacks with `GetAndFlattenPages` not being compatible with `POST` or `DELETE` in a separate PR - [ ] reorganize history to focus on just what needs to support this PR",,,,,,
320044930,2010,PullRequest,"Supersedes #1269 which predates a lot of nice things: - the cleanup of csproj files - maintainers being able to push to PR branches (so I can rebase the work)This felt close enough, but it's been a few years so I'm gonna need time to read it over again. - [x] builds and tests pass - [x] review changes and tests make sense - [x] add some docs - [x] tidy up diff",,,,,,
291520327,2010,PullRequestReview,I was worried that this was our first Enterprise-specific APIs but it turns out there's a bunch and I just don't remember them. Gonna merge this in and then tackle #2011,,,,,,
319936147,2009,PullRequest,"- [x] Tests, tests, testsFixes octokit/octokit.net#1945",,,,,,
291516996,2009,PullRequestReview,This is excellent - thanks for pulling all of this in !,,,,,,
319933536,2008,PullRequest,"I noticed that `IObservable GetAllForIssue(long repositoryId, int number, ApiOptions otpions)` didn't specify `AcceptHeaders.ReactionsPreview` so I added this as part of my changes.- [x] Tests ~? (I checked the `GetAllForRepository` method and noticed that there are no tests that use the `IssueCommentRequest` parameter, but I can add tests for the `GetAllForIssue` if desired)~ `Codecov` clearly wants me to write some tests üòÅ Fixes octokit/octokit.net#1960",,,,,,
291471363,2008,PullRequestReview,"LGTM, thanks for this !",,,,,,
319927638,2007,PullRequest,Not sure if I should add/update any tests to check for the existence of the `ID` property?Fixes octokit/octokit.net#1970,,,,,,
319689920,2005,PullRequest,Follow-up from #2001,,,,,,
319681375,2004,PullRequest,"There's one unmarked test that seems to be deadlocking the CI build, but aside from that this PR should resolve all the feedback from the xUnit analyzers.",,,,,,
318298504,2001,PullRequest,"Related to #1817 and #1994, my plan is: - add a `net46` target and confirm tests all work fine locally on that platform (where feasible) - ship a `net46` binary alongside a `net45` binary for at least one release - land #1994 and bump us to the newer `System.Reactive`, which requires dropping `net45` - ship another update to our newer `System.Reactive` and a newer minimum of `net46`",,,,,,
318113143,1998,PullRequest,Closes #1987,,,,,,
318090131,1997,PullRequest,"Following on from #1995 there are now a build of build warnings and suggestions to make the tests more readable. If I've done it right, this PR should pay down most of them.",,,,,,
317885315,1996,PullRequest,This might help with #1991 which is currently failing on macOS only due to something that looks like  (definitely fixed in 3.0),,,,,,
317121161,1988,PullRequest,"Fixes #1972I was cleaning up some tests and stumbled upon this issue, and I think the fix here is to simply drop the space, as  pointed out. - [x] build and tests pass - [x] integration tests for search also pass",,,,,,
288298262,1988,PullRequestReview,LGTM üëç,,,,,,
283554160,1985,PullRequestReview,Thanks !,,,,,,
302866833,1978,PullRequest,Update build to use latest released version of Cake:Frosting (0.34.1 which uses same version of Cake.Core/Common).,,,,,,
290693032,1971,PullRequest,Fixed spelling,,,,,,
252951238,1971,PullRequestReview,Thanks !,,,,,,
281020294,1964,PullRequest,"Field isnt shown in responses on the developer docs site, however poking the API shows it IS present in the json response payload and is thus populated successfully with this change",,,,,,
265576041,1956,PullRequest,"the `""/""` seems to force it back to the master branch. just wondering if this is by design?",,,,,,
270365804,1956,PullRequestReviewComment,"The URL that gets generated in here looks like this:I wonder if the `""/""` here is causing the confusing URL.  what happens if you make this an empty string?",1,0,0,1,0,0
270604893,1956,PullRequestReviewComment,"null and empty string throw an arg exception. happy to attempt a PR where either null or empty string mean ""root dir""",1,1,0,0,0,0
261724900,1954,PullRequest,I had to add the warning to the `Statistics` property as well on the `*RepositoriesClient` otherwise the warning won't show up in intellisense when you do `github.Repositories.Statistics`Fixes #1814,,,,,,
270612578,1954,PullRequestReviewComment,So this has added a 2nd `` tags and not add duplicate ones,0,0,0,0,1,0
270613262,1954,PullRequestReviewComment,"Works On My Machine :tm:This is in Rider though, I tested it in VS2017 and it does not show the second `` section.",0,1,0,0,0,0
323988051,1954,PullRequestReviewComment,I tidied this up in,0,0,0,0,1,0
259391383,1953,PullRequest,Since I updated my GitHub username a while back,,,,,,
258504109,1952,PullRequest,Fixes #1514,,,,,,
216091962,1952,PullRequestReview,Hey  this looks pretty awesome thanks.  I noted a couple of things,,,,,,
266837144,1952,PullRequestReviewComment,can you clarify what this resharper setting does?,0,0,0,1,0,0
266838618,1952,PullRequestReviewComment,should this be an enum?,0,0,0,1,0,0
266839294,1952,PullRequestReviewComment,should this be a `StringEnum` ?,0,0,0,1,0,0
267222423,1952,PullRequestReviewComment,Hmm...I think this was an involentary change...,0,0,0,0,1,0
270612636,1952,PullRequestReviewComment,"and `membersAllowedRepositoryCreationType` are `string`s in the `ctor` rather than the enum types.  Although this does compile, we should take the enum type in the ctor for consistency/clarity",1,0,1,0,0,0
258070122,1951,PullRequest,The language was being directly converted to a string through `ToString()` instead of using the value in the `ParameterAttribute`.,,,,,,
212553122,1951,PullRequestReview,LGTM üëç,,,,,,
255594054,1949,PullRequest,- [x] IMigrationsClient- [x] IObservableMigrationsClientFixes #1662,,,,,,
255185206,1948,PullRequest,![]- [x] ICommitCommentReactionsClient- [x] IObservableCommitCommentReactionsClient- [x] IIssueCommentReactionsClient- [x] IObservableIssueCommentReactionsClient- [x] IIssueReactionsClient- [x] IObservableIssueReactionsClient- [x] IPullRequestReviewCommentReactionsClient- [x] IObservablePullRequestReviewCommentReactionsClientFixes #1661,,,,,,
207147745,1948,PullRequestReview,"Pretty minor nitpick, but we are missing null check tests for the overloads that take a `repositoryId`, and `ApiOptions`.  Probably because until now there were no null checks for the `repositoryId`/`GetAll` methods since they had no nullable parameters, thus there was no existing section to add a check to...",,,,,,
255101285,1947,PullRequest,"Couldn't find any tests that covers label, but if I've missed something please point it out and I'll fix it.I also added an `id` parameter to the constructor which is pure cargo culting since I see no reference to the constructor anywhere üòÑ Closes #1941",,,,,,
255064087,1946,PullRequest,### SummarySmall change - I added Id to the Label model property.Resolve #1941,,,,,,
254520696,1944,PullRequest,Sample for #1943,,,,,,
205725431,1944,PullRequestReview,Some code changes to avoid needing to undertand the internals of awaiters,,,,,,
258453127,1944,PullRequestReviewComment,Move this code comment out into the Markdown text,1,0,0,0,0,0
254189474,1940,PullRequest,Fixes,,,,,,
205144875,1940,PullRequestReview,Looks good to me :+1:,,,,,,
249210765,1936,PullRequest,Fixes #1914Don't touch SecurityProtocol when current value is the new SystemDefault added in .NET 4.7Added comment to explain what we are doing,,,,,,
248990429,1934,PullRequest,"Fixes #1933 30 Jan 2019 Updated the second overload of the  to remove any occurrence of  from the string passed in for its  parameter, so a reference from a tag retrievd with the API can be used natively with other reference APIs, such as Delete Reference.",,,,,,
246668177,1932,PullRequest,"Hello, I tried to do the same as was done in #1732 Please tell me if anything is missing.Cheers",,,,,,
252210441,1932,PullRequestReviewComment,minor nit: missing a whitespace line,1,0,0,0,0,0
252268056,1932,PullRequestReviewComment,fixed :),0,0,0,0,1,1
246278968,1931,PullRequest,This fork has been updated to compiled against .NET 4.6 and use an alternative public key. Unfortunately the test projects no longer compile and run.### What this PR does- Fix the `InternalsVisibleTo` attribute to use new public key- Update the test projects to compile against .NET 4.6,,,,,,
246232375,1930,PullRequest,"This enables building via cake on linux without requiring adjustments onother platforms, fixes #1745",,,,,,
244364346,1929,PullRequest,:walking_man: :walking_woman: **[Missing Persons - Walking in L.A.]**,,,,,,
241993735,1926,PullRequest,I noticed while trying to read labels off a PR that the model was missing it from the response.,,,,,,
241815952,1925,PullRequest,~150 open issues would not be something I'd consider to be 100% bug free. Was this supposed to be a joke?,,,,,,
240778220,1924,PullRequest,Fixes #1923,,,,,,
238717468,1921,PullRequest,"* Uses Cake.Core & Cake.Common 0.31.0 ( read more about improvements at  )* 0.31.0 is on NuGet.org so nuget.config no longer needed* GetDirectories with predicate  is now obsolete, replaced by GlobberSettings",,,,,,
235249334,1919,PullRequest,* Adds support for 'login' parameter* Adds support for 'allow_signup' parameterCloses #1918,,,,,,
232646618,1912,PullRequest,"Add `RequireApprovingReviewCount`setting to existing branch protection calls, as per [this blog post]",,,,,,
228241121,1905,PullRequest,Hi  please let me know what you think.,,,,,,
171762417,1905,PullRequestReview,Just a few nits from me üëç,,,,,,
171995564,1905,PullRequestReview,"Hi  Thanks for sending the PR over, and thanks  for starting the review.Just to confirm, yes we dont want any behaviuor change on the exiusting `DateTime` based ctors and methods.  As you've done we can add `DateTimeOffset` versions of everything and flag the old ones as `[Obsolete]`.  They will be deleted from the code base in 2 releases time.In terms of the tests, im not sure I like the complexity of adding the enum and switching out the request code, as once you take my other comment into account (and actually test the formatted date/time string) there will be a 2nd point that needs to switch.  IMO it would be better to just leave all the old tests completely untouched and just copy them for DateTimeOffset versions.  As I say, the deprecated stuff will be removed in a couple of releases time so I dont think the test complexity needs to be introduced, would rather just copy/paste them for now, and remove the old ones later.In terms of the [Obsolete] messages, can we use these please?""This ctor does not support the time component or timezone and will be removed in a future release.  Please use the DateTimeOffset overload instead""""This method does not support the time component or timezone and will be removed in a future release.  Please use the DateTimeOffset overload instead""",,,,,,
230749703,1905,PullRequestReviewComment,"By forwarding these ctors to the new `DateTimeOffset` overloads, the behavior has changed by taking the time into account. That could be a breaking change.I think the safest thing to do is to keep the existing logic (as  noted in #1904) for these ctors and use the new (and improved) format for the new `DateTimeOffset` ctors.",0,1,0,0,0,0
230751119,1905,PullRequestReviewComment,"What will the `zzz` component be here, given you're using the `DateTime` property and not the `DateTimeOffset` itself?",0,1,0,1,0,0
230767563,1905,PullRequestReviewComment,"Hi  the `zzz` includes the timezone offset which I believe is correct. However, you're right these changes affect the behaviour. I'll update and re-submit.",0,1,0,0,1,0
230779677,1905,PullRequestReviewComment,But what is that offset? `DateTime` doesn't store a separate offset.,0,1,0,1,0,0
230780728,1905,PullRequestReviewComment,See,0,0,0,0,0,1
230783283,1905,PullRequestReviewComment,I'd probably store this pattern in a constant and reuse it throughout.,1,0,1,0,0,0
230900122,1905,PullRequestReviewComment,Hi sorry you are right . I was trying to do to code this while also doing my job which was a mistake. I'll fix in my next PR.,0,0,0,0,1,1
230902179,1905,PullRequestReviewComment,Hi  I've included this suggestion aswell.I've also updated the relevant unit tests to use a Theory which tests both the `DateTime` and `DateTimeOffset` strategies.,0,1,0,0,1,0
230914175,1905,PullRequestReviewComment,Nit: `Patten` -> `Pattern`,1,0,0,0,0,0
230914765,1905,PullRequestReviewComment,"Is it worth pointing out the preferred API and why you'd use it? Something like This constructor doesn't use the time component of the specified `DateTime`. Please use the overload accepting a `DateTimeOffset`, which also supports time.",0,0,1,0,0,0
230917102,1905,PullRequestReviewComment,Thanks  good pickup. Just made both changes and checked-in.,0,0,0,0,1,0
230946239,1905,PullRequestReviewComment,Does this compile? ü§î,0,0,0,1,0,0
230946775,1905,PullRequestReviewComment,These are not ctors. Maybe also change these to reflect the recommended APIs?,0,1,0,1,0,0
230948617,1905,PullRequestReviewComment,"I'm thinking it might be better to just use `ToString(DatePattern, CultureInfo.InvariantCulture)` and string concatenation or interpolation than the current format strings...",1,0,0,0,0,0
231050379,1905,PullRequestReviewComment,Hi  you're thinking something like this?,1,0,0,0,1,0
231105185,1905,PullRequestReviewComment,"Same here, it needs to use Date only, not Date+Time",,,,,,
231105502,1905,PullRequestReviewComment,This still has the old spelling.  Im not sure you even can parameterize the format string like this anyway?!,,,,,,
231107188,1905,PullRequestReviewComment,"I'd prefer the unit test actually tests the formatted string eg '2014-1-1'T'020406 1000' (or whatever it should be)Otherwise these tests are susceptible to whatever formatting bug may exist inside `DateRange` class.  EG Im pretty sure the way you've implemented it at the moment isn't correctly formatting the string, yet all these tests pass (because you are using the `DateRange` class to test the `DateRange` class! ü§£",,,,,,
231719965,1905,PullRequestReviewComment,"I'm thinking something like `query = FormattableString.Invariant($""{from.ToString(DateTimePattern)}..{to.ToString(DateTimePattern)}"");` üòÑ",,,,,,
264600057,1905,PullRequestReviewComment,"Hi  Has taken me a while to make these changes due to other commitments, however, they're now there.Let me know what you think.",,,,,,
224567710,1896,PullRequest,* [x] Add TeamDiscussion class and related New/Update classes* [x] Add ITeamDiscussionsClient interface* [x] Add observable implementation* [x] write unit tests* [x] write integration tests* [ ] unit tests for Observable client* [ ] integration tests for Observable client* [ ] Add `TeamDiscussionRequest` request to `GetAll()` methodsImplements Team Discussions functionality from,,,,,,
172464691,1896,PullRequestReview,"Hi  Great work so far, the implementation looks to be very thorough!  I've made some review comments, mostly around consistency things like consistent field comments and variable naming, and probably the big thing is where this new client actually ""lives"" (ie it should be under `Teams` not `Organizations`)I've suggested inline edits for most of the comments which hopefully makes it easy to accept those minor things üòÄ",,,,,,
175309051,1896,PullRequestReview,"Hi  Thanks! This is almost good to go... Just a couple of things from the first review weren't actioned(by the way, Im using the new ""suggest changes"" function on this PR so you should be able to accept the suggested changes directly in GitHub, without having to actually make them yourself, if you want to!)",,,,,,
231484998,1896,PullRequestReviewComment,"This sub client should be put under `TeamsClient` rather than `OrganizationsClient`, based on the API docs structure:Also can we please make the property should be singular and just be called `Discussion`?  We would access it like  `client.Team.Discussion.Get()`",,,,,,
231485231,1896,PullRequestReviewComment,can we please name the variable `NewTeamDiscussion newTeamDiscussion` here and in the implementation?,,,,,,
231485309,1896,PullRequestReviewComment,can we please name the variable `UpdateTeamDiscussion updateTeamDiscussion` here and in the implementation?,,,,,,
231485575,1896,PullRequestReviewComment,"Can this field descriptor just be ""The team discussion number."" on all methods it appears?",,,,,,
231485923,1896,PullRequestReviewComment,Move to `TeamsClient`,,,,,,
231486593,1896,PullRequestReviewComment,"I think this is an old comment from where this was copied from, and it doesnt really make too much sense (referring to ApiConnectionTests.cs).  I think we can just remove this whole  section",,,,,,
231486645,1896,PullRequestReviewComment,Move to `TeamsClient`,,,,,,
231487336,1896,PullRequestReviewComment,move to `TeamsClient`,,,,,,
231487397,1896,PullRequestReviewComment,Move to `TeamsClient`,,,,,,
231487690,1896,PullRequestReviewComment,XmlComments are missing from all the methods in this class (just copy the ones from the interface),,,,,,
231488184,1896,PullRequestReviewComment,"Since this is an optional field it should probably be nullable (`bool? Private`) so that if the user doesn't set it, we dont send it to the API. Eventhough the default value is false anyway, there is a difference between us always sending false and us only sending a value when the user explicitly sets it.",,,,,,
231488615,1896,PullRequestReviewComment,since both fields are optional there should be no parameters in the `ctor`,,,,,,
231488942,1896,PullRequestReviewComment,allow optional field to be set via object initializer syntax,,,,,,
231490072,1896,PullRequestReviewComment,XmlComments missing for all the methods in this class (just copy the ones from interface),,,,,,
232458598,1896,PullRequestReviewComment,Moved to `IObservableTeamsClient`,,,,,,
233810286,1896,PullRequestReviewComment,"Mandatory field which gets set via the `ctor`, so this property should be `private set`",,,,,,
233810336,1896,PullRequestReviewComment,"Mandatory field which gets set via the `ctor`, so this property should be `private set`",,,,,,
233810830,1896,PullRequestReviewComment,We want to access this API like `client.Team.Discussion.Get()` so this property name should just be `Discussion`,,,,,,
233811117,1896,PullRequestReviewComment,We want to access this API like `client.Team.Discussion.Get()` so this property name should just be `Discussion`,,,,,,
233812007,1896,PullRequestReviewComment,I also just noticed this commented out property?,,,,,,
234463839,1896,PullRequestReviewComment,I tried to fix other comments as well in the file.,,,,,,
172452740,1895,PullRequestReview,"This looks great  Just one minor request around the unit tests, to fix up the previous usage of the `AcceptHeader` const/variable, in favour of hardcoding the expected header string like the other tests already do :+1:Have you run any integration tests or confirmed that these changes do actually work?",,,,,,
231475617,1895,PullRequestReviewComment,"Can we use the string values here rather than the `AcceptHeaders.xxx` variables?  (I realise you were just updating what is already there, but we must have somehow missed this previously!)",,,,,,
220963386,1884,PullRequest,#1028 This is a continuation and fix for PR  I fixed all tests apart from these two:- SendsCreateToCorrectUrl- SendsCreateToCorrectUrlWithRepositoryIdThese seem related to creating new releases?Would be great to get some reviews on this soon as I really want to get this in.,,,,,,
425848390,1884,PullRequestReview,After giving this a look over I think I'm just going to push this out with the next update because I can't spot any obvious concerns.Thanks for the contribution !,,,,,,
218795002,1877,PullRequest,"It seems that GitHub has recently added a new field called _[author_association]_ to comment related response models such as[ Issue Comments], [Pull Request Review Comments], and[ Pull Request Reviewers](). This field shows how an author is related to a repo.The proposed change adds a new enum named AuthorAssociate, changes constructors in affected models, and lastly adds a new attribute called AuthorAssociate to related models.",,,,,,
218658333,1876,PullRequest,- Added badges for nuget- Added 50 horse power,,,,,,
217674144,1872,PullRequest,The existing repo names are based on a very old version of .NET Core.,,,,,,
158146437,1872,PullRequestReview,Thanks for this update !,,,,,,
219869405,1872,PullRequestReviewComment,lol,,,,,,
214081202,1868,PullRequest,"Fixes #1865  was incorrectly passing an accept header to the body parameter of the delete call.  Recent upstream api changes seem to have occured where this previously ignored situation is now being rejected as the body can't be parsed as valid json.  Also the preview functionality for label emojis/descriptions wouldnt have been working on this call due to the accept header not being passed correctly.This PR fixes the issue by adding an overload for `ApiConnection.Delete(Uri uri, string accepts)` that takes a Uri and accept header, but no body, which the existing code in `RemoveFromIssue()` will now use instead of `ApiConnection.Delete(Uri uri, object data)`",,,,,,
153552956,1868,PullRequestReview,Nice find!,,,,,,
213916803,1866,PullRequest,- [x] Integrate a tool to generate code coverage- [x] Integrate codecov.io- [x] Added badge to readme,,,,,,
289233159,1866,PullRequestReview,Removed that pdb change. It seems I was working around an issue in coverlet and not realizing it.,,,,,,
324002365,1866,PullRequestReviewComment,can you recall why we have to change this? I think it's safe to drop but I figure there might be some extra context here...,,,,,,
325144232,1866,PullRequestReviewComment,"I'm not going to know for sure, but it seems like I may have been working around an issue in coverlet at the time. I'm testing now with the changed removed, so far it seems like the issue has been resolved.",,,,,,
325144705,1866,PullRequestReviewComment,"Yea, I think it's not needed anymore.",,,,,,
212937817,1864,PullRequest,- [x] generate release notes- [x] run `.\build.ps1 -Target FormatCode` to tidy up whitespace/formatting- [x] integration tests all pass (With a few known exceptions around collaborator/invite functionality having been locked down)- [x] :thumbsup: from  and/or  - [ ] :shipit:,,,,,,
211660819,1860,PullRequest,Replaces #1859 Fixes #1858- Update `CreateInstallationToken()` method to handle the new `/app/installations/...` routeThis route has actually been supported since June 2017 so no special case is needed to maintain functionality for GitHub Apps Preview on GitHub Enterprise 2.14,,,,,,
211077511,1859,PullRequest,"Fixes #1858- Update `CreateInstallationToken()` method to handle the new `/app/installations/...` route- Add an `[Obsolete]` flagged `CreateInstallationTokenPreview()` method still using the old `/installations/...` route, for GitHub Enterprise 2.14 compatibility",,,,,,
210410814,1857,PullRequest,"Fixes #1856 Attempt to handle both old and new annotations models so we can support github.com and GHE 2.14- [x] add `Path` and `AnnotationLevel` fields to `CheckRunAnnotation` response and `NewCheckRunAnnotation` request- [x] flag `Filename` and `WarningLevel` as deprecated/obsolete but keep them around so we can use them for GHE 2.14- [x] also flag `BlobHref` as deprecated on `NewCheckRunAnnotation`- [x] Adjust ctors so we have a way to create the ""old"" and ""new"" model formats, ensuring the relevant fields are `null` so they don't get sent- [x] Add new re-request endpoint- [x] Flag old request endpoint for deprecation",,,,,,
206763272,1854,PullRequest,This API call comes in handy for integrators of GitHub Apps:- - - - - -,,,,,,
145196783,1854,PullRequestReview,"Hey  it's looking pretty good, ive made some reviwe comments/thoughts just on the Observable client since that was first in the list, but the comments apply to the regular client too.In general - I havent marked up every XMlDoc inconsistency - we will need to get the comments and param entries right, but we can focus on that once we have the main code etc done- we should think about the naming of the mehtods corrresponding to ""find"" endpoints as im not sure `Getxxx` is the best for those.  I suggested a couple of options - which do you think sounds better?- since the authentication for github apps, installations and user-to-server oauth is so complex, we probably need to indicate in the XmlDoc comments of every endpoint what type of auth it requires- any endpoint taking repo `/repos/:owner`/`:name` we also by convention, support the ""undocumented"" endpoint `/repositories/:id/`Also im not sure of the historic reasons but the main client and interface for both the Observable and normal clients live in the top level folder with all sub clients in the Clients folder below there.  I see you renamed/moved the Observable one into the Clients folder but didnt do the same thing for the normal client.  In general id say we shouldnt move things since it makes tracing history more difficult, unless its a really good reason... and if you think it IS a good reason, we should at least be consistent and do it for normal and observable üòÅ",,,,,,
209223783,1854,PullRequestReviewComment,"The property name should be singular, eg `github.App.Installation.xxxx`",,,,,,
209224694,1854,PullRequestReviewComment,I wonder if this should be named `GetRepositoryInstallationForCurrent()` since it uses the currently authenticated GitHub App... or otherwise `FindRepositoryInstallation()`?,,,,,,
209224729,1854,PullRequestReviewComment,also we need to support the `repositoryId` version of this call in addition to the `owner/repo` version,,,,,,
209224849,1854,PullRequestReviewComment,comment says repository but should be organization,,,,,,
209224885,1854,PullRequestReviewComment,incorrect params,,,,,,
209224974,1854,PullRequestReviewComment,GetOrganizationInstallationForCurrent or FindOrganizationInstallation?,,,,,,
209225072,1854,PullRequestReviewComment,GetUserInstallationForCurrent ?  Or FindUserInstallation?,,,,,,
209225433,1854,PullRequestReviewComment,"The docs says this endpoint uses an installation token, not a JWT... and this would get repositories of an installation rather than a github app (which would have many installations each with potentially many repos)So let's go with ""List repositories of the authenticated installation (requires Installation Token auth)"" or something similar",,,,,,
209225568,1854,PullRequestReviewComment,same as above,,,,,,
209225672,1854,PullRequestReviewComment,Comment probably needs to indicate this requires a user to server OAuth token,,,,,,
204164037,1853,PullRequest,"In implementing this, I found that `appClient.GetCurrent()` (etc.) don't work.Appears that all the GitHub Apps methods were moved into a subclass called `GitHubApps`, so that `appClient.GitHubApps.GetCurrent()` etc does work. Could also be written by adding the `.GitHubApps` onto the end of the `appClient` constructor; not sure which would be better from a documentation standpoint.Anyway, took me a while to figure it out, thought that updated docs might help others.",,,,,,
203063760,1852,PullRequest,Hahaha Hopefully this doesn't break any tests,,,,,,
202404726,1851,PullRequest,- [x] generate release notes- [x] run `.\build.ps1 -Target FormatCode` to tidy up whitespace/formatting- [x] integration tests all pass (With a few known exceptions around collaborator/invite functionality having been locked down)- [x] :thumbsup: from a contributor- [ ] :shipit:,,,,,,
201445258,1847,PullRequest,"Split out of #1801, focusing on Check Runs now Check Suites is done in #1846Task List- [x] Add CheckRunEvent activity/webhook payload- [x] Create a check run- [x] Update a check run- [x] List check runs for a specific ref- [x] List check runs in a check suite- [x] Get a single check run- [x] List annotations for a check run",,,,,,
138239891,1847,PullRequestReview,I've been successfully using this api,,,,,,
202515055,1847,PullRequestReviewComment,Missing a property for `Title`.,,,,,,
202515754,1847,PullRequestReviewComment,"The response payload actually doesn't have that field, only the request seems to",,,,,,
202515863,1847,PullRequestReviewComment,"Odd, okay..",,,,,,
203312670,1847,PullRequestReviewComment,"after checking internally, turns out this was an oversight and `title` will be added to this response, so I've added it to the mode :+1:  Also I realised I still had it in the `ctor` anyway, even though the class didn't have the property, which is probably what you were pointing out anyway!  ü§£",,,,,,
199892672,1846,PullRequest,Split out of #1801 to focus on Check Suites firstRemaining things to do:- [x] XmlDoc for Response objects- [x] XmlDoc for Observable client/interface- [x] Tests for Observable client methods- [x] Observable implementations,,,,,,
136249767,1846,PullRequestReview,lgtm,,,,,,
136674207,1846,PullRequestReview,I've started to play with it in a few examples. So far it's looking good.,,,,,,
199371767,1844,PullRequest,Closes #1789,,,,,,
141511643,1844,PullRequestReview,"Looks like you've polluted your master branch with merge commits and other stuff that isn't actually in our master.  There are a few spurious files/changes still on this PR that need to be reverted, which ive marked up",,,,,,
206115836,1844,PullRequestReviewComment,this entire file is spurious and should be removed,,,,,,
206115877,1844,PullRequestReviewComment,this test shouldnt need to be commented out,,,,,,
206115926,1844,PullRequestReviewComment,this function is unrelated to this PR and should be removed,,,,,,
206116011,1844,PullRequestReviewComment,"no changes to this file should be necessary, so revert this whitespace change",,,,,,
206116036,1844,PullRequestReviewComment,"no changes to this file should be necessary, so revert this change",,,,,,
206116168,1844,PullRequestReviewComment,I would say this should live under Models/Response/ActivityPayloads with the others,,,,,,
257894748,1844,PullRequestReviewComment,The fields in the `PushWebhookCommitter` are not a superset of `Committer` so we shouldn't use inheritance here.  We should just make this response model contain the fields that the webhook payload will have:,,,,,,
383407527,1844,PullRequestReviewComment,Resolved in 4905d42e85b9b91c0712c5a0b5afe29757975aa7,,,,,,
199151429,1843,PullRequest,Typo.,,,,,,
198655952,1842,PullRequest,"As per [this recent blog], Project Cards can now be archived/unarchived- Add `Archived` field to `ProjectCard` response- Add `Archived` field to `ProjectCardUpdate` request- Add `ProjectCardRequest` request, to allow filtering Project Cards by `archive_state`",,,,,,
197107786,1831,PullRequest,"Fixes #1820 This endpoint is a bit ""special"" as it returns an object hash which we deserialize as a `Dictionary` and then convert into a `ReadOnlyList`.  When no languages exist, the API returns `null` which then throws an exception in our conversion process.This fix handles this situation by returning an empty list.",,,,,,
196925613,1824,PullRequest,Fixes #1823,,,,,,
131417856,1824,PullRequestReview,"100x better and clearer. Thanks. I have a problem though with the setup, could you take a look please? [1825]",,,,,,
196126597,1822,PullRequest,The last release inadvertently ended up with a nuget dependency on `SourceLink.Create.GitHub` which is only used as part of our build process...Also bumped SourceLink packages to latest versions to keep them up to datev0.30:With this change:,,,,,,
195638475,1819,PullRequest,"At first sight, it not obvious that Reset shows time in UTC and I've seen a couple of times folks think it's based on their local timezone. I believe it will be a good addition to current document to mention that the time is UTC.",,,,,,
195610157,1818,PullRequest,"Currently, Octokit does not support the comment_deleted event status. As an example, I was unable to get the Event.Value of one of the [VSCode issues] and i recieved the following error: Requested value 'comment_deleted' was not found.I'm using the latest version, which is 0.30.0",,,,,,
195360469,1816,PullRequest,"Sorry it's taken a while, we've had heaps of good stuff waiting for ""just one more PR"" to sneak in... I'm going to step up the release frequency going forward üòÄ - [x] generate release notes- [x] run `.\build.ps1 -Target FormatCode` to tidy up whitespace/formatting- [x] integration tests all pass (With a few known exceptions around collaborator/invite functionality having been locked down)- [x] fix AppVeyor build üòï - [x] fix TravisCI OSX build üòï - [x] :thumbsup: from a contributor- [x] :shipit:",,,,,,
194151473,1813,PullRequest,"Pull request addressing #1718 - [x] (From issue) Repository transfer should be implemented as a  method on the  and  clients- [x] (From issue) Accept header  is required, to enable the preview functionality- [x] (From issue) The  field on the request object only applies to organisation owned repositories, so the  of the request object class should reflect this by oferring an overload that doesn't require this input, and the xmldoc should also make mention of the fact the  only applies to org repositories- [x] (From ) XML documentation on the new methods- [x] (From ) Run convention tests successfully- [x] (From ) Create new unit tests for request object constructor- [x] (From ) Integration tests- [x] Add unit tests for the  client methods in [RepositoriesClientTest]- [x] Implement 2nd endpoint (if it exists (it probably does)) that takes the repository Id - [x] Use IReadOnlyList rather than a normal int[] array for TeamId- [x] Do something more succinct for  property in - [x] Make Ensure.NotNullOrEmptyList into Ensure.NotNullOrEmptyEnumerable- [x] XmlDoc comments should be added to RepositoryTransfer- [x] Add XmlDoc for second endpoint- [x] Implement integration tests- [x] Debug integration tests for transferring with team ids---Points of concern:- I'm not sure if I'm the one supposed to implement and/or run the integration tests, but if it is me then I have no idea of what to do. Could someone please point me in the right direction?- Unit tests were all successful, but I'm not sure they've covered everything they were supposed to.---Edit: Updated ""to do"" list in repliesEdit 2: Update main ""to do"" list",,,,,,
127923391,1813,PullRequestReview,"Hey  this is üíé thanks!Ive marked up a couple of review changes...In terms of unit tests, you'll also want to add unit tests for the `Transfer` client methods in  similar to the ones already there (eg one to check the uri/request object/accept header, and one to check the null/empty string handling)Also there is most likely a 2nd endpoint that takes the repository Id `/repositories/:id/transfer` which we like to implement, as well as the owner/name oneFinally regarding integration tests yes in general we do like to have them as part of the PR to prove the implementation works.  You do need to setup your integration test environment by following the details [here].  You would create a test account and test organization, then configure octokit tests to use them.  The test could do something like create a repo in the test organization (you will find existing examples of using `RepositoryContext` class to handle doing this) then initiate the transfer request to move it to the test user account, and validate the response received",,,,,,
130405393,1813,PullRequestReview,I can confirm I also get the behaviour where the teams dont appear to be applied to the transferred repository.Ive reached out to GitHub folks to ask them if they can see anything.I also wonder if it somehow only applies to repos transferred from one org to another org (rather than user to org).  I havent tried this...,,,,,,
131157755,1813,PullRequestReview,"I think we're on the home stretch now.  A couple of tests to fix up, and then just some nitpicking over XmlDoc wording/comments!",,,,,,
131407064,1813,PullRequestReview,"Just looking at a few things ""for consistency"" purposes now.- Ensure guards should be implemented in the Observable client methods (eventhough in this case they pass through to the normal client method, this isn't always the case so we prefer to implement th guards explicitly in the Observable client for all methods too)- I'd like us to rename the `currentOwner` parameters to `owner` so that things remain consistent across the code base- We dont yet have unit tests around the Observable client.  They would go [here] in a new `TheTransferMethod` test class.  The things to test, for both the owner/name and repositoryId methods, are the null/empty string parameter checks as well as a test case for `CallsIntoClient` (and `CallsIntoClientById`) that ensures that the observable client called the correct method on the underlying normal client.eg:If you want, I can push changes directly to your branch to address some of these minor things when I find them, however I didn't want to just do this without asking, since you've done such an amazing job so far and I thought you might want to cover off everything on your own!",,,,,,
194703734,1813,PullRequestReviewComment,XmlDoc comments should be added to this class including it's ctor/s and the public properties,,,,,,
194706208,1813,PullRequestReviewComment,We would normally use `IReadOnlyList` rather than a normal `int[]` arraytake a look at other request models for examples (eg [here]),,,,,,
194708125,1813,PullRequestReviewComment,"You could probably do something more succinctly like:` csharpstring.Format(CultureInfo.InvariantCulture, ""NewOwner: {0}, TeamId: {1}"",    NewOwner,     string.Join("","", TeamId ?? ""null""));",,,,,,
195023214,1813,PullRequestReviewComment,this method could probably just take an `IEnumerable` and would then be more reusable for checking other potential lists in the future,,,,,,
196027493,1813,PullRequestReviewComment,"These names should actually reflect the method name, which is `Transfer`.  So what we would do here is have one test class called `TheTransferMethod` and then have `[IntegrationTest]` methods called `TransfersFromOrgToUser` (for the ""normal"" endpoint) and `TransfersFromOrgToUserWithRepositoryId` (for the repositoryId endpoint)",,,,,,
196027821,1813,PullRequestReviewComment,by convention we always name the parameter `repositoryId` (this comment applies to all the places it is currently named `id`),,,,,,
196787606,1813,PullRequestReviewComment,"to be consistent with your other method names, this should be `ById` rather than `WithId`",,,,,,
196788042,1813,PullRequestReviewComment,"eventhough this would throw an exception if the repo didnt exist under the requested owner (thus failing the test), I think i'd still prefer to see some kind of `Assert` in each test, for consistency.eg: `Assert.Equal(newOwner, transferred.Owner.Login);`",,,,,,
196788589,1813,PullRequestReviewComment,we dont want to rely on the test org having to have existing teams.  We have a `TeamContext` that can handle creating a team and destroying it again when it goes out of scope.  So you could rewrite these tests to something like this:,,,,,,
196812522,1813,PullRequestReviewComment,"Fair enough, I didn't think that one through. I'll change this right now.",,,,,,
196837801,1813,PullRequestReviewComment,Oops.,,,,,,
197416828,1813,PullRequestReviewComment,"All of these tests are actually not running properly because `Assert.ThrowsAsync` must be `await`ed, otherwise it runs in the background and is not actually checked.  These tests should actually be failing right now, because the method isn't guarding against `null` and emty strings!",,,,,,
197416860,1813,PullRequestReviewComment,needs to be `await`'ed,,,,,,
197416884,1813,PullRequestReviewComment,needs to be `await`'ed,,,,,,
197417446,1813,PullRequestReviewComment,"This is missing the `Ensure.ArgumentNotNullOrEmptyString()` checks for `currentOwner`, `name` and `Ensure.ArgumentNotNull()` check for `repositoryTransfer` (and the unit tests are not picking it up due to not being `await`'ed)",,,,,,
197417496,1813,PullRequestReviewComment,"This is missing the `Ensure.ArgumentNotNull()` check for `repositoryTransfer` (and the unit tests are not picking it up due to not being `await`'ed)Theses also should be added to the `Observable` client (even though it calls through to this method anyway, our convention is to do the `Ensure.xxx` tests in both clients)",,,,,,
197417668,1813,PullRequestReviewComment,If the above owner/name method has XmlDoc comments provided then we should add them for this repositoryId one too,,,,,,
197421027,1813,PullRequestReviewComment,I dont think we need this remark,,,,,,
197421229,1813,PullRequestReviewComment,"The wording on this remark is a bit odd (what do you mean by ""invalid description""?).  Also `A list of team Ids to add to the repository after the transfer (only applies to Organization owned repositories).`",,,,,,
197421465,1813,PullRequestReviewComment,ditto here.  I would remove this  and put `(only applies to Organization owned repositories)` in the,,,,,,
197623902,1813,PullRequestReviewComment,Add `Ensure.xxx` guards,,,,,,
197623904,1813,PullRequestReviewComment,Add `Ensure.xxx` guards,,,,,,
197623978,1813,PullRequestReviewComment,rename to `owner`,,,,,,
197623981,1813,PullRequestReviewComment,rename to `owner`,,,,,,
197623985,1813,PullRequestReviewComment,rename to `owner`,,,,,,
197623991,1813,PullRequestReviewComment,rename to `owner`,,,,,,
197623995,1813,PullRequestReviewComment,rename to `owner`,,,,,,
192769033,1806,PullRequest,"Now that the inclusion of GraphQL Node ID's is [out of preview], we can add the new field all the affected response models without worrying about preview header complexities üòå  Fixes #1741 Checklist of endpoints that need their response objects updated (from [initial announcement])- [x] Deployments- [x] Gists- [x] Git Blobs- [x] Git Commits- [x] Git References- [x] Git Tags- [x] Issues- [x] Labels- [x] Milestones- [x] Organizations- [x] Projects- [x] Pull Requests- [x] Reactions- [x] Releases- [x] Repositories- [x] Statuses- [x] Teams- [x] Users",,,,,,
192149948,1805,PullRequest,1. Remove incorrect usage of await on synchronous method2. Dispose of stream after use,,,,,,
272783875,1805,PullRequestReviewComment,Whether the `await` operator should be added hereÔºü,,,,,,
187643771,1802,PullRequest,* [x] Add new fields to Label response class* [x] New API: NewLabel and LabelUpdate contructors with description argument* [x] write unit tests* [x] write integration testsFixes #1786,,,,,,
119641156,1802,PullRequestReview,Thanks  I've noted a couple of minor thingsAlso we might want to think about adding the preview header to the Get/GetAll label calls as the developer documentation indicates it's required there in order for the new fields to be returned,,,,,,
187787421,1802,PullRequestReviewComment,I think this will need to be named Default to match the json response field,,,,,,
187787460,1802,PullRequestReviewComment,"To be consistent with the rest of the library, the request model constructor should only take required parameters. Optional parameters can be set via object initializer pattern",,,,,,
187787464,1802,PullRequestReviewComment,Optional field shouldn't be in the ctor,,,,,,
186462652,1801,PullRequest,"Very WIP at the moment, but has most of the checks runs portion (aside from response contructors). Advice and contributions welcome",,,,,,
186548234,1801,PullRequestReviewComment,Listing check runs for a reference or check-suite [doesn't follow the standard pagination rules for most other APIs]. Advice?,,,,,,
186570125,1801,PullRequestReviewComment,"If it doesn't follow the conventions, you can exclude it here:",,,,,,
186697842,1801,PullRequestReviewComment,"why do you say it doesnt follow the standard rules?  From the response in the docs it indicates it should support ""normal"" pagination:",,,,,,
186701471,1801,PullRequestReviewComment,"that said, if there is a case where it doesnt follow normal conventions, another option rather than excluding the whole client interface as  mentioned, is that we also have an attributes which can suppress pagination conventions for naming and/or ApiOptions overloads, on a per method basis :+1: and `[ExcludeFromPaginationApiOptionsConventionTest]`",,,,,,
186708090,1801,PullRequestReviewComment,"I'm more so talking about how the returned json isn't a direct list, but an object insteadDoes the pagination already handle this?",,,,,,
188341788,1801,PullRequestReviewComment,This is how I ended up implementing the GetAll methods with object responses. Pagination on it's own doesn't handle the model,,,,,,
188344622,1801,PullRequestReviewComment,"Also, how would this translate to the reactive methods?",,,,,,
183239369,1798,PullRequest,"This is a quick stab at the test, and it currently validates against the name.Currently this would act more as a reminder/standard vs actually verifying if the ctor works as expected. It does not evaluate if the type is accurate(which nullable would probably need to be accounted for on both sides). It does not detect if the actual property is set with the corresponding parameter value.- [X] Detect models without ctor exposing all properties- [X] Display actionable members from closest ctor match~~Instead of ignoring properties from base classes, possibly traverse the ctor tree to determine if all properties are exposed top down~~- [x] Expose missing properties for the now offending modelsThere are a couple dozen legitimate offenders. And a couple with parameter names slightly different from the property name.",,,,,,
181523705,1796,PullRequest,"This exposes the endpoints for working with pre-receive environments, []Notes:I did not find a good overload for a null payload with accept headers. And adding the obvious overload for this scenario would cause ambiguous call issues. So I ended up passing `new object()` as the payload for the `Delete` and `TriggerDownload` methods.Integration tests are passing using our enterprise instance.",,,,,,
112376191,1796,PullRequestReview,"I've done a quick first pass...  congrats on such a comprehensive PR, it's managed to hit most of the marks on the first go and I see the convention tests have helped you out as well :+1:I've made a couple of review comments so far.  I still need to look more closely at a few things, and run these against an enterprise instance myself but it's looking very good so far thanks!",,,,,,
114170450,1796,PullRequestReview,"Just a couple of issues around constructors for request and response classes.  Request class _may_ need one, depending on which (if any) fields are required.In terms of response classes, all response classes should have a parameter-less ctor as this is required by our deserializer.  This is odd because we have convention tests that should enforce this but for some reason your new response classes weren't picked up.  Also you said integration tests were passing, but I don't think the deserializer would be able to construct these response types without it.  We also should have a ctor that takes every property, as since we try to make response classes immutable (`protected set` properties), we need to provide the ctor in case people want to mock out responses in their tests.  We don't have a convention test to enforce this although we probably should ü§î",,,,,,
181703275,1796,PullRequestReviewComment,"FYI, the octokit serializer/deserializer will automatically handle converting between ruby snake case (`image_url`) and c# camel case `ImageUrl` based on the capitalization converting to underscores... so you don't need to specify `[Parameter()]` attributes unless there is a mismatch.  So most of the attributes added in this PR can actually be removed.  (note, the exception is on `Enum` members, where the attribute is still required!)",,,,,,
181703499,1796,PullRequestReviewComment,"I think for consistency with the rest of the code base, it would be good to avoid an `Update` request inheriting from the `New` request, and instead implement the required fields directly in this class",,,,,,
181703752,1796,PullRequestReviewComment,"Can we use `long` for the Id field, just in case we ever reach max int?  Probably wouldnt happen on pre receive environments, but as a general policy all Id fields should be `long` (we got bitten by PullRequest Status Ids in the past!)",,,,,,
181815397,1796,PullRequestReviewComment,"Good call, i'll update that",,,,,,
181815613,1796,PullRequestReviewComment,"I split these up, also updated the tests to account for optional values",,,,,,
181815892,1796,PullRequestReviewComment,"Nice to find a serializer that accounts for that, I automatically assumed I would need an attribute;)",,,,,,
183207630,1796,PullRequestReviewComment,do you know if the `Name` or `ImageUrl` are required parameters for the update call?  Wondering if there should be a constructor that takes these,,,,,,
183207803,1796,PullRequestReviewComment,response class needs parameterless ctor and ctor taking/setting all properties,,,,,,
183207809,1796,PullRequestReviewComment,response class needs the 2 ctors mentioned previously,,,,,,
183214605,1796,PullRequestReviewComment,"Both are optional, and I have integration tests for omitting one or the other.The call also works when no parameters are passed, although that doesn't really serve a purpose.So, we could1. Add an integration test for the update nothing scenario2. Create a constructor that ensures that at least one value is set. Can't really do separate constructors as both values are strings.3. Leave it as is",,,,,,
183215016,1796,PullRequestReviewComment,Updated,,,,,,
183215017,1796,PullRequestReviewComment,Updated,,,,,,
181247098,1795,PullRequest,"Fixes #1794 2 tests are failing, but they were red when I forked the repo.",,,,,,
111807972,1795,PullRequestReview,"Hi  I've marked up a couple of things to tweak in the unit tests 2 tests are failing, but they were red when I forked the repo.Which 2 tests are you referring to?",,,,,,
181232222,1795,PullRequestReviewComment,"Can we please hardcode the expected accept header values? If the test uses the same variable that the implementation does, we would never pick up a typo in the value so we prefer the tests to be independent (this applies to all the accept headers usage in the tests)",,,,,,
182043008,1795,PullRequestReviewComment,Do you mind if I create static class like `TestAcceptHeaders` to avoid copy-pasting?,,,,,,
183207504,1795,PullRequestReviewComment,id rather keep consistency with the rest of the test code base - ie just specify the actual expected header string and not a central reference point,,,,,,
180652832,1793,PullRequest,"This adds the endpoint to retrieve a release by owner, repo, and tag. []",,,,,,
177213451,1788,PullRequest,Fixes #1787,,,,,,
176931048,1788,PullRequestReviewComment,"Im not so keen on the automatic quoting here.  Firstly, because other search criteria (eg Labels) don't do this, so this would mean behavior isnt consistent...  Secondly because if a user already specified quotes themselves, this would then end up double quoting their input.  Thoughts?",,,,,,
176931629,1788,PullRequestReviewComment,"I was trying to keep the code simple, so decided to add quotes for all the cases, rather than add them only when there are spaces in the value. Sure, from consistency perspective I see your point.That will then leave the responsibility of specifying quotes on the user.Let's play this out, and assume that the `Milestone` property is already available. From the library user's perspective, I would just see a property to set the milestone filter, so I'll apply whatever my milestone value is. I shouldn't really add a layer on top of the library I use which should be aware of the internals of how the interaction with GitHub works. And that ""quoting"" is actually an internal behavior.The bottom line is, if we won't add quotes we force the library users to be aware of the internals of GitHub search API. So I still believe that adding quotes is correct. Even more, I would prefer to get another issue filed to add the quotes across all the other properties too (where applicable of course).Thoughts?",,,,,,
176932362,1788,PullRequestReviewComment,"I do agree with you from a usability point of view and yeah as mentioned my concern is about overall library consistency, so for me I would be happy to keep the auto-quoting in place here, provided:- We handle the case if the user DOES provide quotes - either by stripping theirs to add yours, or by only adding quotes if there arent already some there etc (or by testing/proving that a double quoted milestone still ""works"" and thus isnt actually a problem)- We consider adding quotes is now something we should be doing in any similar cases in the future, and ideally also look at any existing places where this could be fixed up (on a new issue/PR)",,,,,,
176933154,1788,PullRequestReviewComment,"Cool, thanks . I'll update the code to make sure quotes are added only if there aren't already.As for the second point, I'll file an issue to address that in the future.",,,,,,
176934514,1788,PullRequestReviewComment,"After some experimentation it looks like a milestone can have `""` as part of its name. That means, that we can't assume that the quotes the user will provide in the milestone property are to wrap it. Rather, those are just part of the milestone name. Here is a sample search output to confirm this:When searching with just additional double quotes, or without - the search returns nothing:So searching the way I did in the first image is correct, which is - to escape all existing quotes and to always wrap the milestone with double quotes. I'm going to implement that way.",,,,,,
176936164,1788,PullRequestReviewComment,":+1:Oh one other thing I remembered while poking around into this side of things... we will probably also want to add milestone support to the `SearchIssuesRequestExclusions` request, assuming it's possible to search for items that DONT have a given milestone",,,,,,
175720235,1784,PullRequest,"split out of #1738 Originally this was required to support using some nuget packages in integration tests that required `netcoreapp2`, but we ran into sourcelink errors when using SDK 2.0.  This turned out to be unrelated TravisCI errors around network calls timing out etc anyway... In the meantime, that dependent package was changed to only require an earlier `netstandard` again, so #1738 went back to 1.x SDK tooling.We may as well move to SDK 2 tooling though, so that we aren't falling too far behind.  Note that the libraries themselves are still built targeting `netstandard1.1`, this PR only updates the SDK used for build steps, and moves test projects to `netcoreapp2.0` as well",,,,,,
173171415,1780,PullRequest,"As per our deprecation schedule, items that are renamed or removed get flagged as `[Obsolete]` then are removed from the code base after 2 releases.  As we haven't done this for a while, all current `[Obsolete]` items can be removed for the next release",,,,,,
173118707,1779,PullRequest,"- Fix incorrect/missing XmlDoc param comments- Suppress ""missing XmlComment for publicly visible member"" warning as it floods the build logs and we don't actually need XmlComments on _every_ public member- Fix other compiler warnings such as unused variables- Fix convention test warnings relating to duplicate Enum types being in the type list",,,,,,
172965934,1778,PullRequest,Details the format of the reference parameter,,,,,,
171218970,1771,PullRequest,Closes #1769,,,,,,
99137658,1771,PullRequestReview,"Thanks  I just noted a couple of items to change.I also noticed that this field can be provided when [Creating a Pull Request] too, which needs to be implemented in octokit.netDid you want to include this in the PR as well?  SImilar to what you've done already, the `MaintainerCanModify` field would just need to be added to the `NewPullRequest` class as a nullable `bool?`",,,,,,
99877442,1771,PullRequestReview,Nice pickup on `PullRequestUpdate` also!  :+1:Just a couple of requested changes marked up üòÅ,,,,,,
170447599,1771,PullRequestReviewComment,"I think we should make this nullable `bool? MaintainerCanModify` because responses that return lists of pull requests will not return this field, so rather than indicate it as `false` in that case, we should indicate it as `null`",,,,,,
170447689,1771,PullRequestReviewComment,"Could we reword this slightly?""Whether maintainers of the base repository can push to the HEAD branch""",,,,,,
171085531,1771,PullRequestReviewComment,"we only want *mandatory* parameters to be in the constructor, so this can be removed sorry!  Good news is, all those tests don't need to be modified (and the bad news is you have to undo all the test modifications LOL)",,,,,,
171085772,1771,PullRequestReviewComment,"This should be nullable `bool?` since it's an optional parameter.  That way when the user doesnt set it, we dont send anything in the request, and thus we default to whatever the API default is (which is important in this case since the API default is true, and if we leave this non nullable we would default to sending false)",,,,,,
171085933,1771,PullRequestReviewComment,This should also be nullable `bool?` so that the user is able to not specify a value and have it not change this property on the PR they are updating,,,,,,
170906575,1770,PullRequest,"Fixes #1768 Pretty straight forward change, and gets my consuming project rolling again. Unit test and convention tests pass, but it looks like I'm having unrelated issues with the integration tests.",,,,,,
98848545,1770,PullRequestReview,"Thanks  Looks like the commit is from an unknown email address/user to github, so you won't get the attribution if you don't add that to your profile btwI've just marked one whitespace issue to fix",,,,,,
170198517,1770,PullRequestReviewComment,Something happened to whitespace/alignment here?,,,,,,
170279891,1770,PullRequestReviewComment,"Ah, sorry about that.",,,,,,
170812830,1767,PullRequest,Fleshing out the payload modelsCI appears to be erroring,,,,,,
98710761,1767,PullRequestReview,"Thanks  Looks like there was some kind of timeout on CI, but at the same time it does look like you've got a spurious line in one of the test files that won't compile üòÄ",,,,,,
170079024,1767,PullRequestReviewComment,this aint gonna work üòù,,,,,,
169814469,1765,PullRequest,Aiming to release this ASAP since it will help any .NET 4.5 users when they need to use TLS1.2 from the 22nd Feb... - [x] initialrelease notes- [x] run `.\build.ps1 -Target FormatCode` to tidy up whitespace/formatting- [x] ~~integration tests all pass~~ With a few known exceptions around collaborator/invite functionality having been locked down- [x] :thumbsup: from a contributor- [x] :shipit:,,,,,,
169601582,1764,PullRequest,Fixes #1763,,,,,,
168451905,1760,PullRequest,"When a nullable `StringEnum`sAdded tests for enum, nullable enum, StringEnum and nullable StringEnum to capture the failing state, then proved the fix :+1:",,,,,,
167842272,1760,PullRequestReviewComment,How can `StringValue` be `null` at this point?,,,,,,
167843349,1760,PullRequestReviewComment,It seems to still be `null` in the case where you have a class that has a member of `StringEnum` that is unitialized.  We want this to return `default(T)` so it behaves like a normal enum,,,,,,
167843469,1760,PullRequestReviewComment,You've already verified in the ctor that `_stringValue` can't be null?,,,,,,
167844077,1760,PullRequestReviewComment,I added a test to repro this here: this is certainly doing my head in!,,,,,,
167844690,1760,PullRequestReviewComment,"Couldn't this potentially lead to incorrect behavior?If you have an uninitialized property, it means that the payload is missing the property, which means it's optional, but Octokit has modeled it as required (by it not being nullable).By just silently falling back to the default value, you could potentially give the user the incorrect default (who decides what the ""default value"" is?)",,,,,,
167846832,1760,PullRequestReviewComment,right... I was losing sight of the fact we only use this `StringEnum` behave the same as an incorrectly not nullable regular `enum`?,,,,,,
167847916,1760,PullRequestReviewComment,"But from a technical point of view - the same would be true of an `enum` property on a response class now wouldn't it?Yes, but that doesn't make it any less wrong üòâ There's a reason you should always declare all value-type properties as nullable when binding to external input. It's the only way to check whether that input actually existed, or if it's just the default (uninitialized) value. I guess the question is, should an incorrectly not nullable `StringEnum` behave the same as an incorrectly not nullable regular `enum`?I vote ""no"", simply because it's a nice way to ""flush out"" mistakes where we've assumed something was required, but was actually optional.",,,,,,
167848759,1760,PullRequestReviewComment,"Let's say you have a model:And someone postsYou'd end up with `account.Amount == 0`, which would be pretty bad.Instead, you'd want to declare it nullable and be able to check `account.Amount.HasValue` and issue a validation error.",,,,,,
167850565,1760,PullRequestReviewComment,should we enforce no empty strings here too?,,,,,,
167851040,1760,PullRequestReviewComment,"Yeah, I guess it wouldn't hurt.",,,,,,
168451767,1759,PullRequest,While looking into another issue I found that the API responses for account type are `Bot` `User` `Organization` but we had these attributes in lower case on our enum.  This caused some cache misses in the deserializer enum field/attribute dictionary,,,,,,
168451428,1758,PullRequest,"Fixes #1756 TLS1.2 will be required to connect to the GitHub API when [GitHub deprecates weak cryptographic algorithms on 22nd February].NET Frameworks less than 4.6 do not have TLS1.2 enabled by default, so Octokit will now enable this protocol (on the `net45` target framework build only).Notes- `ServicePointManager.SecurityProtocol` is the mechanism used to enable the protocol... which isn't actually available on .NET Core until 2.0 anyway (but we don't need it since TLS1.2 is already enabled in .NET Core anyway)- Added a `net452` target to the integration test project (bringing it into line with the other multi targeted test projects) in order to manually test that this value was set on .NET 4.5x",,,,,,
167637873,1758,PullRequestReviewComment,Alternatively:üòõ,,,,,,
168094265,1757,PullRequest,Fixes #1754,,,,,,
167852872,1757,PullRequestReviewComment,"The API response actually has a `null` value rather than the string ""null"" so what we need to do is make this property nullable (eg `StringEnum? Visibility`)",,,,,,
167853378,1757,PullRequestReviewComment,"Need to remove this `All` option from the enum as it wont deserialize correctly anyway, plus we can make the property above nullable, to handle this case",,,,,,
167853791,1757,PullRequestReviewComment,"(and note that this will not deserialize currently, but once #1760 is in, this should then work!)",,,,,,
167950721,1757,PullRequestReviewComment,"Done, let me know how these changes look. Thanks for the continued help on this!",,,,,,
165874656,1751,PullRequest,"Fixes #1750* This updates GitHubClient.cs, ProductHeaderValue.cs, Connection.cs, and EnterpriseProbe.cs to reflect proper XML Doc that links to the info on GitHub's Dev Doc on User-Agent required.* Updates the description to reflect that docs state this is not just a product, but can be your organization name or username as well.* I am submitting a bug to GitHub.com separately for a UI issue in comparing branches.    * I initially used tabs instead of spaces on my first upload.    * I then commited edits, removing all spaces by using Atom's Whitespace > Tabs to Spaces feature.    * These commits also were mis-aligned on the UI.    * I edited each file manually in the GitHub.com editor (within the browser).    * These commits look fine when you inspect the file, but on compare are misaligned in some spots again by a space or two. This should look normal locally as I've recloned to a new directory and the files had no mis-alignment.",,,,,,
164989911,1748,PullRequest,Fixes #1683 I think this is good to go - passes tests at least. Might want to double-check the integration tests though - I had a few problems with those that appeared unrelated to this change.,,,,,,
164149924,1742,PullRequest,I added an example and a bit of explanation about `GitHubClient.Miscellaneous.GetRateLimits()`.  #1737,,,,,,
90318782,1742,PullRequestReview,That's funny it was already implemented and I didn't remember  ü§£I've requested a couple of changes to the code sample,,,,,,
162797927,1742,PullRequestReviewComment,"Can we use,`await` syntax here to avoid the `.Result` below?",,,,,,
162797940,1742,PullRequestReviewComment,According to the docs the `Rate` property is deprecated so our docs should actually steer people towards the proper field (`.Resource.Core`),,,,,,
162797941,1742,PullRequestReviewComment,Could probably also mention the search API rate limit in the code sample too,,,,,,
162836416,1742,PullRequestReviewComment,"I replaced the `Rate` property with the `.Resource.Core`. Also, I added a sample for the search API.",,,,,,
162450683,1739,PullRequest,I added a new column to PullRequestReviewComment model in order to capture a field called pull_request_review_id which is returned by [Github API] .,,,,,,
162371216,1738,PullRequest,"Closes #1727This is built over a PR by  #1730, and allows to create Application Token, then use that token to get all Installations, which will allow you to authenticate your installation to allow performing actions like Create Status.",,,,,,
89732225,1738,PullRequestReview,"This is looking pretty good guys!I've added [WIP] to the PR title, while this is still a work in progressI've done a cursory review looking for things like coding style, naming conventions and so on, and marked up the changes needed.It would be helpful if you could include a task list in the PR description of the steps you still intend to cover off (Unit Test and Integration Tests will need to be on the list too üòÅ )I also noticed the other PR this one has taken over from has a more recent commit that isnt pulled into this one yet",,,,,,
90427060,1738,PullRequestReview,"In terms of Tests, i can't see any on this PR - did you mean to already have some pushed up?For unit tests we need to cover every method in the client, checking for `null` or empty string validation on parameters, checking the method calls call the expected `Connection` get/post/put call as appropriate etc.  For integration tests we need to excercise the actual functionality of every method (if possible) against github.com (CONTRIBUTING.md guide has instructions on how to setup integration test environment using a separate test GitHub account)If you have a look at a recently implemented client (eg [here]) that would be a good indication of the unit tests required, the naming conventions to follow and so on.And similarly, the [integration tests for that client]I'd suggest firstly to focus on Unit Tests and then once we have those right, move onto integration tests.  Sing out if you want some help on this!  I've also marked up a couple of other review changes",,,,,,
162300932,1738,PullRequestReviewComment,"We use singular for client property names, so can this be `Installation` ?",,,,,,
162301018,1738,PullRequestReviewComment,"We use singular for client property names, so can this be `Installation` ?",,,,,,
162301234,1738,PullRequestReviewComment,"for any `Ensure` checks can we please use `nameof(request)` rather than `""request""` ?",,,,,,
162301396,1738,PullRequestReviewComment,"We use plural for client class names, so can this be `ApplicationsClient` ?",,,,,,
162301811,1738,PullRequestReviewComment,whitespace,,,,,,
162302430,1738,PullRequestReviewComment,"since this is an existing public method, we want to avoid making a breaking change if possible, so typically we would add another method with the new signature",,,,,,
162302929,1738,PullRequestReviewComment,"again, to avoid a breaking change (even a parameter with a default value can still be a breaking change binarily speaking) you should add new `ctor`/s for these changes",,,,,,
162303446,1738,PullRequestReviewComment,are these TODO comments going to be actioned in this PR?,,,,,,
162313604,1738,PullRequestReviewComment,"But I see there is `AhtorizationsClient` and `ActivitiesClient`, in fact only `ApplicationClient` is in singular form...",,,,,,
162313806,1738,PullRequestReviewComment,Already did in some places. Will change that one too.,,,,,,
162313959,1738,PullRequestReviewComment,"Oh, sorry, I see now what you meant. Will fix.",,,,,,
162315907,1738,PullRequestReviewComment,Are you sure? AFAIK the run time takes care about it...,,,,,,
162316096,1738,PullRequestReviewComment,Not at the moment. They are merely placeholders so I won't forget where I need to add them.,,,,,,
162316632,1738,PullRequestReviewComment,"See this link, for example",,,,,,
162898997,1738,PullRequestReviewComment,can we implement these missing fields?  Should be pretty straight forward:,,,,,,
162899180,1738,PullRequestReviewComment,"For consistency, we need to add `/// ` Xml comments, like all the other client access properties in this class",,,,,,
162899734,1738,PullRequestReviewComment,"Can we make `Id` `AppId` and `TargetId` be `long` rather than `int`  data type, incase they are global across GitHub and we eventually may run into MaxInt type problems?",,,,,,
171369429,1738,PullRequestReviewComment,GitHub,,,,,,
173635330,1738,PullRequestReviewComment,"- Just a minor simplification, this Format could be removed I think and use instead:",,,,,,
173645521,1738,PullRequestReviewComment,This is a brand new feature of C# and won't compile on older versions of the compiler. Are you sure you want to switch to this?,,,,,,
173689822,1738,PullRequestReviewComment,"We have previuosly discussed this and dont have a problem in using the string interpolation `$""blah {var} blah""` however would prefer this to be done across the code base in a consistent way via a Milestone and one/many PR'sspecifically making only that change (so it's easier to review)... rather than randomly using it in a few places while 100s of existing cases are still doing it ""the old way"").",,,,,,
174348087,1738,PullRequestReviewComment,"I agree with Ryan, I was not intentionally suggesting we do this piecemeal, I saw some earlier PR that used this string interpolation so I assumed it was established across the project, but if it isn't I agree 100% that this should be a dedicated focused PR that changes this across the board.",,,,,,
161800863,1735,PullRequest,"The other PR got dirty, so I created another one, and did it right this time :-)",,,,,,
160937598,1735,PullRequestReviewComment,maybe could you add `.Assert`s that test `CreatedAt` and `UpdatedAt` fields get the values expected?,,,,,,
160941464,1735,PullRequestReviewComment,Done.,,,,,,
160950681,1735,PullRequestReviewComment,Does a response to `GetOrganization` populate this field (the API docs don't show it but I'm not able to test a real response from my phone right now). If it's not on `Organization` then this field would need to be moved to `User` rather than the `Account` base class,,,,,,
160722531,1732,PullRequest,Added payload definition for the Status Event message.  - [x] Write basic code.  - [x] Make sure the code design fits the rest of the library.  - [x] Write tests.,,,,,,
160344106,1730,PullRequest,Work in progress.Changes:* TODOCloses #1727,,,,,,
157824371,1726,PullRequest,Fixes #1724 and #1729 Urls used in the `OAuthClient` are incorrect for GitHub Enterprise instances due to not stripping off the `/api/v3` from the base URLChanged the `OAuthClient`'s stored `hostAddress` to strip any relative `Uri` from the current `baseAddress` so that it correctly uses the github website Url for OAuth actions.This fixes the Urls in the 2 OAuthClient functions:eg for an GitHub Enterprise instance we now will use: `baseAddress`: ``  `hostAddress`: `` Authorize Uri: `` Token Uri: ``,,,,,,
83298585,1726,PullRequestReview,LGTM!,,,,,,
154650045,1722,PullRequest,"Added UpdatedAt property to Milestone.  It seems like this would not be null, but added similar to ClosedAt property just in case.  This is also a breaking change to Milestone constructor.",,,,,,
153807093,1721,PullRequest,This pull request is addressing #1707- [x] Add `Topics` field to `Repository` response class- [x] Specify new preview header on all calls that return `Repository` responses- [x] Update unit tests to pass after adding preview header- [x] New API: List all Topics- [ ] Write unit tests for List all Topics (done partially)- [x] New API: Replace all Topics- [ ] Write unit tests for Replace all Topics- [ ] Add `string Topic` field to `SearchRepositoriesRequest` and format search parameters accordingly- [ ] Add `Range Topics` field to `SearchRepositoriesRequest` and format search parameters accordingly,,,,,,
152758611,1720,PullRequest,* [x] Add Topics field to Repository response class* [ ] New API: List all Topics* [ ] New API: Replace all Topics* [ ] write unit tests* [ ] write integration tests,,,,,,
152105814,1716,PullRequest,"Fixes #1663 - [x] Remove convention test exclusion- [x] Add `ApiOptions` overload  -  [x] make existing methods call new overload with `ApiOptions.None`- [x] Update unit tests  -  [x] Adjust for `ApiOptions` parameter  -  [x] Add `null`/`""""` checks for `ApiOptions` overloads- [x] Add pagination Integration tests",,,,,,
76069239,1715,PullRequestReview,Thanks for sending the PR  I just marked up one thing you missed üòâ,,,,,,
150511855,1715,PullRequestReviewComment,"Looks like you forgot to assign the passed in variable to the class member, within the constructor",,,,,,
150556243,1715,PullRequestReviewComment,That's embarrassing. Fixed in latest commit.,,,,,,
152084122,1714,PullRequest,The warning in configuration script can be easily overlooked. I changed it's color to yellow to make it more visible.How it looks after the change:,,,,,,
151849321,1713,PullRequest,"Fixes #1712 AWS Lambda requires ""strict"" `netcoreapp1.0` support and although we target `netstandard1.1` which is compatible with `netcoreapp1.0`, the dotnet tooling automatically uses the NetStandard.Library metapackage version 1.6.1 (which is aligned with `netcoreapp1.1`).  I'm pretty sure we are still actually `netcoreapp1.0` compatible (as evidenced by our test assemblies being `netcoreapp1.0`) but due to the way AWS Lambda tools work, they see the metapackage 1.6.1 version and refuse to deploy as they think this means `netcoreapp1.1` and not `netcoreapp1.0`.This PR forces the implicit meta package version to 1.6.0 so that the AWS Lambda tools don't complain about a lambda function that is referencing octokit.",,,,,,
150825833,1709,PullRequest,"Aiming to release this ASAP since we are crashing on GitHub `CommitStatus.Id` currently... this is the abridged version of the release checklist üòù - [x] initialrelease notes- [x] run `build FormatCode` to tidy up whitespace/formatting- [x] ~~integration tests all pass~~ Based on the minor changes in this release, I've not run all the integration tests- [x] :thumbsup: from  or - [x] ~~:thumbsup: from key contributors    -Zuber etc~~ No time, man!- [ ] :shipit:",,,,,,
150816866,1708,PullRequest,* The API returns 64bit values for commit status. For example  '4299360515'. This is larger than uint32.MaxValue so i assume  this type *should* be a long.,,,,,,
150656047,1703,PullRequest,"I have a (private) repository where GitHub reports statuses withids like 4299360515, which fail to deserialize as it doesn't fiton the int.There is nothing (I could find) on the GitHub API docs that saythat this status id is limited to an int-sized value.Fixes #1702",,,,,,
149369938,1699,PullRequest,This is breaking the layout at .,,,,,,
147425415,1694,PullRequest,"Fixes #1664 - [x] Remove convention test exclusion- [x] Add `ApiOptions` overload  - make existing methods call new overload with `ApiOptions.None`- [x] Update unit tests  - Adjust for `ApiOptions` parameter  - Add `null`/`""""` checks for `ApiOptions` overloads- [x] Add pagination Integration tests  - `ReturnsCorrectCountOfXWithoutStart`  - `ReturnsCorrectCountOfXWithStart`  - `ReturnsDistinctXBasedOnStartPage`- [x] Decide what to do with `GetAllForSubNamespace` endpoint",,,,,,
72684947,1694,PullRequestReview,"I've added a checklist to the first post and reviewed what you had so far  and noted a couple more places where `null`/empty string unit tests are required.Other than that, we just need to implement the integration tests.  Did you need a hand with that?",,,,,,
147568205,1694,PullRequestReviewComment,"We actually need to cover all `null` cases for the new 4 parameter overload, so that means 4 additional test cases (eg the 3 above this, but with `options` specified, then the 4th one is the one you've added.Let me know if this doesn't make sense :)",,,,,,
147568211,1694,PullRequestReviewComment,"Same here, we need `(1, null, options)` and `(1, ""subnamespace"", null)`",,,,,,
147568332,1694,PullRequestReviewComment,"we also need empty string test cases for the 4 parameter overload (and below for the 3 parameter one `1, """", options)`)",,,,,,
150509966,1694,PullRequestReviewComment,"The nested loops are a bit clunky, is there a more succinct way to express this?  eg `Assert.False(firstRefsPage.Any(x => secondRefsPage.Contains(x)));`",,,,,,
153958058,1694,PullRequestReviewComment,Changed it.,,,,,,
153998221,1694,PullRequestReviewComment,another assertion to refactor here,,,,,,
153998239,1694,PullRequestReviewComment,and here,,,,,,
153998258,1694,PullRequestReviewComment,and here,,,,,,
154062325,1694,PullRequestReviewComment,Done.,,,,,,
154062340,1694,PullRequestReviewComment,Done.,,,,,,
154062346,1694,PullRequestReviewComment,Done.,,,,,,
147155115,1693,PullRequest,A first attempt to fix the problem describe in #963 by adding a possibility to extend the default timeout value (100s) that is too short to be able to post assets in github release.Fixes #963/ cc,,,,,,
145323462,1693,PullRequestReviewComment,We can drop these Exception details from xmldoc comments... it's not that they aren't informative but just for consistency purposes (since we don't include this detail on any/many other documented calls).  Just `` entries is fine,,,,,,
145331618,1693,PullRequestReviewComment,Ok I will do it.I think I will replace it by a link towards the `HttpClient.Timeout` doc. What do you think of that?Or completely remove? (it will be a shame because it could be useful),,,,,,
145550761,1693,PullRequestReviewComment,I push the fix...,,,,,,
145876602,1693,PullRequestReviewComment,"Apart from the spelling mistake (useful has one L :)) I don't like the phrasing of the sentence sorryHow abou: /// Set the GitHub Api request timeout. /// Useful to set a specific timeout for lengthy operations, such as uploading release assets",,,,,,
145876724,1693,PullRequestReviewComment,Can we simplify to just simply: The timeout value?,,,,,,
147014887,1692,PullRequest,Fixes #1665,,,,,,
80470697,1692,PullRequestReview,"There are a couple more `.Result` to fix up and also I realised that by using `PageSize=5` in the tests means you are creating between 6 and 10 test repos for some tests.  We want to create as few as possible, so let's use `PageSize=1` and should be able to get away with only creating 2 repo contexts for those pagination tests :+1:",,,,,,
150503436,1692,PullRequestReviewComment,Do you have more details on why you removed the parallel async code in these tests?,,,,,,
152255014,1692,PullRequestReviewComment,just checking you saw my message asking why the `WhenAll` was removed from here?,,,,,,
153955506,1692,PullRequestReviewComment,Sorry for the delay. The `WhenAll` version throws:,,,,,,
153998711,1692,PullRequestReviewComment,OK I think this might be #1683 causing issues when running in parallel.  It's funny because it works OK for me - it's all down to timing I guess!Im not a fan of using `.Result` though since it's a real hack around `async` code...  Maybe this can be written as a `foreach (var repoName in repoNames)` loop that creates the contexts one by one and adds them to a list.,,,,,,
154061504,1692,PullRequestReviewComment,Changed it.,,,,,,
154324382,1692,PullRequestReviewComment,Let's use pagesize=1 and just create 2 test repos,,,,,,
154324467,1692,PullRequestReviewComment,can you please fix this `.Result` like you did for the other one?,,,,,,
154324501,1692,PullRequestReviewComment,can you please fix this `.Result` like you did for the other one?,,,,,,
154324609,1692,PullRequestReviewComment,Let's use pagesize=1 and just create 2 test repos,,,,,,
154324777,1692,PullRequestReviewComment,Let's use pagesize=1 and just create 2 test repos,,,,,,
154336940,1692,PullRequestReviewComment,Done.,,,,,,
154336958,1692,PullRequestReviewComment,Done.,,,,,,
154336963,1692,PullRequestReviewComment,Done.,,,,,,
154336977,1692,PullRequestReviewComment,Done.,,,,,,
154336987,1692,PullRequestReviewComment,Done.,,,,,,
146389971,1691,PullRequest,Fixed the code formatting in Labels documentation,,,,,,
145368099,1689,PullRequest,Addresses #1688,,,,,,
145030536,1687,PullRequest,Aiming to release this tomorrow- [x] initial release notes- [x] run `build FormatCode` to tidy up whitespace/formatting- [x] ~~integration tests all pass~~ Except for some larger issues raised in #1686 - [x] :thumbsup: from  or - [x] :thumbsup: from key contributors    -Zuber etc- [x] :shipit:,,,,,,
140814177,1682,PullRequest,Fixes #1681,,,,,,
140322776,1680,PullRequest,Fixes #1677 The forks qualifier should be `fork:true` or `fork:only` and was incorrectly being set to the enum member `.ToString()` rather than the decorated `[Parameter()]` values.- Changed the `MergedQualifiers` function to use the decorated `[Parameter]` attribute value for the enum members- Changed the values to lowercase for consistency- Added unit and integration tests for both Forks values (Include and Only),,,,,,
140321982,1679,PullRequest,Fixes #1678,,,,,,
140155588,1674,PullRequest,Fixes #1673 That post by Nate McMaster has saved my bacon a few times now: I think we lost the documentation files when we moved from the `project.json` project system to the new `.csproj` one.I tested by running the `Package` build task and the XML files ended up in the `.nupkg`s which I suppose will fix this.,,,,,,
140012617,1672,PullRequest,Fixes #1671 new field allows filtering by organization,,,,,,
139469465,1670,PullRequest,"Fixes #1676 - Implement `TeamsClient.AddOrEditMembership` taking a request parameter to indicate the `role` of the member to be added/updated (Member or Maintainer)- Implement role filter on `TeamsClient.GetAllmembers()` so that the query can be filtered based on the member roles (Member, Maintainer or All)- Introduce new response type for Team membership which includes the `Role` (Member or Maintainer) and `Status` (Active or Pending) of the membership.Due to needing to safely deprecate the old `GetMembership` method following our normal deprecation schedule, the new method has been named `GetMembershipDetails` as the method signature was the same except for the return type. The `AddMembership` method has been deprecated, replaced with `AddOrEditMembership`",,,,,,
64871106,1670,PullRequestReview,One little nitpick on obsoletetion message,,,,,,
140754787,1670,PullRequestReviewComment,or already is?,,,,,,
139467562,1669,PullRequest,"Fixes #1675 - Add `TeamPrivacy` enum (Closed, Secret)- Add `Description` and `Privacy` fields to `Team` response object- Add `Privacy` and `Maintainers` fields to `NewTeam` request object- Add `Description` and `Privacy` field to `UpdateTeam` request objectNOTE: `Permission` field on `NewTeam` request has been changed to a nullable type, eg  `Permission? Permission`, since it is optional and should not be sent to the API when the consumer has not set a value.Ensured new fields are exercised in integration tests",,,,,,
139438444,1668,PullRequest,"Fixes #1667 That's a first go at trying to share state between some integration tests.It got a bit crazy with the inheritance to differentiate cases where we want to create the review request and when we don't, so I'm more than happy to get feedback on the _design_.Unfortunately, I couldn't test they worked as after inviting the test accounts as collaborators to the test repository, they need to accept the invitation before they can be added as PR reviewers.Let's try to identify a list of areas where we can do the same thing: - [ ] PR review requests",,,,,,
138998585,1660,PullRequest,"Thanks to  for pointing out that the Assembly/File versions are not being set automatically during the build process due to us still having `SolutionInfo.cs` and `AssemblyInfo.cs` files with hardcoded version numbers ü§¶‚Äç‚ôÇÔ∏è This PR gets rid of Solution/AssemblyInfo properties in favour of setting everything via the csproj, including some more of the nuget package metadata.  Our existing CAKE build already specifies the GitVersion calculated version string via the `dotnet build` task, so this should now flow through to AssemblyVersion, FileVersion, AssemlbyInformationalVersion attributes.  Similarly the nuget package metadata should be handled by the `dotnet pack` task.  I'll check out the AppVeyor build artifacts to confirm...Also took the opportunity to tweak the user agent string we calculate, to include the informational version (so we get pre release tags if any are set) rather than assembly version (which can only be numeric and doesn't include pre release tags), and added an attempted fix for #1617 by catching any exceptions when determining the platform OS/architecture",,,,,,
138412522,1659,PullRequest,"Unskip and tweak the existing pagination tests so we can use them to enforce pagination conventions going forward- ApiOptions overload pagination implemtationFor items that failed tests, probed upstream API and flagged the method as either requiring pagination implementation or API not supporting pagination.  Issues will be raised for each client/method where pagination needs to be implemented- GetAll naming for methods returning `IReadonlyList`Renamed offending methods in `RepositoryTrafficClient` and `RepositoryBranchesClient` and flagged old ones as `[Obsolete]` so they can be removed in the future",,,,,,
138402395,1658,PullRequest,We need to get #1523 shipped prior to the Branch Protection API Preview period ending on the 1st SeptemberGiven it's hot on the heels of v0.25 I have only run the integration tests for `RepositoryBranchesClient` and `ObservableRepositoryBranchesClient` and will aim to ship tomorrow.- [x] initial release notes- [x] run `build FormatCode` to tidy up whitespace/formatting- [x] ~~integration tests all pass~~ `RepositoryBranchesClient` and `ObservableRepositoryBranchesClient` integration tests all pass- [x] tweak release notes to call out any breaking changes/special instructions- [x] :thumbsup: from  or - [x] :thumbsup: from key contributors    -Zuber etc- [x] :shipit:,,,,,,
137336771,1657,PullRequest,"# Web Optimization Project (Beta)The [Web Optimization Project] is a project that will automatically optimizes files in git repositories by compressing them losslessly. This project was created by [Devedse] in an effort to save the world! :smirk:If you have any questions, feel free to create an issue or join the gitter chat:[![Join the chat at ]]## OptimizationThe Web Optimization Project optimized this repository. All optimizations (compressions) are done losslessly and no quality / data is lost. This is also verified afterwards by the Wop so you can be sure that your images are exactly the same.## Commits### Commit 1Information | Value-- | --Version | 0.0.5.0Support file extension | .PNG .JPG .JPEG .GIF .BMP#### StatisticsStats | Value-- | --Total optimizable files | 1Files optimized successfully (size reduced) | 1Files already fully optimized | 0Files that failed to be optimized | 0Total size before optimization | 36,8KBTotal size after optimization | 30,3KBOptimized size compared to old | 82,4%Total bytes saved | 6,5KBTime taken for optimization | 28 Seconds#### Files optimized in this repositoryFileName | Original Size | Optimized Size | Bytes Saved | Duration | Successful-- | -- | -- | -- | -- | --octokit-dotnet_2.png | 36,8KB | 30,3KB | 6,5KB | 28 Seconds | True",,,,,,
136640934,1656,PullRequest,"This release has been long overdue üò≠Plenty of goodies in here including the dotnetcore port (netstandard 1.1) and moving to CAKE.Frosting as a build system... several bug fixes and several new API's implemented including Projects, Pull Request Reviews, Pull Request Review Requests and Organization Outside Collaborators!Im also tweaking the release notes format a bit, and have been working on [a utility] to generate them, based on `release_notes` comments on the merged PR's.  Everything you see in ReleaseNotes.md was generated by this utility this time around, so any wording tweaks need to be done ""at the source"" and then I can regenerate the release notes.  Ultimately I'd like to do some more work so that creation of draft releases and generating release notes etc can be done in CAKE scripts and run by AppVeyor as appropriate.All integration tests are passing so I'm pretty ready to üö¢ - will aim for tomorrow night.  I just need to go through things and see if there are any breaking changes that need to be called out.- [x] initial release notes- [x] version bump (need to see how AppVeyor and GitVersion will deal with this... I THINK once I tag master after mergint this PR, the resultant build should get the correct version!)- [x] run `build FormatCode` to tidy up whitespace/formatting- [x] integration tests all pass- [x] tweak release notes to call out any breaking changes/special instructions- [x] :thumbsup: from  or - [x] :thumbsup: from key contributors    -Zuber etc- [x] :shipit:",,,,,,
57966611,1656,PullRequestReview,"Just one nitpick on wording, otherwise gorgeous!",,,,,,
134650950,1656,PullRequestReviewComment,so couldn't follow our normal deprecation scheduleso **we** couldn't,,,,,,
136568222,1654,PullRequest,"While running integration tests prepping for a release, I found that the `client.Repository.Commit.GetSha1()` call was returning `null` rather than the expected `string` sha1.This turned out to be a situation where when the API went from preview to official ([announced here]], the old preview header is no longer able to be used (despite the blog post saying it is!).I contacted GitHub support who informed me that the blog post was incorrect in saying the preview header would still work - unlike normal API previews where the accepts header just enables additional/changed json response fields, this particular API call actually had an entirely new media type response (a string SHA1 rather than a json payload) and therefore it required the proper header once it was out of preview.  They also allayed my fears that we need to not send preview headers once things are official, as for the ""normal"" cases it doesnt matter if we keep sending preview headers, since the new response formats will be returned anyway (and the preview headers help us support older GitHub Enterprise versions, where the feature is still in preview).  Long story short, this PR fixes the `GetSha1` call to use the official media type `Accepts` header, and updates unit tests to match.  Integration test is now passing",,,,,,
135988703,1653,PullRequest,- Update README and shipping-releases info as they are a bit out of date- Update year/copyright info on assemblies- Update cake.frosting package to latest version for better dotnet msbuild tooling support- Update xunit packages to latest version (fixes CodeLens display of nested test classes in VS2017 - also requires VS2017 15.3 update),,,,,,
133415652,1653,PullRequestReviewComment,Isn't this 2017 update 3?,,,,,,
133417109,1653,PullRequestReviewComment,Ah whoops I think I just did a replace all 2014 -> 2017... thanks!,,,,,,
134431456,1650,PullRequest,"It appeared as though this API endpoint didnt support pagination, so `ApiOptions` overloads were dropped from the implementation in #1639 After GitHub support confirmed pagination should be in place on this endpoint, some debugging revealed a bug in octokit (#1649 ) which was causing invalid Uri's that was affecting this endpoint (as it uses a query parameter to specify the filter in the `Uri`)Once that fix is merged, pagination works OK, so this PR (re)implements the pagination support for the `GetAll()` outside collaborators function and associated integration testsCC",,,,,,
54786038,1650,PullRequestReview,LGTM :+1:,,,,,,
134426616,1649,PullRequest,"While investigating why pagination didn't seem to be working on #1639 I discovered a bug in the `Uri.ApplyParameters()` extension method.When the passed in `Uri` is a relative type and already includes query parameters, the resulting `Uri` generated by this function contains the existing parameters then an additional `?` character followed by the actual set of existing+new parameters.  This was resulting in the pagination parameters being ignored by the upstream API (note the 2 occurrences of `?` and both the ""existing"" and ""new+existing"" parameter sets present):Actual: `orgs/testorg/outside_collaborators?filter=all?per_page=1&page=1&filter=all`Expected: `orgs/testorg/outside_collaborators?per_page=1&page=1&filter=all`Unit tests have been extended to cover relative `Uri`'s, which reveals the failure case and confirms the fix.",,,,,,
54785701,1649,PullRequestReview,LGTM :+1:,,,,,,
134015611,1648,PullRequest,Fixes #1618 - [x] Add unit tests for reactive API- [x] Add integration tests for regular client,,,,,,
54646850,1648,PullRequestReview,"Hey  this is great stuff üíé thanks!  Particularly for a first time contributor you've made great progress on alot of the octokit.net implementation details like pagination support, test coverage, request/response models and so on üëè I've done a first pass review for things like naming conventions and implementation details, also nitpicked a few whitespace and XmlDoc commenting things.Please don't be disheartened at the changes requested!  We greatly value contributions, and will work with you so that your code can be accepted.  We need to keep the code base consistent so that it is easier to maintain though, hence the fairly detailed and nit-picky review!  If you need any help let me know, I'm happy to push some commits as well, if you are stuck on something üòÄ",,,,,,
54831617,1648,PullRequestReview,Coming along nicely!  Have noted a few more spacing/whitespace issues and requested renaming the enumAlso to match the renaming of the interface/clients to the plural (PullRequestReviewClient to PullRequestReviewsClient) some of the actual files have still not been renamed to match,,,,,,
131648089,1648,PullRequestReviewComment,please name the variable `number` since a pull request also has an internal `long Id` field which we dont want to confuse here.This comment applies to multiple files on the PR - if you can please fixup all references to pull request numbers to be called `number` üíì,,,,,,
131649006,1648,PullRequestReviewComment,"Since we are already in the `PullRequestsClient` class, this member should just be named `Review` (then it would be accessed like `client.PullRequest.Review.Create()`Similar to how eg we have `ReviewRequest` rather than `PullRequestReviewRequest`I also like to place it in the class in the same location that the API doc structure/tree indicate, so in this case it should be above `ReviewComment` and `ReviewRequest`",,,,,,
131649063,1648,PullRequestReviewComment,whitespace,,,,,,
131649465,1648,PullRequestReviewComment,"With all new additions, we are trying to standardise on the slightly ""better"" implementation of getting the name of the parameter. `nameof(client)` rather than `""client""`Are you able to change all occurences in `Ensure.xxxx()` calls to use `nameof()` üòÄ",,,,,,
131649659,1648,PullRequestReviewComment,For consistency can we have a whitespace line separating the `Ensure`'s and the following statement?,,,,,,
131650022,1648,PullRequestReviewComment,put this guy before the 2 above (to align with the ordering in the github docs,,,,,,
131650381,1648,PullRequestReviewComment,whitespace,,,,,,
131650413,1648,PullRequestReviewComment,whitespace,,,,,,
131650642,1648,PullRequestReviewComment,"Is this right?  This method actually creates the pull request review (not just a comment), right?",,,,,,
131650929,1648,PullRequestReviewComment,rather than `PullRequestReview` and ideally order it above the other 2 to match API doc layout (my OCD tendency sorry!),,,,,,
131651611,1648,PullRequestReviewComment,Incorrect XmlDocs throughout this file,,,,,,
131652059,1648,PullRequestReviewComment,"This should be an enum since it has specific allowed values (the same as the Submit action it looks like, so the same enum could be used)",,,,,,
131652135,1648,PullRequestReviewComment,XmlDoc comments need updating,,,,,,
131652951,1648,PullRequestReviewComment,Use camel case for the enum members (but keep the `[Parameter]` tags in place to specify the actual Api valuesegAlso perhaps rename the enum since it can be used for both Submit and Create actions,,,,,,
131653674,1648,PullRequestReviewComment,Im thinking this Id field should be `long` rather than `int` so that we don't have growing pains in the future,,,,,,
131653718,1648,PullRequestReviewComment,Should be an enum,,,,,,
131653862,1648,PullRequestReviewComment,"Several places mention ""comment"" when they should say ""review""",,,,,,
131654433,1648,PullRequestReviewComment,"From a ""naming things"" perspective we have a convention where we name the classes/interfaces as a plural - eg in this case `IObservablePullRequestReviewsClient` if you are able to rename the classes/interfaces and files?",,,,,,
131655995,1648,PullRequestReviewComment,We will need to poke the API to see whether this GetAllComments method needs to support `ApiOptions` overloads for pagination,,,,,,
131656102,1648,PullRequestReviewComment,Missing XmlDoc comment,,,,,,
131673424,1648,PullRequestReviewComment,ok I was mostly going off the API docs which showed pagination support in the response,,,,,,
131750611,1648,PullRequestReviewComment,Just realized I did this in the wrong file. Will do it in right file and leave this here for now since you said you're standardizing on it anyway,,,,,,
131817785,1648,PullRequestReviewComment,let's call this `PullRequestReviewState`,,,,,,
131817844,1648,PullRequestReviewComment,Let's call this `PullRequestReviewEvent`,,,,,,
131817867,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
131817873,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
131817881,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
131817889,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
131817901,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
131817933,1648,PullRequestReviewComment,tab alignment,,,,,,
131817977,1648,PullRequestReviewComment,Incorrect comment,,,,,,
131818026,1648,PullRequestReviewComment,"reword to ""Submits a pull request review""",,,,,,
131818065,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
131818157,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
131818190,1648,PullRequestReviewComment,remove extra whitespace line,,,,,,
133911983,1647,PullRequest,"Fixes #1634 One funny thing is that running tests with `dotnet test` against `net452` is *very* slow on my machine: - ~4 seconds for `netcoreapp1.0` - more than 2 minutes for `net452`I want to see if the same thing happens on the build server.If it does, I trialled using `dotnet xunit` and it was much faster, so that could be a workaround, but we'd have to change the Cake build script, and I don't if there's a wrapper for `dotnet xunit` already since it's pretty early days.",,,,,,
133845603,1645,PullRequest,"## BackgroundAs part of the [Events API], `Activity` responses are retrieved that contain a `Payload` field which varies according to the event in question.   In Octokit, we implement the `Payload` field of the `Activity` response model as a base type of `ActivityPayload` but [specific inherited payload classes] such as `IssueCommentPayload`, `PullRequestEventPayload` etc are assigned to this field via some deserializer ~~hackery~~ [MAGIC] üòÄ ## ProblemWhen GitHub API implements new event payloads, the payload cannot be obtained via Octokit until a response model class for the specific payload is added (and the [magic switch statement] is updated).  It actually turns out that GitHub API has currently [37 event payloads], and only 8 of these are implemented in Octokit.net! ü§î ## What does this PR do?Whilst we should implement all of these outstanding payload types (and any future ones!) (see #1646), this PR aims to add a generic ""workaround"" to Octokit so that in addition to the specific `Payload` response model classes, there is a `PayloadJson` field containing the raw json of the event payload.  This field can be used by consumers to obtain the payload of all events - regardless of whether they are yet implemented in Octokit or not.A picture tells 1000 words so here is some debugger output showing what the `Payload` and `PayloadJson` fields look like for an implemented and unimplemented event type: (implemented in Octokit)The Payload is of explicit type `IssueCommentPayload` (and `PayloadJson` is also available) (not currently implemented in Octokit)The Payload is of base type `ActivityPayload` and doesn't provide anything useful, but the `PayloadJson` is now available and can be used by clients to at least understand this event prior to a Model for it being added to Octokit.net## Implementation NotesImplementing this required some tweaks to the deserializer so that we can have more than one response field that maps to the same API value (eg in this case the API field `payload` maps to both `ActivityPayload Payload` and `string PayloadJson`).  To limit the impact, I added a new field to the `[Parameter]` attribute we use, that explicitly marks the parameter declaration `AllowDuplicates`.  In the internals of the deserializer, it then appends a unique value to the api field (so it can be stored in the dictionary for the `SetterCache` along with other instances of the same api field).  In the case of `PayloadJson` it would end up in the `SetterCache` as `payload_octokit_payload_json`.  Then when populating models from the api response it removes this appended text from the dictionary key, so it can find the correct API field (`payload`).  It's a bit hacky but IMO no more so than the existing ""magic"" that was switching out the classes derived from `ActivityPayload` base class in the first place.A 2nd deserializer tweak was needed so that an entire `JsonObject` could be written to a `string` property (by calling `.ToString()` on it) - this is used so that the `payload` API field (a `JsonObject` structure) can be mapped to our `string PayloadJson` field.I also fixed up the existing Event payload integration tests which were previuosly skipped due to them looking for events that are too long ago.  I tweaked them to use our pagination support to keep searching until they find an event of the desired type.  We also now have an integration test for each of the 8 payload types octokit currently supports.  NOTE that there is a chance that these tests can fail if we hit the pagination limit of the events API before we encounter an event of the desired type but this is acceptable for the time being IMO",,,,,,
133415736,1640,PullRequest,- [x] List pending organization invitations- [x] List pending team invitations- [x] Pagination!Closes #1513,,,,,,
54658542,1640,PullRequestReview,Looking good so far  üëç   I haven't run the tests myself yet.  Noted a few review items for fixing up üòâ,,,,,,
131658795,1640,PullRequestReviewComment,This one is called `Invites` but the team one is called `Invitations`.  Should we be consistent?  (the API doc URLs seem to use invitations terminology for both),,,,,,
131659502,1640,PullRequestReviewComment,whitespace nitpick üò®,,,,,,
131660137,1640,PullRequestReviewComment,Normally we declare enums in the Response/Request model area rather than directly in the client dont we?,,,,,,
131660401,1640,PullRequestReviewComment,whitespace,,,,,,
131660476,1640,PullRequestReviewComment,whitespace,,,,,,
132838508,1640,PullRequestReviewComment,"Just double checking, we cant use `_gitHub.Organization.Member.Delete()` here?",,,,,,
132851577,1640,PullRequestReviewComment,I'll double check,,,,,,
132852695,1640,PullRequestReviewComment,"So I just tested it, and it seems that `_gitHub.Organization.Member.Delete()` does **not** remove pending invitations",,,,,,
132853966,1640,PullRequestReviewComment,Typo?,,,,,,
132854306,1640,PullRequestReviewComment,"No, that's my 2FA test account üôÇ",,,,,,
132855068,1640,PullRequestReviewComment,Ah ok... I could enable 2FA on one of the octokit test accounts if you think that's a better idea?,,,,,,
132856096,1640,PullRequestReviewComment,üëç,,,,,,
133081450,1639,PullRequest,- [x] List outside collaborators- [x] Remove an outside collaborator- [x] Convert a member to an outside collaboratorRelates to #1513,,,,,,
53983458,1639,PullRequestReview,This looks really good  üíé Ive noted a couple of minor quibbles.Also if the `GetAll` endpoint doesn't seem to actually honour the pagination parameters then we shouldn't implement `ApiOptions` overloads since it would give the incorrect assumption that users can control the paginationGreat stuff :+1:,,,,,,
54269835,1639,PullRequestReview,Nice one  Just found 1 missed `nameof`,,,,,,
131043729,1639,PullRequestReviewComment,grammar nitpick üòÄ ~~are not~~ is not (this occurs in multiple xmldoc comments),,,,,,
131044347,1639,PullRequestReviewComment,"If the API doesn't support pagination then we can remove all the `ApiOptions` overloaded method, right?",,,,,,
131045074,1639,PullRequestReviewComment,"Across the assertions in this PR there are a mixture of `""org""` and `nameof(org)` - let's standardise on `nameof()` for all new ones added in the PR?",,,,,,
131048393,1639,PullRequestReviewComment,(that'd be because of my copy-üçù  üòÑ),,,,,,
131302471,1639,PullRequestReviewComment,missing `nameof` here,,,,,,
133072993,1638,PullRequest,"I ran into issue where tests would fail and test runners fail to run, it came down to that as I have the `2.0.0-*` .NET Core stuff installed it was using the latest SDK I have installed which is incompatible with `octokit.net` as it's only `1.0.1`. Adding `global.json` with the SDK version pinned to `1.0.1` will make sure that the correct SDK is used.",,,,,,
131986301,1633,PullRequest,- [x] Review a user's permission levelRelates to #1513,,,,,,
52909773,1633,PullRequestReview,Looking awesome and tests are passingCouple of typos ive highlighted,,,,,,
129211178,1633,PullRequestReviewComment,Once you get into integration tests I think you'll find the URL for the repositoryId based endpoints is `/repositories/`,,,,,,
129229967,1633,PullRequestReviewComment,*whistling* I was just testing you üòâ,,,,,,
130071708,1633,PullRequestReviewComment,"""PreviewPermission"" should be ""ReviewPermission"" üòÅ",,,,,,
130071736,1633,PullRequestReviewComment,"""PreviewPermission"" should be ""ReviewPermission"" üòÅ",,,,,,
130078087,1633,PullRequestReviewComment,"well, that's embarrassing... üòä",,,,,,
131915020,1631,PullRequest,"I found a number of tests that were checking for Null/empty string on parameters, that were always passing due to not `await`ing the `Assert.ThrowsAsync()` callThis PR fixes them up (and fixes one place where an assertion was actually missing that the test was never finding üòÄ )",,,,,,
131075336,1630,PullRequest,Fixes #1586* [x] license information included in existing calls that return `Repository` objects* [x] Get a repository's license call* [x] write unit tests* [x] write integration tests,,,,,,
76745259,1630,PullRequestReview,"Thanks  this looks really goodRegarding the ""multiple preview headers"" thing, Im not actually sure if multiple can be comma appended together or not.  The PR squash preview header you have appended to, is actually [official in the github api] now, so they may potentially be ignoring that header...It's hard to say whether multiple headers are supported or not üòÅ We might need to test with an example that specifies 2 ""current"" preview headers to see if it truly works or not...",,,,,,
151094855,1630,PullRequestReviewComment,"Can we please update these to the newer style using `nameof(owner)` rather than hardcoded string `""owner""` ?",,,,,,
151096242,1630,PullRequestReviewComment,"I'd rather be explicit about exactly what Accept Headers are being validated in unit tests, rather than saying ""any accept header"" is fine.  So can we remove this and be explicit in all the tests?",,,,,,
151100615,1630,PullRequestReviewComment,"I introduced this specifically for the `IsALukeWarmObservable` tests, because these tests already does not care about the actual URI. I think it makes this test more readable and maintainable.If Accept headers are correct is tested in different set of tests which are specialized for this.",,,,,,
151100627,1630,PullRequestReviewComment,sure,,,,,,
151113331,1630,PullRequestReviewComment,"Yep fair enough to leave the ""any"" in place for these tests since they don't aim to test the actual endpoint",,,,,,
151113570,1630,PullRequestReviewComment,"Ok, I will use AnyAcceptHeaders in observable tests.",,,,,,
130246170,1628,PullRequest,"Related to I've replaced `Assignee` with `Assignees` since the first is obsolete. In my case I also got an error from GitHub that I can't have both `Assignee` and `Assignees` although I didn't dive into the why.I've also added an example in code, since the error threw me off a bit and I started searching for it in doco, but could not find anything related to `Assignees`. If it's TMI, feel free to remove the code example or anything else.",,,,,,
128721229,1623,PullRequestReviewComment,inadvertent?,,,,,,
128734815,1623,PullRequestReviewComment,Looks like it.... Removing that line.,,,,,,
127460769,1622,PullRequest,"As per our deprecation schedule, once items have been marked `[Obsolete]` for at least 2 releases, they will be removed from the code base.The items on this PR were all marked `[Obsolete]` in 0.23 or earlier so can be removed for the next release",,,,,,
127358592,1620,PullRequest,"These earlier Branch Protection methods have been superceded by several revisions over the past year.  Although technically the old branch protection endpoints are still supported until ~September, the `include_admins` parameter support was removed [recently] so these older implementations now no longer work.Given that they've been flagged `[Obsolete]` for a long time now, and the newer endpoints are implemented in Octokit, we may as well remove these now",,,,,,
124420977,1611,PullRequest,This is a small fix to the create release section in the documentation. It should be ReleaseNew not ReleaseUpdate when creating a release.,,,,,,
118565420,1600,PullRequest,- Update contributors docs for dotnetcore/CAKE- Remove some references to old projects/namespaces- Get rid of the old `/packages` folder,,,,,,
118535037,1599,PullRequest,I thought I'd bring the `dotnetcore` branch on par with `master` since there's been some activity on it.,,,,,,
118531212,1598,PullRequest,"This replaces the `IncludeAdmins` property on sub-classes.Fixes #1597 TODO:- [x] client methods for dealing directly with the `EnforceAdmins` setting- [x] unit tests for the client methods- [x] integration tests for the client methodsBreaking changes:- `public BranchProtectionSettingsUpdate(BranchProtectionRequiredStatusChecksUpdate requiredStatusChecks, BranchProtectionPushRestrictionsUpdate restrictions)` ctor is now `public BranchProtectionSettingsUpdate(BranchProtectionRequiredStatusChecksUpdate requiredStatusChecks, BranchProtectionPushRestrictionsUpdate restrictions, bool enforceAdmins)`",,,,,,
35792755,1598,PullRequestReview,"Thanks for the rebase, much nicer to look at only 11 changed files üòõ This is looking really üëè -Zuber , ive just marked a couple of minor things for you to üëÄ",,,,,,
114335437,1598,PullRequestReviewComment,The xml docs are missing in this class,,,,,,
114336185,1598,PullRequestReviewComment,"Minor quibble but the method names of the tests should be worded as actions, eg Get**s**AdminEnforcement rather than GetAdminEnforcement.  This is so that the fully qualified test case names look like:  `TheGetAdminEnforcementMethod.GetsAdminEnforcement`",,,,,,
114336580,1598,PullRequestReviewComment,Missing xmlDoc in this class,,,,,,
114337055,1598,PullRequestReviewComment,Should there be a `ctor` taking just the `EnforceAdmins` bool (and setting the other 2 class members to `null`) ?,,,,,,
114339588,1598,PullRequestReviewComment,yes,,,,,,
117921853,1595,PullRequest,"This PR adds `StringEnum` to handle unknown enum values returned from the API.I added a commit (0677683) to use it for `EventInfo.Event`. This will make it easier to handle cases like  in the future.This is a binary breaking change, but a lot of code will just compile without any changes (as evidenced by this codebase).The usage pattern is something like this:You can also access the `ParsedValue` property, but that will throw if the value is unknown.And lastly, you can get the raw `string` value from the `Value` property.I didn't get to run the integration test suite locally, so ü§û for a green build.### TODO List- [x] Change serializer to only use `[Parameter()]` attributes (no magic hyphen/underscore removal)- [x] ~~Sort out Language enum (I'm keen to not exclude it from the convention tests and even change the Request model to use `StringEnum`~~ Decided to leave this for now- [x] Consider if we want to add Destructure extensions for c# 7 (may as well, right?)- [ ] Write up a doc page about how octokit now deals with enums and how consumers should be accessing them going forward- [ ] Consider whether any existing docs that refer to enums should be altered",,,,,,
36902117,1595,PullRequestReview,"Yeah, I figured I'd stay away from C# 6/7 features for now. There's quite a few things that could be simplified, but I think that should be a separate PR üòÑThe only reason I thought we could add it here, is since this PR is introducing the `StringEnum` type, now would be the time to write up how it could be used.  After we get this PR in, I plan to cut a release",,,,,,
114194676,1595,PullRequestReviewComment,Is this needed?,,,,,,
114195151,1595,PullRequestReviewComment,This feels dirty. Does it need to be an instance method? Can we make this either a) a static method or b) a static field in `StringEnum`?,,,,,,
114195183,1595,PullRequestReviewComment,Same here...,,,,,,
114281063,1595,PullRequestReviewComment,"It seems it is currently, eventhough I agree the implicit conversion should mean it's not.  Ive traced the reason:   corresponds to an api value of `utf-8` but our response enum doesn't include a custom `[Parameter()]` attribute on the members.  We still deserialize the API value OK, since the deserializer removes underscores and hyphens... but when we are converting this back the other way (ie with the changes I made in `StringEnum`'s `ctor` we have no way to know that `EncodingType.Utf8` should be `utf-8`.  To fix this, of course we could add the attribute to this enum, but there is nothing that stops this situation from existing on any other enum value that is only used in API responses.  When an enum is used in a request we HAVE to know what the correct api string value is, but when only used in responses we dont currently (need to) know the value.One possibility would be to enforce (via convention test) that all enums (both request and response) have custom `[Parameter()]` attributes set.  Although this could be a fair few edits, it is the most explicit and obvious approach.  It would also let us remove the ""magic"" removal of hypens and underscores in the deserializer, instead only ever relying on explicit parameter mapping attributes.  Thoughts?",,,,,,
114281231,1595,PullRequestReviewComment,I was trying to avoid changing too much about the current deserializer code.  Both the underlying `GitHubSerializationStrategy` (which implements an interface) and the actual `SimpleJsonSerializer` both use instance methods rather than statics.,,,,,,
114338643,1595,PullRequestReviewComment,"FYI I quickly wrote the convention tests locally to assert this and there are 42 enums that have at least 1 member that doesnt have the `[Parameter()]` attribute specified.Im not averse to fixing them ALL up as part of this PR, since this PR is effectively ""redoing"" how we do enums.",,,,,,
114741602,1595,PullRequestReviewComment,"I guess another way to tackle this could be to change the equality operator between 2 `StringEnum` to compare their `ParsedValue` (if both of them succesfully can `TryParse()`) and if not, fall back to comparing the underlying string value as it currently does.This would mean in the case of (implicitly converted from `EncodingType.Utf8`) (deserialized from api response ""utf-8"")They would correctly be seen as ""equal"".Thoughts?Although more work to change 42 enums, I think Im keen on my earlier suggestion of being explicit with `[Parameter()]` attributes on every enum member, enforced via convention test, and relied on by the deserializer",,,,,,
114746154,1595,PullRequestReviewComment,"Although more work to change 42 enums, I think Im keen on my earlier suggestion of being explicit with [Parameter()] attributes on every enum member, enforced via convention test, and relied on by the deserializerI agree. Explicit is better. This lets us simplify the serializer as well. Want to check in the convention test? I can go through and add attributes.",,,,,,
114746906,1595,PullRequestReviewComment,"Actually, why not do both?",,,,,,
114995609,1595,PullRequestReviewComment,I think this might've been a bug: What to sort results by. Either `due_on` or `completeness`. Default: `due_on` \-,,,,,,
114995962,1595,PullRequestReviewComment,"This might've been a bug as well: Qualifies which fields are searched. With this qualifier you can restrict the search to just the username (`login`), public email (`email`), full name (`fullname`), or any combination of these. \-",,,,,,
114996143,1595,PullRequestReviewComment,"I couldn't find this in the documentation, but I figured it was deprecated anyway, so... ¬Ø\\\_(„ÉÑ)_/¬Ø",,,,,,
114996544,1595,PullRequestReviewComment,"I found this in the documentation, but not here, so just added it while I was there üòÑ",,,,,,
114996924,1595,PullRequestReviewComment,"I excluded some enums from the test because they're not used in the actual API (I couldn't find documentation on them, at least. I think it might be worth crawling the request/response models and find enum types instead of looping through all in the assembly.",,,,,,
115114834,1595,PullRequestReviewComment,"OK so this is really weird!  The API docs do say `due_on` however I was running some tests and these were now failing.  When I play around with things it looks like actually the docs are incorrect and our codebase was correct - a value of `due_date` provides the correct behavior whilst `due_on` does not!( both of these produce the same response (milestone1, milestone2)(these ones correctly return the expected reverse order of eachother)",,,,,,
115139087,1595,PullRequestReviewComment,"Ive pushed up changes to set this back to ""due_date"" (and also contacted GitHub support to ask them about the doc/api correctness for this call)",,,,,,
115368865,1595,PullRequestReviewComment,I think this is a bug...   Looks like the `IssueCommentRequest` object uses `PullRequestReviewCommentSort` but should actually use `IssueCommentSort`,,,,,,
115369142,1595,PullRequestReviewComment,"minor nitpick but existing convention tests match the assembly to that of `IGitHubClient` rather than hardcode ""Octokit"".  I guess we'd never change assemblies but I feel like it's cleaner to not hardcode it... ?",,,,,,
115965270,1595,PullRequestReviewComment,Brought it back from the dead üëç,,,,,,
116612738,1595,PullRequestReviewComment,"We *really* need to get rid of these before this PR is merged. Allocating a `SimpleJsonSerializer` every time a `StringEnum` is created and parsed is hella expensive when it comes to GC. I tried making it static, but for some reason tests started failing, so it seems it actually mutates some internal state, which sucks üò¢",,,,,,
117586621,1595,PullRequestReviewComment,"I _think_ I found the issue. The enum cache dictionary is not filled with all the values of a specific enum, but only with the value we want to deserialize when calling the method. This means the dictionary only ever contains one parsed value per enum type.After removing [this line], tests pass when `StringEnum` has a static instance of `SimpleJsonSerializer`. Am I missing something here and this is the desired behaviour?",,,,,,
117588086,1595,PullRequestReviewComment,"Yeah that does seem like a logic flaw. The idea of the cache is to obviously ""speed up"" the enum deserialization by not having to evaluate the Parameter property on an enum value more than once But that seems to be a logic issue where only the first enum member encountered would be added to the cache...  then next time (for the same enum type) the enum type would already be in the cache (but not other members) and it would actually never look at the parameter property on other members and only do a `Enum.Parse` on themUnless I'm missing something,  this line should have actually led to bugs where we ignored the parameter attribute on any enum members other than the first one encountered? How has this not led to other problems in the past! :confused:So yes I think removing that line is fine but now I want to understand how  this hasn't already caused us problems before!",,,,,,
117715944,1595,PullRequestReviewComment,"Yep I confirmed this was a bug, and added a failing test to repro it.  If the same `SimpleJsonSerializer` instance tried to deserialize a subsequent enum value that required the Parameter attribute (ie `EncodingType` ""ascii"" followed by ""utf-8"") it would throw an exception as it hadn't cached the other enum members, and tried to do a simple `Enum.Parse()` on ""utf-8"".I've made the fix identified by  and confirmed this test now passes, plus changed the `StringEnum` to use a static `SimpleJsonSerializer` and verified the other tests are passing.Ill push the commits up if you want to have a look  and",,,,,,
117722745,1595,PullRequestReviewComment,Awesome! LGTM ‚ù§Ô∏è,,,,,,
117694070,1593,PullRequest,This resolves #1592 - LINQPad doesn't understand how to restore this unlisted package and it's not actually needed in the samples.,,,,,,
117596502,1591,PullRequest,The problem described in PR #1536 / Issue #1502 cropped up again.  Apparently GitHub has added more event types.  This change incorporates all of the states in the [GitHub API] plus some undocumented ones we encountered during prior testing.  I put them in the order that they're listed in the GitHub API so you can easily skim the list and compare.,,,,,,
116877100,1588,PullRequest,TODO:- [x] Add interfaces.- [x] Add models.- [x] Add implementations.- [x] Add tests.- [x] Fix names.- [x] Add missing documentation.- [x] Use `PullRequest` instead of `PullRequestReviewRequestCreate`- [x] Add repositoryId methods. - [x] Add integration tests.- [x] Final check,,,,,,
36637897,1588,PullRequestReview,"Nice work on the integration tests!  Ive made a few comments because we are trying to get some consistency across our integration tests, so I hope you dont mind some of the changes ive flagged.In general, we would like to follow the format where we have the resulting test names look like this: PullRequestReviewRequestsClientTests.TheGetAllMethod.GetsReviewRequestsTo do this, we arrange things in classes according to the client method, and then have the tests for each method in that class.We also want to have one test that exercises the `string owner, string name` method and another that exercises the method taking the `long repositoryId` (so we can prove the calls work for both variations).So it would look something like this:",,,,,,
36661074,1588,PullRequestReview,Thanks for restructuring things :+1:Ive highlighted a couple of minor things.  Also dont forget to add some unit tests for the RepositoryId calls (this would also have picked up the issue in the ApiUrl formatting for repositoryId).  Eg `RequestsCorrectUrlWithRepositoryId` and `EnsuresNonNullArgumentsWithRepositoryId` (where appropriate - the Get methods only take a long and an int so no need to have NonNull test for those),,,,,,
37539535,1588,PullRequestReview,"These tests are failing for me, ive made some local fixes but my API rate limit got blown and need to wait half an hour before i can try again! üòù",,,,,,
112804033,1588,PullRequestReviewComment,Our convention is to use plural for the client name (which you've done `PullRequestReviewRequestsClient`) but to use singular for the sub-client property accessors.  So in this case rather than `ReviewRequests` it should just be `ReviewRequest`,,,,,,
112804040,1588,PullRequestReviewComment,"Just FYI that we add the xmldoc comments to the interfaces and the client implementations, so once you are done with the changes please add the xmldoc comments to all the conrete methods as well :+1:",,,,,,
112804046,1588,PullRequestReviewComment,=> `ReviewRequest`,,,,,,
112804060,1588,PullRequestReviewComment,and here,,,,,,
113665821,1588,PullRequestReviewComment,Dont forget to add this new property to the `ctor` of the response class as well,,,,,,
115113984,1588,PullRequestReviewComment,When refering to the created `RepositoryContext` I'd prefer we use `_context.RepositoryOwner` rather than `Helper.UserName` - just to keep from making assumptions about the internal workings of repository context,,,,,,
115113990,1588,PullRequestReviewComment,Does this need to be a class level const since it's only used in 1 place?,,,,,,
115113997,1588,PullRequestReviewComment,"Ditto with this one, if it's not re-used multiple times it doesn't need to be a class level const",,,,,,
115114003,1588,PullRequestReviewComment,"In other integration tests we use ""octocat"" as our contributor user, so it'd be good to use it here too.  The added bonus is that M-Zuber would be able to run these tests lol üòõ",,,,,,
115114030,1588,PullRequestReviewComment,For consistency it would be nice to create the base state using the same process/code that the `CreateTheWorld()` functions in the `PullRequestsClientTests` use:   That way we have consistency in how we create Pull Requests for integration tests,,,,,,
115127904,1588,PullRequestReviewComment,I'll change it :) But in my defense: I've take it from `RepositoryCollaboratorClientTests.cs` and ran the test.,,,,,,
115129616,1588,PullRequestReviewComment,Inlined it.,,,,,,
115129619,1588,PullRequestReviewComment,Inlined it.,,,,,,
115129748,1588,PullRequestReviewComment,Changed it.,,,,,,
115129814,1588,PullRequestReviewComment,"I've changed the method name and it's code to be like `PullRequestClientTests.CreateTheWorld`, but without second branch creation and with baked-in pull request creation.",,,,,,
115130186,1588,PullRequestReviewComment,"But, but, then I won't know when someone runs the integration tests üòÅ",,,,,,
115138842,1588,PullRequestReviewComment,"Haha üòÄ yeah as I said there are a fair few inconsistencies with how integration tests are being done across the code base so I just try to focus on new integration tests being done in the preferred way, and perhaps one day we could even go back and restyle the existing ones!",,,,,,
115138872,1588,PullRequestReviewComment,"To keep consistency, can we name these ""CanxxxxWithRepositoryId"" ?",,,,,,
115138893,1588,PullRequestReviewComment,"Again, for consistency let's just go with `CreateTheWorld()`",,,,,,
115139012,1588,PullRequestReviewComment,"For consistency, use `EnsuresNonNull` rather than `EnsuresNotNull`.  Despite the fact the latter actually sounds better, across the codebase we have 585 cases of NonNull and only 5 of NotNull so we need to go with consistency ü§î",,,,,,
115144130,1588,PullRequestReviewComment,Added it.,,,,,,
115957037,1588,PullRequestReviewComment,Looks like the class name (and filename) are incorrect here: PullRequest`s`ReviewRequestClientTests =>  PullRequestReviewRequest`s`ClientTests,,,,,,
115961198,1588,PullRequestReviewComment,"this is my test organization rather than a user, which is causing tests to fail.  (my test user is ryangribble-testing although)Also it should be possible to prove pagination works with only 2 collaborators (just adjust the pagesizes in the ApiOptions in the tests to 1 rather than 2)",,,,,,
116450272,1587,PullRequest,This PR serves as a way to test if  speeds up the `sourcelink test` process by downloading files asynchronously.AppVeyor and/or Travis CI build times will be used as a comparison.,,,,,,
116047260,1585,PullRequest,See #1582.,,,,,,
111922786,1585,PullRequestReviewComment,"wording seems a little off here.  Maybe it could be ""....  but are not of type String""",,,,,,
111926320,1585,PullRequestReviewComment,"You wouldn't believe it took me 5 good minutes to come up with that weird wording, would you? :wink:",,,,,,
113411198,1585,PullRequestReviewComment,? Might as well change all of them if you decide to go for it.,,,,,,
113411455,1585,PullRequestReviewComment,Can these type have other properties that *should* be `Uri`? Is it worth doing the check on type + property instead?,,,,,,
113412057,1585,PullRequestReviewComment,"Also, ProTip‚Ñ¢: You can use `nameof` for properties on a type, i.e. `nameof(AuthorizationUpdate.NoteUrl)` :smile:",,,,,,
113420857,1585,PullRequestReviewComment,"I went for consistency here. not knowing what versions of VS contributors use, even if I guess it's safe they use a recent enough version. The .NET Core port should be merged in the near future, and since the new .csproj involves using VS 2017+, these updates will be totally safe then.",,,,,,
113421540,1585,PullRequestReviewComment,"You're right, they can. At the moment they don't, so I felt like checking for the type was enough.",,,,,,
113421607,1585,PullRequestReviewComment,"Oh, sorry. I just assumed this project used C# 6 by now (given that C# 7 has since been released), but I see the `LangVersion` elements from  are still there...",,,,,,
113579376,1585,PullRequestReviewComment,"No worries at all, thanks for spotting this. I didn't even know C# 6 was explicitly disabled. I'll take a look at the places in the dotnetcore branch tomorrow and use new features where possible.",,,,,,
114050390,1585,PullRequestReviewComment,{2} and {3} should now be {1} and {2} I guess...,,,,,,
114050447,1585,PullRequestReviewComment,thanks!,,,,,,
114055836,1585,PullRequestReviewComment,"Does this clause about `Release` type need to be here?  Eventhough it may be a Response model, if it is part of a client method parameters then it technically is a Request parameter as well, so probably shouldn't be excluded from Request model tests...",,,,,,
114061842,1585,PullRequestReviewComment,You're right. I rushed through this.,,,,,,
116027955,1584,PullRequest,"This is the next removal of obsoleted methods, while waiting for Branch protection API review. Therefore removal of obsoleted methods will not touch Branch protection API (obsoleted) methods.I deliberately submit this PR first to notify that this is part 1 of the obsoleted method removal to ease PR review.cc",,,,,,
115311451,1581,PullRequest,I think the time has come to ship our `dotnetcore` port!- [x] Updated to latest VS2017/msbuild tooling- [x] AppVeyor and TravisCI builds are :gem:- [x] SourceLink support came back into the picture üéâ - [x] CAKE build has all equivalent tasks that previous FAKE build had- [x] Alpha release libraries were pushed to nuget (700+ downloads and no reported issues)- [x] Update `dotnetcore` branch with latest `master`- [x] Get #1579 and #1580 merged into master and then update `dotnetcore` again- [x] Review any contributors guide/docs update required => #1600- [x] :+1: from  or  Unless anyone has any other items on the TODO list I think we can hit the button once those last couple of items are done!/CC,,,,,,
115308601,1580,PullRequest,"Fixes #1509  previously returned `null` if any of the child properties of the object to clone were `null`.  I encountered a situation where there was no ETag header in an API response, which caused the ""Last Api Info"" object to be `null` due to this logic.With this change, the `Clone()` method will clone whatever fields do exist, which means we should now be correctly providing the ""Last Api Info"" in more cases.",,,,,,
33437988,1580,PullRequestReview,LGTM,,,,,,
115287330,1579,PullRequest,Fixes #1578,,,,,,
113817346,1577,PullRequest,Fixes #1565 by updating `ReleaseClient` code samples to `client.Repository.Release` instead of previously `client.Release`,,,,,,
30418436,1577,PullRequestReview,:thumbsup:,,,,,,
113586585,1576,PullRequest,"Fixes #1575This PR removes the ""swallowing"" of exceptions in the overloaded `RepoCollaboratorsClient.Add` method making it possible to know what went wrong in case of an exception happening.",,,,,,
113354644,1574,PullRequest,"For our 2 library projects,- Set PDB option to embedded- add sourcelink MSBuild tools (should run automatically)- add sourcelink test MSBuild tool (should verify the sourcelink worked ok)",,,,,,
113082579,1573,PullRequest,"This is a temp PR working on top of of 's amazing work at #1567 since I don't have push permission to that PR's source branch. I'm just trying to help here, by no means do I want this PR to be merged. If I get to something, I may create a PR that targets 's PR branch, if he's willing to accept it.He did make a lot of progress, namely:  - run GitVersion with mono when run on Linux - overcome an issue with Travis CI doing shallow git cloneI'm trying to work out the latest problem.When on Unix and doing cross-targetting including a full .NET Framework TFM (which we have as Octokit builds for both `netstandard1.1` and `net45`), you have to [let MSBuild know where the .NET fx reference assemblies are]. That is not needed on Windows.Found an issue relating to this on the sdk repo:",,,,,,
112767750,1571,PullRequest,Reverts octokit/octokit.net#1556,,,,,,
111622081,1569,PullRequest,"This is a PR to remove obsoleted paramless constructor of RepositoryUpdate, it is related to issue #1568",,,,,,
110944989,1567,PullRequest,"Now that VS2017 is released, the time seems right to get our `dotnetcore` branch over to that tooling, before we actually merge and release it.  SourceLink support for dotnetcore is also now possible when using the msbuild tooling (thanks to   :love:) which is great as we've always included sourcelink in our libraries but dropped it when we did our alpha release for dotnetcore, will be great to have it back!### Working- [x] Projects converted to VS2017 csproj format- [x] CAKE build script updated to the latest cake.frosting versions and remodelled based on the new official ""dotnet build templates"" for cake frosting, using [their own reworked build] as inspiration üòâ - [x] Builds, Tests and build script are working OK, with the exception of the nuget package versioning (mentioned below)### TODO- [x] nuget pack step is getting version 1.0.0 - need to figure out the best way for the GitVersion calculated version numbers to be used.  Someoptions appear to be -- add nuget package information/fields to the csproj files and have a build task that replaces the correct version numbers (like we used to patch assemblyinfo files and project.json files)-- see if we can pass commandline parameters to the DotNetCorePackage command-- use the GitVersion msbuild target inside our csproj so the versioning stuff happens magically, rather than us explicitly running GitVersion and using the output values ourself-- disable automatic AssemblyInfo generation via an msbuild property in csproj files, and maintain/generate our own AssemblyInfo files- [x] ~~Implement sourcelink 2.0 support and change our msbuild setup to embed sourcelinked portable PDBs into the assemblies.  This is essentially the adoped ""best practice"" which is being rolled out across the official framework.  See [here] for the doco, and [here] for an example PR showing how it is being added to the `aspnet/Mvc` project~~To be done on separate PR- [x] Get TravisCI linux/mac builds working, or remove it from builds going forward can you please validate everything is working OK for you, and feel free to help tackle the TODO items!",,,,,,
29859521,1567,PullRequestReview,"Just curious about the usage of a prerelease package (Microsoft.NET.Test.Sdk) when a stable one has been released.Overall, it looks good. Thanks again.",,,,,,
108802370,1567,PullRequestReviewComment,"It seems there's a new, stable version of this package [on NuGet]. Any specific reason to use this pre-release one?",,,,,,
108802418,1567,PullRequestReviewComment,Same as above,,,,,,
108802440,1567,PullRequestReviewComment,Same as above,,,,,,
108802512,1567,PullRequestReviewComment,nit: extra empty line,,,,,,
108802526,1567,PullRequestReviewComment,nit: extra empty line,,,,,,
108830791,1567,PullRequestReviewComment,I just converted the project.json to csproj with VS2017 so I guess this is historic.  Ill update it and see how we go!,,,,,,
110240401,1563,PullRequest,"Fixes #1559 Fixes #1525This fix adds 3 more undocumented event types in the TimeLine API: `linecommented` `commitcommented` and `reviewed`Also added an integration test that will hopefully help with identifying more missing values in the future, it now runs against the most recent 20 closed PRs and 20 open issues in a heavy activity repository.  I picked [Microsoft/vscode] üòÄ the theory being that it's a very active repository, and the most recent activity is more likely to have new event types in their timeline/event stream.The strategy seemed to work, as I discovered 2 extra event types that hadn't been reported by users as causing a crash yet üò∏ In the short term, we will still throw an exception whenever we encounter an event type not previously implemented, a potential longer term solution is being hashed out in #1504",,,,,,
105574427,1563,PullRequestReviewComment,Could these be cased as `LineCommented` and `CommitCommented`? Or is this a deserialization issue?,,,,,,
105574458,1563,PullRequestReviewComment,here too?,,,,,,
105578647,1563,PullRequestReviewComment,"The API value is all lowercase, pretty sure if we do camel case on our side we'll be looking for an underscore in the API value",,,,,,
105799132,1563,PullRequestReviewComment,I thought we could do something like [this] here?,,,,,,
106277927,1563,PullRequestReviewComment,Yeah so on looking into this more I realised we dont even need to tag with the `Parameter()` since these are only response enums and our deserializer removes underscores and does a case insensitive `Enum.Parse()` anyway :+1:,,,,,,
109624838,1561,PullRequest,API for Apple inc,,,,,,
108692364,1560,PullRequest,Fixes #1558.The API used to send times as number of seconds from Unix epoch time.This has changed and is now ISO 8601.,,,,,,
105826008,1557,PullRequest,fenswa 97.247.183.3,,,,,,
105753641,1556,PullRequest,paths in .sln file should match actual file names,,,,,,
103632574,1555,PullRequest,"Closes #1554.Right now we use GitVersion with the default settings., by default, uses the [Continuous Delivery] mode which generates the same version for all the commits until we tag the repo with that version.Since we might want to publish pre-release packages in the future, we could take advantage of the other mode named [Continuous Deployment]. This mode generates a new version for each commit. To avoid the version going through the roof, a pre-release tag is forced with this mode. By default, the tag for `master` is `ci`. As we used the `alpha` one for the pre-release NuGet package, I thought we might use the same.Also, right now GitVersion increments the `minor` after the repo has been tagged (see [that AppVeyor build]). It looks more natural to me to go with the assumption that the next release will contain a new feature. We can always force a bugfix release by using either a release branch - `release/0.24.1` - or use the convention-based commit messages - `+semver: minor` - to instruct GitVersion of the version we want it to generate.At the moment the file contains configuration for both `master` and `dotnetcore` since it's the branch we're working on. When the branch gets merged into `master` we can get rid of `dotnetcore`",,,,,,
103489722,1553,PullRequest,This commit fixes #1533,,,,,,
103027979,1552,PullRequest,"Closes #1545.Question, though: do we want to write tests for these tasks?",,,,,,
102869426,1551,PullRequest,Closes #1548,,,,,,
102869365,1550,PullRequest,Closes #1547,,,,,,
102869319,1549,PullRequest,Close #1546,,,,,,
102597621,1544,PullRequest,"Hey,I started doing a bit of work to make the .NET Core solution tidier and on par with the existing one.This includes: - remove anything platform-specific that we don't use anymore - bring back the StyleCop rule set to both `Octokit` and `Octokit.Reactive` - a build task running the LINQPad samples before packaging, as I think  is keen on keeping them up-to-date and working - a build task to format codeThere's some not-so-nice things going on in the formatting task. `CodeFormatter` doesn't support xproj/project.json, so the task creates a temp `.csproj` listing all the `.cs` files and feeds it to the formatter.Let me know if you'd like things made different.",,,,,,
101690493,1541,PullRequest,"The GitHub API is apparently now returning ""Bot"" account types.  This was causing a deserialization exception when encountering repositories that had a ""bot"" user (perhaps related to the new API integrations features) performing actions.  Example here:",,,,,,
101603736,1540,PullRequest,"Resolves #1529.## BackgroundIf an API Error is returned and the message is empty, the default error message is not shown, and instead an empty string is shown.##FixPer discussion on #1529, we'll resolve this by modifying ApiErrorMessageSafe to return null when an empty or whitespace string is provided.## Work* [x] Un-skip the failing test* [x] Modify ApiErrorMessageSafe code",,,,,,
101591173,1539,PullRequest,This is the first release where I'm putting it together!  Here is the checklist I'm going to work through.Aiming to release on the 17th January- [x] check for any last minute PR's that can make it in- [x] initial release notes- [x] version bump- [x] run `build FormatCode` to tidy up whitespace/formatting- [x] integration tests all pass- [x] tweak release notes to call out any breaking changes/special instructions (such as the multiple assignees implications on `NewIssue` and `IssueUpdate`- [x] :thumbsup: from  or - [x] :thumbsup: from key contributors  -Zuber etc- [x] tag and publish to NuGet- [x] :shipit:,,,,,,
16892077,1539,PullRequestReview,"Looks great! Nice work all!I just gave the release notes a pass and tweaked a few things, but everything else is looking :gem:! And don't forget to tag the release in source control before merging!",,,,,,
101187231,1537,PullRequest,added the Id property for PullRequest model,,,,,,
16310040,1537,PullRequestReview,"Looks pretty good, but as notes I think we should go with `long`Also if we are adding this field to `PullRequest` we should also add it to `Issue`, are you able to do that too? Thanks!",,,,,,
95746185,1537,PullRequestReviewComment,"It would be good to use `long` data type, since github could well have more than ""max int"" pull requests!",,,,,,
95848746,1537,PullRequestReviewComment,"Got it. You did suggest long. I checked other class like issue, comment, they all using int type id. used int for consistency issue. As you mentioned we have more pullrequest than int can support already, I am going to change it to long again. BTW, one of the check Travis CI build failed. I tried to read the log, but did not found any intuitive information. Do you mind to share me some tips on looking at that log?",,,,,,
95853507,1537,PullRequestReviewComment,"Another thing is when I run the integration test, there is an authorizationException : bad credentials been thrown. Does that mean I need to change certain credentials to run the tests or I did not set some configurations right?",,,,,,
95915758,1537,PullRequestReviewComment,"Can we please reword this to ""The internal Id for this pull request (not the pull request number)."" ?And could you edit the comment on `Issue.Id` to be similar?  ""The internal Id for this issue (not the issue number).""Thanks üòÄ",,,,,,
95916392,1537,PullRequestReviewComment,"In terms of running the integration tests, you need to configure your development environment (and is strongly recomended you setup a separate github account to use for the integration tests).  More info is documented [here in the contributors guide]",,,,,,
95916502,1537,PullRequestReviewComment,"And in terms of the TravisCI build sometimes we get an unrelated problem where it blows up in TravisCI and is not related to your changes.  We have to kick off another build (or the next commit pushed will obviously trigger a new build as well).  I see your latest commit, the builds have all passed :+1:",,,,,,
95918273,1537,PullRequestReviewComment,This `int` field can never be `null` so I'm thinking we will need to assert something else here (eg `Assert.True(pullRequests[0].Id > 0)`,,,,,,
95919697,1537,PullRequestReviewComment,Thanks for the catch. I am going to update that. I am assuming all internal ids  are larger than 0.,,,,,,
101135175,1536,PullRequest,"Fixes Issue #1502.Updates the EventInfo list to the latest values published in [GitHub API], plus an undocumented one we stumbled across.PR #1504 is a much better long-term solution, but in the mean time this is blocking us from parsing Git diffs using OctoKit.  Thought we'd share the fix.",,,,,,
16233645,1536,PullRequestReview,"Thanks for the fix, we can get this in asap as I'm not sure the ""unknown enum"" solution will make the next release",,,,,,
95670102,1536,PullRequestReviewComment,"I think we can advise upstream github support this value is missing from their docs, so rather than saying this I think we can just give it an actual description? Eg `Base branch of the pull request was changed`",,,,,,
95918630,1536,PullRequestReviewComment,Cool I was able to do this myself!  Thanks üòÄ,,,,,,
100859138,1534,PullRequest,Fixes incorrect comment identified in issue #1526,,,,,,
100708742,1530,PullRequest,Resolves #790.,,,,,,
100627751,1528,PullRequest,"Resolves #1527.This aims to Add and `AbuseException` that inherits from `ForbiddenException`. This exception will be thrown in place of the `ForbiddenException` when an abuse condition occurs. Additionally, the `AbuseException` will contain the `Retry-After` header field as an `int`. ## Work Remaining* [x] Create AbuseException* [x] Tests for AbuseException* [x] Throw AbuseException correctly within `Connection.cs`* [x] Ensure AbuseException displays default message when response message is mal-formed.* [x] Additional tests for `Connection.cs`* [x] Add `Retry-After` field to AbuseException* [x] Mark all methods as static that can be (per build failure)* [x] Add `GetObjectData` for AbuseException? Comment: ## Feedback to Address* [x] Re-introduce and skip failing test with notes & pointer to new issue.* [x] Make `RetryAfterSeconds` into an `int?` and use `null` instead of a default int value.* [x] Consolidate / compact the private method for parsing the response.* [x] Fix whitespace issues* [x] Move test names / formatting toward standard xUnit conventions (nested classes, etc.)* [x] Remove redundant code from the parse method* [x] Demonstrate real-world usage",,,,,,
15796234,1528,PullRequestReview,"Have flagged a couple of ""formatting nazi"" changes to maintain consistency with existing coding style... and also a comment for discussion about the implementation of the header parsing in the `AbuseException`",,,,,,
95246937,1528,PullRequestReviewComment,Extra whitespace line,,,,,,
95246983,1528,PullRequestReviewComment,Extra whitespace line,,,,,,
95247097,1528,PullRequestReviewComment,Missing a whitespace line after this line,,,,,,
95247673,1528,PullRequestReviewComment,"To me it seems a bit overkill to have a property, default property and 2 private functions, all related to pulling the value out of the headers and parsing it.  I think maintainability would be higher if it was a single function called from the `ctor` that took the `HttpResponse` as input and returned the `int?` parsed value.  It also eliminates the need to declare a `default` value, as the function could just return `null` at the end if all the `TrypGetHeader` `TryParse` and `>= 0` tests didnt satisfyIm happy to discuss if you feel things are more granularly testable with the current implementation but this was my initial thought around maintainability/readability...",,,,,,
95248930,1528,PullRequestReviewComment,"The style/verbage used in the naming of the test fixtures isn't too consistent with (most) of the other octokit tests (or more precisely, the direction/consistency we are meandering towards)We normally word the test fixture naming with sub classes for the functions eg `TheConstructor` `TheParseRetryHeaderMethod` etc, and then the name of the `[Fixture]` test functions is like `HandlesEmptyHeader` `HandlesNullHeader` `CorrectlyParsesValue` and so on. So that way we end up with common english sounding and so on",,,,,,
95249158,1528,PullRequestReviewComment,"sure, makes sense. I'll clean it up and compact it so you can take a second pass.",,,,,,
95249511,1528,PullRequestReviewComment,"makes sense. I'll reformat. Sorry, should've paid more attention to the existing conventions. They tend to be my preference anyway; I think I was likely being hasty.",,,,,,
95251807,1528,PullRequestReviewComment,"should've paid more attention to the existing conventions. We have a fairly large code base and some of it has not needed to be touched for quite a while, so it's certainly not all consistent! As we go forward (and as we work with new contributors) we are taking a greater focus on ensuring consistency at least in anything new we implement, so thanks for jumping through these hoops with me :+1:",,,,,,
95340350,1528,PullRequestReviewComment,"I think this line is redundant since the following `int.TryParse()` will handle `null` or `whitespace` strings and return `false`, right?",,,,,,
95352450,1528,PullRequestReviewComment,nice catch; fixed.,,,,,,
99311298,1524,PullRequest,"Supports #1142. ## Remaining Work* [x] Add a quick section on rate limits to the getting started doc* [x] Add links to the Github API rate limit docs* [x] Note that authorized clients have a higher rate limit.If you'd like to break this PR up at all to get some of the basic info in, let me know and I'll switch it up.",,,,,,
94078862,1524,PullRequestReviewComment,ToIHaveLeft => DoIHaveLeft,,,,,,
94078970,1524,PullRequestReviewComment,"Maybe add a hyperlink to the github API docs ""rate limiting"" section? Also maybe it's worth mentioning that an authenticated client has a much higher limit than anonymous",,,,,,
94079237,1524,PullRequestReviewComment,üëç Great feedback; will do.,,,,,,
94079251,1524,PullRequestReviewComment,"üëç Nice catch, thanks.",,,,,,
94082295,1524,PullRequestReviewComment,Fixed.,,,,,,
94230332,1524,PullRequestReviewComment,This has been done.,,,,,,
94270971,1524,PullRequestReviewComment,"I think it would be better to link to [this page] since it provides info about rate limits etc, rather than the link you had (which is the doc for the actual ""Get Rate Limit"" API call)",,,,,,
94270977,1524,PullRequestReviewComment,"Let's say ""a significantly higher limit"" here since its's a big difference",,,,,,
94278477,1524,PullRequestReviewComment,done.,,,,,,
94278478,1524,PullRequestReviewComment,üëç done.,,,,,,
99094403,1523,PullRequest,"Edited by Hope you don't mind -Zuber but I've taken over this PR üòÄ I realized that [we don't have much time] before we have to pass the new `required_pull_request_reviews` field in all branch protection calls, otherwise they will stop working when the API becomes official in less than a weekThere were also many changes to this API during it's preview period, and it now has functionality to control the dismissal of pull request reviewsI've implemented the extra fields required as well as the new explicit GET/UPDATE/REMOVE ""Review Enforcement"" client methods.- [x] Add new dismissal related fields to `BranchProtectionRequiredReviews` and `BranchProtectionRequiredReviewsUpdate`- [x] Update integration tests for parent branch protection calls to use/validate the new fields- [x] Implement new explicit `GetReviewRestrictions`, `UpdateReviewRestrictions` and `RemoveReviewRestrictions` client methods\- [x] Unit tests- [x] Integration tests- [x] Rinse and repeat for the `ObservableRepositoryBranchesClient`---~~This is on hold until #1598 lands, as that has a decent sized impact on the code~~~~- [ ] Unit Tests~~~~- [ ] Integration Tests~~~~- [ ] Test if  is correct [here]~~~~- if yes~~~~- [ ] Update Contsructors~~~~- [ ] Update Unit tests~~~~- [ ] Update integration tests~~",,,,,,
135402557,1523,PullRequestReviewComment,Is there a way to make it clearer what is happening here?as a newcomer to the codebase might be confused by `null` being equated with an empty array,,,,,,
135403620,1523,PullRequestReviewComment,"Yep I agree, this is not great but it's the best I could come up with üò° Im not sure why this API endpoint is different to the other branch protection ones!  Normally to ""disable"" a protection setting, you can send a `null` for the object but in this case to disable the item, you have to send an empty bodied member.So basically to be disabled, as per the following screen shot, we have to send an instance of the class but with no members (ie the Teams/Users array are `null`)To enable the dismiss restriction and have only admins (as per next screenshot) you send empty Teams/Users arrays.To specify teams/users you populate themSo given that we need to somehow have either the empty bodied class or empty array or populated arrays, what i came up with was the `ctor` thqat takes a `bool` for whether the restriction is enabled (admin only, thus empty team/user list)... or disabled (`null` arrays, so the class has an empty body).I tried to explain the usage in the xmldoc comments which users hopefully see in intellisense.If you have any better ideas for implementation let me know!",,,,,,
135404371,1523,PullRequestReviewComment,"From the perspective of an external user, I think what you have is a nice solution.My worry is more on someone coming along later trying to contribute, and not understanding the code commentMaybe something like `API requires an object with empty members to be passed in order to disable these checks`?",,,,,,
135404816,1523,PullRequestReviewComment,"Ah right, sorry I misunderstood! Yes that code comment is poorly worded, I will update thanks!",,,,,,
98954236,1520,PullRequest,Fixes  #1511  Change references of Comment to ReviewComment based on the API change - [x] Rename Comment to ReviewComment in the PullRequestClient and interface as well as all tests related to it. - [x] Replace the Observable interfaces and classes,,,,,,
14134421,1520,PullRequestReview,Great work so far!  I've highlighted a couple of formatting/doc issues and also pointed out that the obsoleted `Comment` endpoints won't currently work since they will be `null` !  üòÅ,,,,,,
93603829,1520,PullRequestReviewComment,"Separate the old member and the new member with a line of whitespace, and dont forget to add XmlDoc for the new membereg:",,,,,,
93604606,1520,PullRequestReviewComment,"We still need the `Comment` endpoint to function so let's make it a getter only, and have it return the new clienteg",,,,,,
93604685,1520,PullRequestReviewComment,Same comments about whitespace and XmlDoc here,,,,,,
93604758,1520,PullRequestReviewComment,fix formatting (whitespace) here for consistency,,,,,,
93604806,1520,PullRequestReviewComment,"I guess this comment should say ""Client for managing review comments"" now?",,,,,,
93605015,1520,PullRequestReviewComment,"same comments around getter only, whitespace, and xmldoc wording change",,,,,,
94361359,1504,PullRequest,Fix #1502,,,,,,
9356558,1504,PullRequestReview,"We also need to make sure to only do this for enums in response fields, we don't want to add this to enums only used on requests",,,,,,
88792344,1504,PullRequestReviewComment,"We should use [`Enum.TryParse()`]  method here, rather than deliberately throwing/catching an exception",,,,,,
88843733,1504,PullRequestReviewComment,To use `TryParse` i need an instance `TEnum`. How can i achieve this from `Type type`,,,,,,
88880108,1504,PullRequestReviewComment,"ah yeah sorry i didnt look at the diff context and see now that it's inside a non generic method etc, so the way you've done it is ok",,,,,,
94076458,1503,PullRequest,As mentioned in #1419 I'm trying to port Octokit to .NET Core.Very early stage at the moment but I'd rather PR and get feedback quickly.Right now only targeting `netstandard1.1` and `net45`.Any comment/feedback more than welcome.,,,,,,
14140608,1503,PullRequestReview,"The change to the Serializer exception is :+1:The changes to the test are :+1: (I briefly played around trying to get `dynamic` and `ExpandoObject` etc working but couldnt... so I think the approach you've settled on is the least amount of ugly to still succeed :)  Unless the whole test can be written as most other tests are, where the mock is setup to match the call parameters then we just verify `.Received(1)` on the mock... rather than the way this one uses the `Arg.Do` to assign the passed in variable to another varialbe and later assert it.But really it's just a test and whatever works is fine I reckon...The change to the user agent string I think there might actually be a problem with the old format line being left in place on one of the #elif cases... ive marked it up as a review item",,,,,,
14142005,1503,PullRequestReview,A few more review items,,,,,,
93609691,1503,PullRequestReviewComment,"since `format` is being set above and included in all cases, I think this line may be spurious?infact do we even really need this hardcoded WindowsRT/Windows8 etc stuff below ? Can this `NETFX_CORE` case here just be removed and either user `Environment` or `RuntimeInformation` according to the `HAS_ENVIRONMENT` preprocessor definition now added?",,,,,,
93611070,1503,PullRequestReviewComment,"what is ""OctokitBidon"" ?",,,,,,
93611837,1503,PullRequestReviewComment,extra whitespace line (there are a few similar occurences on other files).  this is definitely sraping the bottom of the barrel in terms of what I can pick up in review!,,,,,,
93612145,1503,PullRequestReviewComment,this block could be written the same as [here] for consistency,,,,,,
93612181,1503,PullRequestReviewComment,OctokitBidOn again,,,,,,
93717799,1503,PullRequestReviewComment,"noted, thanks. for now I removed the WindowsRT/Windows8 specific stuff since I don't think the target is to create platform-specific packages.",,,,,,
93717831,1503,PullRequestReviewComment,"sorry, some hacky stuff I must have done at the beginning and forgot to remove them.",,,,,,
93717859,1503,PullRequestReviewComment,üî• them all!,,,,,,
93717866,1503,PullRequestReviewComment,"done, thank you.",,,,,,
95096857,1503,PullRequestReviewComment,There seems to be a signature issue with this function:Throwing a `|> ignore` on the end seems to do the trick :trollface:,,,,,,
95102184,1503,PullRequestReviewComment,if we are going to CAKE from fake anyway this F# voodoo may not be required anymore :),,,,,,
95102309,1503,PullRequestReviewComment,Fair point - I just pulled it down to do a `.\build` but I guess that's now handled by something else...,,,,,,
95122785,1503,PullRequestReviewComment,I'm happy to remove the FAKE file and edit the `build.cmd` and `build.sh` to mimic what happens on AppVeyor. Sorry about the confusion.,,,,,,
93284639,1501,PullRequest,"Original Issue : Hi,I added 4 methods to `IssueCommentsClient.cs`.But there are two duplicated options which named `IssueCommentSort` and `PullRequestReviewCommentSort`. I think these types can be merged like a `SortDirection` option.Thanks.",,,,,,
88586441,1501,PullRequestReviewComment,"Id say this is the one failing, if you have a look at what the previous code was",,,,,,
88880834,1501,PullRequestReviewComment,This should be passing through the `options` variable rather than `ApiOptions.None`,,,,,,
88880878,1501,PullRequestReviewComment,This should be passing through the options variable rather than ApiOptions.None,,,,,,
89028201,1501,PullRequestReviewComment,Ah... thanks.,,,,,,
89104726,1501,PullRequestReviewComment,"These tests aren't right.  They arent failing but they also aren't correct.  It may be something to do with the multiple nested subclients on the end of the `.Received()` callbut this observable method doesnt actually call into the `IGitHubClient` method, it calls the `_connection.GetAndFlattenPages()` method and thus this test should be checking for `gitHubClient.Connection.Received(1).Get....`",,,,,,
89104757,1501,PullRequestReviewComment,and this one too,,,,,,
89243766,1501,PullRequestReviewComment,"sry, I'm not famillar with unit testing. I'll make a fix.",,,,,,
85632377,1497,PullRequestReviewComment,Deployment is already aligned with API docs,,,,,,
85632392,1497,PullRequestReviewComment,Broken!!!,,,,,,
85762776,1497,PullRequestReviewComment,It's also still called `Collaborators` in here due to someone copy-pasting things. Could you update that?,,,,,,
85960189,1497,PullRequestReviewComment,Sure ;),,,,,,
89188491,1493,PullRequest,Fixes #1471,,,,,,
88665831,1492,PullRequest,"When I tried to add the Octokit.net Nuget package to any of my Xamarin.iOS projects (10.0.1.10), they wouldn't install because the package couldn't target the platform. Xamarin.iOS 10+ requires that the Unified Xamarin iOS APIs be used, which is why I expect the installation was failing.I've fixed the iOS projects in-place. This is probably not the best solution, because it means that the package will break things for anyone using Xamarin.iOS that is less than version 10. I don't presume to know how you want to structure your library around those changes. A better solution would probably be to have a new set of iOS projects that target Xamarin.iOS 10+ and leave the old monotouch projects as they are. But like I said, I won't presume to know how you want to deal with that.There were also many files that were referenced in the iOS projects, but that were missing from the repo altogether. I have updated the projects to omit these files.",,,,,,
88589595,1490,PullRequest,#1251 threw me for a loop for a bit.It turns out this API deals in `IssueEvent` not `Activity`.,,,,,,
88586550,1489,PullRequest,Adding missing Milestone fields as per #1358,,,,,,
88200857,1488,PullRequest,"Fixes #1143.Since 1.0 has not been reached yet, I made the fix minimal and as I think the method should have been originally, but there is a breaking change.If you want to mitigate the breaking change I propose three ways:1. `Content` contains base64 content. Breaking change on `Content.Get()`. Could add corresponding ctors with bool if convert to base64.2. Insert base class `Base64CreateFileRequest` with a virtual `Content` property wich contains base64 content. `CreateFileRequest` overrides it and provides decoded content.3. Add `SerializeIgnore` and `SerializeName` attributes, add first on `Content` and second on new property `Base64Content`. When set, `Content` convert value to base64 and set `Base64Content`.",,,,,,
82329221,1488,PullRequestReviewComment,how do we feel about this breaking change? Should we instead introduce overloads?,,,,,,
82408711,1488,PullRequestReviewComment,"Yeah, that's a very subtle breaking change. Probably best to use an overload.Someday I'd like to write a `Base64Content` type. :smile: rather than using strings for everything.",,,,,,
87696421,1485,PullRequest,"We changed all repositoryId parameters from `int` to `long` in #1445 and missed this one.The `ctor` on `PublicRepositoryRequest` takes a ""since"" parameter of type `int`.If anyone is passing in a `repository.Id` (now a `long`) into this `ctor` it will result in a compilation error.This PR adds a new `ctor` to PublicRepositoryRequest taking ""since"" parameter as a `long`, and obsoletes the old `ctor`.  I thought about simpl keeping the `int` `ctor` around indefinitely but I think in general we want to encourage/inform users that `repositoryId` (and any related uses, such as the ""Since"" parameter) are now `long` across the board, so I decided to start the process of removing the old `int` parameter via obsoletion.Also updated any tests that use the `ctor` to use the new one instead...",,,,,,
87658774,1484,PullRequest,Aiming to ship this **Thursday 6 October** AEST. Running through the test suite today/tomorrow.- [x] merge #1486- [x] merge #1485- [x] merge #1477- [x] release notes- [x] version bump- [x] integration tests all pass- [x] :thumbsup: from  or  on release notes - [x] tag and publish to NuGet- [x] :shipit:,,,,,,
2556617,1484,PullRequestReview,Looking good!,,,,,,
81587427,1484,PullRequestReviewComment,"Maybe this should say ""Added support to test whether a URL points to a GitHub Enterprise instance""",,,,,,
81588053,1484,PullRequestReviewComment,Wow. :scream:,,,,,,
87453377,1482,PullRequest,"""GitDatabase"" has been removed. Use ""Git"" instead.",,,,,,
87264077,1480,PullRequest,fix #1472Add support for the new Projects API,,,,,,
9452643,1480,PullRequestReview,"Actually one thing I did pickup - based on our established convention, the name of the properties used to access API clients, should be singular rather than plural",,,,,,
81324069,1480,PullRequestReviewComment,Looks like leading whitespace in the string?,,,,,,
88895229,1480,PullRequestReviewComment,Cards => Card,,,,,,
88895274,1480,PullRequestReviewComment,Columns => Column,,,,,,
88895303,1480,PullRequestReviewComment,Projects => Project,,,,,,
88895377,1480,PullRequestReviewComment,Projects => Project,,,,,,
88895415,1480,PullRequestReviewComment,Columns => Column,,,,,,
88895426,1480,PullRequestReviewComment,Cards => Card,,,,,,
87236719,1479,PullRequest,"Fixes #1474 Add `MergeMethod` property to `MergePullRequest` request objectAdded integration tests for Merge, Squash and Rebase optionsObsoleted previous `Squash` bool parameter - also tested that this property does still work if specified (and also that if the new MergeMethod property is specified, it overrides anything specified by the Squash boolean).  Therefore it is safe to leave this there for the time being, however marking it obsolete means we can remove it in a couple of releases",,,,,,
87223012,1477,PullRequest,"Fixes #1475 - [x] Add new options to Get Repository methods- [x] Poke API to figure out whether any of the GetAll (for Current, Public, For Organization, etc) methods return these new fields (despite API docs not mentioning it) and implement if so(confirmed no other methods like GetAllForCurrent, GetAllPublic, GetAllForOrg return the new fields even when accepts header is provided, so only the individual Get Repository call needs to be implemented)- [x] Add new options to Create Repository request- [x] Add new options to Edit Repository request- [x]  Waiting for github support to advise regarding Create Repository call still not appearing to support the new fields(support confirmed this was a documentation error and Create Repository call does not support these parameters)I've had to contact GitHub support as the new fields aren't actually being returned but I'm pretty sure everything is correct on my side...",,,,,,
87137773,1476,PullRequest,"I've started work on #1440 to investigate moving to [CAKE] for our build system.I've decided to go down the road of using their latest [`Cake.Frosting`] offering, which is essentially a .NET Core host/loader around the cake build framework.  This means we have full intellisense support of the build scripts AND the ability to debug the build scripts natively in Visual Studio!So far it is building the `Octokit.Next` and `Octokit.Next.Tests` projects and running the unit tests.  I'm also experimenting with using GitVersion to calculate version numbers with the ultimate goal of publishing alpha packages to nuget on each merged PR to master as well as still supporting the official releases off a release branchEverything lives under a `/build` sub directory.  To execute the build we simply `dotnet restore` and `dotnet run` in this directory.The interesting parts are `BuildContext` which is essentially our build settings, `BuildLifetime` where we populate our settings from commandline options or other builtin helpers.  Then in the `/build/Tasks/` directory is where the tasks are actually implementedIn order to run via AppVeyor/Travis we will need `.ps1/.sh` bootstrap scripts, similar to the approach of the existing FAKE implementationSo far I have the following tasks planned:- [x] Add Cake.Frosting build for Octokit.Next projects- [ ] Add README.md file to `/build` directory to provide some info about the build script- [x] Get running in AppVeyor- [ ] ~~Get running TravisCI~~- [ ] Get sourcelink replacement (GitLinkRunner) working- [ ] Play around with GitVersion settings some more- [x] Play around with nuget publishing- [x] Decide whether to tackle the legacy octokit projects or only have this for dotnet core projects- [ ] Get feedback from maintainers and contributors regarding the use of Cake and specifically Cake.Frosting",,,,,,
2082318,1476,PullRequestReview,"Overall looks nice and simple to me, although I have not tried using it yet.",,,,,,
81076251,1476,PullRequestReviewComment,In some places you kept the ()  when using object initialization syntax and others not,,,,,,
86647130,1473,PullRequest,"As discussed in #1470 this PR adds back the `SubscribersCount` property on `Repository` which is the number of ""watchers"".  This field was removed in the past however it does contain the correct value and would avoid additional API calls to the `WatchedClient` to retrieve this info.Also added some other fields that are missing in octokit.net such as `Size` and `HasPages`Fixes #1470",,,,,,
86082553,1469,PullRequest,"Hi,I noticed that the list all organizations  `GET /organizations` listed here [] was missing from the OrganizationClient. I did not find any issue related to this in the backlog.I added the implementation in the two client that i found (Base and Observable) with the documentation and added some unit tests.Let me know if i forgot something or if something need to be changed.",,,,,,
1943280,1469,PullRequestReview,"Hey -work thanks for making those changes, I think we are almost done!- Given the ""old"" `GetAll` method has been obsoleted/renamed to `GetAllForUser()` I think it makes sense to also obsolete/rename the `ApiUrls.Organizations()` to `ApiUrls.UserOrganizations()` while we're going through the obsoleting process.  This will aid in future consistency and remove confusion over the previous naming of these methods- Could you please add integration tests for your new methods so we can ensure they do work in the real world?  At a minimum you'd want to make the new call and assert a non null/empty list is returned.  Bonus points for a 2nd test which makes 2 calls using different ""since"" parameters and asserting that the lists returned are different!  This is similar to the integration tests we have for methods that paginate using `ApiOptions` where we call the method with differing page counts and assert the returned lists are different",,,,,,
79753397,1469,PullRequestReviewComment,Id like to steer away from these class level variables (that are only used in one place anyway) in favour of just returning the Urls in the helper method below,,,,,,
79753464,1469,PullRequestReviewComment,Extra text here from cut+paste :grinning:Returns the  that returns all of the organizations ~~for the currently logged in user~~,,,,,,
80925057,1469,PullRequestReviewComment,"Since this isn't actually using `ApiOptions` it should be named something else, perhaps `RequestsTheCorrectUrlWithRequestParameter`",,,,,,
84823507,1463,PullRequest,fix #1459 Fixed value of `Parameter` attribute. Added new integration test and refined unit tests.,,,,,,
84634894,1462,PullRequest,"First step of #1419.It looks like AppVeyor has the dotnet CLI installed in the image so no need to download it.  Also, that's really as simple as it gets. Maybe you wanted something more ... realistic.Made some comments in the F# code where I'm really not sure if that's The Way To Do Things.",,,,,,
78165944,1462,PullRequestReviewComment,maybe there's an easier way than `(fun p -> p)` to return the input parameter as is,,,,,,
78166035,1462,PullRequestReviewComment,"since `Fake.DotNetCli.Build` accepts a `seq`, I went this way, taking example on other tasks. I don't know if it's right to do it this way since there's no globbing involved",,,,,,
78682614,1462,PullRequestReviewComment,"Can we put the existing build steps in here, so they both run?",,,,,,
78682716,1462,PullRequestReviewComment,"Same thing here, let's keep the existing tasks around",,,,,,
84120818,1458,PullRequest,As per the normal process this PR removes any `[Obsolete]` items that have been obsolete for at least 2 releases- Remove previously obsoleted UsersClient.Keys property- Remove previously obsoleted IConnection.GetRedirect and IApiConnectio- Remove previously obsoleted IssueTypeQualifier.PR enum value- Remove previously obsoleted mis-spelled Language enum values- Remove previously obsoleted ObservableMiscellaneousClient ctor- Remove previously obsoleted CompareResult.MergedBaseCommit property- Remove previously obsoleted ApiUrls.Blob method,,,,,,
83756415,1457,PullRequest,fix #1447 Implement client for the new repository traffic api.,,,,,,
83588742,1456,PullRequest,This is my very first experience with F#.Feel free to point anything that could be done in an easier/cleaner/more efficient way.,,,,,,
83585151,1455,PullRequest,"This is my very first experience with F#, so feel free to point out what could be done in an easier/cleaner/more efficient way.",,,,,,
83516098,1454,PullRequest,#NAME?,,,,,,
77088238,1454,PullRequestReviewComment,A personal access token _is_ an OAuth token.How about we just say There are two options supported by the API - basic and OAuth (ex. personal access token) authentication.Then there's no need to add anything else.,,,,,,
83248434,1452,PullRequest,#NAME?,,,,,,
82544991,1450,PullRequest,Fixes #1449 Added new `base` property on `PullRequestUpdate`Updated existing `PullRequestClientTests.CanUpdate()` and `PullRequestClientTests.CanUpdateWithRepositoryId()` tests to change the base branch and assert the result,,,,,,
81474737,1448,PullRequest,"Make Collaborators, DiskUsage and PrivateGists properties nullable as they may be returned as null when fetching an organization of which the user is a member by not an owner.",,,,,,
81283497,1445,PullRequest,"Repository ids are global across github. On a completely noob assessment of the growth of the number of repositories over the last 6 months, if growth remains constant, we'll reach max int and overflow around September 2017. Since this is an identifier field, it should really be at least an `uint` (they can't be negative, can they?), but since we're already using a signed type, might as well go `long`.Thoughts, concerns, emojis?",,,,,,
81270604,1444,PullRequest,Aiming to ship this **Wednesday 31 August** AEST. Running through the test suite today/tomorrow.- [x] merge #1441- [x] merge #1450 - [x] merge #1452- [x] rebase this branch- [x] release notes (need to write up new obsoletions)- [x] version bump- [x] integration tests all pass- [x] :thumbsup: from  or  on release notes - [x] tag and publish to NuGet- [x] :shipit:,,,,,,
81117282,1443,PullRequest,fixes #1442Add the more granular methods for the new protected branch api. This branch is cloned from  to begin working before #1407 is merged.,,,,,,
74708350,1443,PullRequestReviewComment,// => ///,,,,,,
74708446,1443,PullRequestReviewComment,Uri string is not the right format here,,,,,,
74724541,1443,PullRequestReviewComment,:see_no_evil: :+1:,,,,,,
77419976,1443,PullRequestReviewComment,Method name doesnt match class name,,,,,,
77419992,1443,PullRequestReviewComment,Method name doesnt match class name,,,,,,
77420115,1443,PullRequestReviewComment,Method name doesnt match class name,,,,,,
77420126,1443,PullRequestReviewComment,Method name doesnt match class name,,,,,,
77420249,1443,PullRequestReviewComment,this context should be disposed when finished so could either put it in a `using ()` block or add it to the class variables like `_orgRepoContext` and add to the class'es `Dispose()` eventThis comment applies to several places where a `team2` is being created,,,,,,
77420319,1443,PullRequestReviewComment,Test name should be `AddsXXX` rather than `AddXXX`,,,,,,
77420337,1443,PullRequestReviewComment,Test name should be `AddsXXX` rather than `AddXXX`,,,,,,
77420527,1443,PullRequestReviewComment,"The branch protection team restrictions started off with 1 team in them, and this test (hopefully) change the protection to team2 instead.  but just asserting the count of team restrictions is 1 doesnt really prove that the update worked (what if it didnt work and the original team is the one that was returned?).  So perhaps assert on the team's name rather than just the count?",,,,,,
77420675,1443,PullRequestReviewComment,since you are accessing `restriction.Users.Count` anyway there isnt a need to assert that `restrictions` and `restrictions.Users` arent `null`.  The `Count` assert will fail if any of those were `null` anyway,,,,,,
77420731,1443,PullRequestReviewComment,=> `AddsXXX`,,,,,,
77420764,1443,PullRequestReviewComment,=> `AddsXXX`,,,,,,
77420842,1443,PullRequestReviewComment,"since these are status contexts can we not call them ""newMember"" but something like ""build2"" or ""deploy"" or whatever?",,,,,,
77420858,1443,PullRequestReviewComment,=> `AddsXXX`,,,,,,
77420868,1443,PullRequestReviewComment,=> `AddsXXX`,,,,,,
77420992,1443,PullRequestReviewComment,"How about making this method UPDATE the status checks to a different number of contexts than they started with.  eg there were 2 to start with, so make this test Update it to only 1.  Otherwise perhaps this method didnt do anyting and the count of 2 is juts the original 2 still there?  :grinning:",,,,,,
77620595,1443,PullRequestReviewComment,~~Edit~~ Replace,,,,,,
77620611,1443,PullRequestReviewComment,~~Edit~~ Replace,,,,,,
77620646,1443,PullRequestReviewComment,~~Edit~~ Replace,,,,,,
77620653,1443,PullRequestReviewComment,~~Edit~~ Replace,,,,,,
77620962,1443,PullRequestReviewComment,this context isnt being disposed,,,,,,
77620981,1443,PullRequestReviewComment,this context isnt being disposed,,,,,,
77620996,1443,PullRequestReviewComment,this context isnt being disposed,,,,,,
80737140,1441,PullRequest,"Closes #1407 The updates to Protected Branches preview API added a significant number of new endpoints allowing granularity in setting each segment of the branch protection settings separately.  For an MVP (Minimum Viable Product) approach, this PR implements only the top level methods, which will enable octokit.net users to manage all aspects of BranchProtection from that top level.  If there is need/desire, the other more granular methods can be added in separate PRsThis PR implements the following methods:- [x] RepositoryBranchesClient- [x] Unit Tests- [x] Integration Tests- [x] ObservableRepositoryBranchesClient- [x] Unit Tests for Observable client",,,,,,
74209587,1441,PullRequestReviewComment,XMLDocs for consistency?,,,,,,
74209621,1441,PullRequestReviewComment,Here too,,,,,,
74721165,1441,PullRequestReviewComment,Could we make this test assert the state of `master` and :fire: this comment?,,,,,,
74721211,1441,PullRequestReviewComment,Minor nit: the asserts below will cover whenever any of these values are `null`,,,,,,
74721828,1441,PullRequestReviewComment,:lipstick: break this out under a `` section,,,,,,
74723194,1441,PullRequestReviewComment,Could this `ctor` be made a bit friendlier by having an overload which doesn't require passing `new string[0]` ?,,,,,,
74750700,1441,PullRequestReviewComment,"The restrictions request object has a `string[]` for teams and a `string[]` for users so it didnt seem possible to offer a `ctor` that takes only teams and one that takes only users, since it's the same parameter signature for both.  Also a `null` isnt allowed, it must be an empty list.  I thought about letting users pass in `null` but then changing that to a `new string[]` but didn't like the idea of changing what the user sent in.  If you have any ideas, let me know?",,,,,,
76128567,1441,PullRequestReviewComment,"ive been thinking this over and I guess if we introduced our own `UsernameList` and `TeamNameList` classes that basically just wrapped `string[]` then we could provide suitable `ctors` that took only users, only teams or both.  Is it worth doing something like this?",,,,,,
80022820,1437,PullRequest,"In preparation for #1407 this PR creates a new ""Branches"" client as a child of ""Repositories"", inline with the GitHub API layout.  Existing branch related methods are moved under this client, with the old methods marked as `[Obsolete]` => `client.Repository.Branch.Get()` => `client.Repository.Branch.GetAll()` => `client.Repository.Branch.Edit()`Once this is merged, I will work on the new branch protection related methods for #1407",,,,,,
73795729,1437,PullRequestReviewComment,Unnecessary whitespace üòÄ,,,,,,
79866393,1435,PullRequest,Adding the Issue Timeline [API] client as it is now in preview (and we have a need for it for an internal project).- [x] Timeline API client- [x] Observable Timeline API client- [x] XML Doc comments- [x] Unit tests- [x] Observable unit tests- [x] Integration tests- [x] Observable integration tests- [x] Repository Id overloads- [x] Repository Id overload tests- [x] Paging support- [x] Paging support testsFixes #1436,,,,,,
73786789,1435,PullRequestReviewComment,Minor nitpick but the doc comments added in this PR have a mix of http and https on the URLs... üòâ,,,,,,
73792636,1435,PullRequestReviewComment,"That's very odd as I'm pretty sure I copied those from the API documentation...I'll fix it and check the docs if there might something pointing to just `http`.Ah, the original comment I copied from (in `IIssuesEventsClient)` has `http` instead of `https`...that'll teach me for blindly copy-pasting üòÑ",,,,,,
73808270,1435,PullRequestReviewComment,XmlDoc comment on this function,,,,,,
73808275,1435,PullRequestReviewComment,And here,,,,,,
73808507,1435,PullRequestReviewComment,Done,,,,,,
73808508,1435,PullRequestReviewComment,And done,,,,,,
79169391,1434,PullRequest,"![]I published up v0.21 today without realising I missed calling out some of the new work that  had contributed. This is the remedy for that (yes, it's not technically a bugfix release but it'll help me sleep at night).- [x] release notes- [x] bump version- [x] :thumbsup: on release notes- [x] :shipit:",,,,,,
72605091,1434,PullRequestReviewComment,an programming => a programming,,,,,,
72607209,1434,PullRequestReviewComment,"There are actually 4 (not 3) items that Reactions are supported for:  commit comments, issues, issue comments, pull request review comments",,,,,,
78579703,1432,PullRequest,- [x] release notes- [x] version bump- [x] update linqpad scripts to fix regressions- [x] integration tests all pass- [x] :thumbsup: from  or  - [x] tag and publish to NuGet- [x] :shipit:,,,,,,
72547592,1432,PullRequestReviewComment,"The `, but` here feels like the second clause contrasts with the first, but it really goes hand in hand with it. How about,""This method is no longer supported through the API and has been removed from Octokit.net."" or something like that?",,,,,,
78395944,1428,PullRequest,"Protected Branches Preview API has had pretty large scale (breaking) changes made (see #1407).  During the preview period both the new and old implementations are available but once preview period ends, support for the older implementation will be removed.I have started working on the new implementation, but incase that doesn't make the next release this PR will at the very least give some heads up to users of the first preview implementation, that it is not going to be supported by GitHub API at some point in the future",,,,,,
77731136,1423,PullRequest,"Fixes #1409 All ""ID""s were replaced to ""Id"" in comments.",,,,,,
77709028,1422,PullRequest,Our [current approach] to :fire:'ing deprecated items is to remove them a couple of releases after they've been marked `[Obsolete]`The following `[Obsolete]` items which were marked in v0.19 or earlier are removed by this PR:AuthorizationClient- RevokeAllApplicationAuthentications()RepositoriesClient- CommitStatus- RepoCollaborators- Commits- RepositoryCommentsGitHubClient- Release- Notification- GitDatabaseSshKey- SshKeysClient- SshKey- SshKeyInfo- SshKeyUpdateAlso adjusted/removed affected test classes,,,,,,
77578082,1421,PullRequest,"Fixes #1416 - [x] Add new HtmlUrl property on Page class- [x] Add new methods on clients- [x] Add new unit tests- [x] ~~Add new integration tests~~ No new integration tests were added, see #1263",,,,,,
71082692,1421,PullRequestReviewComment,We don't seem to be `await`-ing in these tests. Let's add those in or drop the outer `async`...,,,,,,
71083056,1421,PullRequestReviewComment,"Good point, I will remove `async` now.",,,,,,
77307874,1420,PullRequest,Fixes #1256 Updated `GitTag` Response class.Updated `TagsClient` Class with new Accept Header.Added Integration Test.,,,,,,
77042442,1418,PullRequest,"Fixes #1406I've kept the failing test around redirected repositories, but I'm not sure when the backend fix will land for the search APIs.cc , who found the fix originally",,,,,,
76279571,1415,PullRequest,"#### SummaryThis PR implements the Authorized Ssh Key management for GitHub Entperprise Management Console- [Retrieve Authorized Keys]- [Add Authorized Key]- [Remove Authorized Key]This continues to complete functionality for #1024 and builds on top of #1269 (which is pending feedback/help from some experts!)#### NotesNot as many curve balls as #1269 but a couple of points of note- The `Delete` method actually returns a response (list of remaining authorized keys) so this necessitated implementing `Delete()` methods on `IConnection` and `IApiConnection`- The GHE Management Console errors don't seem to conform with the normal GitHub ApiErrors as they just have a simple Json property ""error"" and then a string.  But this actually revealed an interesting issue with the Json deserializer where it always returns an instantiated object of the type requested, eventhough calling code (like the `ApiError` [deserialization attempt]) is checking for `null` and then falling back to providing the `string` payload as the error message.  So I made a tweak to the deserializer such that it only instantiates the object when at least one field has been found in the payload response.  This means if it completely fails to deserialize an object to the requested type (ie no fields matched) it now returns `null` (which is what calling code seemed to expect anyway)    Note: this causes a failed test which was written way back in #714.  Need to check with  if this is OK to be changed or not.  I have skipped it for the time being- I needed to fix the `UriExtensions.ApplyParameters()` function to work with non absolute Uris that already had query parameters present.  Without this fix the new+existing parameters are appended to the end of the url string which already included the existing parameters, causing an invalid Uri  - The integration test to add/delete authorized keys is currently failing, due to the redirect await deadlock currently being discussed in this issue #1396 and this PR #1411#### Task List- [x] Regular client implementation- [x] Regular client unit tests- [x] Regular client integration tests- [x] Observable client methods- [x] Observable client unit tests- [x] Observable client integration tests- [x] Tidy up XmlDocs- [ ] Wait for #1269 to be merged- [ ] Get ok from  regarding comments above",,,,,,
75603417,1415,PullRequestReviewComment,"can you shed any light on the behaviour this test is asserting?  It seems that when you added support for Organizatino/User ""type"" on Account, you made it nullable and then have this test here to prove that it's null when deserializing a json fragment that is not a user/org/account at all.Meanwhile in this PR I found that the deserializer instantiating the requested class even when the json had no matching fields seemed to go against what other parts of the code were expecting (linked in PR body) so i changed it to only instantiate class when it finds at least 1 expected field in the json, otherwise it returns a null object.  This test here is the only place (we have test coverage for at least) that seems to be impacted by this.",,,,,,
76275573,1414,PullRequest,"Fixes #1413 and `RepositoryLanguage` classes were missing the `ctor` and failing this test.  Technically they don't actually need it since they are not being deserialized from json, but populated from basic data types but in the interest of consistency and ease of testing I've added the `ctor` to these 2 classes",,,,,,
76235973,1411,PullRequest,fixed #1396 Put logic for redirects outside delegatinghandler in `HttpClientAdapter`.,,,,,,
69546605,1411,PullRequestReviewComment,this is comparing the same variable.  the old code was `newRequest` vs `request`,,,,,,
69546649,1411,PullRequestReviewComment,Is this intentional?  the old code was `newRequest` here rather than `request`,,,,,,
69546655,1411,PullRequestReviewComment,Is this intentional?  the old code was `newRequest` here rather than `request`,,,,,,
69546966,1411,PullRequestReviewComment,this method isnt really needed as it just `awaits` the call then returns the result without doing anything with it.I think you could just move the actual `await _http.SendAsync()` call to line #55 where `SendRequest()` is called currently,,,,,,
69548484,1411,PullRequestReviewComment,missing a `.ConfigureAwait(false)` here i think,,,,,,
72916112,1411,PullRequestReviewComment,I don't see this value being used anywhere (I suspect it also wasn't used before).,,,,,,
72916117,1411,PullRequestReviewComment,This override also doesn't seem necessary now.,,,,,,
72916300,1411,PullRequestReviewComment,:lipstick: let's :fire: these commented lines,,,,,,
75940144,1410,PullRequest,fixed #1399 add a new `RepositoryInvitationsClient` to invite a user to collaborate. I have to create some new overloads and classes. Todo- add unit and integration tests,,,,,,
69389636,1410,PullRequestReviewComment,"I think for consistency, this variable should be named `repositoryId`",,,,,,
69389649,1410,PullRequestReviewComment,"this should be named as per the method being tested, eg `TheInviteMethod`",,,,,,
69389681,1410,PullRequestReviewComment,should probably have a unit test for when `InvitiationUpdate` parameter is `null`,,,,,,
69389699,1410,PullRequestReviewComment,how about when the `user` parameter is empty string?,,,,,,
69389718,1410,PullRequestReviewComment,Add case for `whitespace` being passed as `user`,,,,,,
69389733,1410,PullRequestReviewComment,copy and paste issue?  Assumedly this should be named `CallsInviteOnRegularDeploymentsClient`,,,,,,
69389742,1410,PullRequestReviewComment,Incorrect return type for this function,,,,,,
69389828,1410,PullRequestReviewComment,There is already a `RepositoryPermissions` enum that should be used for these values,,,,,,
69389977,1410,PullRequestReviewComment,"According to the API docs, this function should actually take a request object stating the `permissions` for the user to  have.  This is missing from the `Add()` method which you would have copied for the `Invite()` method (an issue #1101 is raised for that but hasn't been fixed yet).  But we may as well at least include the `permissions` request on this PR for the `Invite()` method",,,,,,
69389999,1410,PullRequestReviewComment,"~~I made a previous comment that the `permissions` are actually provided on the initial `Invite()` as well as on this update (and infact will also be added to the `Add()` method on the collaborators client, when #1101 is fixed), so this class could probably be re-used for all cases.  This means it should be renamed to something like `CollaboratorRequest` rather than `InvitationUpdate`~~",,,,,,
69393462,1410,PullRequestReviewComment,"That's right. But the `RepositoryPermission` enum uses `admin, push, pull` and we need `admin, write, read`. So because of that i created a new enum",,,,,,
69404629,1410,PullRequestReviewComment,"Ah indeed you are right :grinning: the List Invite and Edit Invite calls do have this admin/write/read options.  But the Add and Invite methods need the Admin/Push/Pull.  So i guess you should keep what you have here and use them for List and Edit...  but additionally you should add a `CollaboratorRequest` class that uses the `RepositoryPermission` enum for it's `permissions` attribute, and use that on the `Invite()` method (and Add() method for when we do #1101)",,,,,,
69404952,1410,PullRequestReviewComment,Missed a rename here (`id` => `repositoryId`),,,,,,
69440931,1410,PullRequestReviewComment,remove `` line as it's empty anyway,,,,,,
69441058,1410,PullRequestReviewComment,"remove `` line as it's incorrect (should be `Observable` not `IReadOnlyList`) but also it's not adding any value to simply say what the return type is, so just :fire: the whole line",,,,,,
69441090,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441131,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441208,1410,PullRequestReviewComment,"typo""o~~t~~f the repository""Actually looks like this is in 8 different places - i wont mark them all but please fix all",,,,,,
69441436,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441461,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441485,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441491,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441502,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441524,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441563,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441578,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441588,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441602,1410,PullRequestReviewComment,:fire: `` line,,,,,,
69441659,1410,PullRequestReviewComment,"This should probably say ""for a single repository invitation""",,,,,,
69441707,1410,PullRequestReviewComment,"""for a single invitation of the current user""",,,,,,
69442302,1410,PullRequestReviewComment,"I'm actually wondering whether we should just be using the existing `RepositoryPermissionRequest` request class for this (currently used in `TeamsClient.AddRepository()`).  Not sure what  thinks about re-using a request model in different clients (eg TeamsClient and RepoCollaboratorsClient) vs keeping them separate, incase they ever diverge",,,,,,
69446762,1410,PullRequestReviewComment,"This test always fails because context is trying to delete this repo and you cannot delete a repo until there is a pending invitation. And yes, it still not sending any email. Next question is, how should i write integration tests for invitations. Is there any test client where user can send invitations to?",,,,,,
69529592,1410,PullRequestReviewComment,you cannot delete a repo until there is a pending invitationDid you mean cannot delete **when** there is a pending invite?  If so then I guess you could `Delete` the invitation at the end of the test (before the context goes out of scope and deletes the repo)?Im not sure about why the email is not received.  I will try some invites myself when I can...  Does the account you are inviting have an email configured and verified and perhaps also check it's notification settings?,,,,,,
69532655,1410,PullRequestReviewComment,youre right. **When** there is a pending invite. Ok. Then i use my `lrz-hal` account.,,,,,,
69533811,1410,PullRequestReviewComment,"there is some problem with deleting the invitationThe problem is when `fixture.invite` is calling, in the same moment `context` is trying to delete the repo. So i cannot delete the invitation, because i don't reach that call!!??",,,,,,
69536627,1410,PullRequestReviewComment,of `RepositoryContext` is calling too early.,,,,,,
69543080,1410,PullRequestReviewComment,"Are you sure an exception isnt happening in the fixture.Invite() method?  When an exception is thrown, that will cause the `using (var context) { }` to go out of scope and then if you are debugging you WILL see it doint the disposal/deletion.  But I'd say the true problem is your `fixture.Invite()` has thrown an exception",,,,,,
69547595,1410,PullRequestReviewComment,It breakes [here] with `RepositoryInvitation` :sweat: But it tells me not why. Is there someting wrong with `RepositoryInvitation`?,,,,,,
69558986,1410,PullRequestReviewComment,"Ah right!  The deserializer creates a ""constructor cache"" of all the constructors for the response objects, which it uses to instantiate the class, then it uses the protected setter properties to populate any fields it finds in the json payload, on the object it created.But it can't use constructors that take parameters so all model classes actually require a parameterless constructor, which we have missed on the `RepositoryInvitation` class!We should probably have a convention test that catches this... I've raised an issue for it (#1413) and submitted a fix (#1414)",,,,,,
69563948,1410,PullRequestReviewComment,:tada: That's awesome!! So then my comment  you cannot delete a repo until there is a pending invitationis wrong. It deletes the repo and the invitation.,,,,,,
69564849,1410,PullRequestReviewComment,"for consistency with all the other response class ctors, can you put this on a single line?",,,,,,
70056670,1410,PullRequestReviewComment,I think there is just this comment to fix up still,,,,,,
70058421,1410,PullRequestReviewComment,Im not sure if we should have a parameterless constructor and a default value of Push here... let's :fire: this and just leave the constructor that forces the user to state explictly what permission they want the invitee to have,,,,,,
70058743,1410,PullRequestReviewComment,In the [api] the default value is push. So i thought it would be correct.,,,,,,
70058818,1410,PullRequestReviewComment,"Since this is a request object, we should put some XmlDoc on this constructor, to give the users intellisense.  Check out `RepositoryPermissionRequest` for an example",,,,,,
70058841,1410,PullRequestReviewComment,"Since this is a request object, we should put some XmlDoc on this field.  Check out `RepositoryPermissionRequest` for an example",,,,,,
70059200,1410,PullRequestReviewComment,"I guess the API default only really applies if we dont pass the field at all?I dont really have a problem with having to explicitly specify the permission when constructing the object, but if you feel strongly enough about it feel free to keep the default constructor, just make sure to add an XmlDoc comment to state that it defaults to Push access",,,,,,
70060092,1410,PullRequestReviewComment,"Ah. That's right. Failure of mine. So if i understand it correct, i we don't set the `CollaboratorRequest` the api sets `push` as the default value. Right?",,,,,,
70060510,1410,PullRequestReviewComment,So then we should have two overloads for `Add` and `Invite` in `RepoCollaboratorsClient`!? Because the docs say `Only valid on organization-owned repositories.`,,,,,,
70060522,1410,PullRequestReviewComment,"Ah. That's right. Failure of mine. So if i understand it correct, i we don't set the CollaboratorRequest the api sets push as the default value. Right?I think so.  but from a consistency point of view we dont do optional parameters that much.  I think in this case it's ok to always pass the request object and only have the `ctor` to explicitly state the permission required.  Nothing wrong with being explicit, particularly when its something like granting access to someone",,,,,,
70061264,1410,PullRequestReviewComment,"So then we should have two overloads for Add and Invite in RepoCollaboratorsClient!? Because the docs say Only valid on organization-owned repositories.I missed that in the docs.  Im confused whether it is saying the ""permissions"" attribute is only applicable to org repositories, or the whole ""Add collaborator"" endpoint.",,,,,,
70176268,1410,PullRequestReviewComment,"For consistency with other simliar clients/endpoints, this should be rather than catching any type of exception",,,,,,
70176272,1410,PullRequestReviewComment,"For consistency with other simliar clients/endpoints, this should be rather than catching any type of exception",,,,,,
70176273,1410,PullRequestReviewComment,"For consistency with other simliar clients/endpoints, this should be rather than catching any type of exception",,,,,,
70176299,1410,PullRequestReviewComment,"For consistency with other simliar clients/endpoints, this should be rather than catching any type of exception",,,,,,
70360765,1410,PullRequestReviewComment,Can we :fire: this commented-out code?,,,,,,
70361209,1410,PullRequestReviewComment,"I think my philosophy here is trending towards ""keep them separate"", so this is fine...",,,,,,
70399796,1410,PullRequestReviewComment,This is still WIP. I actually don't know how to implement integration tests for Repository Invitations because i need two contexts. One for sending the invitation and one for accept and decline the invitation. Any ideas?,,,,,,
70492027,1410,PullRequestReviewComment,"Cool, I'll update the PR title so I know - please remove it when you're ready to go around again...",,,,,,
70661699,1410,PullRequestReviewComment,"Any ideas?I'm happy to punt on the receiving end of the repository invitation and leave an open issue to track that, because we don't really have the infrastructure right now to support multiple accounts...",,,,,,
74907748,1405,PullRequest,"fixed #1296 fixed #1297 fixed #1298 Add reactions into payloads for issue, commit comment and review payloads.",,,,,,
68219072,1405,PullRequestReviewComment,"You can simplify `Arg.Is s == ""application/vnd.github.squirrel-girl-preview"")` to just `""application/vnd.github.squirrel-girl-preview""`",,,,,,
68219656,1405,PullRequestReviewComment,"From a consistency perspective, can we not declare this class level subclient, and just use `_github.Reaction.Create()` etc where requried?  Simply because we dont have class levels for any other subclients in the test so we shouldnt add one now",,,,,,
68219933,1405,PullRequestReviewComment,Same for `PullRequest`,,,,,,
68220068,1405,PullRequestReviewComment,"Given we had issues with the Plus1 and Minus1 on the other reactions stuff, It'd be good to ensure our integration test covers deserializing all reaction summary fields.How had would it be to have a unique value for each of the reactions, eg 5x Plus1's, 4x Minus1's, 3x Hooray, 2x Heart, 1x Laugh, 0x Confused ?",,,,,,
68220389,1405,PullRequestReviewComment,That i have proposed in an old comment in `Stand-Alone-Reaction-Client` but it was rejected because of not necessary :neutral_face:,,,,,,
68223004,1405,PullRequestReviewComment,Something like this ?,,,,,,
68227163,1405,PullRequestReviewComment,I mean have that number of each reaction on an issue then the integration test can retrieve that issue and check each one is desetialzed properly by asserting the unique number,,,,,,
68258647,1405,PullRequestReviewComment,Can you give me an example. I think I have a Blackout :dizzy_face:,,,,,,
68321123,1405,PullRequestReviewComment,"i meant that we would setup an issue comment somewhere on github that has 5 users react with "":confused:"" and 4 users react with "":heart:"" and 3 users react with "":+1:"" etc, then the integration test would check each of these.But it was just a thought and it's not a particularly good one because it cant be setup in code easily (as you would need up to 5 individual test users to be able to create the reactions) and even setting one up manually involves co-ordination of multiple people and is then also able to start failing if any other user ever added an unwanted reaction to it!So let's just settle for the integration test- creating a repository/issue/comment (you are already doing this)- adding 1 reaction of each type to it (currently you only add 1 reactoin type, so we dont know if we are failing to deserialize any of the other fields in the reaction summary part of the payload)- assert each reaction in the response payload had a count of 1 and total had a count of 6at least that tests all fields deserialized ok",,,,,,
68358674,1405,PullRequestReviewComment,Ok. Then i would implement loops like in #1402 for reaction types.,,,,,,
69838722,1405,PullRequestReviewComment,"The reactions created above are one-per-issue. So we only expect `1` here, not 4. Or perhaps we can simplify the test?",,,,,,
69839055,1405,PullRequestReviewComment,"Similarly, if we're reacting to the most recently updated issue we'd need to look for the `Laugh` reaction here.",,,,,,
69844703,1405,PullRequestReviewComment,"We actually had a problem with the merged PR for `IssueComment` reactions, where the `Plus1` and `Minus1` reaction types were broken, so we decided to change the integration tests to cover every reaction type using `foreach` loops.But it looks like we only did integration tests for the single item `Get()` requests, and didnt actually think about the `GetAll()` multiple item calls for all payload types, maybe just this one since it already had a ""multiple issues"" test.How about we remove the reactions from this test, but add new test for `CanGetReactionPayloadForMultipleItemss)` test to all of the payload types.  And also write that test in a more efficient way, ie using the same looping that the single tests use?  The test code that creates an item and adds all reactions to it, could be pulled out into a CreateXWithReactions() function and then called once for the single test and multiple times for the multiple tests etc",,,,,,
69846236,1405,PullRequestReviewComment,"Somewhat related - we have other tests here which use this repository, but this repository doesn't seem to exist any more cc",,,,,,
74681843,1404,PullRequest,"Based on code we use in GitHub Desktop for Windows.This is take two of #1097. In this iteration, we don't check for the following header `Server: GitHub.com` because a reverse proxy could rewrite it.Instead, we only check for the header `X-GitHub-Request-Id` to know that it's a GitHub server.",,,,,,
69389078,1404,PullRequestReviewComment,"Can we add an overload that doesn't take the `httpClient` and instead defaults it to `new HttpClientAdapter(HttpMessageHandlerFactory.CreateDefault)`  ?This is consistent with the way most normal users would be using octokit, e.g they dont really have any idea about `IHttpClient` or the fact that a default one can be created using the `HttpMessageHandlerFactory`.  And yes I do acknowledge the documentation example does show how to use the handler factory, but I think it would be more inline with the overloads on `GitHubClient` (well, really it's the `Connection` class) to not have to specify it for regular use",,,,,,
74645721,1402,PullRequest,On my work on reactions payload i have found that `ParameterAttribute` for enum values are not be serialized. For example is always serialized to `{content: plus1}`. So i always get an error from api.github.com because it expected `{content: +1}`You can test this behavior in Integrationtest `CommitCommentReactionsClientTests` `CanCreateReaction` if you set `ReactionType.Plus1`,,,,,,
68162884,1402,PullRequestReviewComment,"Although I definitely want integration tests to try every enum value, I dont think we need to be this verbose (plus in the future if more reactions are added, we'd need to remember to add them to this test).So what about something like this instead?  It loops through all values of the enumeration and tests each one:",,,,,,
68181311,1402,PullRequestReviewComment,That's great!,,,,,,
68220332,1402,PullRequestReviewComment,"Would be good for  or  to comment on whether they're happy with this change to deserializer.  Is this the most elegant way of doing this and would there be any concerns around performance?  Just wondering, since it's looping for every value of every enum and checking for custom attribute, when the majority of enums/values dont have one.",,,,,,
68271083,1402,PullRequestReviewComment,Maybe we should use hardcoded strings. Because i have no idea how we can deserialize enum properly without to loop trough all the enum values and check if it has an attribute or not.,,,,,,
68273517,1402,PullRequestReviewComment,Or we create a customAttribute class `DeserializeProperlyAttribute` for example. And then,,,,,,
68319692,1402,PullRequestReviewComment,"yeah im not saying there is a better way of doing it or that it does/doesn't have performance impacts, just asking the question and looking for more opinions.  Im not a an of hardcoded strings or a new attribute, if anything had to be done, I would probably do similar to how the serializer pre-caches all the constructors of the model objects, and do some sort of pre-cache of enum items and their value (custom or default), then it would be a quick look up of that list here in the deserializer.  It may not even be necessary though, which is why i refer to",,,,,,
68348879,1402,PullRequestReviewComment,It's very unlikely that an enum is going to have a huge number of elements. And we only need to iterate once and cache the result. An enum change would require recompilation. So I'm happy with ENUMeration. :stuck_out_tongue:,,,,,,
68349072,1402,PullRequestReviewComment,"We should cache the result of this in a dictionary of dictionaries (probably `Dictionary`.) That way, the next time we try to serialize an enum value, we don't have to do this iteration. It'll be a very fast lookup.",,,,,,
68354100,1402,PullRequestReviewComment,"cool so to paraphrase/clarify you are saying we dont need to upfront cache everything, but we may as well keep a running cache of anything we've already evaluated so we dont have to do it more than once?",,,,,,
68475097,1402,PullRequestReviewComment,Yup!,,,,,,
68475193,1402,PullRequestReviewComment,This could be declared `readonly`,,,,,,
68476630,1402,PullRequestReviewComment,This fallback block is the same as the one earlier (line 106). Maybe restructure this so there's no duplication here.,,,,,,
68487713,1402,PullRequestReviewComment,"yeah I would probably suggest a tidy up that when you loop through each value of the enum you are only storing those with the [Parameter] attribute in the dictionary, you may as well store those that dont have the attribute (using the fallback code) here too.  That way you can just have an approach similar to this (pseudocode)and if the `add it to cache` code is too lengthy, that could possibly be split out into a separate helper function in the class `AddTypeToEnumParameterCache()` or whatever :+1:",,,,,,
68711927,1402,PullRequestReviewComment,"I've ended with Because we need to store the value that comes from the api like `blob` or `open` and not the name of the enum field `Blob`, `Open`. If we store the name of the field we every time have to parse between these two values. Please correct me if i'm wrong.",,,,,,
69215068,1402,PullRequestReviewComment,So one point of confusion is that the bug states the bug is in serialization. But this is changing deserialization code. Could you add some tests to `SimpleJsonSerializerTests.cs` that demonstrate the problem and are fixed by this code?,,,,,,
69215608,1402,PullRequestReviewComment,Nevermind. I see that you fixed both directions. I wrote some tests I'll add.,,,,,,
74409466,1401,PullRequest,Resolves #1255.A `Verification` object inside `GitHubCommit.Commit`.To-do:- [x] Models- [x] Tests- [x] Integration tests,,,,,,
67689502,1401,PullRequestReviewComment,looks like a tab/whitespace issue here (and in other places),,,,,,
67689765,1401,PullRequestReviewComment,"Also, we don't want to use implementation logic as part of the test, so rather than using the `AcceptHeaders` helper, can you hardcode the expected header in the tests?",,,,,,
74307550,1398,PullRequest,"Fixes #1254  Hi    could you plz review this code :smiley: Regarding Integration test i am little confused where should i put this method, is it fine here in `CommitsClientTests` ? And what do you think of this integration test, right now this test is passing on repository which is of my test account. Is it fine here to hard code(string literals) repository parameter? Your feedback on this is much needed so that we can make improvement to this.",,,,,,
67582601,1398,PullRequestReviewComment,:lipstick: reorder these so `System.*` is before the rest...,,,,,,
67582614,1398,PullRequestReviewComment,:lipstick: ordering,,,,,,
67583270,1398,PullRequestReviewComment,ok...,,,,,,
67583689,1398,PullRequestReviewComment,:lipstick: why not compare both enums here?,,,,,,
67583747,1398,PullRequestReviewComment,Would it be worth renaming this repository to make it's purpose more clear?,,,,,,
67690254,1398,PullRequestReviewComment,Maybe name this `SignatureVerificationPreview` just for consistency with all the other preview headers?,,,,,,
67690339,1398,PullRequestReviewComment,Extra whitespace line here,,,,,,
67690506,1398,PullRequestReviewComment,Is `Reason` perhaps too generic here?,,,,,,
67696130,1398,PullRequestReviewComment,right. fixing this. :+1:,,,,,,
68501572,1398,PullRequestReviewComment,There's a coding convention here that I guess needs to be documented properly. Despite these files living in `Octokit/Models/Responses` the corresponding namespace for these is just `Octokit`. This means new `using` statements are unnecessary for consumers (and for this PR).,,,,,,
68501579,1398,PullRequestReviewComment,This shouldn't be necessary when the namespace is updated as per the other comment below...,,,,,,
68501621,1398,PullRequestReviewComment,"As mentioned elsewhere, this should be unnecessary after renaming the namespace...",,,,,,
74238470,1397,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoriesClient to get access by repository id.- [x] **Add overloads to IRepositoriesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoriesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.",,,,,,
68487743,1397,PullRequestReviewComment,Nice pickup :+1:,,,,,,
68487753,1397,PullRequestReviewComment,"oh dear is this another place we missed passnig the `ApiOptions` through, on the previous changes?  nice pickup",,,,,,
68514092,1397,PullRequestReviewComment,whoops - great pickup !,,,,,,
74121049,1395,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)PullRequestReviewCommentsClient to get access by repository id.- [x] **Add overloads to IPullRequestReviewCommentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservablePullRequestReviewCommentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.",,,,,,
74075859,1394,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)PullRequestsClient to get access by repository id.- [x] **Add overloads to IPullRequestsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservablePullRequestsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.",,,,,,
74067802,1393,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)IssuesLabelsClient to get access by repository id.- [x] **Add overloads to IIssuesLabelsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableIssuesLabelsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.",,,,,,
74055480,1392,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)MilestonesClient to get access by repository id.- [x] **Add overloads to IMilestonesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableMilestonesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.",,,,,,
74047303,1391,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)ReferencesClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IReferencesClient and IObservableReferencesClient).**      There is some divergence between XML documentation of methods in IReferencesClient and IObservableReferencesClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IReferencesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableReferencesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.",,,,,,
74037605,1390,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)NotificationsClient to get access by repository id.- [x] **Add overloads to INotificationsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableNotificationsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] ~~**Add integration tests.**~~      I've skipped this item becuase of #1333",,,,,,
74032664,1389,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)StarredClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IStarredClient and IObservableStarredClient).**      There is some divergence between XML documentation of methods in IStarredClient and IObservableStarredClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IStarredClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableStarredClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.",,,,,,
68488483,1389,PullRequestReviewComment,Is this required?  I had a look at most `RequestsCorrectUrl()` tests and they aren't `async Task<>` they are just `void`,,,,,,
68494703,1389,PullRequestReviewComment,Actually it looks like there is inconsistency in the code base with both `async` and regular examples... but im interested whether you were trying to standardise to always being `async` or whether you actually had a failing test here?,,,,,,
68514220,1389,PullRequestReviewComment,"While it's technically correct to `await` in these tests, I've not seen this affect the test behaviour - as we're interested in what was invoked, rather than the result returned. Although, saying it out loud like that makes me feel like we're just asking for some neat race condition to come along and cause us issues...",,,,,,
68658452,1389,PullRequestReviewComment,"Yes, I tried to standardise all tests to use `async` and there is no failed tests without `async Task` return type. I've just tried be consiistent in sense that awaitable methods have to be called with usage of `await` keyword. I don't understood your last sentence, do you mean that this change from `void` to `async Task` is going to produce some troubles with multithreading?",,,,,,
68668444,1389,PullRequestReviewComment,"he is saying that using `await` is the ""correct"" way, and we may just be lucky that we havent seen a timing issue when not using `await`",,,,,,
68670055,1389,PullRequestReviewComment,"Oh, yeah! Thank you  üëç  So, there are no any issues with it because we don't use return results for any purposes üëç",,,,,,
73905176,1387,PullRequest,"_This PR created instead of #1305 (I've renamed branch :smile: )_As part of my work on #1120 I've added new overloads on I(Observable)RepoCollaboratorsClient to get access by repository id.- [x] **Rename parameter ""repo"" to ""name"" (in order to deliver more consistency into the codebase).**     I've found out that there is the pair (owner, name) is used to identify repository. But some clients use pair (owner, repo) and it's some type of inconsistency.    So I've decided to fix these cases during my work on #1120.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepoCollaboratorsClient and IObservableRepoCollaboratorsClient).**      There is some divergence between XML documentation of methods in IRepoCollaboratorsClient and IObservableRepoCollaboratorsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepoCollaboratorsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepoCollaboratorsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73898972,1385,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)PullRequestReviewCommentReactionsClient  to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IPullRequestReviewCommentReactionsClient  and IObservablePullRequestReviewCommentReactionsClient ).**      There is some divergence between XML documentation of methods in IPullRequestReviewCommentReactionsClient  and IObservablePullRequestReviewCommentReactionsClient . So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IPullRequestReviewCommentReactionsClient .**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservablePullRequestReviewCommentReactionsClient .**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  I've deleted class ObservablePullRequestReviewCommentReactionsClient Tests beacuse it is useless. All test cases are covered in non-reactive PullRequestReviewCommentReactionsClient Tests class./cc ,",,,,,,
73891010,1384,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)IssueReactionsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IIssueReactionsClient and IObservableIssueReactionsClient).**      There is some divergence between XML documentation of methods in IIssueReactionsClient and IObservableIssueReactionsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IIssueReactionsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableIssueReactionsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  I've deleted class ObservableIssueReactionsClientTests beacuse it is useless. All test cases are covered in non-reactive IssueReactionsClientTests class./cc ,",,,,,,
73882400,1383,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)IssueCommentReactionsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IIssueCommentReactionsClient and IObservableIssueCommentReactionsClient).**      There is some divergence between XML documentation of methods in IIssueCommentReactionsClient and IObservableIssueCommentReactionsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IIssueCommentReactionsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableIssueCommentReactionsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  I've deleted class ObservableIssueCommentReactionsClientTests beacuse it is useless. All test cases are covered in non-reactive IssueCommentReactionsClientTests class./cc ,",,,,,,
73876007,1382,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)CommitCommentReactionsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of ICommitCommentReactionsClient and IObservableCommitCommentReactionsClient).**      There is some divergence between XML documentation of methods in ICommitCommentReactionsClient and IObservableCommitCommentReactionsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to ICommitCommentReactionsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableCommitCommentReactionsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  I've deleted class ObservableCommitCommentReactionsClientTests beacuse it is useless. All test cases are covered in non-reactive CommitCommentReactionsClientTests class./cc ,",,,,,,
73730101,1380,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)IssuesClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IIssuesClient and IObservableIssuesClient).**      There is some divergence between XML documentation of methods in IIssuesClient and IObservableIssuesClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IIssuesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableIssuesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  I've deleted class ObservableIssuesClientTests beacuse it is useless. All test cases are covered in non-reactive IssuesClientTests class./cc ,",,,,,,
73714069,1379,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)IssueCommentsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IIssueCommentsClient and IObservableIssueCommentsClient).**      There is some divergence between XML documentation of methods in IIssueCommentsClient and IObservableIssueCommentsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IIssueCommentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableIssueCommentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  I've deleted class ObservableIssueCommentsClientTests beacuse it is useless. All test cases are covered in non-reactive IssueCommentsClientTests class./cc ,",,,,,,
69666355,1379,PullRequestReviewComment,Can we revert this namespace addition to simplify the diff?,,,,,,
69668259,1379,PullRequestReviewComment,I think you need to bring back the custom `Accept` header here to get that test passing...,,,,,,
69668398,1379,PullRequestReviewComment,Is there a reason why we've removed this file?,,,,,,
69806137,1379,PullRequestReviewComment,"I've removed this file because it is fully similar to non-reactive implementation. and usually we have integration tests for non-reactive clients, because reactive ones use non-reactive clients internally.If it not sounds reasonable I going to revert it back :+1:",,,,,,
73684313,1378,PullRequest,This should make the usage of `ApiOptions` a bit clearer...,,,,,,
73664206,1377,PullRequest,- [x] release notes- [x] version bump- [x] integration tests all pass- [x] :thumbsup: from  or  - [x] tag and publish to NuGet- [x] :shipit:,,,,,,
66908396,1377,PullRequestReviewComment,"Each test creates the same five hooks, so we need to verify the count of the list to be `N-1`",,,,,,
66908419,1377,PullRequestReviewComment,"This property is unrelated to the test itself, so cleaning it up...",,,,,,
66908609,1377,PullRequestReviewComment,This branch was removed on the repository :cry:,,,,,,
66908633,1377,PullRequestReviewComment,‚¨ÜÔ∏è,,,,,,
66908672,1377,PullRequestReviewComment,"Not really needed, but I found this while looking into #1374 / #1251",,,,,,
66914786,1377,PullRequestReviewComment,üí© sorry! üòá,,,,,,
66919996,1377,PullRequestReviewComment,"all good, once I realised what was happening it was an easy fix üòÄ",,,,,,
67024213,1377,PullRequestReviewComment,"""has been added"" is passive voice and kind of redundant. How about Pagination  support lets  you control how much ...",,,,,,
67024480,1377,PullRequestReviewComment,"Ah, after looking down, I see that ""Pagination Support"" is being called out in a special manner and isn't in the bulleted list. Maybe we should call out why. For example: The big focus of this release is pagination support. Pagination support lets you control...",,,,,,
73662849,1376,PullRequest,"Travis is currently in an interesting spot where `latest` means it'll use Mono **4.4.0** when building and testing on OS X, and **4.2.3** when building and testing on Linux.Unfortunately this means the OS X builds are exhibiting some strange behaviour:- a [wall of Chinese text] in the `BuildMono` step- `* Assertion at metadata.c:3643, condition 'ptr' not met` when running the PCL testsExample build output: I found the flag to force a specific version of Mono for both platforms, and that seems to do the trick here.     I think you're all encountering this on your PRs, feel free to merge `master` or cherry-pick this commit into your branch after I confirm this resolves the issue.",,,,,,
73605578,1375,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)EventsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IEventsClient and IObservableEventsClient).**      There is some divergence between XML documentation of methods in IEventsClient and IObservableEventsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IEventsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableEventsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found bug in deserialization, see #1374 for details. I skipped failed new integration tests because of this./cc ,",,,,,,
73556748,1373,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)IssuesEventsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IIssuesEventsClient and IObservableIssuesEventsClient).**      There is some divergence between XML documentation of methods in IIssuesEventsClient and IObservableIssuesEventsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IIssuesEventsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableIssuesEventsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
68700219,1373,PullRequestReviewComment,Let's :fire: these empty `` elements,,,,,,
68924889,1373,PullRequestReviewComment,"I won't say remove this, but let's `await Task.Delay(1000);` here so I don't feel so bad about merging this üòÅ",,,,,,
68924971,1373,PullRequestReviewComment,here,,,,,,
68925004,1373,PullRequestReviewComment,Convert to `await`,,,,,,
68925025,1373,PullRequestReviewComment,and `await` here,,,,,,
68925044,1373,PullRequestReviewComment,here,,,,,,
68926616,1373,PullRequestReviewComment,This one is another `ID` versus `id` thing. I'm not sure which one is better (or more correct).  feels?,,,,,,
69034666,1373,PullRequestReviewComment,"Anyway, I've definitely used the same pattern for all RepositoryId PRs (ID in upper case) and if you decide to change a case of ID it would be pretty easy to do as one action in further PR, after all repositoryId ones will be merged :+1:",,,,,,
69054358,1373,PullRequestReviewComment,Good point. Let's come back to it.,,,,,,
69217910,1373,PullRequestReviewComment,"We've always followed the [.NET Framework Design Guidelines for capitalization].  The two abbreviations that can be used in identifiers are ID and OK. **In Pascal-cased identifiers they should appear as `Id`, and `Ok`**. If used as the first word in a camel-cased identifier, they should appear as id and ok, respectively.So I think it should be `Id`.",,,,,,
73548557,1372,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)WatchedClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IWatchedClient and IObservableWatchedClient).**      There is some divergence between XML documentation of methods in IWatchedClient and IObservableWatchedClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IWatchedClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableWatchedClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
68097201,1372,PullRequestReviewComment,"Why are we removing the return description? If that's a direction we want to take, might as well remove the entire `/// ` line.",,,,,,
68178503,1372,PullRequestReviewComment,"We've discussed this [here] with . And yep, I'll remove `/// ` in next commits when other things will be reviewed :+1:",,,,,,
73526547,1371,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)StatisticsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IStatisticsClient and IObservableStatisticsClient).**      There is some divergence between XML documentation of methods in IStatisticsClient and IObservableStatisticsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IStatisticsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableStatisticsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73501847,1370,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)ReleasesClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IReleasesClient and IObservableReleasesClient).**      There is some divergence between XML documentation of methods in IReleasesClient and IObservableReleasesClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IReleasesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableReleasesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
68494520,1370,PullRequestReviewComment,"if this is changed to 1 here, should it also be changed in the existing owner/name test? `ReturnsCorrectCountOfReleasesWithStart()`",,,,,,
68495051,1370,PullRequestReviewComment,"hmmm confusing, it says this is an outdated diff but i cant see where it was changed back :confused:",,,,,,
68495210,1370,PullRequestReviewComment,"Ah here it is!  This is set to `StartPage = 1` here, but in the non repository Id test it is `2`.  It would be good to have these consistent (eventhough it doesnt really affect the result)",,,,,,
68663533,1370,PullRequestReviewComment,"yep, sure, I'm going to fix this for now!",,,,,,
73490310,1369,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)TreesClient to get access by repository id.- [x] **Add overloads to ITreesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableTreesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73488099,1368,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)DeploymentStatusClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IDeploymentStatusClient and IObservableDeploymentStatusClient).**      There is some divergence between XML documentation of methods in IDeploymentStatusClient and IObservableDeploymentStatusClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IDeploymentStatusClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableDeploymentStatusClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
68887697,1368,PullRequestReviewComment,for `owner` and `name` while we're in here,,,,,,
68887719,1368,PullRequestReviewComment,Let's make the casing consistent: `ID` -> `id`,,,,,,
68887841,1368,PullRequestReviewComment,Let's name this one and the one above. What about something like `A new deployment status to create.` ?,,,,,,
69054533,1368,PullRequestReviewComment,"Nevermind, we'll come back to this later.",,,,,,
73487212,1367,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)AssigneesClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IAssigneesClient and IObservableAssigneesClient).**      There is some divergence between XML documentation of methods in IAssigneesClient and IObservableAssigneesClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IAssigneesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableAssigneesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73402707,1366,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)CommitsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of ICommitsClient and IObservableCommitsClient).**      There is some divergence between XML documentation of methods in ICommitsClient and IObservableCommitsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to ICommitsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableCommitsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73384279,1365,PullRequest,"This PR implements the functionality described in issue #1249, which is to add new preview fields.I was looking into adding tests for these methods, but how would I do that? If I look at the [deployments API], the response does not contain any of the new information. Is that correct?",,,,,,
73381131,1364,PullRequest,"This is related to issue #1358.Added the following properties: HtmlUrl, LabelsUrl, Id, UpdatedAtAdded constructor with all properties (except Id).Rearranged the properties to match the order from JSON response.Added a few comment changes.",,,,,,
67241239,1364,PullRequestReviewComment,To test for creators fields (it's just a `User` object) you should just be able to use similar to the following:,,,,,,
67241519,1364,PullRequestReviewComment,To test for creators fields (it's just a `User` object) you should just be able to use similar to the following:etc,,,,,,
73370788,1363,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)TagsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of ITagsClient and IObservableTagsClient).**      There is some divergence between XML documentation of methods in ITagsClient and IObservableTagsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to ITagsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableTagsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73357122,1362,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)BlobsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IBlobsClient and IObservableBlobsClient).**      There is some divergence between XML documentation of methods in IBlobsClient and IObservableBlobsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IBlobsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableBlobsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73354036,1361,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoryHooksClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepositoryHooksClient and IObservableRepositoryHooksClient).**      There is some divergence between XML documentation of methods in IRepositoryHooksClient and IObservableRepositoryHooksClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepositoryHooksClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoryHooksClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
68697395,1361,PullRequestReviewComment,Do we need some documentation here?,,,,,,
68697421,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697436,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697444,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697457,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697464,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697471,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697476,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697763,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697771,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697779,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697783,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697792,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697808,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
68697812,1361,PullRequestReviewComment,Text should refer to `id`,,,,,,
73331178,1360,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)CommitStatusClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of ICommitStatusClient and IObservableCommitStatusClient).**      There is some divergence between XML documentation of methods in ICommitStatusClient and IObservableCommitStatusClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to ICommitStatusClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableCommitStatusClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.  Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73199173,1357,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoryPagesClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepositoryPagesClient and IObservableRepositoryPagesClient).**      There is some divergence between XML documentation of methods in IRepositoryPagesClient and IObservableRepositoryPagesClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepositoryPagesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoryPagesClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added only one new integration test for now because of #1263/cc ,",,,,,,
73188766,1356,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoryForksClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepositoryForksClient and IObservableRepositoryForksClient).**      There is some divergence between XML documentation of methods in IRepositoryForksClient and IObservableRepositoryForksClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepositoryForksClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoryForksClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
69804198,1356,PullRequestReviewComment,"I think here it would be a breaking change, isn't it?",,,,,,
69804282,1356,PullRequestReviewComment,"I think here it would be a breaking change, isn't it?",,,,,,
69804380,1356,PullRequestReviewComment,done!,,,,,,
69804449,1356,PullRequestReviewComment,done!,,,,,,
69826615,1356,PullRequestReviewComment,I'm not sure I understand - this is a new method we're adding here?,,,,,,
69826832,1356,PullRequestReviewComment,"Should we allow `null` here for `RepositoryForksListRequest`? We've been restricting this elsewhere in the codebase, and it feels weird to leave this one here. We can call this out in the release notes if you think that's important...",,,,,,
73076222,1355,PullRequest,"Fixes #1176 To-do:- [x]  Add overloads on IRepositoryForksClient- [x]  Add overloads on IObservableRepositoryForksClient- [x]  Add unit tests for these new methods- [x]  Add integration tests for these new methods- [x]  Modified XML documentation of methods/cc ,",,,,,,
66335041,1355,PullRequestReviewComment,It looks like the previous implementation allowed the `request` object to be `null` however you are now enforcing that it can't be null which would be a breaking change for some existing users...,,,,,,
66335427,1355,PullRequestReviewComment,"Same thing here, if the call previously allowed `options == null` then we need to preserve that behaviour",,,,,,
66396733,1355,PullRequestReviewComment,"yes, you're right :+1: , always forget about back compatibility, it is looks like I've been developing enterprise software enough to forgot that back compatibility is important part of software development. Fixed!",,,,,,
66396767,1355,PullRequestReviewComment,:+1: Fixed!,,,,,,
73055447,1354,PullRequest,"Fixes #1253 In both the normal and reactive clients and interfaces,- Rename `client.User.Keys` to `client.User.GitSshKey`- Mark `client.User.Keys` as `[Obsolete]`This has been done on top of #1343 so the commit list in this PR should tidy itself up once #1343 is merged",,,,,,
73029626,1353,PullRequest,Fixes #1350 Add `ClosedBy` key to Issue response if you request an single Issue.,,,,,,
73026699,1352,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)DeploymentsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IDeploymentsClient and IObservableDeploymentsClient).**      There is some divergence between XML documentation of methods in IDeploymentsClient and IObservableDeploymentsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IDeploymentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableDeploymentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
73018646,1351,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoryDeployKeysClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepositoryDeployKeysClient and IObservableRepositoryDeployKeysClient).**      There is some divergence between XML documentation of methods in IRepositoryDeployKeysClient and IObservableRepositoryDeployKeysClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepositoryDeployKeysClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoryDeployKeysClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
67457501,1351,PullRequestReviewComment,Let's just remove these empty elements wherever we've created them here.,,,,,,
67465974,1351,PullRequestReviewComment,done :+1:,,,,,,
72850152,1348,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoryContentsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepositoryContentsClient and IObservableRepositoryContentsClient).**      There is some divergence between XML documentation of methods in IRepositoryContentsClient and IObservableRepositoryContentsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepositoryContentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoryContentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
67457310,1348,PullRequestReviewComment,Let's just remove the whole `` elements wherever we're touching methods in these files.,,,,,,
72701173,1347,PullRequest,Fixes #1320 Add option to set or update permissions for a repository for teams. I'm still not satisfied with naming of `TeamRepositoryUpdate`. Any other suggestions?,,,,,,
65882533,1347,PullRequestReviewComment,There already exists a `RepositoryPermission` enum that has the same values so I think you could just use that,,,,,,
65883282,1347,PullRequestReviewComment,"You shouldn't need to specify `[Parameter]` tag except in unusual cases.  The default serialization will handle converting between github API format and octokit.net's more c# representationeg:  `LowercaseSeparatedWithUnderscores`Only when a property name on our side doesn't match the above conversion, do you need to explicitly define a `[Parameter]` tag",,,,,,
72691413,1346,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)MergingClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IMergingClient and IObservableMergingClient).**      There is some divergence between XML documentation of methods in IMergingClient and IObservableMergingClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IMergingClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableMergingClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
72690860,1345,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoryCommitsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepositoryCommitsClient and IObservableRepositoryCommitsClient).**      There is some divergence between XML documentation of methods in IRepositoryCommitsClient and IObservableRepositoryCommitsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepositoryCommitsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoryCommitsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
67457259,1345,PullRequestReviewComment,I should have been clearer - the whole `` element can be removed from these docs.,,,,,,
67464825,1345,PullRequestReviewComment,done :+1:,,,,,,
68884803,1345,PullRequestReviewComment,I love it! üëè,,,,,,
68884844,1345,PullRequestReviewComment,:heart:,,,,,,
72634283,1344,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepositoryCommentsClient to get access by repository id.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepositoryCommentsClient and IObservableRepositoryCommentsClient).**      There is some divergence between XML documentation of methods in IRepositoryCommentsClient and IObservableRepositoryCommentsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepositoryCommentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepositoryCommentsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods./cc ,",,,,,,
67128251,1344,PullRequestReviewComment,"I think this reads better as ""**An** IObservable ..."" rather than ""**A** IObservable ...""",,,,,,
67128441,1344,PullRequestReviewComment,"Rather than call this out everywhere for the file, I'll just come back and check after this comment is folded away",,,,,,
67128503,1344,PullRequestReviewComment,"Same thing here: ""**An** IObservable ..."" rather than ""**A** IObservable ...""",,,,,,
67128736,1344,PullRequestReviewComment,"Add a comment on the end here ""... indicating completion"" because the `Unit` part really isn't interesting here...",,,,,,
67128856,1344,PullRequestReviewComment,Same thing as ‚¨ÜÔ∏è,,,,,,
67130879,1344,PullRequestReviewComment,This method is technically returning `Task` for the specified repository. There's a few places where this is necessary. Let me know if this doesn't work and I can dig deeper.,,,,,,
67131024,1344,PullRequestReviewComment,"Same thing here, gotta wrap this in a `Task<>`",,,,,,
67131675,1344,PullRequestReviewComment,We could document the return value like this (same with the method above): A `` representing the asynchronous operation,,,,,,
67138865,1344,PullRequestReviewComment,"Unfortunately, VS do not understand such XML tags:![2016-06-15_17-34-53]",,,,,,
67141245,1344,PullRequestReviewComment,"please see the pattern I've used here #1384, maybe it would be fine?",,,,,,
67264335,1344,PullRequestReviewComment,"It's pretty close, but looking at the rendered markup doesn't really satisfy me (this isn't your fault):Do you think it's worth keeping these return values around at all? It's all rather boring and repetitive...",,,,,,
67291343,1344,PullRequestReviewComment,"I don't think so, it is really tedious and boring. I just tried to be self-consistent in work on GSoC. So, what we decide here? Clear  tags at all or change it in the other manner?",,,,,,
67299104,1344,PullRequestReviewComment,Let's clear these `` tags - I'm not sure it's worth all the back-and-forth for the value it gives us,,,,,,
67457229,1344,PullRequestReviewComment,"Apologies, I should have been clearer - the whole `` element can be removed from these docs.",,,,,,
67464585,1344,PullRequestReviewComment,done :+1:,,,,,,
68349398,1344,PullRequestReviewComment,"Weird, that syntax should work [according to this article].In any case, the return tags are currently worthless, but that's because we've simply been parroting the return type. We don't need to do that because the return type describes itself! Instead, we should use this tag to describe the intent of the returned value. But then again, that's usually already described in the summary. So :thumbsup: to getting rid of these and only use them when there's something particular interesting about the return value we need to describe that isn't described by the type.",,,,,,
72614696,1343,PullRequest,- [x] Add `IUserGpgKeysClient.cs` and `UserGpgKeysClient.cs`  - [x] Add `ApiUrls.GpgKeys`  - [x] Add `NewGpgKey` request model  - [x] Add `GpgKey` response model- [x] Add `IObservableUserGpgKeysClient.cs` and `ObservableUserGpgKeysClient.cs`- [x] Add unit tests  - [x] `UserGpgKeysClientTests.cs`  - [x] `ObservableUserGpgKeysClientTests.cs`- [x] Add integration tests  - [x] `UserGpgKeysClientTests.cs`  - [x] `ObservableUserGpgKeysClientTests.cs`Fixes #1252,,,,,,
65880969,1343,PullRequestReviewComment,"Extra whitespace line?  (Nitpick, I know!!)",,,,,,
65881338,1343,PullRequestReviewComment,"On the unit tests side, we usually hardcode the expectedUri... as a minor safety net to guard against typos in the `ApiUrls` helper class, or inadvertent edits etc",,,,,,
65881387,1343,PullRequestReviewComment,"Similarly, we hardcode the accept header value on unit tests so we dont have the unit test and implementation code both relying on the `AcceptHeaders` helper class",,,,,,
65881625,1343,PullRequestReviewComment,Nice pickup catering for the new API pagination options that were only recently introduced to octokit.net :+1:,,,,,,
65882044,1343,PullRequestReviewComment,"While you were away, I believe it was decided to move towards ""singular"" property names for sub clients (but plaralised class names) - one such mention is in #1207 .  So for any new clients being added we should probably follow this convention, thus `IObservableUserGpgKeysClient GpgKey { get; }` (and `IUserGpgKeysClient GpgKey { get; }` on `IUsersClient`)",,,,,,
72602864,1342,PullRequest,"Fixes #1319Added/ensured `Permissions` are supported for:## Repository CollaboratorsAdded `Permission` attribute to `User` object, updated tests for Repository Collaborators to ensure field is populated.  Although preview period has ended I decided to pass the preview accepts header anyway since GHE 2.5 requires it## Team's RepositoriesFound that `Repository` already had `Permissions` attribute and the Team's Repositories call was already working (once preview period ended).  Added accept header so it works on GHE 2.5 and added some integration tests to ensure the property is being deserialized",,,,,,
72600906,1341,PullRequest,"- [x] Add Reactions object to IssueCommentsClient- [x] Add Reactions object to ObservableIssueCommentsClient- [x] Add tests- [x] Add integration tests- [x] Fix builds due to broken tests- [x] Come to think of it, `IssueCommentReactions` should be renamed, so it can be used on the other relevant payloads.- [x] Use `AcceptHeaders.ReactionsPreview` instead of local `ReactionsPreview` constant (once #1335 has been merged)Fixes #1295",,,,,,
67108731,1341,PullRequestReviewComment,:lipstick: `Assert.NotEmpty(comments)` ?,,,,,,
67109449,1341,PullRequestReviewComment,Yes of course...not sure what I was thinking there üòï,,,,,,
72462668,1339,PullRequest,Fixes #1334 This is a first preview for add multiple assignees to an issue. I created a new class IssueAssignees because the key `assignees` is only added for this special api call. Maybe `AddAssignees` can live directly under `client.Issue`. Please tell me if this goes in the right direction.,,,,,,
66346075,1339,PullRequestReviewComment,these should be `RemoveAssignees` rather than `AddAssignees`,,,,,,
66346520,1339,PullRequestReviewComment,"you dont need to test combinations of more than one field being null or empty at a time, since the first assert to match, will throw an exception.In other words if there are 3 input fields that have NotNull asserts, there should be 3 test cases (each one specifying null for 1 field and valid value for the other fields), eg:null, ""name"", 2, newAssignee""owner"", null, 2, newAssignee""owner"", ""name"", 2, null",,,,,,
66346557,1339,PullRequestReviewComment,This last one isnt needed since you already have checked both owner and name field being blank,,,,,,
66346907,1339,PullRequestReviewComment,"Ideally the parameter order should match the field order as per below, for consistency.  eg put the `assignees` parameter after `assignee` and before `milestone`",,,,,,
66347178,1339,PullRequestReviewComment,"these need to be reworked to test `null` and `""""` values for any applicable field... at the moment `null` is not checked for `owner` or `repo`",,,,,,
66347246,1339,PullRequestReviewComment,"same here, rework to cover each parameter being `null` and `""""`",,,,,,
66347347,1339,PullRequestReviewComment,Dont forget to add an integration test for `CanRemoveAssignees` method :grinning:,,,,,,
66386216,1339,PullRequestReviewComment,ok. i have copied this form another test. eg `ObservableRepositoryCommentsClientTests.cs`,,,,,,
66386938,1339,PullRequestReviewComment,Is it ok to add the test into `AddAssignees` and rename test into `CanAddAndRemoveAssigness`?,,,,,,
66885718,1339,PullRequestReviewComment,:thumbsup:,,,,,,
67132071,1339,PullRequestReviewComment,:lipstick: sort these references so `System.*` appear first,,,,,,
67132125,1339,PullRequestReviewComment,":lipstick: drop the `private` modifier here (it's a pet peeve of mine, but the other fields also lack this)",,,,,,
67132433,1339,PullRequestReviewComment,"If this is only referenced once, you might as well inline it into the method on line 51. Otherwise there's two usages in the test that can be replaced with this field. Up to you.",,,,,,
67133343,1339,PullRequestReviewComment,":lipstick: `.Any()` has an overload which takes a predicate, so this can be simplified to:",,,,,,
67133376,1339,PullRequestReviewComment,"Same thing here, but `Assert.False`",,,,,,
67133960,1339,PullRequestReviewComment,Don't worry about this one. If we've got something else here we're in for a world of pain in general...,,,,,,
67134087,1339,PullRequestReviewComment,You'll need to use `issue.Number` here and on the other actions below (the user-friendly id) rather than `issue.Id` (essentially the database column).,,,,,,
67134307,1339,PullRequestReviewComment,"Oh, and `x.Name` is not the user's account name - and not always populated from every endpoint.Use `x.Login` here if you want to check the account name.",,,,,,
67134689,1339,PullRequestReviewComment,":lipstick: we're fetching both and doing a mix of assertions here:- could we order this so we set and assert `retrieved`, and then set and assert `all`?- could we use multiple `Assert.True` expressions here, rather than one big one sprinkled with `&&`s?",,,,,,
67134767,1339,PullRequestReviewComment,":lipstick: `Assert.Equal(1, closed.Assignees.Count)` is nicer here because we get both values when it fails.",,,,,,
67134843,1339,PullRequestReviewComment,":lipstick: `Assert.Equal(_context.RepositoryOwner, closed.Assignees[0].Login)` will give us both values if this test fails",,,,,,
67134905,1339,PullRequestReviewComment,":lipstick: `Assert.Equal(2, issue.Assignees.Count)` to get the value if this test fails",,,,,,
67135563,1339,PullRequestReviewComment,"Given `1171` is now a closed issue, is it worth keeping this around? Could we build a fresh repository to test `GetAllForRepository`, rather than querying for all the issues in the Octokit repository?If not, I like this sort of test (it takes 21sec on my machine though):",,,,,,
67135736,1339,PullRequestReviewComment,This is an interesting change - can you tell me what motivated this?,,,,,,
67136019,1339,PullRequestReviewComment,I'm also change `x.Name` to `x.Login`,,,,,,
67136036,1339,PullRequestReviewComment,Done,,,,,,
67136920,1339,PullRequestReviewComment,Because in json String we add labels.So this test will always fails if we test `null`.,,,,,,
67137913,1339,PullRequestReviewComment,Ok cool. Let me dig into this further as `ToUpdate` shouldn't create the `Labels` array by default unless it already exists on the issue. There's some [assumptions] about what we `POST` as part of editing an issue that may have changed (emphasis mine): Labels to associate with this issue. Pass one or more Labels to replace the set of Labels on this Issue. **Send an empty array (`[ ]`) to clear all Labels from the Issue.** NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise.,,,,,,
67139802,1339,PullRequestReviewComment,That was actually my  commit I sent over to 's branch. Sorry if it's not correct but it seemed to me .ToUpdate() shouldn't clear the labels from an issue?,,,,,,
67267592,1339,PullRequestReviewComment,"it's all good, I just need to cast my mind back to the earlier discussions about this.#718 is the original PR where I implementing this, and to TL;DR it:- initially, the result from `ToUpdate()` should have a value of `null` for `Labels` - this is how we say ""don't change anything"" to the server as part of the update, as `labels` won't be serialized- if you invoke `update.AddLabel(""label"")` we create a new list lazily, and this collection **replaces** whatever labels are previously set on the server- if you invoke `update.ClearLabels()` this creates an empty list, to indicate that all labels should be removed as part of the update It's might come across as a bit explicit, but I like the verbosity that it gives you in the code.Anyway, coming back to this change. It looks like we're populating the `Labels` array from what exists in the issue, and while that's similar to the original intent I didn't want users to be manipulating the `Labels` collection directly to remove labels - I wanted to see them use the first-class `AddLabel` and `ClearLabel` methods on `IssueUpdate`.",,,,,,
67327612,1339,PullRequestReviewComment,"Yeah that's a bit odd (IMO!).I'd expect `.ToUpdate()` to give me a ""perfect"" replica of the issue, including Labels/Assignees/whatever that I can then use to update the `Issue`.  I see what you're saying about prefering `AddLabel()` and `ClearLabels()` to direct list manipulation, but if you consider the use case of where I want to add a label to something, I cant just `ToUpdate()` and then `.AddLabel(newLabel)` because that would remove all the other labels.  So I would need more code to explicitly set the labels to whatever they were originally (which perhaps if im now in some other function I dont even have the original `Issue` object anymore, I only have the `IssueUpdate` I'd passed in?  It just seems like this behaviour is a bit odd and means `ToUpdate()` didnt actually create me a ""usable"" `IssueUpdate` request for my intended usage.  Conversely if we DID include the exiting labels, and possibly fleshed things out with a `RemoveLabel()` call as well as the `AddLabel()` and `ClearLabels()` you still have a way to do everything without direct manipulation but also cater for all intended usages?It also makes me wonder now, if this is the way we currently handle multiple labels on an issue, does that mean the multiple Assignees functionality added in this PR should also take this approach?  Is the main use case REPLACING assignees or ADDING/REMOVING one of multiple assignees?  Id say the fact that the enhancement is here in the first place means multiple assignees are desirable so we wouldnt want to do things that remove other assignees...",,,,,,
67327867,1339,PullRequestReviewComment,"you might want to take a look at this too.  It's another ""tweak"" id made when pushing some changes over to  .  I think it's because now with the multiple assignees support, this field can actually be `null`, but we dont want to send it in as such or else it wiped out all the other assignees.  But I also may not have been aware of historic things similar to how I may have messed up the `Labels` handling currently being discussed!  So if you could check this out too and have a think about it etc to make sure I've done the right thing here?",,,,,,
69446771,1339,PullRequestReviewComment,"Apologies for the drive-thru comment, but maybe what we should actually have is a standard group of `SetLabel`/`AppendLabel`/`ClearLabels` methods to clearly allow for all the possible ways of manipulating the list (replacing/appending/clearing) so that users won't be tempted to manipulate the list directly and can trust the methods to do what is required? And then apply the same pattern to all multiple categorization lists (assignees, etc).",,,,,,
70153390,1339,PullRequestReviewComment,this sounds good :+1:,,,,,,
91938859,1339,PullRequestReviewComment,"Can we add a helper function for `RemoveAssignee(string name)` here, so we are consistent with how Labels are now being handled?",,,,,,
91941647,1339,PullRequestReviewComment,:+1:,,,,,,
91947642,1339,PullRequestReviewComment,minor spacing issue (put `else` on it's own line),,,,,,
91949110,1339,PullRequestReviewComment,:see_no_evil:,,,,,,
95441513,1339,PullRequestReviewComment,Yay!,,,,,,
95441623,1339,PullRequestReviewComment,Does this need to also be in the ctor of the type to get populated?,,,,,,
95562540,1339,PullRequestReviewComment,Nice pickup thanks! The ctor isn't actually used by the deserializer to create the response objects (it uses the field setters) but from a consistency point of view I should have include the new field in the ctor,,,,,,
72444698,1338,PullRequest,"This change adds a parameter-less constructor to `SearchCodeRequest` and modifies `BaseSearchRequest` to handle the case where the 'Term' is null.  This supports the scenario of searching for a filename without specifying a search term, as in this search:",,,,,,
72334364,1337,PullRequest,"Fixes #1171 For each of these entries:- add overload to both clients- implement- update impacted unit tests- add new integration tests wherever possible- [x] `Task GetAllBranches(String owner, String name)`- [x] `Task GetAllContributors(String owner, String name)`- [x] `Task GetAllContributors(String owner, String name, Boolean includeAnonymous)`- [x] `Task GetAllForCurrent()`- [x] `Task GetAllForCurrent(RepositoryRequest request)`- [x] `Task GetAllForOrg(String organization)`- [x] `Task GetAllForUser(String login)`- ~~[ ] `Task GetAllLanguages(String owner, String name)`~~- ~~[ ] `Task GetAllPublic()`~~ moved to #1340- ~~[ ] `Task GetAllPublic(PublicRepositoryRequest request)`~~ moved to #1340- [x] `Task GetAllTags(String owner, String name)`- [x] `Task GetAllTeams(String owner, String name)`",,,,,,
65797315,1337,PullRequestReviewComment,ApiOptions.None have to be used here üëç,,,,,,
65797319,1337,PullRequestReviewComment,The same as previous remark üëç,,,,,,
65798720,1337,PullRequestReviewComment,Nice pickup  - this was doing my head in yesterday!,,,,,,
72305196,1336,PullRequest,"Fixes #1163 To-do:- [x]  Add overloads on IStarredClient- [x]  Add overloads on IObservableStarredClient- [x]  Add unit tests for these new methods- [x]  Add integration tests for these new methods/cc ,",,,,,,
65512343,1336,PullRequestReviewComment,"EDIT: oops, I'd messed up the test and not specified `PageCount`. Amended below:",,,,,,
65513531,1336,PullRequestReviewComment,", sorry, I've forgotten push my commits with integration tests. There are a lot of new ones :+1:",,,,,,
65513742,1336,PullRequestReviewComment,good to hear :heart:,,,,,,
71905805,1335,PullRequest,First preview of an stand alone reaction client. Initially only for commit comments. I created this branch from #1325.Fixes #1299 #1300 #1301 #1302 #1303,,,,,,
65076917,1335,PullRequestReviewComment,"You check if `NewReaction` is null, so probably want to have a test here on that as well",,,,,,
65077052,1335,PullRequestReviewComment,"If the tests are for the `CommitCommentReactionClient` subclient, why not create that as the client here instead of the higher level?",,,,,,
65077271,1335,PullRequestReviewComment,It has been discussed previously that the `AcceptHeaders` should preferably be hardcoded so as to act as a sanity test against spelling mistakes,,,,,,
65078252,1335,PullRequestReviewComment,I thought it would be cleaner if all Tests for Reactions are at one place. So there is only subclass for commit comments yet.,,,,,,
65078594,1335,PullRequestReviewComment,"In other places like here `var endpoint = ApiUrls.Releases(owner, name);            return ApiConnection.Post(endpoint, data, AcceptHeaders.StableVersion);` they are not hardcoded. Why here? Are they obsolete and should be hardcoded everywhere?",,,,,,
65079843,1335,PullRequestReviewComment,"So you would then check each subclient in each method? Might make the tests a bit noisy.Also, I would suggest changing the name of the class [here]",,,,,,
65080010,1335,PullRequestReviewComment,"No, they should only be hardcoded in the tests. In actual implementation code they should be accessed through the `AcceptHeaders` class",,,,,,
65080316,1335,PullRequestReviewComment,Ok. I asked because you point to class `CommitCommentReactionClient.cs`,,,,,,
65080723,1335,PullRequestReviewComment,Ohh. That's right. No good Name for a test. I will split tests into separate classes.,,,,,,
65080790,1335,PullRequestReviewComment,"Oops! my bad, sorry :fearful: I meant to comment on the test. Either way [here is a previous discussion about it]",,,,,,
65166615,1335,PullRequestReviewComment,unintended whitespace change,,,,,,
65166999,1335,PullRequestReviewComment,we normally use a singular form for the variable name and a plural form for the class.  so in this case,,,,,,
65372639,1335,PullRequestReviewComment,It'd be cool to uncomment this test and see if we can get it working. I can help verify this (we don't run them on CI because they're hitting the actual API).,,,,,,
65372771,1335,PullRequestReviewComment,Let's remove this :fire:,,,,,,
65491241,1335,PullRequestReviewComment,I have integrate this test into `CommitCommentReactionsClientTests.cs`,,,,,,
65855808,1335,PullRequestReviewComment,Bit of whitespace to tidy up at the end of this line,,,,,,
65855918,1335,PullRequestReviewComment,possible whitespace here too,,,,,,
65873956,1335,PullRequestReviewComment,"I **think** the default serialization will handle these standard values like Laugh, Confused, Heart etc and only the +1 and -1 would need a `[Parameter]` attribute?",,,,,,
65874465,1335,PullRequestReviewComment,"Yes, that is correct. We handle casing and `_`s automatically. I.e. `html_url` maps to `HtmlUrl`",,,,,,
66426887,1335,PullRequestReviewComment,This test fails for me...Creating a comment needs the `issue.Number` rather than `issue.Id` passed in,,,,,,
66427253,1335,PullRequestReviewComment,The other tests are disposing of their `_context` explicitly  by implementing `IDisposable` but not this one.  Not sure if it's required or not but all 4 approaches should be consistent,,,,,,
66427306,1335,PullRequestReviewComment,need `issue.Number` rather than `issue.Id` here,,,,,,
66427391,1335,PullRequestReviewComment,"""a~~n~~ specified Issue Comment""",,,,,,
66427431,1335,PullRequestReviewComment,an => a,,,,,,
66427507,1335,PullRequestReviewComment,an => a,,,,,,
66427516,1335,PullRequestReviewComment,an => a,,,,,,
66427532,1335,PullRequestReviewComment,an => a,,,,,,
66427547,1335,PullRequestReviewComment,an => a,,,,,,
66427562,1335,PullRequestReviewComment,inadvertent?,,,,,,
66434700,1335,PullRequestReviewComment,"I have a strange behavior in visual studio. Vsual Studio tells me that it cannot resolve typ or namespace for types that came from namespace Octokit. But that comes first since yesterday. ![unbenannt]So yes, this was inadvertent.",,,,,,
71806121,1332,PullRequest,"Fixes #1164To-do:- [x]  Add overloads on IOrganizationMembersClient - [x]  Add overloads on IObservableOrganizationMembersClient - [x]  Add unit tests for these new methods- [x]  Add integration tests for these new methods       Added only for  GetAll(string org) overload, the others overloads are skipped, so I decide do not add them. If I have to, please let me know :smile: /cc ,",,,,,,
71787016,1331,PullRequest,"Preparing another release now that we're closing to wrapping up all the `ApiOptions` changes, and found a couple of integration tests that needed updating:- as GitHub now supports unlimited repositories for paid plans, we cannot really check for quotas. I'll clean up that test later.- deleting a comment and then trying to retrieve it should return a 404 - I'm not sure why that test has been that way for so long, but let's test the correct behaviour here.",,,,,,
71746069,1330,PullRequest,"Fixes #1163 To-do:- [x]  Add overloads on INotificationsClient- [x]  Add overloads on IObservableNotificationsClient- [x]  Add unit tests for these new methods- [x]  ~~Add integration tests for these new methods~~     It's seems like now we do not have ability to create integration tests for I(Observable)NotificationsClient. I've opened issue #1333 to discuss it in details./cc ,",,,,,,
71742236,1329,PullRequest,"Fixes #1160To-do:- [x]  Add overloads on IIssuesLabelsClient- [x]  Add overloads on IObservableIssuesLabelsClient- [x]  Rename ""repo"" parameter to ""name"" to deliver more consistency- [x]  Add unit tests for these new methods- [x]  Add integration tests for these new methods /cc ,",,,,,,
64979931,1329,PullRequestReviewComment,"Oops, nice spot!",,,,,,
64979964,1329,PullRequestReviewComment,"Oh, this is just reordering. Anyway, :sparkles: for reordering!",,,,,,
71515808,1328,PullRequest,Fixes #1166 To-do:- [x]  Add overloads on IPullRequestReviewCommentsClient- [x]  Add overloads on IPullRequestReviewCommentsClient- [x]  Add unit tests for these new methods- [x]  Add integration tests for these new methods/cc .,,,,,,
71421777,1326,PullRequest,"Fixes #1184 To-do:- [x]  Add overloads on IWatchedClient- [x]  Add overloads on IObservableWatchedClient- [x]  Add unit tests for these new methods- [x]  Add integration tests for these new methods~~I've grabbed  commits from his PR and added some fixes and tests. I suppose, this issue #1279 could be closed after this one.~~/cc ,",,,,,,
71380292,1325,PullRequest,Added feature to create reactions for commit comments. To Do- [ ] Integration tests for observable clientTests fails because of master branch!,,,,,,
64561730,1325,PullRequestReviewComment,"You should hardcode the header string, so it serves as a sanity check against misspelling.",,,,,,
64562151,1325,PullRequestReviewComment,"I didn't pull down the code to test it, but shouldn't you be able to just do `Content = content`?",,,,,,
64738554,1325,PullRequestReviewComment,should insert one blank line in between class declarations,,,,,,
64738734,1325,PullRequestReviewComment,the name of the test class should reflect the name of the method.  In this case the method is called `CreateReaction` so the test class should be called `TheCreateReactionMethod`,,,,,,
64738778,1325,PullRequestReviewComment,blank line between function declarations,,,,,,
64738784,1325,PullRequestReviewComment,and here,,,,,,
64739078,1325,PullRequestReviewComment,blank line and test class name to match the method,,,,,,
64739248,1325,PullRequestReviewComment,"Wording ""The reaction for "" is a bit odd (and also has an extra space on the end of the string).Perhaps ""The reaction"" or ""The reaction to create"" would be better",,,,,,
64739366,1325,PullRequestReviewComment,This URL doesnt go anywhere.  Is it meant to be /reactions/ rather than /repos/ ?,,,,,,
64739495,1325,PullRequestReviewComment,Can you please rename this to `ReactionsPreview` or similar (to indicate it's a preview functionality),,,,,,
64739608,1325,PullRequestReviewComment,Should also check `Ensure.ArgumentNotNull()` on the `reaction` request object,,,,,,
64741137,1325,PullRequestReviewComment,"This response object is returned for creating reactions on CommitComments, Issues, IssueComments and PullRequestReviewComments, so it should probably be called something more generic like `Reaction` rather than `CommitCommentReaction`",,,,,,
64741226,1325,PullRequestReviewComment,I'd suggest the enum be named `ReactionType` since below ive suggested the actual response class is called `Reaction`,,,,,,
64741550,1325,PullRequestReviewComment,"The [api doco] seems to indicate the string is ""+1"" and ""-1"" for these, but you've got their API string value as `plus_one` and `minus_one`.  Just checking if this was intentional?",,,,,,
64741645,1325,PullRequestReviewComment,If you look at other enums in octokit.net we dont normally assign integer values to the enum members,,,,,,
64742892,1325,PullRequestReviewComment,"Maybe a good idea to assert the fields of the response message (eg confirm that the ReactionType you requested is what was actually set).  Also given the other comment about `plus_one` vs `+1` perhaps looping through all of the available `ReactionType` enum values and creating each one woudl be good, just to prove that all of them are defined correctly",,,,,,
71367629,1324,PullRequest,"Fixes #1165 To-do:- [x]  Add overloads on IOrganizationsClient- [x]  Add overloads on IObservableOrganizationsClient- [x]  Add unit tests for these new methods- [x]  Add integration tests for these new methods    I had to use [GitHubEnterpriseTest] to get these tests done, because I should create organizations firstly./cc ,",,,,,,
64736178,1324,PullRequestReviewComment,is `null` - you should use `.Login` field and then everything is green!  :tada:,,,,,,
64751822,1324,PullRequestReviewComment,"It's cool, especially if take into account that I wrote these tests blindly :smile: Fixed!",,,,,,
64998334,1324,PullRequestReviewComment,This seems reasonable. I'm not sure how we feel about creating multiple organizations for each test run -  do you think this is worth doing simply to test pagination?,,,,,,
71346645,1323,PullRequest,"Fixes #1167 To-do:- [x]  Add overloads on IDeploymentPullRequestsClient- [x]  Add overloads on IObservablePullRequestsClient- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods. /cc  ,",,,,,,
71335644,1322,PullRequest,"Fixes #1152 To-do:- [x]  Add overloads on IDeploymentStatusClient- [x]  Add overloads on IObservableDeploymentStatusClient- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods. /cc  ,",,,,,,
71266243,1321,PullRequest,"Fixes #1159 To-do:- [x]  Add overloads on IIssuesEventsClient.- [x]  Add overloads on IObservableIssuesEventsClient.- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods. /cc  ,",,,,,,
71192855,1317,PullRequest,"I've fixed incorrect names of tests in RepositoryDeployKeysClientTests./cc ,",,,,,,
71183371,1316,PullRequest,"Refer #1174Despite on this #1262, I've do this by myself, because we should finish Pagination milestone in near future in order to start working on repositoryId functionality (#1120).To-do:- [x]  Add overloads on IRepositoryContentsClient.- [x]  Add overloads on IObservableRepositoryContentsClient.- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods.     I've add whole new integration test class for RepositoryCommentsClient, but I found out that [Contents] **do not support pagination** (#1315), so I marked tests as skipped./cc  ,",,,,,,
64376600,1316,PullRequestReviewComment,nice pickup!,,,,,,
64376986,1316,PullRequestReviewComment,is there a need to declare `info =>` here?,,,,,,
64378030,1316,PullRequestReviewComment,"No, at all! Fixed!",,,,,,
64379129,1316,PullRequestReviewComment,"For the null checks dont we just need to check each argument is null, not also checking multiple arguments null at the same time?  So in this function all the ones with more than one argument being null at the same time, can be removed I think",,,,,,
64379201,1316,PullRequestReviewComment,"Same on all the empty string checks as above comment on null checks.  Each parameter needs to be checked, but not combinations of multiple parameters",,,,,,
64381999,1316,PullRequestReviewComment,"What's the reasoning behind adding this additional constructor?  I notice it's only used in the Observable tests, but couldnt they just pass in the IApiConnection and use the existing constructor, rather than passing in an IConnection and having an entire new constructor (and mostly duplicated logic)?  Apologies if i've missed something, as im on my phone :grinning:",,,,,,
64405383,1316,PullRequestReviewComment,"yep, it is overkill really!",,,,,,
64407052,1316,PullRequestReviewComment,"Yep, you're right! I've missed opportunity to use substitution of IApiConnection instead of new Readme constructor. Fixed :+1:",,,,,,
71042914,1313,PullRequest,"I have added feature to add reactions for commit comments. Please let me know if this is the right way you imagine so i can go on with issues, pull requests and so on.Thx,Martin",,,,,,
64205301,1313,PullRequestReviewComment,Unintended newlines?,,,,,,
64205311,1313,PullRequestReviewComment,Unintended tab?,,,,,,
64205350,1313,PullRequestReviewComment,Unintended newline?,,,,,,
64205445,1313,PullRequestReviewComment,I think one empty line would be enough :smile:,,,,,,
64206569,1313,PullRequestReviewComment,Enums can not be null unless specified as ?([see here] for more information),,,,,,
64207022,1313,PullRequestReviewComment,"Actually you should be using [Paramater attributes] on the enum value, which enables them to be automatically serialized, and then you do not need this `switch`. (goes along with [this comment])[see here] for an example",,,,,,
64207182,1313,PullRequestReviewComment,This should be `EnumReaction` type.,,,,,,
64207515,1313,PullRequestReviewComment,Naming things is hard (‚Ñ¢ by  :stuck_out_tongue_winking_eye:) but this one kinda grates on me.,,,,,,
71039152,1312,PullRequest,"Refer #1161To-do:- [x]  Add overloads on IMilestonesClient.- [x]  Add overloads on IObservableMilestonesClient.- [x]  Add unit tests for these new methods.       ~~I've added all new units tests, but **_I've one failed test and I need some help in order to fix it._**     public async Task SendsAppropriateParametersMulti() is failed [here] on second pass, because of ApiInfo equal to null. As I found out, ApiInfo is class and NSubstitute cannot substitute ApiInfo automatically. So there is NullReferenceException occur on the second pass i.e. when Observable.Defer(() => getPageFunc(nextPageUrl, null, null)) fires for the first time.   For better illustration I captured [the video] (please select HD quality in right bottom corner). In this video I showed that NullReferenceException occurs only when IConnection.GetAndFlattenAllPages with ApiOptions is used~~.      I've fixed these tests by myself :smile: - [x]  Add integration tests for these new methods. /cc  ,",,,,,,
64382696,1312,PullRequestReviewComment,"As mentioned on another PR, checking for multiple parameters null or empty at the same time is not serving a purpose as far as I can tell?",,,,,,
64382739,1312,PullRequestReviewComment,same here,,,,,,
64382841,1312,PullRequestReviewComment,any reason to change this? Since all the other cases do the `await` rather than `.Wait()` ?,,,,,,
64382971,1312,PullRequestReviewComment,Nice pickup :+1:,,,,,,
64398701,1312,PullRequestReviewComment,forgot to return it back. Fixed :+1:,,,,,,
64399987,1312,PullRequestReviewComment,"Yeah, it is overkill :+1:",,,,,,
71032930,1311,PullRequest,"Just removed redundant ApiConnection field and use protected property ApiConection instead./cc  ,",,,,,,
70942581,1310,PullRequest,"Refer #1172Despite on this #1262, I've do this by myself, because we should finish Pagination milestone in near future in order to start working on repositoryId functionality (#1120).To-do:- [x]  Add overloads on IRepositoryCommentsClient.- [x]  Add overloads on IObservableRepositoryCommentsClient.- [x]  Add unit tests for these new methods.      Also I've added await\async modifiers into unit tests class RepositoryCommentsClientTests.cs , because I suppose these modifiers should be there to get determined results of tests.- [x]  Add integration tests for these new methods.       No integration tests exists for these clients, so I've add whole new integration test for RepositoryCommentsClient,/cc  ,",,,,,,
64286959,1310,PullRequestReviewComment,Nice pickup!,,,,,,
70841764,1308,PullRequest,"Fixes #1169To-do:- [x]  Add overloads on IReleasesClient.- [x]  Add overloads on IObservableReleasesClient.- [x]  Add unit tests for these new methods.      Also I've added await\async modifiers into unit tests class ReleasesClientTests.cs , because I suppose these modifiers should be there to get determined results of tests, shouldn't be?- [x]  Add integration tests for these new methods./cc  ,  all is done, but there are some strange failures in test cases.",,,,,,
64383226,1308,PullRequestReviewComment,overkill on the null and empty string checks,,,,,,
64383249,1308,PullRequestReviewComment,and here,,,,,,
70827884,1307,PullRequest,"Refer #1175 .To-do:- [x]  Add overload Task> GetAll(ApiOptions options) on IRepositoryDeployKeysClient.- [x]  Add overload IObservable GetAll(ApiOptions options) on IObservableRepositoryDeployKeysClient.- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods.     I've implemented the integration tests, but they are skipped now, because we don't have opportunity generate ssh keys in C# code (#1003).     Also I haven't implemented integration tests for ObservableRepositoryDeployKeysClient because internally ObservableRepositoryDeployKeysClient use RepositoryDeployKeysClient that have integration tests already (just they skipped :smile: )./cc  ,",,,,,,
70729146,1306,PullRequest,Refer #1175 .To-do:- [x]  Add overload Task> GetAll(ApiOptions options) on IRepositoryDeployKeysClient.- [x]  Add overload IObservable GetAll(ApiOptions options) on IObservableRepositoryDeployKeysClient.- [ ]  Add unit tests for these new methods.- [ ]  Add integration tests for these new methods.,,,,,,
70677683,1305,PullRequest,"As part of my work on #1120 I've added new overloads on I(Observable)RepoCollaboratorsClient to get access by repository id.- [x] **Rename parameter ""repo"" to ""name"" (in order to deliver more consistency into the codebase).**     I've found out that there is the pair (owner, name) is used to identify repository. But some clients use pair (owner, repo) and it's some type of inconsistency.    So I've decided to fix these cases during my work on #1120.- [x] **Update XML documentation of interface methods of clients (also synchronize XML docs of IRepoCollaboratorsClient and IObservableRepoCollaboratorsClient).**      There is some divergence between XML documentation of methods in IRepoCollaboratorsClient and IObservableRepoCollaboratorsClient. So I've decided     to sync XML documentation of these classes during my work on #1120.- [x] **Add overloads to IRepoCollaboratorsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add overloads to IObservableRepoCollaboratorsClient.**      Just add overloads of existing methods that use repositoryId to work with repo.- [x] **Add unit tests.**      I've added new unit tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.- [x] **Add integration tests.**      I've added new integration tests that use repositoryId to work with repo that is just a full copy of existing tests that use (owner, name) key.    Also I've found out that not all methods are covered by tests and added them for new and for old methods.I think that we should discuss and review this PR as thorough as we can because it's first PR in series of PRs that should add ability to work with repo by their Id. :smile: /cc ,",,,,,,
70499472,1304,PullRequest,Fixes #1178Supersedes #1213 and addresses merge conflict,,,,,,
69786484,1292,PullRequest,Fixes #1243,,,,,,
63666359,1292,PullRequestReviewComment,typo: `s/Al/All`,,,,,,
69721460,1291,PullRequest,"As part of my work on #1120 I've added new api urls to get access by repository id.Here one example of new methodProtorype:New method:As you can see main difference in first part of url. Instead of url prefix ""repos/{0}/{1}/"" new method hasurl prefix ""repositories/{0}/"" and use repositoryId parameter instead of owner and name parameters.Also all new methods  have same XML documentation as their prototype.PS: also there is one small update of XML documentation of Deployments method./cc  ,",,,,,,
62993772,1291,PullRequestReviewComment,Perhaps the name on this should be `Blobs` to indicate it's not going to return a single value?,,,,,,
63042630,1291,PullRequestReviewComment,"I agree, I'll fix that. Should I rename public static Uri Blob(string owner, string name) overload too?",,,,,,
63043540,1291,PullRequestReviewComment,"existed already, so you would need to add the `[Obsolete]` attribute - with a message pointing to the new method, and a new method of `public static Uri Blobs(string owner, string name)`.",,,,,,
63135166,1291,PullRequestReviewComment,-Zuber thank you! Done!,,,,,,
68979228,1290,PullRequest,"As part of my work on #1120 I've done some improvements in ApiUrls.cs class.I've found out that not all clients use ApiUrls to build Uri and get right API endpoint. As far it is directly connected with my work, I fixed these cases.- [x] Fix usage of ""repos/{0}/{1}"".FormatUri(owner, name)- [x] Fix usage of ""user/keys/{0}"".FormatUri(id)- [x] Fix usage of ""users/{0}"".FormatUri(login)- [x] Fix usage of ""repos/{0}/{1}/stats/contributors"".FormatUri(owner, repositoryName)- [x] Fix usage of ""repos/{0}/{1}/stats/commit_activity"".FormatUri(owner, repositoryName)- [x] Fix usage of ""repos/{0}/{1}/stats/code_frequency"".FormatUri(owner, name)- [x] Fix usage of ""repos/{0}/{1}/stats/participation"".FormatUri(owner, name)- [x] Fix usage of ""repos/{0}/{1}/stats/punch_card"".FormatUri(owner, name)- [x] Fix usage of ""repos/{0}/{1}/collaborators/{2}"".FormatUri(owner, repo, user)- [x] Fix usage of ""orgs/{0}/members/{1}"".FormatUri(org, user)- [x] Fix usage of ""orgs/{0}"".FormatUri(organizationName)/cc ,",,,,,,
62677873,1290,PullRequestReviewComment,This reference isn't necessary,,,,,,
62677912,1290,PullRequestReviewComment,I'm not sure why these using statements are needed,,,,,,
62685481,1290,PullRequestReviewComment,"Yep, fixed!",,,,,,
62686710,1290,PullRequestReviewComment,I removed all unused usings in the file.,,,,,,
68971369,1289,PullRequest,"Fixes #1285 I looked to the rest of the documentation, but couldn't find another reference to Read The Docs, besides the one in the readme file.",,,,,,
68925207,1288,PullRequest,"Currently in EventsClient, ""GetAllForRepository"" actually gets the Issues activity feed, rather than the actual repository activity feed. This commit fixes that by adding ""GetAllIssuesForRepository"" and changing ""GetAllForRepository"" to correctly use the right endpoint.",,,,,,
62140425,1288,PullRequestReviewComment,"I think the only issue I have with this PR is that we've changed the behaviour of the existing `GetAllForRepository` method. This is fine, we just need to call it out in the release notes.",,,,,,
68582127,1287,PullRequest,"As part of my work on #1120 I've done some improvements in ApiUrls.cs class. I've found that in order to support work with repo by their ID we should add 83 new methods in ApiUrls.cs that would duplicate methods that allow to work with repo by their owner and name identificators.E.g.We have the next method in ApiUrls.cs:So we should add the new one:Because of the fact that we should add 83 new methods, I've decided to generate them programmatically. And in order to get appropriate result of code generation, I've done some useful changes in ApiUrls.cs.- [x]  Added XML documentation for needed methods.- [x] Rename some method's parameters on order to eliminate conflicts of parameter's names.- [x] Most of ApiUrls methods use ""owner"" and ""name"" as name of parameters that identify repository. But some of them use ""repositoryName"" or ""repo"" as parameter name. Now all of such methods use consistent parameter names: ""owner"" and ""name"".BTW, I've implemented program that generate new 83 methods. Here is the [repo] and here is the [file] with new generated methods. All methods contains appropriate XML documentation in many cases better than their original prototypes. I'm going to pull these methods in next PR after this one would be merged.Now I'm thinking about how to validate them against their prototypes, how to check that each pair of methods returns equal results (e.g. RepoBranch(string owner, string name, string branchName) and RepoBranch(int repositoryId, string branchName) should return an equal JSONs if repositoryId is according to owner and name of repository)./cc  ,",,,,,,
61866118,1287,PullRequestReviewComment,this should be labelName right?,,,,,,
61866576,1287,PullRequestReviewComment,"Yes, sure. Fixed!",,,,,,
62141800,1287,PullRequestReviewComment,was the commit pushed?,,,,,,
62148063,1287,PullRequestReviewComment,", yes, now parameter has name ""labelName"" in Label method.Here is commit       0da6f0e",,,,,,
62148974,1287,PullRequestReviewComment,"apologies, I didn't see the comments being folded up so I assumed it was still to-be-done",,,,,,
62150846,1287,PullRequestReviewComment,no problem! :smile:,,,,,,
67742067,1283,PullRequest,3D HOLOGRAPHIC LENS,,,,,,
67709888,1282,PullRequest,"Refer #1170To-do:- [x] Add overload  Task GetAll(string owner, string repo, ApiOptions options) on IRepoCollaboratorsClient.- [x] Add overload IObservable GetAll(string owner, string repo, ApiOptions options) on IObservableRepoCollaboratorsClient.- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods.Unfortunately, I haven't found the approach to add more than 2 users on integration tests. So, there are only two users in each test case: user configured on local machine (""dampirtest"" for my PC) and ""m-zuber-octokit-integration-tests"". How and where ""m-zuber-octokit-integration-tests"" was added as repository user I not found./cc ,",,,,,,
60926899,1282,PullRequestReviewComment,"I think you made a mistake here. Shouldn't it be `""repos/fake/repo/collaborators""`?",,,,,,
60935398,1282,PullRequestReviewComment,"Yep, fixed, tnx!",,,,,,
61064171,1282,PullRequestReviewComment,Sorry I'm kinda new at GITHUB,,,,,,
67493059,1281,PullRequest,"Now modifiers declaration order was adjusted a little in [GithubClientExtensions] class as part of whole check of Octokit by Resharper.The order internal async static was changed to 'internal static async'Citation from Resharper documentationC# modifiers of types and type members can be written in any order. However, arranging them in a similar way throughout your code is a good practice, which improves code readability./cc",,,,,,
67491860,1280,PullRequest,Just continue my war with redundancies in code.1) redundant @ prefix was removed2) redundant explicit array type specifications were removed3) redundant argument list was removed4) redundant commas in object initializer were removed./cc,,,,,,
67344954,1279,PullRequest,Fixes #1184.Checklist:- [x] Add overloads to IWatchedClient + tests.- [ ] Add overloads to IObservableWatchedClient + tests./cc,,,,,,
60819675,1279,PullRequestReviewComment,Don't forget to pass `options` in here...,,,,,,
60826797,1279,PullRequestReviewComment,Oops! Will correct it. :+1:,,,,,,
67340902,1278,PullRequest,Fixes #1183.Adds pagination support in the Users->SSH Keys API.Checklist:- [x] ApiOptions overloads and tests on IUserKeysClient.- [x] ApiOptions overloads and tests on IObservableUserKeysClient.- [x] Add missing docs./cc,,,,,,
67295805,1277,PullRequest,Redundant braces of argument list were removed as part of whole check of Octokit by Resharper./cc,,,,,,
67295447,1276,PullRequest,"Modifiers declaration order was adjusted a little as part of whole check of Octokit by Resharper.The order `internal async static` was changed to 'internal static async'Citation from [Resharper documentation] C# modifiers of types and type members can be written in any order. However, arranging them in a similar way throughout your code is a good practice, which improves code readability. /cc",,,,,,
67295009,1275,PullRequest,Just continue my war with redundancies in code.Now all redundant parentheses were removed from code./cc,,,,,,
66996405,1274,PullRequest,"Fixes #1158This is a big one, so I'm going through it as slowly and methodically as possible:- [x] add new methods- [x] update impacted unit tests - [x] add new unit tests wherever appropriate- [x] add new integration tests wherever appropriate- [x] correct references in xml-docs",,,,,,
60505390,1274,PullRequestReviewComment,"really minor nitpick but the equivalent code in other unit tests in this file are all on one line, while these ones are indented/split...",,,,,,
60505509,1274,PullRequestReviewComment,"are we missing one case here where the owner, name and request are provided, but `null` for the options?",,,,,,
60505524,1274,PullRequestReviewComment,:thumbsup: just my 80-chars-per-line OCD acting up. I'll undo this.,,,,,,
60505551,1274,PullRequestReviewComment,"yes, yes we are",,,,,,
60505733,1274,PullRequestReviewComment,here too (case where `options` is `null`),,,,,,
66967079,1273,PullRequest,Refers #1246 As was discussed in #1246 top level types should be used to determine assembly name in conventions tests. I've changed type from IEventsClient to IGitHubClient and GitHubClientTests types./cc,,,,,,
60179742,1273,PullRequestReviewComment,"This should be using something in the `Octokit` project, right? So something like `IGitHubClient`?",,,,,,
60179869,1273,PullRequestReviewComment,"Yep, I'm missing some context here cc",,,,,,
60181048,1273,PullRequestReviewComment,"nice spot, I think that usage of interface instead of implementation would be appropriatehere.",,,,,,
60201674,1273,PullRequestReviewComment,"This is from the wrong assembly, should be `IGitHubClient` ?",,,,,,
60201692,1273,PullRequestReviewComment,"This is from the wrong assembly, should be `IGitHubClient` ?",,,,,,
60209119,1273,PullRequestReviewComment,"Yeah, you're absolutely right!",,,,,,
66835702,1272,PullRequest,"Fixes #1177To-do:- [x]  Add overload  GetAll(ApiOptions options) on IRepositoryHooksClient.- [x]  Add overload IObservable GetAll(ApiOptions options) on IObservableRepositoryHooksClient.- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods.Please review these changes, especially changes in RepositoriesHooksFixture.cs. I had to change it in order to get additional hooks and properly test methods with ApiOptions parameter./cc ,",,,,,,
66308665,1269,PullRequest,"This is the beginnings of adding support for #1024 the GitHub Enterprise [Management Console API]To begin with Ive only added the Get/Set Maintenance Mode functions and the actual plumbing around how we can actually integrate with the management console API.Im aware there are merge conflicts as I havent rebased to latest master yet.  We are far from done with this PR so Ill do that in good time.  For now I just want to get the [WIP] up to find out from  and  how far off track i've taken things :trollface: : ### NotesThis API is significantly different to all the ""regular"" github APIs.  There are special requirements around connectivity and authentication and it also doesnt have fully fleshed out calls that take multiple parameters, but in more than one place simply have a single parameter that takes a json string specifying multiple parameters.  To top it off it had some really strange handling around date formats and some other things.Im definitely after guidance on some of the design decisions ive made...### SummaryRead below for large detail on the inner workings and design decisions I made, but in a nut-shell someone using octokit.net against a GitHub Enterprise server an now simply call the following methods on the same `GitHubClient` client they have already created for regular API access.#### Network access- TCP Port  Since octokit handles following redirects, we don't have any issues around handling the special ports of `8080` and `8443` so we are good on this front and can simply target this API at the regular server address the user is passing into the `GitHubClient` as octokit will follow redirects as needed- API Uri's  Not as lucky on the Uri front though... The management console api calls must be targetted at `` ie they can't have the `/api/v3/` in the URL as all other calls do.  Unfortunatley in the guts of octokit.net's `GitHubClient` and `Connection` classes, this `/api/v3/` is added to any custom URL specified by the user and saved in the `baseUri` of the `Connection` object.  Originally my implementation made it so that you had to declare a new/special `GitHubClient` using a new constructor essentially stating that you wanted to use it for management console access, and this essentially passed a `bool` through which prevented the `/api/v3/` being put in the uri.  But of course this then meant that all the other API clients on this `GitHubClient` wouldnt actually work... and similarly it meant that the `client.Enterprise.ManagementConsole` client wouldn't work on a ""regular"" `GitHubClient` you were using to call the normal APIs.  My latest iteration was actually exploiting behaviour of the dotnet `Uri` appending behaviour, where if an endpoint relative Uri starts with a leading forward slash, it actually causes any Uri on the `baseUri` to be stripped off.  We've encountered the odd bug over time where inadvertently including these leading slashes on Urls in the `ApiUri` helper class has caused endpoints to not work on github enterprise, but now it seemed like this behaviour might actually help us here.  Rather than just magially include the leading slashes on the management console Uris, i implemented a function `CorrectEndpointForManagementConsole(endpoint)` that is called in each management console client method, to add the leading slash if not already there.  This does seem a bit hacky but really it is a fairly reliable way to allow a user to specify one `GitHubClient` object and credentials that work against the regular APIs on their enterprise instance, then when they use the ManagementConsole API on the same client, we manipulate the Uri via the endpoint (ie not manipulating the baseUri) and provide the management console password each time.  Plus there is zero behavioral change for anyone using octokit against github.com (ie not an enterprise user).  As an octokit contributor and enterprise user I felt like this has achieved good usability and is an acceptable code base compromise.  At least it's a starting point to see how  and others feel :)#### AuthenticatingThe management console has a special password to access it.  For API use, this password is specified as the api key, however it appears it cant be specified in the ""normal"" way the user/password or OAUTH token can be (ie using our `Credentials` object which inserts it in a header in base64/UTF8 form).  I was only able to get things successfully working, by having `?api_key=MyPassword` on the end of the Uri (or potentially it would also work being embedded in the server name `https://api_key:MyPassword` but that causes similar problems as above if we want to try and have the one `GitHubClient` object able to work with all APIsSo with the way i've implemented it on the end of the Url, it actually doesnt work too badly as it means the existing credentials provided on creating the `GitHubClient` can stay, and are used for regular API access, and every management console method takes a `managementConsolePassword` parameter.  I actually like this as it's more inline with the seriousness of some of these management console activities - eg along the lines of ""provide your password everytime you do these management related things""The irksome thing is that the password is essentiall in clear text on the end of the Url but im not sure if that's really any different to it being in the HTTP headers for regular calls anyway...#### What the heck is up with parameters containing json strings?!!The Set Maintenance Mode call takes a single `maintenance` parameter which is defined as follows: _maintenance_ `string` _Required_ A JSON string with the attributes enabled and when.I tried and tried and I just could NOT get things working in the normal way where we have a request object, which gets serialized to json and put in the body of the HTTP Post.  I had many incarnations providing a class with a public `Maintenance` parameter that then contained the c# object class with the `Enabled` and `When` parameters on it.  When that didnt work I tried simply having a public `string` Getter parameter that deserialized the class to json (didnt work), so then moved to constructing the json string in a more basic way - both normal format and fully escaped, I tried doing the parameter dictionary type approach like used in search requests, I tried the default content type and `application/json` content types but in all cases github would throw a HTTP 400 Bad Request.  Eventually I found that if I just specified the string in the url-form-encoded format of `maintenace=""{""enabled"":true, ""when"":""now""}""` it worked, so that's where I'm at at the moment.  I plan to tidy up the json string to not be created manually and instead call a serializer but for now I have something working so didnt want to wait in pushing it up.If anyone is able to show me how to get this working in a more ""normal"" way for octokit where the request object is serialized using the builtin `SimpleJsonSerializer` in the normal pipeline, I would love to see what I missed bercause I feel like I tried so many attempts and still couldnt crack it without going the form encoded route.This is definitely important to sort out a strategy for, because the [Settings] endpoint on the management console is a real doozy containing literally 50+ items in a hierarchical json structure that all have to get packed into a single json string on a `settings` property in the API call.  I am NOT looking forward to that endpoint!#### What the heck is up with the time handling?!!The response to a scheduled maintenance mode event includes this field In any other github API call ive encountered, the dates are in a lovely and easily parseable ISO 8601 format In this case we not only have the the full day and month names (this will pose issues if github can run in other cutures/languages), the silly formatting like comma and `=>` the non standard timezone offset information (in dotnet land this should be `-08:00` rather than `-0800` but most importantly THE YEAR is missing!  This plays havoc with attempting to actually parse this into a date.  Now if we hardcode a culture like `en-US` we can get around the full day/month names, and we can ""almost"" use `ParseExact()` to match most of the formatting issues, except the lack of year means we cant use `DateTimeOffset.ParseExact()` but if we use `DateTime.ParseExact()` the time zone offset is not handled well.  Given that the day of week and month are mentioned, we ""could"" potentially take an educated guess at the year, since eg if it says Tuesday the 12th April, we can figure out what YEAR in the future the 12th April will fall on a Tuesday and presume it to be this... then we could shove that year into the string.  This is clearly getting ridiculous though (espcially because this field is coming back from the API and we want it to be deserialised properly in the Json deserializer) so I took the easy way out and simply made it a `string`!!!In runtime testing this behaviour it's even more odd because through the API I can scheduled maintenance for a date in 1/1/2017 and the API response `Sunday, January 1 at 20:00` indicates it really is that 2017 date - the fact it says Sunday is the confirmation.  Yet the management console UI will show it as 1/1/2016 but in a scheduled status.  If it really was 20-16 we should either now BE in maintenance mode (not scheduled) or it should reject the update since it's in the past.  So im thinking even the management console UI itself is using this API call with the missing date and just assuming it's the current year.Now does it make sense to schedule maintenance for so far in the future?  Not really!  But given the API lets you do it, it's not really our place to limit this in any way.  My hope is that this API call gets modified to include a properly parseable ISO 8601 formatted date like all other dates in the normal APIs, and the management console GUI fixed up to know the proper year as well :grinning: In the meantime Im thinking we have to leave this field as a `string` because parsing it is too difficult and not 100% reliable.#### Other design decisions- Specifying ""when"" parameter in EditMaintenanceMode()  The SetMaintenance method `when` parameter can handle ""any"" string that the [mojombo/chronic] ruby library can parse.  This includes lots of humanised things like ""next tuesday at 5pm"" and ""3pm on the monday before friday in 3 weeks time"".  Luckily for our api case we simply have to take whatever string the user says and pass it through.  But ive also added specific suport to passing in a `DateTimeOffset` object since that is more aligned to our c# nature, and also the special `now` keyword as indicated by the API docs.  To do this i created a `MaintenanceDate` object used as the `When` parameter on the `UpdateMaintenanceRequest` object, and helper functions `MaintenanceDate.FromDateTimeOffset()` `MaintenanceDate.FromChronicString()` and `MaintenanceDate.Now()`- MaintenanceModeStatus as an enum  There appear to be finite values of `off` `on` and `scheduled` so I made this an enum.  The API docs dont definitively state the finite values though...  This isnt too different to other enums we've implemented though- Added environment var for management console password for integration tests  added to the powershell helper script and the `EnterpriseHelper` class, so the integration tests can runThat's about it for now.  Please have a read and provide feedback...  I'm looking at you  :grinning:",,,,,,
74724289,1269,PullRequestReviewComment,:fire: - the next assert will cover this,,,,,,
74724307,1269,PullRequestReviewComment,Should this string be `EnterpriseHelper.ManagementConsolePassword` ?,,,,,,
74724371,1269,PullRequestReviewComment,We don't seem to be doing any asserting here? Will the request will fail here if the GHE server is not in the right state?,,,,,,
74725112,1269,PullRequestReviewComment,":lipstick: maybe just a `new Uri(""/"" + endpoint.ToString());` here to simplify it",,,,,,
74725145,1269,PullRequestReviewComment,Can this be internal?,,,,,,
74725493,1269,PullRequestReviewComment,":lipstick: rather than doing this as two steps, you could pass in the base address here and move that logic out so it's just one call:And this usage becomes: It's a bit more duplication inside `ApiUrls`, but perhaps there's other GHE-based APIs that we need to do this for...",,,,,,
74726025,1269,PullRequestReviewComment,![],,,,,,
74726361,1269,PullRequestReviewComment,I think these tests need a specific attribute that verifies the existence of `OCTOKIT_GHE_CONSOLEPASSWORD`,,,,,,
74729215,1269,PullRequestReviewComment,"It might sound excessive, but perhaps a `StringBuilder` in here would make some of this `Concat` code easier to read...",,,,,,
74752892,1269,PullRequestReviewComment,"From memory I wrote these tests to always return maintenance mode status back to a consistent state afterwards, so this was just ensuring matinenance mode was OFF after the test which turned it ON.  Or are you saying we should actually assert this here anyway?  Or potentially do it using a `Context` helper class, with the destructor implementing the ""reset"" logic?",,,,,,
74753002,1269,PullRequestReviewComment,There was some issue with one of the code analysis rules not letting you form Uri's from strings but Ill take another look,,,,,,
74753300,1269,PullRequestReviewComment,"I think this was left in this state through sheer frustration, but im sure it should be possible to at least have a class that serializes to a json string using our existing SimpleJsonSerializer",,,,,,
74754073,1269,PullRequestReviewComment,sounds good,,,,,,
74754592,1269,PullRequestReviewComment,"i was thinking perhaps like how we have the `RequestParameters` class that has the `ToParametersDictionary()` that we could maybe extend this (or add a new similar class) that would provide a `ToFormUrlEncoded()` method on it, which would provide a way to have any request class be able to have it's key/value pairs formatted up to suit the required style here (eg  key=value&key2=value2)",,,,,,
74863887,1269,PullRequestReviewComment,"Or are you saying we should actually assert this here anyway? Or potentially do it using a Context helper class, with the destructor implementing the ""reset"" logic?I'm neutral on this, but I guess if ""ensure maintenance mode is off"" needs to be done with each test it should be done in teardown. Just me misreading the test a bit.",,,,,,
74863945,1269,PullRequestReviewComment,Huh. Weird.,,,,,,
74866374,1269,PullRequestReviewComment,What should you need me do?,,,,,,
74936629,1269,PullRequestReviewComment,Why is this setting it to the exact same thing as the ctor?,,,,,,
74937729,1269,PullRequestReviewComment,"Isn't this (more or less) the [""round-trip (`ToString(""o"")`) format""] (ISO 8601) spelled out?",,,,,,
74940801,1269,PullRequestReviewComment,"indeed it is :blush: I'll see if the GHE API is happy to just receive the out of the box `.ToString(""o"")` format",,,,,,
74941717,1269,PullRequestReviewComment,"this is a helper context class to be used via a using statement wrapping a test.  So a test that sets maintenance ON, needs to ensure that maintenance was OFF to begin with and vice versa, hence the intial state and setting it in the `ctor`.But also we dont want to leave GHE in maintenance mode after a test (since that is pretty useless for any subsequent tests) so the destructor should be ensuring maintenance mode is OFF again.  Which make me realise Im currently setting the intial state in destructor but actually should always be setting OFF :grinning:",,,,,,
74942560,1269,PullRequestReviewComment,Which make me realise Im currently setting the intial state in destructor but actually should always be setting OFF :smile: :+1:,,,,,,
75024588,1269,PullRequestReviewComment,"I'll see if the GHE API is happy to just receive the out of the box .ToString(""o"") format : No dice! :stuck_out_tongue: An internal server error 500 is thrown when using this format.I did some poking and found that all of these values cause the 500 errorAnd these formats work:So yeah basically it's the timezone designator that the GHE API seems to only accept when it is ""Z"" and not any of the other (valid ISO8601) values.  The other time components seem to be fine (eg having milliseconds or not, etc)",,,,,,
77415343,1269,PullRequestReviewComment,"can you confirm you're good with my attempts above basically proving that it does seem to require being done this way and not the built in ""O"" format?",,,,,,
77415773,1269,PullRequestReviewComment,"Hey, if it doesn't work -- it doesn't work. Who am I to say what should and shouldn't work :wink: I think I'd ping the API team at GitHub about this, though, as it seems to me that it should be more forgiving with the values it accepts.",,,,,,
66233678,1268,PullRequest,Fixes #1152 - [x] Add overloads for the `GetAll` method in the `IDeploymentStatusClient` with the the `ApiOptions` parameter.- [x] Implement the the `GetAll` method in the `DeploymentStatusClient` class.- [x] Add an overload for the `GetAll` method to the `IObservableDeploymentStatusClient` with the ApiOptions parameter.- [x] Implement the `GetAll` methods in the `ObservableDeploymentStatusClient` class.- [x] Implement the needed tests in the `DeploymentStatusClientTests` class.- [ ] Implement the required integration tests in the `ObservableDeploymentStatusClientTests` class.,,,,,,
66197542,1267,PullRequest,Fixes #1157 - [x] Add overloads for the `GetAllForRepository` and `GetAllForIssue` methods in the `IIssueCommentsClient` with the the `ApiOptions` parameter.- [x]  Implement the the `GetAllForRepository` and `GetAllForIssue` methods in the `IssueCommentsClient` class.- [x]  Add an overload for the `GetAllForRepository` and `GetAllForIssue` methods to the `IObservableIssueCommentsClient` with the `ApiOptions` parameter.- [x]  Implement the `GetAllForRepository` and `GetAllForIssue` methods in the `ObservableIssueCommentsClient` class.- [x] Implement the needed tests in the `IssueCommentsClientTests` class.- [x] Implement the required integration tests in the `ObservableIssueCommentsClientTests` class.,,,,,,
66111331,1266,PullRequest,"I continue my battle with code redundancies. Now, all redundant control flow jump statements were removed.",,,,,,
66031754,1265,PullRequest,"MergeBaseCommit was spelled incorrectly in CompareResult causing Octokit to pass""null"" no matter what the comparison is. This commit makes MergedBaseCommit (theprevious spelling) obsolete, introduces MergeBaseCommit property and adds a testto ensure that MergeBaseCommit is set properly in CompareResult.In the test, I specifically compared a commit with itself since the test onlycares whether the property is filled correctly or not, it is not testing whetherthe internal computation is correct or not.Closes #1258.",,,,,,
65916351,1262,PullRequest,Fixes #1172To Do- [x] Add overload to `IRepositoryCommentsClient` and `IObservableRespositoryCommentsClient`- [x] Implement the above methods in the respective classes- [x] Add unit tests for `IRepositoryCommentsClient`- [x] Add unit tests for `IObservableRespositoryCommentsClient`- [ ] Add integration tests for `IRepositoryCommentsClient`- [ ] Add integration tests for `IObservableRepositoryCommentsClient`,,,,,,
65896445,1261,PullRequest,Fixes #1156 - [x]  Add overloads for the GetAll\* methods in the IGistsClient with the the ApiOptions parameter.- [x] Implement the the GetAll\* methods in the GistsClient class.- [x] Add an overload for the GetAll\* methods to the IObservableGistsClient  with the ApiOptions parameter.- [x] Implement the GetAll\* methods in the ObservableGistsClient  class.- [x] Implement the needed tests in the GistsClientTests class.- [x] Implement the required integration tests in the ObservableGistsClientTests class.,,,,,,
59693390,1261,PullRequestReviewComment,We're having an ongoing discussion about dropping namespaces from all our test classes -  - it kind of goes against the standards for .NET but we think it has some benefits in places like the test runner output.Are you able to drop this namespace and re-indent this file? It should simplify this diff a bit as well...,,,,,,
59693637,1261,PullRequestReviewComment,"As mentioned below, can we drop this namespace from our new test class and re-indent this file?",,,,,,
59693843,1261,PullRequestReviewComment,"I like `DictionaryWithApiOptions` for the general case, but these feel very specific to gists.Should these live here, or do you think they should live closer to the tests themselves?",,,,,,
59693893,1261,PullRequestReviewComment,Nice spot :sparkles:,,,,,,
59694173,1261,PullRequestReviewComment,And nice work fixing up these too!,,,,,,
59700206,1261,PullRequestReviewComment,"I see, I need to get use to this ugly underline then :/",,,,,,
59700223,1261,PullRequestReviewComment,"yes indeed both `DictionaryWithApiOptions`and `DictionaryWithApiOptionsAndSince`are specific to  `GitsClient`, it doesn't feel right to put them in `Arg.cs`, should i define them in both `GistsClientTests`and `ObservableGistsTests`or remove them entirely and use the expression each time ?",,,,,,
59778243,1261,PullRequestReviewComment,"if you feel like they are being used many times and the readability is necessary, define them in the classes. Otherwise just inline them.",,,,,,
59778565,1261,PullRequestReviewComment,"We'll circle around to that later and get R# to play along (I'm pretty sure that's R#, it is on my machine at least)",,,,,,
59995715,1261,PullRequestReviewComment,done.,,,,,,
65868684,1260,PullRequest,This implementation targets the issue : #1155 - [x]  Add an overload for the GetAllForGist methods to IGistCommentsClient with the ApiOptions parameter.- [x]  Implement the the GetAllForGist  method to the GistCommentsClient class.- [x]  Add an overload for the GetAllForGist  methods to the IObservableGistCommentsClient with the ApiOptions parameter.- [x]  Implement the GetAllForGist methods in the ObservableGistCommentsClient class.- [x]  Implement the needed tests in the GistCommentsClientTests class.- [x]  Implement the required integration tests in the ObservableGistCommentsClientTests class.,,,,,,
65832508,1259,PullRequest,This implementation targets the issue : #1154 - [x]  Add an overload for the GetAll\* methods on IFollowersClient with the ApiOptions parameter.- [x]  Implement the the GetAll\* method in the FollowersClient class.- [x]  Add an overload for the GetAll\* methods to the IObservableFollowersClient with the ApiOptions parameter.- [x]  Implement the GetAll\* methods in the ObservableFollowersClient class.- [x]  Implement the needed tests in the FollowersClientTests class.- [x] Implement the required integration tests in the ObservableFollowersClientTests class.,,,,,,
59139107,1259,PullRequestReviewComment,This one is interesting as my test account doesn't have any followers. Not sure how we should handle this...,,,,,,
59139560,1259,PullRequestReviewComment,"All those tests passed, I've tried them using a test account with 3 followers!",,,,,,
59139777,1259,PullRequestReviewComment,"Oh yes, this isn't your fault. I'm just thinking aloud here about how to make these tests more adaptable to other contributors...",,,,,,
65622656,1250,PullRequest,Fix the Testing Documentation's guide link after merging/deleting the rewrite-contributing branch.,,,,,,
65558447,1248,PullRequest,"As discussed in #1111, there are some places where we use `await` but do not specify the context correctly.This is me scanning the codebase and doing three things with each scenario I find:- if possible, drop the `async/await` usage completely- if not possible to remove, ensure `ConfigureAwait` is set- ensure that the `await` and `ConfigureAwait` are on the same line - to make finding and verifying these usages easier in the future- [x] integration tests passingcc  as I found myself refactoring in some of the Enterprise API clients",,,,,,
65440912,1247,PullRequest,"Refer to issue #1173- [x] Add overloads for `Task GetAll(String owner, String name)` (reactive too)- [x] Add overloads for `Task GetAll(String owner, String name, CommitRequest request)`- [x] Add unit test- [x] Add integration tests.//cc",,,,,,
58685238,1247,PullRequestReviewComment,Could you add here:We have discussion about it [here].,,,,,,
58685295,1247,PullRequestReviewComment,Could you add here:We have discussion about it [here].,,,,,,
58685412,1247,PullRequestReviewComment,Could you add new line here?,,,,,,
58685561,1247,PullRequestReviewComment,"I guess, it's unintended changes here. Could revert it?",,,,,,
58686525,1247,PullRequestReviewComment,"As long as you changed XML documentation, could you add adjust `I know that is not marked in issue description, but I think as long as we change xml docs, we can adjust it a little bit :smile:",,,,,,
58697334,1247,PullRequestReviewComment,Are we meant to check the `options` parameter for `null` here?,,,,,,
58698173,1247,PullRequestReviewComment,Is this right?  Shouldnt `secondCommit` be an entirely different set of 5 commits to `firstCommit` thus `first[1]` shouldnt equal `second[0]`?,,,,,,
58698529,1247,PullRequestReviewComment,"obviuosly you've needed more overloads here for calls that use dictionary of parameters and also ApiOptions (and also it looks like we may yet have another requirement for a `GetAll` call that needs to take `ApiOptions` and uses  an `accepts` header.I wonder if there is a cleaner way to rationalise all the overloads here to just call through to one implementation method, passing default/empty parameters for the dictionary and acceptheader etc...  rather than having the pagination setup call etc in more than one place. can advise on the approach here",,,,,,
58698948,1247,PullRequestReviewComment,Are we meant to use `ApiOptions.None` rather than `new ApiOptions()` ?,,,,,,
58733376,1247,PullRequestReviewComment,Need to `Ensure` things here as well,,,,,,
58733714,1247,PullRequestReviewComment,I don't think so because we are passing null from another overload,,,,,,
58739748,1247,PullRequestReviewComment,Should we be passing ApiOptions.None rather than null? I haven't been too involved in these changes to date...  What do other merged ApiOptions changes do in similar situation?,,,,,,
58741127,1247,PullRequestReviewComment,Should we be passing ApiOptions.None rather than null? Yes,,,,,,
58742934,1247,PullRequestReviewComment,"No, it isn't.Actually i was trying to check something.",,,,,,
58874430,1247,PullRequestReviewComment,I wonder if there is a cleaner way to rationalise all the overloads here to just call through to one implementation methodI think this is achievable if we make this new `GetPagesWithOptions` method the endpoint. I'll call out in other places how we can achieve this.,,,,,,
58874879,1247,PullRequestReviewComment,"Actually, just make the body of `GetAndFlattenAllPages(this IConnection connection, Uri url, ApiOptions options)` call into your new code:This should then leave you with the obsolete `GetPagesWithOptions getPageFunc)` which can be safely deleted.",,,,,,
59138568,1247,PullRequestReviewComment,"Make this class public, I think the test discoverer will miss these currently...",,,,,,
59139196,1247,PullRequestReviewComment,:lipstick: you can use `Args.EmptyDictionary` and `Args.ApiOptions` here rather than the NSubstitute-specific mocks,,,,,,
59139406,1247,PullRequestReviewComment,"We're close to getting this in, so I think I'm less worried about making this change here...",,,,,,
59139581,1247,PullRequestReviewComment,"This all seems fine, and the integration tests are working fine on my side :shipit:",,,,,,
59139740,1247,PullRequestReviewComment,:lipstick: use `Args.EmptyDictionary` and `Args.ApiOptions` here rather than the NSubstitute-specific mocks,,,,,,
59139889,1247,PullRequestReviewComment,typo: `Respository` -> `Repository`,,,,,,
59140544,1247,PullRequestReviewComment,"So close - this should assert `""repos/fake/repo/commits""`",,,,,,
65425622,1246,PullRequest,"Refer #1231In order to provide uniform name for constructors test classes, I've created new convention test checks  that each client test class must contain a nested TheCtor class.- [x] Add new convention test.- [x] Fix all red tests (Rename/Add needed tests classes)- [x] Remove unused usings in modified classes.- [x] Find way to detect tests assembly in proper way.- [x] Each test class TheCtor should have method EnsuresNonNullArguments that test a client constructor against null arguments.- [x] All unused ""using"" directives in modified classes were removed in order to get code more robust.Ready to any discussion about implementation of convention test ClientConstructorTests.cs, especially about GetTestConstructorsClasses method. /cc ,",,,,,,
59139859,1246,PullRequestReviewComment,"Do you think we could simplify the parameter creation to one local variable, rather than creating new values everywhere they're used?e.g.This might help with the readability of these tests...",,,,,,
59157044,1246,PullRequestReviewComment,I agree :+1:  Fixed.,,,,,,
60029583,1246,PullRequestReviewComment,Did this change get lost?,,,,,,
60029871,1246,PullRequestReviewComment,Nice spot! :eyes:,,,,,,
60031614,1246,PullRequestReviewComment,"Unfortunately, yes! Fixed :+1:",,,,,,
65270796,1245,PullRequest,Implementation of  #1236 opened by  for [Preview Support for Pull Request Merge Api] recently introduced by github.,,,,,,
58523618,1245,PullRequestReviewComment,Is this a necessary change?,,,,,,
58524707,1245,PullRequestReviewComment,No this is not necessary. but i thought i should also make changes in ObservablePullRequestsClientTests.cs .I wasn't sure that i should initialize property here or leave it as it was.. what do you say should i remove this?,,,,,,
58580634,1245,PullRequestReviewComment,"It looks like we're not asserting anything about this object, so I think we should revert this change. :cool:?",,,,,,
58583327,1245,PullRequestReviewComment,yes you are right..i should revert it now. :+1:,,,,,,
58595967,1245,PullRequestReviewComment,"Could we assert something here about the commit title or message versus what we actually committed, to indicate this was squashed?",,,,,,
58596273,1245,PullRequestReviewComment,sure i will add assert statement here. :smiley:,,,,,,
58598857,1245,PullRequestReviewComment,One suggestion - look at the commit:,,,,,,
58681966,1245,PullRequestReviewComment,:+1:,,,,,,
60527221,1245,PullRequestReviewComment,"This is unintended, right?",,,,,,
60707906,1245,PullRequestReviewComment,I think this is a side-effect of `.\build FormatCode` - I'm tracking this in,,,,,,
63882768,1245,PullRequestReviewComment,"Not sure how this crept in, but this project reference shouldn't be needed :fire: :fire: :fire:",,,,,,
65169377,1240,PullRequest,Refer to the issue #1153 - [x]  Add an overload for the GetAll\* methods on IEventsClient with the ApiOptions parameter.- [x]  Implement the the GetAll\* method in the EventsClient class.- [x] Add an overload for the GetAll\* methods to the IObservableEventsClient with the ApiOptions parameter.- [x] Implement the GetAll\* methods in the ObservableEventsClient class.- [x] Implement the needed tests  in the EventsClientTests class.- [x] Implement the required integration tests in the ObservableEventsClientTests class.,,,,,,
58579094,1240,PullRequestReviewComment,"We should probably check `("""", ""name"", ApiOptions.None)` and `(""owner"", """", ApiOptions.None)` as well",,,,,,
58579154,1240,PullRequestReviewComment,:fire: this file,,,,,,
58579422,1240,PullRequestReviewComment,Do you know what this rule represents?,,,,,,
58611157,1240,PullRequestReviewComment,"I have absolutely no idea what auto generate that line !!, i will keep an eye on this file in the future.",,,,,,
58725266,1240,PullRequestReviewComment,"pls, i need some help with the GetAllForAnOrganization Method's IntegrationTests  ! since the user must be authenticated and the organisation must be associated with that particular user !",,,,,,
58726620,1240,PullRequestReviewComment,"Have you [configured your integration test settings] with a test user (and test organization that this user is an owner of) created specifically for running the integration tests (so as not to mess up your personal account or rate limits etc)?Then in integration tests, you can get that configured organization just with `Helper.Organization` (same as you can get the integration user with `Helper.UserName`)",,,,,,
58737361,1240,PullRequestReviewComment,"thx, i miss configured some of the settings, i will try to fix the failing test then i will report back.",,,,,,
58753193,1240,PullRequestReviewComment,All tests passed.,,,,,,
58761603,1240,PullRequestReviewComment,TheGetAllForRepositoryMethod's tests are still failing for some reason !?,,,,,,
58883922,1240,PullRequestReviewComment,I don't believe the test failure is related to this PR.Here's what I can see:,,,,,,
59138488,1240,PullRequestReviewComment,I think this one was overlooked with the cleanup,,,,,,
65161480,1239,PullRequest,Implements #1237.As per this [blog] post.GitHub API will now return a HTTP 451 response (rather than a 403) when a repository or gist cannot be accessed due to a DMCA notice.Checklist:- [x] Add new exception.- [x] Add it to `HandleErrors`.- [x] `.\build FixProjects`- [x] Unit tests.- [x] Integration tests./cc,,,,,,
59127296,1239,PullRequestReviewComment,Shouldnt the status code here be the HTTP 451 (not Forbidden?),,,,,,
59127367,1239,PullRequestReviewComment,"I'm really sorry for this, I'll fix this. Thanks.",,,,,,
59127380,1239,PullRequestReviewComment,No need to apologosie!  Everyone's contributions are much appreciated  :grinning:,,,,,,
65078423,1238,PullRequest,Maybe fixes #1233- [x] does this still build?- [x] do the tests still pass?,,,,,,
65067143,1235,PullRequest,"Adds new field ""Importers"" to the Metadata request of MiscellaneousClientAPI docs: Fixes #1234 - [x] Added `Importers` field to `Meta` response model and updated `ctor`- [x] Added unit test for `GetMetadata` method- [x] Enhanced integration tests for `GetMetadata` method  - Revealed a bug with an existing field `GitHubServicesSha` not being deserialised properly, added a fix to this PR- [x] Added unit tests for `ObservableMiscellaneousClient` for all methods  No tests for this observable client existed, so all methods were implemented- [x] Fixed `ObservableMiscellaneousClient` constructor to be inline with all other obersvable API clients  (Marked old constructor as `[Obsolete]` so it can be removed in a later release)",,,,,,
58420629,1235,PullRequestReviewComment,"Let's make this really specific - what about something like: `[Obsolete(""Please use the IGitHubClient overload constructor"")]`",,,,,,
64575510,1230,PullRequest,"I've found and fixed some misspellings inside Octokit solution. There are a lot of changes, but they all very simple, one or two letter have been changed only. Hope this PR would be useful./cc ,",,,,,,
57997848,1230,PullRequestReviewComment,These are going to be breaking changes for the unfortunate few which might be trying to use these - we need to leave the old ones around and mark them as obsolete,,,,,,
58003909,1230,PullRequestReviewComment,"I have one remarks about it. Yes, it is breaking changes, but this fully incorrect items (**Elixer**, Unified *_Paralel *_ C), these items never works correctly and if somebody use these then he doesn't  get any search results. Anyway, I reverted older items back and added new correct items. Hope they will be removed in further release :bowtie:.",,,,,,
64574579,1229,PullRequest,"I found and fixed some issues when Ensure.ArgumentNotNull and Ensure.ArgumentNotNullOrEmptyString were used./cc ,",,,,,,
64469223,1228,PullRequest,"## Status- [x] Implemented new options- [x] Unit tests for the request parameters for all new (and existing types)- [x] Flesh out some integration tests to use some of the new options- [x] Get feedback on naming of `No` property and `IssueNoMetadataQualifier` enum- [x] Get feedback on implementation of exclusion parameters- [x] Guidance from  +/-  on whether to include additional fields other than `label` in the exclusion support## DetailsFixes #1227 Added new options to `SearchIssuesRequest`- Searching by [`team`]- Searching by ""not"" label syntax [`-label`]- Searching on missing metadata [`no`]- The ""human"" styled [`is`] query   - (although `state` and `type` cover most of the `is` options, the `merged`/`unmerged` have no alternative)- Searching by commit [`status`]- Searching by branch names [`base`] or [`head`]- Searching on [`closed`] date range## TestingAdded unit tests for each parameter on this class to verify that when not set, the parameter is not in the query string, and when set the parameter is set as expectedAdded some integration tests that excercise some of the new options## Discussion~~I'd appreciate feedback on the implementation for [""excluding"" labels].  In the API docs, this is done by using notation `-label:labelname` as opposed to `label:labelname` to include a label.  At first I thought we could just implement this by having any label prepended with a hyphen be deemed to be an ""exclusion"" label, however it turns out that it's actually valid to have labels that start with a hyphen.  So I implemented this as a separate list property `SearchIssuesRequest.NotLabels`~~~~It feels a bit ugly so if someone has a better way, let me know~~~~**Update**: Now renamed to `SearchIssuesRequest.ExcludeLabels`~~See  for how the ""exclusion"" field implementation is shaping up...Similarly, the [""missing metadata""] search option, ive called the class property `No` to match the query property in API docs `no`, and gone with `IssueNoMetadataQualifier` as the enum name.  Open to better suggestions...",,,,,,
60386776,1228,PullRequestReviewComment,I think these should all be `[IntegrationTest]` to ensure they only run when you have an integration test account setup.,,,,,,
60389094,1228,PullRequestReviewComment,"Trying to think of a more succinct way to describe this, but coming up empty üëå",,,,,,
60389317,1228,PullRequestReviewComment,"Semantics, but perhaps `Dictionary` instead of crafting tuples?",,,,,,
60815809,1228,PullRequestReviewComment,"Nice spot, thanks",,,,,,
60815866,1228,PullRequestReviewComment,Poor old Tuples everyone hates them!  Yep good idea not sure how I ended up with `<List<Tuple<` instead of just a `Dictionary<` hahah :grinning: These are now tidied up,,,,,,
60818652,1228,PullRequestReviewComment,:lipstick: rename this to `.PullRequest`,,,,,,
60827921,1228,PullRequestReviewComment,"Lol, nice pickup!",,,,,,
64422023,1226,PullRequest,"After the discussion ,  I checked usage of ApiOptions and add necessary null checking./cc",,,,,,
64293293,1225,PullRequest,I have fixed some misspells in ApiUrls.cs and ApiConnection.cs to make code more clean.,,,,,,
64261669,1224,PullRequest,per #1194 (specifically [this comment])- one small item to draw attention to is [this question],,,,,,
64141764,1223,PullRequest,"Refer #1151 .To-do:- [x] Add overload Task> GetAll(ApiOptions options) on IDeploymentsClient.- [x]  Add overload IObservable GetAll(ApiOptions options) on IObservableDeploymentsClient.- [x]  Add unit tests for these new methods.- [x]  Add integration tests for these new methods.Some additional checks for count of received parameters were added in ObservableDeploymentsClientTests. If these are ambiguous checks, pls, let me know :+1:",,,,,,
57473249,1223,PullRequestReviewComment,"Given not all of the tests need this range of commits, do you think it'd be useful to introduce some new code here for the more complex deployment scenarios?",,,,,,
57473596,1223,PullRequestReviewComment,Don't change this to call the same code that the app does - let's keep this as-is to verify we're also formatting the URL correctly...,,,,,,
57509928,1223,PullRequestReviewComment,Fixed.,,,,,,
57509957,1223,PullRequestReviewComment,"Do you mean, I should move creation of these additional commits from test constructor to each ApiOption test method?",,,,,,
57518486,1223,PullRequestReviewComment,"while I like making this initial code more generic (and extending it to do multiple commits) I think we can extract this from the constructor and just have a standalone method or methods.A couple of reasons:- we're creating 6 commits for every test run, even though many of them only need one- by moving the creation of the commits closer to the test itself, we can make the intent clearer- we're doing a lot of `.Result` here, which blocks the current thread as you can't await in a constructor. By moving this async code closer into the test itself, we can leverage async/await better - which the test runner supports",,,,,,
57545746,1223,PullRequestReviewComment,All reasons sounds reasonable :) I'll refactor it.,,,,,,
57760218,1223,PullRequestReviewComment,"Let's put this back to their expected format, instead of using `ApiUrls` here.",,,,,,
57760230,1223,PullRequestReviewComment,"Let's put this back to their expected format, instead of using `ApiUrls` here.",,,,,,
57782913,1223,PullRequestReviewComment,"Like we mentioned earlier, can you bring back the `Ensure` arguments for `owner` and `name` here?",,,,,,
57782993,1223,PullRequestReviewComment,:lipstick: indenting (and bring the `null` onto it's own line),,,,,,
57783015,1223,PullRequestReviewComment,:lipstick: indenting (and bring the `null` onto it's own line),,,,,,
57783045,1223,PullRequestReviewComment,:lipstick: indenting (and bring the `null` onto it's own line),,,,,,
57783543,1223,PullRequestReviewComment,I'm not a fan of using `_` or `m_` prefixes for private fields like this. Could you change this back?,,,,,,
57783755,1223,PullRequestReviewComment,"Like we mentioned earlier, can you bring back the `Ensure` arguments for `owner` and `name` here?",,,,,,
57837299,1223,PullRequestReviewComment,No problem. So I will not change that in future.,,,,,,
57837308,1223,PullRequestReviewComment,Yep),,,,,,
57837320,1223,PullRequestReviewComment,"Oh, I missed some places, sorry! Fixed.",,,,,,
57837363,1223,PullRequestReviewComment,Fixed (I guess :) ),,,,,,
64137062,1222,PullRequest,In order to get code more clean I deleted unused ArgumentNotNullOrEmptyString checks wherever ApiOptions is ised as parameter for overloads GetAll(...).,,,,,,
64135976,1221,PullRequest,"In order to get code more clean I deleted unused ""using"" directives in whole solution. I hope there will not any merge issues. If so, pls reject this PR, I will do that more carefully.",,,,,,
64135023,1220,PullRequest,Some redundant commas were removed.,,,,,,
64134360,1219,PullRequest,Some redundant commas were removed.,,,,,,
64117513,1218,PullRequest,See comment: - [x] fix impacted tests,,,,,,
57460248,1218,PullRequestReviewComment,"Should we save these checks here in GetAll(string owner, string name) if we have them in overloaded method GetAll(string owner, string name, ApiOptions options) too?",,,,,,
57472573,1218,PullRequestReviewComment,"Personally I'd lean towards ""no"", but I'll let  chime in here as well and see if we agree or not on this...",,,,,,
57475690,1218,PullRequestReviewComment,"I think of these as being like contracts. I want them as close to the call-site as possible. Semantically, I think of these arguments being invalid for this method.Eventually, we'll replace many of these with Fody NullGuard which will throw the exception at the call site.",,,,,,
57476913,1218,PullRequestReviewComment,I think of these as being like contracts. I want them as close to the call-site as possible. :thumbsup:,,,,,,
64082939,1215,PullRequest,This test was added in #1195 but it was comparing the wrong branch. cc,,,,,,
64074316,1214,PullRequest,I found methods with duplicated piece of code in SearchClientTests.cs (TestingTheRepoQualifier and TestingTheRepoQualifier_InConstructor) and just remove it.,,,,,,
64051283,1213,PullRequest,Refer #1178 Added the methods as well as tests (reactive methods too).,,,,,,
57358673,1213,PullRequestReviewComment,"We should be able to get away with just using the `GetAll` overload that takes `endpoint` and `options`, right?",,,,,,
57361541,1213,PullRequestReviewComment,"Yeah, my bad :grin: Have made the changes",,,,,,
57784474,1213,PullRequestReviewComment,:lipstick: this should be `TheGetAllMethod`,,,,,,
57867924,1213,PullRequestReviewComment,extraneous whitespace here? 2 spaces in `///.. Options to change the API response,,,,,,
57869318,1213,PullRequestReviewComment,whitespace,,,,,,
57869329,1213,PullRequestReviewComment,whitespace,,,,,,
59122629,1213,PullRequestReviewComment,"Can you also add a `EnsuresNonEmptyArguments()` test function that passes `""""` into the variuos parameters and ensures exceptions are thrown?",,,,,,
63918591,1212,PullRequest,"This implementation targets the issue [#1150]- [x] Add an overload for the GetAll method on ICommitStatusClient with a new parameter ApiOptions- [x] Implement the the new method on the class which implements ICommitStatusClient- [x] Add an overload for the GetAll method on IObservableCommitStatusClient with a new parameter ApiOptions- [x] Implement the new method on the class which implements IObservableCommitStatusClient- [x] Implement the RequestsCorrectUrlWithApiOptions unit test- [x] Implement the integration testsPs: this is my first contribution to this repo, your remarks are welcome",,,,,,
57204536,1212,PullRequestReviewComment,"Can you change this method signature to be `(owner, name, reference, options)`?",,,,,,
57205523,1212,PullRequestReviewComment,Ok,,,,,,
57360215,1212,PullRequestReviewComment,"Rather than duplicating all these rules, `GetAll(owner, name, reference)` should just call `GetAll(owner, name, reference, ApiOptions.None)`",,,,,,
57482643,1212,PullRequestReviewComment,"Rather than duplicating all these rules, GetAll(owner, name, reference) should just call GetAll(owner, name, reference, ApiOptions.None)Yea agreed i will fix that in the next commits",,,,,,
57482989,1212,PullRequestReviewComment,"Sorry, I should clarify this before you go and fix it:- The line below is very similar to the actual implementation inside the new `GetAll` method you've defined. So rather than call `_connection.GetAndFlattenPages(...)` here, why not just call `GetAll(owner, name, reference, ApiOptions.None);` here?- We've been discussing what to do with the `Ensure` usages in the case where we call a different overload. We've settled on keeping these around, even if they are duplicated checks. So don't clean them up here.Make sense?",,,,,,
57507881,1212,PullRequestReviewComment,"We've been discussing what to do with the Ensur e usages in the case where we call a different overload. We've settled on keeping these around, even if they are duplicated checks. So don't clean them up here.I am not sure why to !, a link to the discussion would be helpful, thanks (y)",,,,,,
57534669,1212,PullRequestReviewComment,here's the related discussion,,,,,,
57539793,1212,PullRequestReviewComment,And could you take a look at the Integration Tests :pray: ?,,,,,,
57792410,1212,PullRequestReviewComment,"Given `master` will actually change over time, we'd need to be careful here about what we're testing.For example, you could lock this to 1335f37c6cde55de09c086cda283e70e0dfc339e which has 5 statuses and won't change. This means the first three tests will pass currently.",,,,,,
57792525,1212,PullRequestReviewComment,"Given we're working with five commit statuses, you could change this `PageSize` to 2 so that you can get these other tests working as expected...",,,,,,
57793266,1212,PullRequestReviewComment,Swap `options` out for `Args.ApiOptions` here,,,,,,
58088093,1212,PullRequestReviewComment,This test will fail as we changed the page size above...,,,,,,
58117062,1212,PullRequestReviewComment,I forget to commit that one...My bad,,,,,,
63844310,1211,PullRequest,"Fixes #1181 .Checklist:- [x] Add an overload for this method on `ITeamsClient` with a new parameter `ApiOptions`- [x] Implement the new method on the class which implements `ITeamsClient`- [x] Add an overload for this method on `IObservableTeamsClient` with a new parameter `ApiOptions`- [x] Implement the new method on the class which implements `IObservableTeamsClient`- [x] Reactive client tests.- [x] Integration tests.As I was doing this, a couple of questions sprung up in my mind:- ~~After adding `ApiOptions` overload to the methods, we change the implementation of the old method to just call the new one with `ApiOptions.None`. Why don't we just write one method and use default values of `ApiOptions.None`?~~ see discussion- ~~Secondly, modifying the test for the overloads requires you to check for `Args.ApiOptions`, neither `ApiOptions.None` nor `Arg.Any(ApiOptions.None)` work. Why is that so?~~ see discussion/cc",,,,,,
57216610,1211,PullRequestReviewComment,Nice catch!,,,,,,
57790630,1211,PullRequestReviewComment,Can you add the `Ensure` argument for `org` here?,,,,,,
57837630,1211,PullRequestReviewComment,"I also thought of adding it, but since it will be checked in the internal `GetAll`, I skipped it. Should I add here too?",,,,,,
58133507,1211,PullRequestReviewComment,Yes please,,,,,,
58441380,1211,PullRequestReviewComment,"This is a coding style thing, which is cool and all but there's no other changes around here.Can we revert this to simplify the diff?",,,,,,
63836306,1210,PullRequest,"I've removed some common redundancies of code from Octokit.Net.List of redundancies:1. Redundant explicit array creation in argument of 'params' parameter.2. Redundant type qualifiers.3. Empty constructors.4.  Redundant explicit array type specification.5. Redundant member initializers.6.  Redundant collection list initializers.7.  Unused ""using"" directives were removed (in modified files).8. Some misspellings were fixed.This PR was made in order to support code quality in Octokit.Net.",,,,,,
57199065,1210,PullRequestReviewComment,:lipstick: let's make this `Assert.NotEmpty(membersInBoth);`,,,,,,
57200606,1210,PullRequestReviewComment,Done!,,,,,,
57228301,1210,PullRequestReviewComment,Apologies: I inverted this assert earlier - this should be `Assert.Empty`,,,,,,
57275944,1210,PullRequestReviewComment,Done!,,,,,,
63712430,1209,PullRequest,"Resharper has some useful code analysis that used to eliminate code redundancies. I used Resharper to find ""Inconsistent modifiers declaration order"" issues and fix them.",,,,,,
63708904,1206,PullRequest,"Resharper has some useful code analysis that used to eliminate code redundancies. I used Resharper to find ""Redundant string.Format() call"" and delete them.",,,,,,
63707614,1205,PullRequest,"Resharper has some useful code analysis that used to eliminate code redundancies. I used Resharper to find redundant ""this."" qualifiers and delete them.Also, I want to deliver a few PR that are connected with some of redundancies in Octokit.Net, Have I open issue for each of them? Or I could create just PR without appropriate issue?/cc",,,,,,
63706268,1204,PullRequest,"Due to shenanigans with the way dotnet joins`Uri` objects together, if any relative `Uri` endpoint starts with a leading slash, this ""wipes out"" the `/api/v3/` component of the `BaseAddress` for GitHub Enterprise.  There were 2 occurrences of endpoint Uri's being set in `ApiUrls` helper class that had incorrect leading slashes on them, causing these calls (both for `RepositoriesClient.GetAllPublic()`) to return HTTP 406 ""NotAccepted"" errors when run against GitHub Enterprise due to the Url being incorrect.  These have now been corrected.Additionally I have added a safety in `HttpClientAdapter` class, when constructing the full uri, to trim any leading slashes off relative Uri endpoint before joining it to `BaseAddress`.   is this OK or is there another way you'd prefer to guard against this?",,,,,,
63675543,1203,PullRequest,Fixes #1202.Minor issue. Few files changed.,,,,,,
56943153,1203,PullRequestReviewComment,"Not sure how this got introduced (I've seen VS do this from time to time, and it's not exactly repeatable). Are you able to revert these?",,,,,,
56944233,1203,PullRequestReviewComment,"Actually, I was doing this on Xamarin Studio on OS X. :disappointed: But still, why didn't it happened to all the items?",,,,,,
63366008,1199,PullRequest,"As was mentioned hereConsistency is our friend! So, this PR intends to fix inconsistency a little bit./cc",,,,,,
63191196,1198,PullRequest,"Refer #1149  .To-do:- [x]  Add overload Task GetAll(ApiOptions options) on IAuthorizationsClient.- [x]  Add overload IObservable GetAll(ApiOptions options) on IObservableAuthorizationsClient.- [x]  Add unit tests for these new methods.- [x] Add integration tests for these new methods.I have one question about integration tests for (Observable)AuthorizationsClient. There are no any integration tests for these clients, so should I add it?",,,,,,
56477817,1198,PullRequestReviewComment,I'm not sure why but in the rest of the lib the `` are left empty.We should either stick with that - or start here as change (which would necessitate going back and changing the entire code base),,,,,,
56480947,1198,PullRequestReviewComment,I updated method's documentation.,,,,,,
56812248,1198,PullRequestReviewComment,"I wonder with these `ApiOptions` implementations, if there should actually be a unit test for this exception throw.  (And same in [`ObservableAuthorizationsClient`])",,,,,,
56812592,1198,PullRequestReviewComment,"This test and the one before it (`RequestsCorrectUrl()`) are both checking the same thing.  Perhaps this one should check that the specific ApiOptions object specified was passed through to the client.  Eg instead of using ApiOptions.None, declare one containing some page size/skip settings, then verify it is actually seen on the `Received()` call?I realise you were just following the reference implementation but Im just wondering before we go through and implement ALL the pagination PR's we should settle on a good set of test coverage.  There are only 1 or 2 merged so far, so we can easily go back and add the extra unit test to those if we decide it's needed.  The main thing is, it would be done on all the remaining issues as they are merged.My 2c is that as much as possible gets covered by the unit tests! :grinning:",,,,,,
56852732,1198,PullRequestReviewComment,"I'm fully agree, will be fixed in the next commits. Now I unmarked items in PR todo list, so WIP :)",,,,,,
56853187,1198,PullRequestReviewComment,"I'm fully agree, fixed in the next commits. Also, I reviewed other places where ApiOptions is used and update the tests accordingly.",,,,,,
63190721,1197,PullRequest,"If you're not familiar with it, the [Contributor Covenant] is a good starting point for communities to identify the values they uphold, as well as what happens when conflicts arise.Opening this up to start a discussion on what should be in it.- ~~[ ] discussion about things to add/change/remove~~- ~~[ ] introduce preamble which is Octokit-specific~~- [x] replace `[INSERT EMAIL ADDRESS]` with actual email address- [x] mention this in `README.md`",,,,,,
56477053,1197,PullRequestReviewComment,"Serious question: Some of use come from a more relaxed definition of `professional setting` in general, or at least when it comes to projects done on private time.Is it worth it/is there a way at all to reword this bit so as not to cause confusion due to the dry (American based) meaning?",,,,,,
56480235,1197,PullRequestReviewComment,"Given this is a ""virtual"" group of contributors and spanning just about all the continents, I'm open to elaborating on what this might mean to our situation. This also feels like a bit of a catch-all phrase, so perhaps we can be more specific here. Will ponder on it, but open to suggestions...",,,,,,
62703035,1197,PullRequestReviewComment,"I'd like to leave it as-is so we stay true to the original CoC. We take a pretty relaxed approach to our ""professional setting"" so telling jokes and being silly is fine as long as the jokes aren't demeaning or exclusive of others along the lines described. So probably fine to make the joke about VB the programming language, but not jokes that demean women.Also, we understand that people make mistakes and have different ideas about what is considered appropriate. We're not going to hell-ban you for the first infraction unless it's way over the line. Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.Consider this document the start of the conversation, not the end. For the most part, I don't see anything in here so far that goes against the spirit of this. Everyone that's participated has been pretty great. We've had a few bad eggs, but most were still somewhat respectful.",,,,,,
63178595,1196,PullRequest,I found the function [here] to be incorrect. Therefore corrected it.--EDIT--I also ran **./build FormatCode** just in case i missed some formatting things.,,,,,,
63150797,1195,PullRequest,**Title**New method on RepositoryCommits client - Get the sha1 of a commit reference. Fixes #1189 **Description**- [x] Add a sha1 method to IRepositoryCommitsClient- [x] Add unit and integration tests for this new method- [x] Add a sha1 method to IObservableRepositoryCommitsClients- [x] Update AcceptHeaders to include the preview http accept headerThis is my first foray into contributing to OSS. Any feedback is greatly appreciated.,,,,,,
56433106,1195,PullRequestReviewComment,Could we add a verb to this method? Say something like `GetSha1`?,,,,,,
56438806,1195,PullRequestReviewComment,"Minor note that the wording should be ""Ensures"" rather than ""Ensure"".  Since the test shoudl read TheGetSha1Method.EnsuresNonNullArguments() :grinning:Also this test is checking Null and Empty arguments.  In other places ive seen us implement this as 2 test methods eg `EnsuresNonNullArguments()` and `EnsuresNonEmptyArguments()`",,,,,,
56467221,1195,PullRequestReviewComment,Make this `async Task` as this is more test-runner friendly...,,,,,,
56467451,1195,PullRequestReviewComment,"I'm not sure how much this will break, but I'd love to get the `Reference` that `CreateTheWorld` returns - it should contain a `Sha`.So rather than invoking `GetSha1` twice below, you invoke it once and compare that SHA to the one you have here.Does that make sense?",,,,,,
56469814,1195,PullRequestReviewComment,And the CI test won't fail like it currently is...,,,,,,
56471545,1195,PullRequestReviewComment,Should be `TheGetSha1Method`,,,,,,
56471823,1195,PullRequestReviewComment,"Thanks - updated it, I'm getting there :smile:",,,,,,
63007766,1192,PullRequest,I should have done this as part of #1191 This also ensures `Octokit.CodeFormatter` is available as a pre-requisite when running `.\build.sh`,,,,,,
62999053,1191,PullRequest,This tweaks the output of the bootstrapping steps we do with NuGet packages to be less noist.So no more of this noise when you run `.\build *`,,,,,,
62883132,1190,PullRequest,Refer #1182 .To-do:- [x]  Add an overload for Task GetAll() on IUserEmailsClient that use ApiOptions parameter.- [x]  Add unit and integration tests for this new method (need some clarification)- [x]  Add an overload for IObservable on IObservableUserEmailsClient that use ApiOptions parameter.- [x]  Add unit and integration tests for this new method (need some clarification)/cc,,,,,,
56154566,1190,PullRequestReviewComment,"I think that `Arg.Any()` is sufficient here, instead of the elaborate lambda. But its fine for total correctness, I guess.",,,,,,
56156382,1190,PullRequestReviewComment,"Tnx, , you're absolutely right, usage of Any is more convenient in this situation. Fixed in ad3b782.",,,,,,
56285092,1190,PullRequestReviewComment,This test will likely break if the user's account has more than one account - what about if we just did a `Assert.NotEmpty(emails)` here too?,,,,,,
56285118,1190,PullRequestReviewComment,"This one is less likely to break than the previous one, but let's drop it anyway...",,,,,,
56285160,1190,PullRequestReviewComment,Nice spot!,,,,,,
56285325,1190,PullRequestReviewComment,"Yes, sure, I going to fix it right now!",,,,,,
56285414,1190,PullRequestReviewComment,"Ok, I had some doubts about this test case too. I going to remove it, thx!",,,,,,
56327668,1190,PullRequestReviewComment,"Can we revert this back to `TheGetAllMethod` rather than pluralising it?  Not because there aren't more than one method now, but more just for consistency with the rest of the code base...",,,,,,
56327813,1190,PullRequestReviewComment,whitespace?,,,,,,
56328688,1190,PullRequestReviewComment,"This shared `_emailClient` is used by 2 of the 3 tests in this class, with the other 1 test declaring it's own client...My personal preference is to share as little between tests as possible, as it makes them more straight forward and resilient to unintended changes down the track...  My main point though is consistency...  :grinning:  Not even considering the 2 tests vs 1 test inconsistency I mentioned, we also have the fact that ALL the other tests/methods in this file which arent being changed (and infact alot of the code base at large) are doing things a certain way, so it makes it inconsistent to take a new coding style, used only on the `GetAll` methods...",,,,,,
56332193,1190,PullRequestReviewComment,"Yeah, I changed it :+1: Find one more TheGetAllMethods in [GistsClientTests.cs], but not changed.",,,,,,
56332393,1190,PullRequestReviewComment,"For some reasons VS do not show **ending** whitespaces in own diff tool. Is my mistake, fixed.",,,,,,
56332585,1190,PullRequestReviewComment,"Yeah, I agree, I like the consistency too :+1: Fixed,",,,,,,
62704530,1187,PullRequest,"Refer #1137 .As the labels have updated, the changes should reflect in the docs.",,,,,,
62703635,1186,PullRequest,Fixes #1148.I have added the necessary overloads and corresponding tests. But one test is failing: [Here] are the changes I made. All other tests including integration tests are passing./cc,,,,,,
62700769,1185,PullRequest,I have added the unit and integration tests for issue #896 . however the build is not running successfully.,,,,,,
57423170,1185,PullRequestReviewComment,Why is this function showing changes.I had opened a seperate PR to change it which has been merged.The function has changed also [here]Had to remove it to remove conflicts.,,,,,,
57598756,1185,PullRequestReviewComment,You can use `Assert.False` or `Assert.True` here to make these a bit more succinct.,,,,,,
57598830,1185,PullRequestReviewComment,or `Assert.False` in this test too,,,,,,
57599083,1185,PullRequestReviewComment,"Given this usage will look like this:Perhaps we can drop the `Issue` suffix here, to give:Thoughts  ?",,,,,,
57600142,1185,PullRequestReviewComment,As per the [blog post] we need to pass in a custom `Accept` header here (as well as for the `Unlock` action below),,,,,,
57667350,1185,PullRequestReviewComment,Yep I like the sound of `.Lock()` and `.Unlock()` :+1:,,,,,,
57667426,1185,PullRequestReviewComment,"Yep, see [`AcceptHeaders.cs`] helper class members/usages, for how we do this",,,,,,
57707825,1185,PullRequestReviewComment,Extra whitespace line introduced here :),,,,,,
57707910,1185,PullRequestReviewComment,"I guess this now should be ""TheLockMethod""",,,,,,
57707933,1185,PullRequestReviewComment,"""TheUnlockMethod""",,,,,,
57708047,1185,PullRequestReviewComment,Wording for the unit tests should read TheBlahMethod....DoesSomethingSo...TheUnlockMethod->Unlock**s**Issue(note Unlocks rather than Unlock),,,,,,
57708094,1185,PullRequestReviewComment,"""Lock**s**Issue""",,,,,,
57786766,1185,PullRequestReviewComment,"We should be checking `retrieved.Locked` here, right?",,,,,,
57786792,1185,PullRequestReviewComment,here too,,,,,,
57788371,1185,PullRequestReviewComment,"Actually, you should be returned the updated `Issue` from `Lock` and `Unlock` here - to simplify this test (and do less network calls) you could assign this returned value to `retrieved`...EDIT: nevermind, I didn't understand the API correctly. Disregard this, but we need to change the method signature for `Lock`.",,,,,,
57788978,1185,PullRequestReviewComment,"This is not quite the right overload, and sadly `ApiConnection` doesn't quite have an easy way to do this.This works for me:",,,,,,
57789176,1185,PullRequestReviewComment,"This endpoint doesn't return any data, so it needs to return a `Task`.",,,,,,
57789911,1185,PullRequestReviewComment,"This isn't the right overload, and we don't have an equivalent that let's us specify an `Accepts` value.We should add this to `IApiConnection` and implement it, something like this (the name is the least-worst option that came to mind given it'll clash with the other :cry:):",,,,,,
57824607,1185,PullRequestReviewComment,"The name is the least-worst option that came to mind given it'll clash with the otherThe inconsistency of overloads for Post Put Delete and Get makes me :cry: too!Rather than introduce the first/only occurence of this ""{verb}With"" terminology to get around the overload collisions, perhaps in this case we could just go with adding an overload for and then pass `null` as the bodyTo me this seems slightly less ugly than adding in a new terminologyOr alternatively, perhaps the ""With"" terminology is a good idea, and we could (on a separate PR) introduce a whole new set of ""With"" overloads, and start to obsolete the old oneseg",,,,,,
57825216,1185,PullRequestReviewComment,"Given that the API does return a HTTP 204 NoContent response when ""succesful"" the way ive seen this implemented in octokit in other places (eg [OrganizationMembers.Publicize()]) is that the Octokit call returns a Task then internally it calls the `Connection.Put` and checks the HTTP response.  If a 204 was received then ""true"" is returned, otherwise false (or an exception of course, for 404/500/other stuff handled by the plumbing inside Connection class)",,,,,,
57902329,1185,PullRequestReviewComment,:thumbsup:,,,,,,
57902468,1185,PullRequestReviewComment,"we could just go with adding an overload for `Delete(Uri uri, object data, string accepts)` and then pass null as the bodyI don't think we can pass `null` here, but everything else is :thumbsup: from me",,,,,,
58354197,1185,PullRequestReviewComment,missing space in between uri and object,,,,,,
58354250,1185,PullRequestReviewComment,Is this change intended?  Probably best to revert this one,,,,,,
58614942,1185,PullRequestReviewComment,"This will be handled by the next `FormatCode` call, so let's :boot: addressing this...",,,,,,
58615147,1185,PullRequestReviewComment,This is the eternal struggle between the FAKE script and `FormatCode` - see  for how I'd like to tackle this...,,,,,,
62663938,1145,PullRequest,"[Rendered Markdown]The influx of new contributors indicates that I need to revisit this document and basically update it.On top of just refreshing it, I want to have two documents at the end of this:- `CONTRIBUTING.md` - walk through the process to get your machine setup, know how to find issues (both code and non-code), know how to test your changes locally (both code and non-code)- `OVERVIEW.md` - the starting point of a document discussing the architecture of Octokit and the important design decisions madeHere's how I'm going about it:- [x] introduce `OVERVIEW.md` document - extract from `CONTRIBUTING.md` and link back to it- [x] expand testing section to detail fast vs slow tests- [x] sprinkle the various CLI options around - [x] mention VS2015 in setup, refresh links and words- [x] testing documentation changes- [x] address feedback- [ ] squash commits",,,,,,
55933128,1145,PullRequestReviewComment,"Might be worth mentioning here that after running the script, environment vars won't be picked up by visual studio until it's restarted.  This may even apply to powershell or command prompt that you are using if running the build script too?",,,,,,
55933134,1145,PullRequestReviewComment,:thumbsup:,,,,,,
55935102,1145,PullRequestReviewComment,"a**n**  'up-for-grabs' label (""an"" rather than ""a"")?Also this link goes to the issue search page which is including all up-for-grabs items both opened and closed.  Should it only be for opened?",,,,,,
55935112,1145,PullRequestReviewComment,"This anchor doesnt actually exist on that page...  Did you actually mean it to be  Or perhaps the ""Next Steps"" anchor on the ""fork"" page?",,,,,,
55935148,1145,PullRequestReviewComment,english :trollface:,,,,,,
55935262,1145,PullRequestReviewComment,"Might be good to explain how to mention the issue in the PR, since there's a few cases of people saying ""fixed issue nnn"" rather than ""fixed issue #nnn"").  I tried to find a good/official link but unfortunately there is nothing concise... there is a 5 year old [""introducing issue mentions"" blog post] (too old) the [closing issues via commit message] (more about commit messages than PR text), and things like [mastering issues] are perhaps too much detail.  So maybe just a few more words here like  which issue/issues are being addressed**, using the #1145 notation**",,,,,,
55935272,1145,PullRequestReviewComment,Some things that will increase the chance that your pull request is accepted~~.~~**:**(end with colon rather than full stop),,,,,,
55956691,1145,PullRequestReviewComment,"I like the former link, but they're both focused on interactions with the website - perhaps we can just rewrite this paragraph...",,,,,,
55956704,1145,PullRequestReviewComment,Godddd who wrote this? What a bunch of nonsense and crimes against grammar.,,,,,,
55956893,1145,PullRequestReviewComment,Done in the `Slow Tests` section. Not sure how this comment ended up here *shrug*,,,,,,
55957204,1145,PullRequestReviewComment,Moved this up into the previous bullet list so it's literally the first thing you see...,,,,,,
55957575,1145,PullRequestReviewComment,"Weird, it's working for me now:",,,,,,
55957592,1145,PullRequestReviewComment,I rewrote this whole section to just have CLI instructions (and ensure they have latest `master`). Let me know how it feels to you.,,,,,,
62646535,1144,PullRequest,#1028 Implemented the Organization Webhook. Added the tests as well. Updated the urls of of repository hooks in some places. Added a ensure condition to check for hookid(added Please Review in comment. Please check if this should be there),,,,,,
56964381,1144,PullRequestReviewComment,This should be in the singular - `Hook` to be consistent with the other sub-client properties,,,,,,
56964711,1144,PullRequestReviewComment,This should be in the singular - Hook to be consistent with the other sub-client properties (will flow from a refactor of the interface but figured I'd mention it here also),,,,,,
56965015,1144,PullRequestReviewComment,This method does not seem to be doing anything. Could you please explain it's purpose?,,,,,,
56965105,1144,PullRequestReviewComment,Namespace parts should be uppercased,,,,,,
56965211,1144,PullRequestReviewComment,"I added these properties based on the iobservablerepositoriesclient, it was 'Hooks' there. I thought that is how it should be named here too. I'll change it if you want",,,,,,
56965318,1144,PullRequestReviewComment,This should be in the singular - Hook to be consistent with the other sub-client properties,,,,,,
56965786,1144,PullRequestReviewComment,"It creates a expected config, which is then compared with the returned config in the response",,,,,,
56965853,1144,PullRequestReviewComment,"is the master of consistency around here, but I believe that (in a separate  PR) IObservableRepositoriesClient (and probably IRepositoriesClient) would need to be changed also",,,,,,
56965872,1144,PullRequestReviewComment,The folder 'fixtures' was already created. I had to use the lowercase.,,,,,,
56966140,1144,PullRequestReviewComment,"There is no corresponding parameter for this, so the Appeyor build is failing",,,,,,
56966486,1144,PullRequestReviewComment,I'll make this change! Thanks!,,,,,,
56966567,1144,PullRequestReviewComment,But as far as I can see the method is just returning the config dictionary passed in...(after `Union` with an empty dictionary and then `ToDictionary` for some reason),,,,,,
56966751,1144,PullRequestReviewComment,Can you rename the folder to uppercase? Or drop that part of the namespace?,,,,,,
56973889,1144,PullRequestReviewComment,"Yep, there has been a move towards ensuring all property names for clients are singular (#53 #1035 #1036 #375 #1038), so I agree these should be `IOrganizationHooksClient Hook { get; private set; }`It also makes me realise we have quite a few other clients that still need to get resolved!",,,,,,
56974176,1144,PullRequestReviewComment,"There are already 2 other existing classes in here with that lowercase name.  I agree it doesnt look nice but from a consistency point of view, this PR is consistent with all other occurences.  A separate issue/PR can be raised to tidy this up",,,,,,
56974550,1144,PullRequestReviewComment,Will do.being consistently consistent can be hard :),,,,,,
56975105,1144,PullRequestReviewComment,local class variable should be named `_organizationFixture` and be `readonly` if possible,,,,,,
56975138,1144,PullRequestReviewComment,Opened #1207 to go into this a bit more,,,,,,
56975143,1144,PullRequestReviewComment,method variable shouldn't be named with underscore,,,,,,
56975354,1144,PullRequestReviewComment,I already changed the name on the other 2 classes as well should I undo the changes?,,,,,,
56975503,1144,PullRequestReviewComment,opened - #1208,,,,,,
56975861,1144,PullRequestReviewComment,Then the same problem would be there in RepositoriesHooksFixture,,,,,,
56976057,1144,PullRequestReviewComment,I'll undo the changes in the 2 classes and make it Fixtures in the classes I am adding here,,,,,,
56980688,1144,PullRequestReviewComment,"I had a look at [RepositoriesHooksFixture] but it appears to be ""correct"" ie class variables are readonly and named with underscores, while method variables do not have underscores.Must've just been something that happened inadvertently on your side after you copied that class and modified it for Org hooks?",,,,,,
56980858,1144,PullRequestReviewComment,I already changed the name on the other 2 classes as well should I undo the changes?Whatever you prefer.  I was trying to avoid you needing to tackle more problems on this PR that were already existing (I also wasnt sure what the repercussions of renaming that folder and or namespace might be) which is why I thought a separate PR gets it off your plate.  But if you've done it then no big deal!,,,,,,
56980940,1144,PullRequestReviewComment,Agree... also it seems like it isnt doing anything with the `url` and `contentType` parameters passed in,,,,,,
57121799,1144,PullRequestReviewComment,done,,,,,,
57121825,1144,PullRequestReviewComment,done. Renaming the folder doesn't affect the namespace. Its just to organize things. My bad.,,,,,,
57121840,1144,PullRequestReviewComment,done,,,,,,
57121995,1144,PullRequestReviewComment,"The integration tests weren't working, and the error was something related to fixtures, hence I tried out some things maybe then it got changed.",,,,,,
62503985,1141,PullRequest,"Refer #1029 .Migrations API: About migrations: To-do:- [x] Add models for Migrations request and response.- [x] Add `IEnterpriseMigrationsClient`.- [x] Implement `IEnterpriseMigrationsClient`.- [x] Implement Reactive client.- [x] Re-order methods.- [x] Refactor (Naming methods and file organization).- [x] Documentation.- [x] Unit tests (~~in progress, **help needed**~~).- [x] Integration tests (~~I don't have access to an Enterprise instance~~, some pointers needed).- [x] Run `.\build.cmd FixProjects` (for Mono and Xamarin projects).- [x] Final wiring of parts.- [x] Find someone who will actually use it. (otherwise its just pointless).I also need to discuss some of things which pop-up in my head every now and then. :pray: /cc",,,,,,
56497031,1141,PullRequestReviewComment,indentation,,,,,,
56510455,1141,PullRequestReviewComment,:+1:,,,,,,
56578872,1141,PullRequestReviewComment,"Sorry, to clarify I'm saying the indentation here doesn't look correct...",,,,,,
56608651,1141,PullRequestReviewComment,"I know, I just copy-pasted from the docs, I'll correct them.",,,,,,
58356983,1141,PullRequestReviewComment,"This should reflect the method name which was renamed, so `TheStartMethod()`",,,,,,
58357062,1141,PullRequestReviewComment,"Probably include ""Can"" in the test name, since all the others have it?  `CanDeleteArchive`",,,,,,
58357089,1141,PullRequestReviewComment,"Probably include ""Can"" in the test name, since all the others have it?  `CanUnlockRepository`",,,,,,
58357165,1141,PullRequestReviewComment,oops!  There's a few spaces at the beginning of this string!,,,,,,
58357358,1141,PullRequestReviewComment,"Id say this ctor can be ditched.  If we just provide one where you specify repositories (and the 2 bools are default to false) and one where you specify all 3 parameters, I think that is enough...",,,,,,
58357427,1141,PullRequestReviewComment,This file is still living in /Enterprise/ folder in the source tree,,,,,,
58357598,1141,PullRequestReviewComment,"That was added because the `CanBeDeserialized` test was failing. You told me about this fix, remember?",,,,,,
58357656,1141,PullRequestReviewComment,"Now you're using the Accepts Header, all the mock `Connection.Received()` checks will need to include that parameter as well (and any others if you had to use an overload that takes Dictionary params or whatever else) (and just a reminder that in the unit test, you should hardcode the expected accept header string ie dont just use the `AcceptHeaders` helper class... otherwise if there was ever a typo in it, the unit tests would pass!  So we specify it ""again"" on the unit test side)Eg this one would be something like:",,,,,,
58357984,1141,PullRequestReviewComment,"Minor nitpick but since this test's purpose is to assert the correct Url is hit, you shouldnt ""also"" verify the request body was passed (there is another test for that later).  So you can use Arg.IsAny()` here",,,,,,
58358600,1141,PullRequestReviewComment,"This property name should be `Migrations` (this will fix the failing convention test which ensures that all properties/methods on the normal interfaces are also present on the observable interfaces.  Currently it thinks `Migrations` is missing, because it's called `Migration` here but `Migrations` on the normal client interface...",,,,,,
58358672,1141,PullRequestReviewComment,You dont need to hit the environment vars directly here... you can use `Helper.Organization` (which behind the scenes has already retrieved the env vars etc),,,,,,
58359407,1141,PullRequestReviewComment,"Need to specify the preview accepts header here.  Currently the `ApiConnection.Delete()` doesn't have an override that allows this.  One is actually being added as part of another PR that is pending currently: #1185 so you could copy those changes to `IApiConnection` `ApiConnection` `IConnection` and `Connection` classes to get your side going (or wait until that PR is merged, then when you merge or rebase master you will pick it up)",,,,,,
58368837,1141,PullRequestReviewComment,Sorry I wasnt clear... I didnt mean the parameterless constructor (which is required for Json deserialiser) Im only suggesting to drop the one that my line comment starts on - the one that takes the `List` and 1 `bool`,,,,,,
58689171,1141,PullRequestReviewComment,"Will do it, but I've also mentioned it in #1207 as this is a special case caused by the API docs.",,,,,,
58695329,1141,PullRequestReviewComment,agree that this is (the only one ive seen so far) a weird naming thing in github API that makes it hard for us to follow our rules.  But the convention test will fail if you dont have the same property name in `IObservableMigrationClient` that you used in `IMigrationClient`,,,,,,
60658437,1141,PullRequestReviewComment,"the first repo creation has the GitIgnoreTemplate, LicenseTemplate on the same line, but the next 2 have these on separate lines.  would be nice to :lipstick: these to be consistent with eachother",,,,,,
60821186,1141,PullRequestReviewComment,:thumbsup: one property per line,,,,,,
62466408,1140,PullRequest,"Fixes #1082 I have added an enum ""ItemStateFilter""and tried to explain it in the xml docs.You can review it.",,,,,,
56072585,1140,PullRequestReviewComment,This property shouldnt be needed,,,,,,
56079439,1140,PullRequestReviewComment,"Perhaps say ""Items"" rather than ""Issues""Also Im not sure if we should say ""(default)"" here, since the default behaviour would technically be based on the place of usage (eg on the `State` field of `IssueRequest` `PullRequestRequest` etc is where you could mention what the default value is for that operation)",,,,,,
56079630,1140,PullRequestReviewComment,"use lowercase for consistency, also there is an extraneious space space after ""open""eg: /// ""open"", ""closed"" or ""all"" to filter by state.  Default is ""open"".",,,,,,
56079656,1140,PullRequestReviewComment,This is where I would mention the default,,,,,,
56079752,1140,PullRequestReviewComment,"Extraneous space?  `ItemState state[remove-this-space], ItemStateFilter`",,,,,,
56079789,1140,PullRequestReviewComment,Revert comment back to previous value /// Whether the issue is open or closed.,,,,,,
56080978,1140,PullRequestReviewComment,"As per my other comment Im thinking we actually can just remove this guy and not need to Obsolete it, since we are making a breaking change anyway.  Waiting for  to confirm.  If we DO need to obsolete it though, the warning message should be reworded, since this is not a ""method"".  Something like This value is obsolete and will be removed in a future version.  For Request operations please use ItemStateFilter.All.  For Search, Create and Update operations, ""all"" is not a valid option.",,,,,,
57372541,1140,PullRequestReviewComment,This comment seems to be incorrect - it's used for issues/milestones/pull requests.,,,,,,
57377355,1140,PullRequestReviewComment,Updated the comment.Is it correct now ?,,,,,,
57378682,1140,PullRequestReviewComment,Don't worry about the quotation marks here,,,,,,
57419273,1140,PullRequestReviewComment,Removed the quotation marks. :smile:,,,,,,
57465473,1140,PullRequestReviewComment,"If we're going to `[Obsolete]` `All` here, or just remove it, we should update the docs accordingly...",,,,,,
57665058,1140,PullRequestReviewComment,"As agreed by  we can just DROP the `All` option here, no need to mark it `[Obsolete]` anymore",,,,,,
57665078,1140,PullRequestReviewComment,"Let's word this ""Items that are open""",,,,,,
57665082,1140,PullRequestReviewComment,"Let's word this ""Items that are closed""",,,,,,
57665312,1140,PullRequestReviewComment,all is not a valid option here so this comment can be reverted back to what it was,,,,,,
57665365,1140,PullRequestReviewComment,"Perhaps word this consistently with the other `Request` objects, eg: Which PullRequests to get.  The default is .",,,,,,
62348237,1139,PullRequest,Fixes #1136,,,,,,
62332058,1138,PullRequest,I'm trying a bit of a different layout this time around.- [x] release notes- [x] version bump- [x] integration tests all pass- [x] :thumbsup: from  or  - [x] tag and publish to NuGet- [x] :shipit:,,,,,,
62178933,1135,PullRequest,The test is passing. Unskipping it. #1002,,,,,,
61963172,1133,PullRequest,"Passing on serialize argument to Connection's ctor, wasn't passing on before. ~~Breaks tests~~ Updated tests. ~~Cannot merge~~ Merged.Refer #1119 This breaks six tests in total, one of them being [this], I guess that's because, the `IJsonSerializer` in the test is a substitute, it doesn't actually provide a serialization strategy. I don't know much about unit testing and mocking frameworks. -Zuber thoughts?",,,,,,
61894711,1132,PullRequest,An attempt to fix mixing of visibility/affiliation and type described in #1107.,,,,,,
55371570,1132,PullRequestReviewComment,"Is this line necessary?  The parameter array was still created correctly for me, even without this line...",,,,,,
55373196,1132,PullRequestReviewComment,"Without this line it does not go into `if (propertyType.IsEnumeration())` and somehow produces ""All"" instead of ""all"" + does not use `[Parameter]` attribute.",,,,,,
55376176,1132,PullRequestReviewComment,"Ah fair enough, I must admit I just quickly put the nullable properties on the request object and ran the existing integration tests which passed...  ~~From what you're saying we might need more tests since the current ones didn't pick up the problem you highlighted...~~ oops, obviously I don't have your new test which looks like it covers those scenarios üòÄ",,,,,,
61880543,1131,PullRequest,"I changed placeholders in the issue sample, issue #1130.",,,,,,
61839074,1118,PullRequest,"Made changes in .\script\configure-integration-tests.ps1.For an optional value it gives the option to change or remove the value, for a necessary value it doesn't give an option.Fixes #1104",,,,,,
55164434,1118,PullRequestReviewComment,"Let's tweak this message: `Press Y to change this value, otherwise we'll move on`",,,,,,
55164863,1118,PullRequestReviewComment,This is an old comment from before I actually implemented the optional parameters. Feel free to remove this :fire:,,,,,,
59911129,1113,PullRequest,Fix is finished and tested. Also unit test is added.,,,,,,
59648280,1112,PullRequest,"### Status:rocket: Ready to merge~~This is built on top of #1099 and #1108 which are not yet merged.  I will rebase this as soon as the others are merged~~~~In the meantime for review purposes, here's a diff link showing the consolidated changes for what will be in just this PR:~~~~### Complete `UserKeysClient` implementationResolves #1106 Implemented the missing `PublicKey` methods on `UserKeysClient` which are actually implemented as `SshKey` methods in `SshKeysClient`Includes normal and reactive implementations plus unit and integration tests for both### Start the process of deprecating `SshKeysClient` and associated `SshKey` class are older implementations that no longer align with the GitHub API structure or terminology.As such it was agreed in #1106 that these shall be deprecated.  This PR marks all of the `SshKey` related items obsolete, and directs users to the equivalent `PublicKey` and `UserKeysClient` implementations where appropriate.Then, in a future release, these `SshKey` related classes can be deleted.### Notes#### `Update` method is _really_ deprecatedAs per the [API documentation], the `Update()` method for `PublicKey` is no longer supported, so this method was not moved to `UserKeysClient` and instead the `[Obsolete]` property instructs the user to delete/create the key (as per the API doc).#### ~~`ModelExtensions` isn't being ported over to `PublicKey`~~~~The `ModelExtensions` class contained extension method for `SshKey` to parse out the data+name of the key into `SshKeyInfo` class.  After reviewing the code, these methods are not used ANYWHERE except in the actual unit tests for the extension methods themselves.  The methods and class have been marked obsolete, but I currently decided not to create equivalent extension methods and `PublicKeyInfo` class, for `PublicKey` implementation, given that there was no actual usage of this stuff anywhere than  in itself!  Can easily port this over though, if there is concern...~~After discussion in #1106 these extension methods and tests have been implemented (as `PublicKeyExtensions` and `PublicKeyInfo`)#### Added `CreatePublicKeyContext` helperSimilar to the other context helpers Ive been adding recently, I added a helper that allows the integration tests to create a `PublicKey` to run the tests, then clean it up afterwards.  Currently it is just a hardcoded key data, which works fine as long as the cleanup code deletes it as the context is disposed.  If/when an appropriate key generator approach is found as per #1003 which has similar issues around `DeployKey`s, this context helper could be enhanced to produce unique/random keys each time rather than the hardcoded key data, but for now it's working fine## TestsPreviously no integration tests existed for `SshKey` functions but thanks to `CreatePublicKeyContext` helper we now have full integration tests for the `UserKeysClient` and `ObservableUserKeysClient` methods.  Standard unit tests are also added",,,,,,
54005286,1112,PullRequestReviewComment,This is a private method. No need  to obsolete it.,,,,,,
59315083,1110,PullRequest,git checkout -b usernamealreadyis-new-authorization-api mdgit pull  new-authorization-api,,,,,,
59296617,1108,PullRequest,"## Status:rocket: Ready to merge~~This is built on top of #1099 which is not yet merged.~~~~Only the last 4 commits are actually relating to this PR.  I will rebase this as soon as #1099  is merged.~~~~Here's a diff link showing the consolidated changes for what will be in just this PR:~~~~## Implement Additional Enterprise methods on User Administration ClientIncludes normal and reactive implementations plus unit and integration tests for both, including integration tests for the 4 previously implemented methods in #1068 ### NotesDifferences in the API docs between github.com and github enterprise are few and far between however one of the major ones I found was that on GitHub Enterprise the UserAdministration API has several additional methods over github.com - methods for Create/Rename/Delete user, Create/Delete Impersonation Tokens and List/Delete Public Keysvs#### SuspendedAt property on UserI found that the SuspendedAt property is returned by the API (at least on GitHub Enterprise) and whether this value is null or not indicates whether a user is suspended.  This seemed useful to know (and also was required in order to assert the Integration tests for the Suspend/Unsuspend methods) so Ive added this field to the `User` response object (I also checked whether it should be put on the base `Account` object, but `Organization` can't be suspended so `User` seems to be the correct place for it#### ImpersonationToken methodIm not exactly sure how to actually use these!  As a GHE admin through the site admin section on the webUI we can ""impersonate"" a user and login/interact as them, however through the API you have to specify scopes on this call, so Im not sure if this is the same thing or not.  The calls as implemented do work, but Im not sure what to do with the ImperstonationToken once it's retrieved~I also wasn't sure whether there should be a new Response type for the call or if the existing `Authorization` type is appropriate.  The only field the response contains that `Authorization` doesn't have, is ""token"" however I believe that may be being deprecated anyway.  For now I've just used `Authorization` as the return type.As an aside, it looks to me like there is an issue with the `Authorization` object in that the field named [`Application`] is actually `app` in the [API response] and thus always null.  Ill raise an issue for this tomorrow...#### Naming Things (tm)Given that this API now had a mix of methods acting on both Users, ImpersonationTokens and PublicKeys I originally wanted to name the methods `CreateUser` `RenameUser` `DeleteUser`.  However given that the `Suspend` `Unsuspend` `Promote` `Demote` methods were already implemented with that naming (ie, no ""User"" suffix) and went live in the latest release, I decided for consistency to not include ""User"" in the `Create` `Rename` and `Delete` either.#### Added `CreateUserContext` helperSimilar to the `RepositoryContext` and `TeamContext` helpers, I added a helper that allows the integration tests to create a user to run the tests, then clean it up afterwards.## TestsThe integration tests require a GitHub enterprise instance so wont run as part of Octokit builds currently.  The `CreateUserContext` helper is working a treat, after running stacks of tests my test GHE server doesn't have any extraneious users hanging around :grinning: I set a couple of tests to Skip at the moment due to #1106 which I plan to fix up in the near future and then unskip the 2 integration tests.",,,,,,
53676124,1108,PullRequestReviewComment,"Because this client is only used for Enterprise, we should consider adding a check to the constructor that ensures that the `ApiConnection.Connection.BaseUrl` is an Enterprise URL and if not, throw an exception that indicates that this client only works for GH:E. That would require that we create this instance lazily of course.Perhaps an idea for a separate PR.",,,,,,
58972712,1103,PullRequest,Fixes #1098.,,,,,,
53098010,1103,PullRequestReviewComment,"Should we validate that `branchName` doesn't already start with `refs/heads/`? I could imagine that might be a point of confusion in calling this overload and a nice exception message would be helpful. Then again, what if they really wanted the ref to be named `refs/heads/refs/heads`. I mean, that's probably silly sauce and we should just tell them to call the original `Create` method in that case.",,,,,,
53120044,1103,PullRequestReviewComment,"The parameter name is `branchName`. I would hope that should be enough, but I do not see a problem with adding that check.",,,,,,
53120821,1103,PullRequestReviewComment,Is this about what you had in mind ?,,,,,,
53261281,1103,PullRequestReviewComment,Close! :smile:I was thinking something more specific.,,,,,,
58656761,1100,PullRequest,Looks like  introduced a nuget warning/import to the Bcl targets. Pretty sure that should only exist on Portable projects?,,,,,,
58611673,1099,PullRequest,"## Status:rocket: Ready to merge~~This is built on top of #1073 and #1095 which are not yet merged.~~~~Sorry for the difficulty this poses to reviewing changes... only the top 5 commits are actually relating to this PR.  I will rebase this as soon as my other ones are merged.  I don't want to slow down even if the other PR's arent merged yet! :grinning:~~~~In the meantime it's still useful to put this up for any review/comments that aren't scared off by all the unrelated commits... plus I can make sure AppVeyor/Travis are happy~~~~Here's a diff link showing the consolidated changes for what will be in just this PR:~~~~## Implement Enterprise LDAP ClientFixes #1022 Includes normal and reactive implementations plus unit and integration tests for both### NotesI feel an explanation of some of these changes is necessary.  #### ldap_dn property on User and TeamOriginally I had implemented `LdapUser : User` and `LdapTeam : Team` classes inheriting from the base objects, and adding the one extra `ldap_dn` field, and using these in the response to the LDAP mapping api commands.  However I later found that when a GitHub Enterprise instance has LDAP enabled, all requests that return a `User` or `Team` even the general GET calls, include a `ldap_dn` field, so I have added `LdapDn` field to the `User` and `Team` response objects, the xml doc notes it is GitHub Enterprise only.  This seemed preferable than having to have special types when you wanted the ldap field and it shouldnt hurt any non enterprise users having this null property on those objects.#### Added `Post(uri)` override to `ApiConnection` and `Connection` classesThe LDAP Queue Sync job commands are a POST but do not contain a body/object.  However they do provide a (admittedly trivial) response object that needs to be deserialized.  Currently all the overrides of `Post()` require a body to be passed in and assert it is not null.  There is a `Post()` that doesnt need a body, but that returns a `HttpStatusCode` and doesn't handle deserializing to a `` response object).#### Added `CreateEnterpriseTeamContext` helperSimilar to the `RepositoryContext` helper, I added a helper that allows the integration tests to create a team to run the tests, then clean it up afterwards.#### A note about LDAP call behaviourThis was a bit quirky so I thought it worth mentioning. - User must exist (obviously) and the specified LDAP distinguished name must exist (GitHub appears to validate this against the LDAP source) - Team must exist (obviously) and specified LDAP distinguished name is NOT validated.  It can be set to something that doesnt exist and is regarded as a succesful API call (and the new LDAP binding is visible in the team settings on the gui etc).(The team will then be disabled on the next LDAP sync when it realises the group is invalid)## TestsThe integration tests require a GitHub enterprise instance so wont run as part of Octokit builds currently.  Futhermore this API requires the GHE instance has LDAP binding enabled.  Also note that I have had to censor the ""distinguished name"" properties used in the integration tests so they arent company specific.  The integration tests also do NOT run against the ""current user"" because you dont want to mess with changing the LDAP binding on the user running the tests and potenitally disabling the account or otherwise losing access...  So the integration tests have a `_testUser` property declared at the top of the class (at the moment that user has to exist, as the method to add users is not implemented... though even when it was, in an LDAP enabled server any user you create would have to have a valid LDAP binding in the first place i suspect!)So with all those caveats aside, the integration tests are passing on my test GHE instance with LDAP binding to a Windows AD domain, after I set real/correct values for `_testUser`, `_distinguishedNameUser` and `_distinguishedNameTeam` properties.  I didn't feel like for this specific functionality, it was worth adding yet more environment variables to the integration test helper stuff.  Even if Octokit CI builds end up having an Enterprise server to run against, if you really wanted to run the LDAP tests you would need a SECOND enterprise server with LDAP enabled.  It seems fairly low on the priority list IMO.  But at least this API is now implemented and anyone who wants/needs to use it can.  We just potentially wont have frictionless integration test execution...",,,,,,
52850572,1099,PullRequestReviewComment,The suppressed messages here and my OCD feelings about abbreviated names makes me wonder if this is something we could do better. Or do you think `LdapDn` more broadly acceptable than `LdapDistinguishedNames`?,,,,,,
52850596,1099,PullRequestReviewComment,"Alternatively, I think this could be added to the `CustomDictionary.xml` at the root of the repository.",,,,,,
52857343,1099,PullRequestReviewComment,"This could just be my inexperience with the way these things are working.  The Microsoft Code Analysis stuff wanted me to put LdapDN but when you do that, the json serialiser tried to look for field called `ldap_d_n` so in order to get the API field `ldap_dn` deserialized I had to use `ldapDn` on the c# side, and suppress the warnings about ""Dn"" not being spelled or cased correctly.I didnt realise we could ""control"" what words are allowed.  Does that apply to the Microsoft Code Analysis stuff or the API field formatting stuff, or both?  There seems to be heaps of Suppress rules int he codebase for spelling and abbreviations, perhaps there needs to be a concerted effort to get rid of as many as possible, in favour of adding recognized words to this custom dictionary?I also wasnt sure if I could set what the ""api name"" of a given property is (ive seen it done on Enum entries, but then also seen mention that that method didnt work on both serialisation and deserialization).  If that is indeed possible then I could rename the field LdapDinstinguishedName and just ""tag"" it as `ldap_dn` for API purposes.  If this is posible, can you point me at a good example?",,,,,,
53111663,1099,PullRequestReviewComment,"I also wasnt sure if I could set what the ""api name"" of a given property isYes, it's possible via the `Parameter` attribute. Here's [one example].",,,,,,
53112063,1099,PullRequestReviewComment,"I didnt realise we could ""control"" what words are allowed.That's done via the `CustomDictionary.xml` file (it's in the ""Build"" solution folder). I'd rather not add `DN` as a custom word though and use the full name for the C# API and use the `ParameterAttribute` to control the JSON name.",,,,,,
53577602,1099,PullRequestReviewComment,"I think we can get away with dropping the `async/await` pair here, right?",,,,,,
53577616,1099,PullRequestReviewComment,"I think we can get away with dropping the `async/await` pair here, right?",,,,,,
58559173,1097,PullRequest,Based on code we use in GitHub Desktop for Windows.- [x] resolve merge conflict- [ ] add section to docs [here] about probing?,,,,,,
52334038,1097,PullRequestReviewComment,"What I found while poking at enterprise responses is that if it throws an exception, it might still be an enterprise server, it just might be configured to not let you poke without authentication, even if this entry point is supposed to be unauthenticated. In this case, the exception will have the response, so this can look for that (I do it like so [here])",,,,,,
52334735,1097,PullRequestReviewComment,"Could just do here so the `IsEnterpriseResponse` below can handle both successful and failed http requests in one go. For the purposes of the check, we don't really care if it's successful, we just care to poke at the headers to see who's responding, right?",,,,,,
52385029,1097,PullRequestReviewComment,Editor's note: we're not quite on C# 6 here :cry:,,,,,,
52385464,1097,PullRequestReviewComment,Perhaps we can catch an `ApiException` below and interrogate the headers there...,,,,,,
52405308,1097,PullRequestReviewComment,"Seems legit to me. That's what GHfVS does. , any opinion?",,,,,,
52446206,1097,PullRequestReviewComment,Ah good ol' C# 6. I guessshould work equally well.,,,,,,
52559614,1097,PullRequestReviewComment,:thumbsup:,,,,,,
53261812,1097,PullRequestReviewComment,"But wouldn't a request for ""github.com"" also succeed in that case? For a general purpose method, we'll need to distinguish between requests for github.com and github enterprise.",,,,,,
53262147,1097,PullRequestReviewComment,I think I'll just validate that the URL is not github.com,,,,,,
53264329,1097,PullRequestReviewComment,Looks like you got a merge failure here.,,,,,,
67773880,1097,PullRequestReviewComment,We've run into a case where we might not be able to rely on this assumption. :cry:,,,,,,
67773957,1097,PullRequestReviewComment,"However, relying on this is safe because if they strip this out, it would break GitHub Enterprise.",,,,,,
58547477,1096,PullRequest,"As per the issue  #1065 opened by , i have added new parameters to RepositoryRequest class.",,,,,,
52118567,1096,PullRequestReviewComment,Should probably be `or organization member`,,,,,,
52118653,1096,PullRequestReviewComment,should be `or user`,,,,,,
52118672,1096,PullRequestReviewComment,should be `or user`,,,,,,
52118770,1096,PullRequestReviewComment,Should be `The visibility` no?,,,,,,
52118782,1096,PullRequestReviewComment,I would think it should be `The affiliation`,,,,,,
52126444,1096,PullRequestReviewComment,white space,,,,,,
52126445,1096,PullRequestReviewComment,white space,,,,,,
52126448,1096,PullRequestReviewComment,white space,,,,,,
52126457,1096,PullRequestReviewComment,should probably be lower case,,,,,,
52126471,1096,PullRequestReviewComment,should be changed to `The affiliation`,,,,,,
52126479,1096,PullRequestReviewComment,What do you mean by this?,,,,,,
58423928,1095,PullRequest,"## Status:rocket: Ready to merge!~~This is built on top of #1073 which is not yet merged.  Only the top 3 commits are actually relating to this PR.  Once #1073 is merged, I will rebase this PR.~~## Features Implemented### Implement Enterprise Search Indexing ClientFixes #1026Includes normal and reactive implementations plus unit and integration tests for both## Test NotesThe integration tests require a GitHub Enterprise instance so wont run as part of Octokit builds currently.  Integration tests have been run succesfully against a local GHE instance",,,,,,
58416661,1094,PullRequest,"### IssueAs discussed in [#1026], there is an issue with the Json parser in a specific edge case.When deserialising a `string` property into a class where that property is declared as a `List` (as is the case with the responses from the Enterprise SearchIndexing API), hyphens in the string are stripped during deserialization.JsonClassResultExpected Result### Resolution[This line] (introduced in #727) was identified as responsible for the removal of the hyphens in the input string.  Code inspection indicates the line appears to be unnecessary for the actual `Enum` and `Nullable Enum` cases mentioned when the change was made, as they already had code to remove hyphens in their if blocks.Unit tests were added to assert expected behaviour when deserializing a string attribute containing hyphens (and underscores for good measure) into `string` and `` properties.After confirming the latter test failed, the offending line was removed and the tests then passed.All other unit and integration tests were then also passed, indicating that no other known/tested functionality are impacted by the removal.",,,,,,
52559000,1094,PullRequestReviewComment,"The only reservation I had was that this value was being used elsewhere and some enum values depended on this, but then I saw those places were calling `RemoveHyphenAndUnderscore` and saw it had us covered:",,,,,,
58268294,1093,PullRequest,Fixes #958,,,,,,
52011380,1093,PullRequestReviewComment,Typo in the xml doc with the cref to the class name,,,,,,
52165782,1093,PullRequestReviewComment,"I don't think this state machine is necessary. `Assert.ThrowsAsync` expects a `Task`, which `GetAllContents` already returns :smile:",,,,,,
52165902,1093,PullRequestReviewComment,"~~Copy paste error :smile:~~~~Will fix when I'm back by a machine.~~~~It is needed. If removed the test completes, but fails with a message that no error was thrown.~~EDIT: Drunk VS had me today/",,,,,,
58202130,1090,PullRequest,Fixes #1086,,,,,,
58192771,1089,PullRequest,Fixes #1084,,,,,,
58079601,1087,PullRequest,Merging #975 caught a couple of API changes in v0.18 which weren't available to the tests at the time of writing. Oops.,,,,,,
58071709,1085,PullRequest,Fixes #822All other routes - e.g. `ApiUrls` - are defined without a leading slash.Except these. This fixes that.- [x] fix the tests - you're better than this,,,,,,
58062276,1083,PullRequest,Added failing search issues api integration test. relates to #1082,,,,,,
57934805,1080,PullRequest,"- [x] write up release notes- [x] verify LINQPad samples are accurate against what's currently in `master`- [x] integration tests pass - subject to #1079 being merged- [x] review release notes, add #1079 to breaking changes- [x] package up- [x] tag the release- [x] :shipit:",,,,,,
57926311,1079,PullRequest,"As we've done with other breaking changes for this release, we're `[Obsolete]`-ing this method to indicate the behaviour is no longer available.Fixes #1078",,,,,,
57918143,1077,PullRequest,![does what it says on the tin],,,,,,
57781248,1075,PullRequest,Fixes #1071,,,,,,
57760703,1073,PullRequest,"## Status:rocket:Ready to merge:rocket:## Enhance integration test support for GitHub EnterpriseAdded a new EnterpriseHelper class for creating enterprise clients, using a new set of environment variables for this purpose.  Enhanced the powershell script to assist in setting up these GitHub Enterprise integration test variables if desired## Implement Enterprise License ClientFixes #1023Includes normal and reactive implementations plus unit and integration tests for both## Implement Enterprise Organization ClientFixes #1025Includes normal and reactive implementations plus unit and integration tests for both## TestsObviously the integration tests require a GitHub enterprise instance so wont run as part of Octokit builds currently.  Integration tests are passing on my GHE instance",,,,,,
51497201,1073,PullRequestReviewComment,:heart_eyes: this is a great idea,,,,,,
51497360,1073,PullRequestReviewComment,":grey_question: rather than the abbreviation, would it be worth just prefixing these properties with `Enterprise` to make this a bit more readable? Or is that redundant given we're already in `EnterpriseHelper`...",,,,,,
51497486,1073,PullRequestReviewComment,:grey_question: I kinda liked having `ENTERPRISE` in this environment variable - could you tell me about what motivated this change?,,,,,,
51497542,1073,PullRequestReviewComment,This is a good bit of :lipstick: :thumbsup:,,,,,,
51498041,1073,PullRequestReviewComment,:heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes: :heart_eyes:,,,,,,
51517889,1073,PullRequestReviewComment,"So originally I had this stuff sitting in amongst the existing Helper class and so needed to be very explicit about whether referring to normal or enterprise.  Even when I moved the enterprise stuff out into `EnterpriseHelper` I still felt like it was a good thing to be very explicit and obvious that we are dealing with a different set of settings here, than those configured for regular github.But in hindsight since it's in EnterpriseHelper class anyway, it's probably ok to just call these parmeters UserName Credentials etc rather than GHEUserName GHECredentials and so on.So I think ill just name these back to their ""standard"" names",,,,,,
51518043,1073,PullRequestReviewComment,"So originally that was my ""hack"" to allow me to run regular integration tests against a GitHub enterprise instance.  But now that I've officially added an EnterpriseHelper class it isnt appropriate to refer to this (in normal helper) as Enterprise URL.  This item still remains so that someone COULD point ""all"" integration tests at another instance (eg enterprise) if they wanted, by setting the CustomURL.  But the difference is, that all the other paramters like username, password, apitoken etc would be coming from the ""regular"" settings.Meanwhile for tests that explicitly require/target GitHub Enterprise, we use the EnterpriseHelper class which has it's own setup for username, password, api key and so on.  Basically this means that I can have my workstation configured to run integration tests against github.com and enteprise integration tests against my enterprise instance... Plus if I ever need to run the ""normal"" integration tests against my enterprise instance, I can set the CUSTOM_URL property.Hope that makes sense",,,,,,
51519230,1073,PullRequestReviewComment,:thumbsup:,,,,,,
52559297,1073,PullRequestReviewComment,Is it worth doing any cleanup here after creating the organization?,,,,,,
52559329,1073,PullRequestReviewComment,:lipstick: as `observable` is only used here you can await the previous line:,,,,,,
52559366,1073,PullRequestReviewComment,:thumbsup:,,,,,,
52559463,1073,PullRequestReviewComment,"Of course as soon as I realised that I should read the documentation I realise that ""there's no endpoint"". So that's a pretty good reason to not do that. Nevermind.",,,,,,
52564721,1073,PullRequestReviewComment,"yeah i think i saw another observable test somewhere that was always getting the observable firs , then awaiting it... so thats how ive written all of my observable tests too",,,,,,
57759965,1072,PullRequest,"While working on implementing GitHub Enterprise APIs I came across the fact that the OrganizationMembers API implementation was missing the ""Role"" filter option (all, admin, member).  I also added integration tests for the GetAll method (previously there were none for this whole API) and all work fine in my integration tests... however I found that querying for Admin/Member role only returns correct results when the requester is a member of the organization.  When the requester is not in the organization, the member and admin filters just return all users in the org.  I also found that with the existing ""filter"" attribute (2fa_disabled, all) only owners of an organization are allowed to use the `2fa_disabled` filter, and octokit throws an exception if the requester is not an org owner.Im not sure what settings you guys run the integration tests under for octokit.net so I have set the integration tests that would have triggered these conditions, to SKIP for now.  If the integration tests on AppVeyor/Travis do run as an org member or org admin, let me know and I can un-skip the tests (i also need to know the name of the org to use in the queries... currently ""octokit"" is used).",,,,,,
57590892,1068,PullRequest,"Per, #1030. All implemented tests are passing.",,,,,,
57300343,1067,PullRequest,- [x] documented how to setup mkdocs locally- [x] some tweaks to layout of sidebar - [x] use landing page for docs to provide more info,,,,,,
57032426,1064,PullRequest,"Fixes #800 There's some changes in #959 unrelated to the problem reported in #800 - and an outstanding merge conflict - so I've pulled in just those commits, cleaned up the xml-docs issue, and pushed this to verify the fix.- [x] there's some `async/await` i think i can clean up here?- [x] pretty sure this is a breaking change - document this for the release?cc  to ensure I didn't miss any commits",,,,,,
57028406,1063,PullRequest,"Fixes #1062As part of #1062 I found that an extension methods for `Get(uri)` is interfering with some of our unit tests - as it's an extension method contributors can't verify it was invoked correctly, and when that doesn't work blindly add the second parameter to get the test to pass. This is done in a lot of tests, and it's a trivial extension, so why not just make it a feature of the interface?I'm happy to leave the other methods in `ApiExtensions` as-is, they're not used as broadly.cc  for feels and any potential quirks about switching from extension method to interface method.",,,,,,
56158105,1061,PullRequest,Fixes #1033 **TODO:**- [x] :lipstick: usings- [x] Tests: unit- [x] Implementation of the client- [x] IObservables + impl**Questions:**- The following is an undocumented endpoint.Should it be included?- The response includes an error field which seems to be mapped to the `ApiError` class. Does that get included in the model?**Drawing attention**- Do enums get their own file?- Is an implementation _needed_ for `DebuggerDisplay`?- What is the level of importance of integration tests for such a client?,,,,,,
50653186,1061,PullRequestReviewComment,Were these raised because of specific errors with tests?,,,,,,
50653285,1061,PullRequestReviewComment,"Unless there's a unique resource here, these can safely drop the `Builds` prefix to be consistent...",,,,,,
50653299,1061,PullRequestReviewComment,I'm happy to refactor this to be `GetLatest` and drop the unnecessary suffix,,,,,,
50654788,1061,PullRequestReviewComment,Since I added the [Error Property] the conventon test picked it up,,,,,,
50654842,1061,PullRequestReviewComment,"Uh, cool? :thumbsup:",,,,,,
50654845,1061,PullRequestReviewComment,Unique in what aspect?The `Get` returns metadata about the pages site and the other endpoints return metadata about the builds.I am fine with dropping the suffix though,,,,,,
50654855,1061,PullRequestReviewComment,Can has some words?,,,,,,
50654880,1061,PullRequestReviewComment,Unique to `GetAll`,,,,,,
50792385,1061,PullRequestReviewComment,This will need a rename (and to call the right method on `IRepositoryPagesClient`),,,,,,
50792395,1061,PullRequestReviewComment,Drop the `Builds` suffix from here as well,,,,,,
50808630,1061,PullRequestReviewComment,Sorry I missed that :sad:,,,,,,
50933117,1061,PullRequestReviewComment,"Not sure how these tests should have passed before the merge, as I managed to break an old PR when I merged `master` back in. See 5ca6633cb133ca8db4f2be17c2ebb0e26a446d64 for the fix to these tests.",,,,,,
50941923,1061,PullRequestReviewComment,Doh! I was going to remove that. Should I open a new PR?,,,,,,
50942310,1061,PullRequestReviewComment,"Nah, I'll merge that first pass at the documentation into `master` - so the fix will land there soon.",,,,,,
55844263,1060,PullRequest,Resolves #1059,,,,,,
49549066,1060,PullRequestReviewComment,Is this necessary?,,,,,,
49549266,1060,PullRequestReviewComment,You mean the empty ctors or the whole wrapping classes?,,,,,,
49549346,1060,PullRequestReviewComment,"The empty `ctors`. I ask because we've gone back and forth on how the response models should be structured in the past - previously the properties were `public set`-ers, but then we switched over to `protected set` to indicate which were required.cc  for feels",,,,,,
49549390,1060,PullRequestReviewComment,"The main benefit for using `protected set` was around testability, but I'm not sure that's so important now in hindsight...",,,,,,
49549552,1060,PullRequestReviewComment,"Ah, gotcha. I just assumed they were needed by the model deserializer. If it can instantiate models without the empty public ctor, I'm fine removing them.",,,,,,
49549677,1060,PullRequestReviewComment,"Ugh, that's a good point - I had a look at some other response models and found they also have an empty `ctor` - hold off on making that change, I'll let  refresh my memory here...",,,,,,
49550690,1060,PullRequestReviewComment,"If memory serves me, we do need the default ctor for serialization.",,,,,,
50653748,1060,PullRequestReviewComment,:thumbsup:,,,,,,
54997886,1058,PullRequest,Fixes #1047,,,,,,
54922040,1057,PullRequest,Replaces #1042,,,,,,
54895988,1055,PullRequest,Added some content to help others.,,,,,,
54886710,1054,PullRequest,"Added some more info on where ""_issuesClient"" is obtained from following a recent Issue.",,,,,,
54636797,1051,PullRequest,I've added 2 tests and hope to add more. Just want to make sure that I am on the right track.fixes #1045],,,,,,
54623078,1050,PullRequest,Install-Package Microsoft.Owin.Security.OpenIdConnect,,,,,,
54603650,1049,PullRequest,"Closes #1021 Added base Enterprise ClientImplemented EnterpriseAdminStats client and response objectsAdded Observable implementationsAdded unit tests and integration testsAdded new [GitHubEnterpriseTest] marker for integration tests that require GitHub Enterprise, only discoverable when the integration test variable for GHE is setupAll convention tests, unit tests and integration tests are passing.",,,,,,
49419416,1049,PullRequestReviewComment,Nice spot! :heart:,,,,,,
49419814,1049,PullRequestReviewComment,:lipstick: clean this up,,,,,,
49420224,1049,PullRequestReviewComment,Could we swap these calls to `await ApiConnection.Get(endpoint)`?Might also need a `.ConfigureAwait(false)` if we're not doing this inside the connection...,,,,,,
49954683,1049,PullRequestReviewComment,"thoughts on how we could simplify this method?For reference, [here's] the signature from the docs:And it seems like we're stuck with getting a loose dictionary of values irrespective of the endpoint we use.",,,,,,
49999570,1049,PullRequestReviewComment,"At first I wrote all the code based on the github API example, assuming the admin stats endpoint would always send back the ""collection of stats"" regardless of what you asked for, and if you only asked for say ""repos"" then the other items wouldnt be present (and thus would end up null in my c# object).But when doing the integration testing what i actually found was that only the ""All"" method returns back the outside collection (ie collection of stats entries), and all of the other ""specific"" requests only send back their specific json fragment and not the outer collection.  The API doc site only has the ""All"" example and not an example for say ""repo"" so this was a bit of an unexpected surprise :)Since I'd already coded it to have an Enum for the type of stats being requested, I took the ""easy"" way out and just populated the specific node in the AdminStats collection that is returned by the ALL stats call.  This meant there is 1 function, 1 return object (with field/s populated as appropriate), and an Enum to specify the type of stats you want.The alternative was to remove the enum and add specific functions for every type of request.  egand so on.As an end user I felt happy enough with the 1 function/1 return class/enum to specify what I want (most people would probably just request ALL stats anyway im assuming).  I felt like that was preferable to adding all the methods etc.  But a factor in that was the fact I'd already written most of the code that way...If you think it's more fitting with the rest of octokit.net, let me know and i can change it to the 11 specific functions for each request",,,,,,
50654246,1049,PullRequestReviewComment,"thanks for the extra context. I'm not feeling _strongly_ either way at this stage, I was just reflecting on how we don't really have a good example of another API that passes in an enum like this.For most of the existing API endpoints the parameters are bundled up into a single class - the `XYZRequest` overloads - but that's not really useful here. Whether you go with one method taking an enum of N values, or N methods each representing one endpoint, the only differences beyond the semantics are:- does one or the other make more sense to the consumer?- does one or the other make the implementation code easier or harder?For me, I think it's a little weird to always get an `AdminStats` response model back, even if I only asked for `users`. After the first time it failed, and I'd go ""ah, I want the `Users` property"" and update the code, but I'd love to :fire: the friction off completely.Do you think we'd get reuse from the existing response models you've created if we went down the ""one method per endpoint"" scenario? It's going to introduce more methods, but I think they'll be a lot more succinct (and simplify the tests a bit) if we can leverage the serialization cheats we've got to just get back the data we need.",,,,,,
50655171,1049,PullRequestReviewComment,"Do you think we'd get reuse from the existing response models you've created if we went down the ""one method per endpoint"" scenario? It's going to introduce more methods, but I think they'll be a lot more succinct (and simplify the tests a bit) if we can leverage the serialization cheats we've got to just get back the data we need.Yes the response models will all be re-usable, you can see in the switch statement I am basically already calling each endpoint and receiving its response object, im just populating the into the ""AdminStats"" parent collection and returning that.  As I think I said the main thing was that I'd already implemented it one way and then found out at integration testing that it behaves a bit differently when requesting specific stats vs all stats, and the api doc example only has one for the ""all"" case.  Writing individual methods is probably the way to go, it's just annoying that that means heaps more unit and integration tests, where the current tests can just `foreach` through the enum and cover all 11 request types in the one set of tests).  Ill stop being lazy and rework things to see how it looks :)",,,,,,
50655721,1049,PullRequestReviewComment,"all good, and understandable :grin:",,,,,,
51369321,1049,PullRequestReviewComment,:lipstick: duplicate sets of braces here,,,,,,
51403953,1049,PullRequestReviewComment,"ah nice pickup...  Just pushed up that fix, hopefully the builds work :grimacing:",,,,,,
54560103,1048,PullRequest,#1037,,,,,,
54555487,1047,PullRequest,#1032,,,,,,
54488044,1044,PullRequest,Fixes #1031,,,,,,
54485880,1043,PullRequest,‚Ä¶ositoriesClient #1034,,,,,,
48384667,1043,PullRequestReviewComment,:lipstick: move this up outside the `namespace` with the other `using`s,,,,,,
48384678,1043,PullRequestReviewComment,:lipstick: indenting,,,,,,
54484769,1042,PullRequest,Fixes #1035],,,,,,
54468744,1041,PullRequest,"As mentioned in #996 this is a follow up PR that tidies up all hardcoded HTTP headers used within Octokit.net, into the AcceptHeaders helper class that was added- Replaced all uses of hardcoded HTTP header strings to declare/use entries in the AcceptHeaders helper class, like the protected branches API header in #996 does- Left test methods alone (ie still hardcoding their expected accept strings) since we shouldn't share definitions between test and implementation code, probably shouldnt even share it between 1 test and anotherThis change was fairly precise/surgical in nature and all unit and integration tests are passing, so hopefully it's all good!",,,,,,
48384140,1041,PullRequestReviewComment,Let's name this something like `StableVersion` as its the replacement for the releases API now that's out of preview,,,,,,
48384290,1041,PullRequestReviewComment,This is related to [repository redirects] and then the latest stable version - could we rename it to something like `RedirectsPreviewThenStableVersionJson` ?,,,,,,
48384372,1041,PullRequestReviewComment,It can probably be cleaned up so that the defaults are loaded in...,,,,,,
54466482,1040,PullRequest,Fixes #1036 Updated.,,,,,,
48353731,1040,PullRequestReviewComment,This ensures that current consumers won't get null,,,,,,
48356056,1040,PullRequestReviewComment,See above,,,,,,
48381085,1040,PullRequestReviewComment,:thumbsup:,,,,,,
54442132,1039,PullRequest,"### IssueAlso has an `Id` and `Locked` [properties]. I tested the change in the `CanDeserializeIssue` method.### IssueEventPayloadDoesn't have a property `Assignee` or `Label`. GitHub only fire an event when an issue is opened, closed or re-opened. GitHub does not fire an event when assigning someone to the issue, assigning a label or a milestone (I tested manually on my test repository).### IssueEventsHas a `CommitUrl` [property]. I tested the change in the `CanDeserializeMergedEvent` method.**Note**: the documentation doesn't have the `CommitUrl` property yet but it is being returned by the API (I used `Fiddler` as my proxy to inspect what was returned).",,,,,,
54438962,1038,PullRequest,This is the script I was using to review and identify gaps in the current API implementation.It's not perfect (I'm not checking that clients actually implement the required routes) but I've already pulled out a number of tasks which fall into one of two buckets:- missing features- inconsistencies between the GitHub API and our implementation - mostly names of things at this stageI had a lengthy discussion about doing more of this in Roslyn over at  but this felt like a easier first step to tackle the problem.,,,,,,
136090976,1038,PullRequestReview,Best,,,,,,
54433195,1027,PullRequest,"As described in the documentation:- - - Issue comments are identified by `Id` instead of `Number`. I didn't add any tests as I only renamed parameters and modified XML comments,",,,,,,
54318439,1020,PullRequest,Fixes #615,,,,,,
48208090,1020,PullRequestReviewComment,Should we make this a bit clearer and use xml-doc notation on the `Credentials` property in here?,,,,,,
54198145,1019,PullRequest,per #1015.Top level client obsoleted.,,,,,,
48111712,1019,PullRequestReviewComment,:lipstick: Perhaps make this message a bit more concise: Notifications are now available under the Activities client. This will be removed in a future update.,,,,,,
48111720,1019,PullRequestReviewComment,See other comment about obsolete message,,,,,,
54192282,1018,PullRequest,"I found that we were tracking multiple versions of some dependencies under `packages`. This PR updates us to the latest version of the various dependencies we need:- `Microsoft.Bcl`, `Microsoft.Bcl.Build` and `Microsoft.Net.Http`- `NSubstitute` - tests which were throwing an exception needed to indicate the expected return type- `xUnit`Let's see if I've broken anything:- [x] verify AppVeyor build is green- [x] verify Travis build is green- [x] run integration tests locally- [x] tests can be run in VS2015",,,,,,
54190829,1017,PullRequest,"Fixes #1016 I discovered that `/repos/:owner/:repo/issues/events` was actually implemented in `IssuesEventsClient.GetAllForRepository` while `/repos/:owner/:repo/events` is implemented in `EventsClient.GetAllForRepository`.**Do we want to implement those two endpoints in the same class or are we happy to keep them separated as they're now?**I modified some entities:- `Issue` also has an `Id` and `Locked` [properties].- `IssueEventPayload` doesn't have a property `Assignee` or `Label.`. GitHub only fire an events when an issue is opened, closed or re-opened. GitHub does not fire an even when assigning someone to the issue, assigning a label or a milestone.- `IssueEvents` has a `CommitUrl` [property].Issue comments are identified by `Id`, not `Number`. I took the liberty to rename this wherever I found it.I'm testing the deserialization of the repository events in `EventsClientTests`. At the moment I'm also testing that some events are **not** being fired by GitHub so that those tests would break if GitHub started to fire them and we could implement them straight away. Concrete example: GitHub doesn't fire an event when un-starring a repository, in the test I star and unstar and test that I get only one event. **Is that over specification?**",,,,,,
54031491,1014,PullRequest,I am working in gitter to understand what to put in a seperate file of custom coding conventions for the project.But this should be here either way,,,,,,
53906004,1013,PullRequest,The backend API returns varying types of accounts with different sets ofproperties. This is the beginning of attempting to model that a bit moreclosely.,,,,,,
53834931,1012,PullRequest,keeping it all the same,,,,,,
53647094,1009,PullRequest,Fixes #1008 Added `Author` to `Release` response. Added integration test ensuring login is set on `Author` property.I noticed that some other properties are missing too:- `assets` (this is an object)- `tarball_url`- `zipball_url`Do we want to add those too?Sample response:,,,,,,
53554372,1007,PullRequest,"Fixes #1001 I made two changes:1. I updated `master` head with the new commit so that the PR is not mergeable (not sure if it's the best way to do this.2. The `Merge` method wasn't awaiting the API call so the exception couldn't be caught, I made the method `async` and I'm now awaiting the `PUT` request.",,,,,,
47488240,1007,PullRequestReviewComment,?,,,,,,
47489543,1007,PullRequestReviewComment,:+1: pushed another commit fixing this.,,,,,,
53549035,1006,PullRequest,:nit_picking:,,,,,,
53528677,1005,PullRequest,Just some minor code cleanup.,,,,,,
53523864,1004,PullRequest,"We are running GitHub Enterprise on premises so I was looking for a way to be able to run some of the integration tests against that.Following the existing patterns in the Helper class, I have made it so that if environment variable ""OCTOKIT_GITHUBENTERPRISEURL"" is set, this is used when setting up the GitHubClient returned by various helper methods...  If this environment variable is not present, the default GitHub URL is usedI am not fully across all the differences between Enterprise and github.com but certainly I just found out that the protected branches API (preview) is not yet in Enterprise 2.4.2.  So this does mean that some tests would fail when running on GitHub Enterprise, however it still seems like a useful capability to be able to target a GHE instance if/when required.  Since it's a non invasive change that shouldnt affect any other usages, I'm positing that it could be included (even if in an undocumented/unsupported capacity)Thoughts?",,,,,,
53510852,999,PullRequest,"This is some parity work as part of moving our OSS projects over to some dedicated resources on AppVeyor. I wanted to do this later in the week but it looks like webhooks weren't being delivered over the weekend, so let's fix this:- [x] moved this webhook to the `github-windows` org on AppVeyor- [x] verify builds are configured correctly- [x] verify PR is triggered- [x] confirm NuGet feed in README is correct- [x] filter out rogue `tools` package from being published- [ ] :fire: old build configurationcc",,,,,,
53500215,998,PullRequest,"It looks like Commitrer.cs has been moved to /Models/Common, and this old copy in Models/Response was left behind.  Identical contents to the one in /Models/Common and not referenced by any csproj files etc, so I think it should be safe to remove",,,,,,
53500153,997,PullRequest,"This replaces #970 (which replaced #936)As well as the original changes that removed the Merged property, Ive also removed MergeCommitSha as mentioned by  in #936 Ive actually added the `bool Merged` property back, with only a getter that returns `MergedAt.HasValue`  Happy with this?  Otherwise I could remove this property entirely and all consumers would have to do their own check for `MergedAt.HasValue`",,,,,,
53499269,996,PullRequest,"This Work-In-Progress PR adds support for the protected branches API, which is [currently in PREVIEW]## NotesThis is our first contribution to octokit.net so just let us know if anything isn't as desired etc... I've tried to comply with existing similar implementations, coding/comment styles, unit and integration tests and so on, so hopefully it isn't too far off the markSince the protected branches API is in preview, I wasn't sure if it's OK to be added, but we need this support for tooling we are writing and would rather contribute to upstream than use a local fork, unless we have to!  I did notice a couple of other preview features in the codebase.  I also saw that octokit.rb has implemented the protected branches functions, so hopefully this is OK## Implementation DetailsAt a high level the change involves:- Create new models for Branch Protection details- Add Protection element to existing Branch class- Existing GetBranch() and GetAllBranches() calls specify new preview accepts header so this data is returned- Added a new EditBranch() call, similar to other Edit() methods, that takes a BranchUpdate object specifying the protection settings/fields to change.  This is Patched into the Branch object/URI as per other similar examples- Modified existing tests for GetBranch() and GetAllBranches() calls to handle the accepts parameter now being specified- Added unit and integration tests for the branch protection features, which are all passing## To Do List- [X] ~~Haven't yet looked at what is required on the Octokit.Reactive project~~ Added new function, not sure if anything more to do?",,,,,,
47452152,996,PullRequestReviewComment,"As this is a response object, this will currently fail our checks for public setters.For serialization purposes, `protected set` will work fine - but we also define `ctors` (like in `Branch` above) for scenarios where you may need to set it up in a certain way.You can see these failures by running this from the repo root: .\build BuildApp .\build ConventionTests",,,,,,
47452164,996,PullRequestReviewComment,:arrow_up: as above,,,,,,
47452189,996,PullRequestReviewComment,I'm also seeing this property fail the convention test but this makes zero sense. Perhaps we're not liking `private set` here?,,,,,,
47454850,996,PullRequestReviewComment,"FYI this one is implemented similar to the IssueUpdate object with it's list of Labels.  Implemented as a List with public get and private set, then AddLabel() and ClearLabels() functions that manipulate the local private list.I guess the difference is that IssueUpdate is a Request model object, whilst in this case the RequiredStatusChecks are in the Response section?  I can make it protected rather than private I guess",,,,,,
47455774,996,PullRequestReviewComment,"I guess the difference is that IssueUpdate is a Request model object, whilst in this case the RequiredStatusChecks are in the Response section?That's exactly right - there's some `PATCH` specific behaviour around labels, and that's the solution we ended up with.For response object, I wouldn't worry about the `Add*` and `Clear*` methods - a `ctor` which accepts a collection to use is going to be easier for consumers to work with around testing...",,,,,,
47455799,996,PullRequestReviewComment,"Oops, can't actually set it to protected or a compile error occursI made a tweak to the convention tests to allow lists that have a private setter, let me know if that's OKSee this commit:",,,,,,
47455820,996,PullRequestReviewComment,Done:,,,,,,
47455830,996,PullRequestReviewComment,Done:,,,,,,
47456153,996,PullRequestReviewComment,Just saw the comment about `Add*` and `Clear*` methods so they have gone the way of the dodo now :),,,,,,
47469707,996,PullRequestReviewComment,Why should collection properties with private setters be mutable?,,,,,,
47469901,996,PullRequestReviewComment,This fails because the collection itself is mutable. It should be changed to an `IReadOnlyCollection`. The proposed fix makes no sense. There's already a different test that checks for setter access. :smile:,,,,,,
47473894,996,PullRequestReviewComment,"this change makes it so collection properties with private setters are NOT added to the mutable list.  Otherwise convention tests were failing saying that these properties werent obeying the Response object rulesThat said, this was just a possible fix that seemed to work for me... definitely looking for feedback from main contributors and can easily remove this commit if required (and try to find another way to satisfy the convention tests)",,,,,,
47474874,996,PullRequestReviewComment,"But this is totally out of scope for this test, and it actually makes it incorrect. This test checks that ""Response Models Have Read Only Collections"". Making it skip properties with private setters also makes it allow mutable collections, which defeats the test in the first place. There's already [a test that checks for non-public setters].",,,,,,
47475722,996,PullRequestReviewComment,"Sorry to jump in here before this goes further off the rails, but thanks  for reminding me about the intent of this test. has the mutable `Add`, `Remove` and `Clear` - so even if it's a read-only property, it can be manipulated arbitrarily after the object is created. We're trying to discourage that, so we use `IReadOnlyList` and then drop this change we should be able to get back to a green build...",,,,,,
47479420,996,PullRequestReviewComment,"Roger that, I'm the first to admit I haven't quite dealt with this many convention tests etc before, I was definitely hacking my way to success üòÄI'll see what I can do with the Contexts collection and ditch this incorrect convention test modification",,,,,,
47774718,996,PullRequestReviewComment,This `const string` is duplicated in 3 methods. Could we declare it at the class level and use it?,,,,,,
47835614,996,PullRequestReviewComment,:thumbsup:,,,,,,
47855869,996,PullRequestReviewComment,"I was following an example I saw in another part of the code base where the preview header was defined each time, but I can change it to a class level. Should the unit tests use the same define or their own class level define or specify string  each time?",,,,,,
47867435,996,PullRequestReviewComment,"The licenses API? Yeah, there's two usages in `MiscellaneousClient` which could use a bit of :lipstick: to tidy up at some stage.Let's define a field on the test class which gets reused here, and then look at the other usages separately.",,,,,,
53467791,995,PullRequest,Targeting mono.- [x] Build App - [x] Run Unit Tests  - [x] Successfully build it on travis-ci- [x] Run test's on travis-ci,,,,,,
47438609,995,PullRequestReviewComment,"You shouldn't need this, the PCL assemblies are preinstalled on Travis.",,,,,,
47438621,995,PullRequestReviewComment,"This shouldn't be required, xbuild converts backslashes to slashes on Unix.",,,,,,
47438690,995,PullRequestReviewComment,"Mono 4.2 should support ToolsVersion 14.0, with which Mono did you test it?",,,,,,
47570853,995,PullRequestReviewComment,"I tried it and it doesn't work. Building project: ./Octokit-Mono.sln   xbuild  ./Octokit-Mono.sln /t:Build /tv:14.0 /v:m  /p:RestorePackages=""False"" >/p:Configuration=""Release"" >/logger:Fake.MsBuildLogger+ErrorLogger,""/home/travis/build/naveensrinivasan/octokit.net/tools/FAKE.Core/tools/FakeLib.dll"" xbuild  ./Octokit-Mono.sln /t:Build /tv:14.0 /v:m  /p:RestorePackages=""False"" >/p:Configuration=""Release"" >/logger:Fake.MsBuildLogger+ErrorLogger,""/home/travis/build/naveensrinivasan/octokit.net/tools/F>>AKE.Core/tools/FakeLib.dll"" XBuild Engine Version 12.0 Mono, Version 4.2.1.0 Copyright (C) 2005-2013 Various Mono authors MSBUILD: error MSBUILD0000: Unknown tools version: '14.0' . Known versions: '2.0' '3.0' '3.5' '4.0' '12.0' Running build failed. Error: Building ./Octokit-Mono.sln failed with exitcode 1.",,,,,,
47576812,995,PullRequestReviewComment,I tried this one also. It works on OSX but fails on linux for the same commit.OSX - linux -,,,,,,
47578036,995,PullRequestReviewComment,"I think you meant .If you look at the actual build log, the error there is from something completely unrelated (`System.TypeInitializationException: The type initializer for 'System.Collections.Generic.List'1' threw an exception. ---> System.Threading.ThreadAbortException:` during tests).",,,,,,
47578262,995,PullRequestReviewComment,"Interesting, thanks. Looks like the default `xbuild` script invokes xbuild 12.0, which is probably why this happens. Not sure if that's intended, I'll take a closer look.",,,,,,
47578778,995,PullRequestReviewComment,But it works on OSX and fails on linux. The same code. Do you know why? And when I include PCL it does not fail every time.,,,,,,
47579997,995,PullRequestReviewComment,"PCL has nothing to do with it, that's just a coincidence (the random ThreadAbortException looks like a Mono bug).",,,,,,
47580578,995,PullRequestReviewComment,OK. Thanks.,,,,,,
47726522,995,PullRequestReviewComment,Can you keep this `[Fact]` around with the `Skip` attribute set?,,,,,,
47727105,995,PullRequestReviewComment,:lipstick: this just seems to be some mixed up `\` and `/` path separators - can we unify these?,,,,,,
47834235,995,PullRequestReviewComment,"sorry, I should have been clearer here - these new entries are just duplicates of previous ones - can you :fire: them to simplify the diff?",,,,,,
47979641,995,PullRequestReviewComment,"Eh, I'll clean this up after `master` goes green again.",,,,,,
53337103,992,PullRequest,This is empty and isn't needed.,,,,,,
53327219,991,PullRequest,Fixed a parameter name that was misleading and documented the methods and properties.,,,,,,
47300538,991,PullRequestReviewComment,:lipstick: `The version of the product` (i.e. drop the `Gets`)?,,,,,,
47305080,991,PullRequestReviewComment,Ha! Ghost Doc. :stuck_out_tongue:,,,,,,
53263623,990,PullRequest,"Implemented methods for creating an authorization without having to specify an app clientid/clientsecret.These methods will ONLY work with username/password Basic Auth.Added a helper method to return a GitHub client using basic auth credentials as if you have both password and oauth token environment variables, you get credentials based on the oauth token.Fixes #969",,,,,,
47289607,990,PullRequestReviewComment,This PR is perfect so I'm going to nitpick on the extraneous line endings between the `return` statement and closing brace. :stuck_out_tongue:,,,,,,
47289674,990,PullRequestReviewComment,Remove the extra line break.,,,,,,
53219242,989,PullRequest,"I found myself on a fresh VM and realised I hadn't set up the test variables for Octokit.So I scripted it out in some rough PowerShell (indicating which are optional parameters for tests which are specific to features not everyone runs - like private repositories or application tests):When you run the same script again, it'll display your existing values and ask if you want to update them:Let me know if there's any way to make this experience a bit more friendly.- [x] let me actually review this before someone eagerly merges it- [x] set for your current session as well, so you don't go wondering why things didn't update- [x] can run all the integration tests again- [x] opt-out of basic authentication tests (it's optional)- [x] correctly differentiate where tests require Basic Auth- [x] open issues for now-muted tests- [x] link to issues in code",,,,,,
53212090,988,PullRequest,"I use [this script], and I'm not sure if anyone else is. If people want to bring that in, I can totally do that (or some sort of use-Octokit-to-cleanup meta experiment).![nothing-to-see-here]",,,,,,
53158711,987,PullRequest,Linqpad example fixes had reference to `SignatureResponse` which is now changed to `Committer` #983. This only fixes the specific file that is causing the build to fail.,,,,,,
53082302,986,PullRequest,"This should have been picked up earlier, but I didn't `[Obsolete]` the interface so the message didn't flow through the internals to reach the `GetArchiveLink` overloads.So let's get this into the next release:- [x] rebase once `master` is green again",,,,,,
52972108,985,PullRequest,"This is the first step in me rewriting the HTTP internals of Octokit as discussed in #984 - I've gone through this exercise a few times, and I think this is now simple enough to share with the world and actually commit to.This is targeting a branch named `http-client-milestone` instead of `master` so I can work on this alongside other stuff - and others can get involved to hash out the API in parallel with Important Things‚Ñ¢.What this PR is about:- showing what the new flow for creating a `GitHubClient` looks like- rewriting the internals to then use the new HTTP bits- getting tests passing againWhat this PR _isn't_ about:- determining the obsoletion steps - I've used `[Obsolete]` here to help with refactoring, however nothing is set in stone- new features - I've used `Timeout` as an example property because it came up in #965 and I'd really like to avoid adding more `ctor` parameters to `GitHubClient`What I'm looking for feedback on:- is setup too verbose? I'm going back and forth with  on how much of the simpler `ctors` for `GitHubClient` we keep around, but see the `Monkey` test for what the new setup looks like right now- how much backwards compatibility do others care about here?Checklist:- [ ] gather feedback  - [ ] Ensure `ClientInfo` values are copied when creating `HttpClient`  - [x] Port existing setup for now, don't introduce new concepts like `Timeout`  - [x] Move required properties into `ctor` overloads- [ ] reflect, update samples- [ ] rewrite intro docs?",,,,,,
52925724,981,PullRequest,"### octokit/octokit.net now has a Chat Room on Gitter has just created a chat room. You can visit it here: [].This pull-request adds this badge to your README.md:[![Gitter]]If my aim is a little off, please [let me know].Happy chatting.PS: [Click here] if you would prefer not to receive automatic pull-requests from Gitter in future.",,,,,,
52924537,980,PullRequest,This is no longer supported due to the redirect work implemented in #808 and shipped in `v0.14` - and given `v0.17` is now shipping let's :fire: this member finally...,,,,,,
52923444,979,PullRequest,Included the beta nuget package location,,,,,,
46903079,979,PullRequestReviewComment,Unstable NuGet packages that track the `master` branch of this repository are available at,,,,,,
52921159,978,PullRequest,"This was renamed from `.ide` when VS2015 was released, but for some reason I've only noticed it now.I'll leave the old rule around for now, because it's harmless.",,,,,,
46898966,977,PullRequestReviewComment,"The convention with previous release entries has been ""#PR via "" - could you bring the #PR forward for each item?",,,,,,
46899089,977,PullRequestReviewComment,I'll fix it.,,,,,,
46899473,977,PullRequestReviewComment,Double ## here,,,,,,
52915901,976,PullRequest,This supersedes #934 and fixes merge conflicts.,,,,,,
52798233,975,PullRequest,trying to fix#966,,,,,,
46787258,975,PullRequestReviewComment,:lipstick: perhaps make this singular i.e. `LatestRelease`,,,,,,
52786991,974,PullRequest,Overrided `ToString` methods for `ApiException` and `ApiError`Fixes #945 I'm not really sure about format though. Right now `ToString` produces the following output: - [x] agree on message format- [x] update current message format if needed,,,,,,
47184860,974,PullRequestReviewComment,:lipstick: this namespace doesn't seem necessary,,,,,,
47197464,974,PullRequestReviewComment,"yup, it doesn't. Deleted.",,,,,,
52771342,973,PullRequest,Generate nuget packages on appveyor is something that will help consuming the latest master build without waiting for a release For example in this   the consumer of the package had to go through the hazzle of building nuget locally to test this. I was enable to enable the nuget packages on my appveyor builds As part of this PR the main appveyor build settings page has to be updated with a meaningful nuget name which I think is owned by  Here is mineAfter updating that we could include that in the README.md so that anyone can consume the latest builds.,,,,,,
46767513,973,PullRequestReviewComment,"I'm not 100% clear on this value - if this is disabled, it would mean packages aren't created for PRs - which is the inspiration for this change. Or am I mis-understanding something?",,,,,,
52769962,972,PullRequest,This will fix the Unicode Json serialization bug .When I was looking at the code I realized there was already a fix with a PR  .Reused the same code for this fix.,,,,,,
52460682,970,PullRequest,This continues the work started in PR #936. That PR was abandoned so I'm creating a new branch that people can PR into to complete this work.Closes #936,,,,,,
51612663,965,PullRequest,The `HttpClient` does not take the `Timeout` argument which by default is 100 seconds. Implemented a change where the user has an option to provide the timeout. This is to address the #963.,,,,,,
46176105,965,PullRequestReviewComment,Please separate methods with newlines.,,,,,,
46176140,965,PullRequestReviewComment,Add a space after the comma.,,,,,,
46176186,965,PullRequestReviewComment,Newline between previous method and start of this one.,,,,,,
46176215,965,PullRequestReviewComment,No need for two newlines though. :stuck_out_tongue:,,,,,,
46176409,965,PullRequestReviewComment,"This comment isn't accurate. The parameter is a `TimeSpan`, not an integer representing milliseconds.",,,,,,
50076825,961,PullRequest,Included the travis CI for the coreclr builds.,,,,,,
46906574,961,PullRequestReviewComment,This should be the final URL -  - could you update this badge?,,,,,,
46907329,961,PullRequestReviewComment,You could update it when you get a travis-ci setup for octokit.net . I won't know the exact URL until one is setup.,,,,,,
46908227,961,PullRequestReviewComment,"Do you see the ""No builds for this repository"" message at that above URL?",,,,,,
49760616,960,PullRequest,This PR adds experimental support for targeting .NET Core. There's also some extra niceness in here about being able to target - [ ] can build on AppVeyor- [ ] add .NET Core support to Octokit package- [ ] add .NET Core support to Octokit.Reactive package- [ ] target platforms in `project.json` to reduce need for managing multiple projects (and the various project hacks)- [ ] what about executing tests locally? in CI?,,,,,,
43963364,960,PullRequestReviewComment,Why was this file removed?,,,,,,
43982441,960,PullRequestReviewComment,Duplicated file (it's also under `Models/Common`) - the new `project.json` file found this twice and it triggered a compilation error.,,,,,,
49751683,959,PullRequest,The client.Repository.Content.GetAllContents #800  does not allow getting root folders for Branches. This fix would allow the users to pass null/empty strings for the path which will address the issue.,,,,,,
139852988,959,PullRequestReview,Provide the solution for this,,,,,,
46185797,959,PullRequestReviewComment,"I would reorder `path` and `reference`. The reason is the other overload to this method takes in `owner`, `name`, `reference`. If the user is calling that overload, then decides, no, they want to call this one, they only need to tack on the `path` parameter. They don't need to re-order parameters. Based on my experience, this is a common source of API call errors.",,,,,,
46185845,959,PullRequestReviewComment,Remove extraneous newline here.,,,,,,
204724781,959,PullRequestReviewComment,"path parameter is not accepting any special char like '#' and space. I am trying to retrieve files form directory and i am getting not found exception and under same root directory it is getting all file which does not have any special char.I have two sub directories : 1) C# Code  and 2) TestApp. i am able to access TestApp but not ""C# Code"" as it is throwing not found exception. suggest me any solution for this as i am not able to rename the directory sue to some reason.",,,,,,
49599998,957,PullRequest,Just extracting a couple of outstanding PRs which are basically ready to merge.Supersedes #947Supersedes #937Supersedes #935Fixes #938Fixes #910Fixes #839cc,,,,,,
49509410,956,PullRequest,- [x] can build under VS2015 locally- [x] can build on AppVeyor- [x] `netcore45` -> `netcore451` target it any more- [x] test and verify standard version can build and test this- [x] docs- [x] CI back to green- [x] run integration tests- [x] test preview package in a Store app,,,,,,
49360017,955,PullRequest,Searching tha code docs.,,,,,,
43577720,955,PullRequestReviewComment,I would prefer code that would compile. This one will fail to compile because there is duplication of `In`,,,,,,
43795898,955,PullRequestReviewComment,:thumbsup: I think we should keep this second line around instead of both,,,,,,
43807525,955,PullRequestReviewComment,Done.,,,,,,
49332733,954,PullRequest,Search dem users.Replaces #952,,,,,,
43570779,954,PullRequestReviewComment,done.,,,,,,
49329809,952,PullRequest,"Search dem users documentation.Edit: something gone wrong with the commit history, sorry!",,,,,,
49160087,951,PullRequest,Let me kickstart my documentation contribution with this PR.Relates to #948Let me know what you want me to improve on./cc This PR negates #950,,,,,,
43551329,951,PullRequestReviewComment,If we're demonstrating `DateRange` here could we drop this usage and just include `DateRange.Between` here?,,,,,,
43551712,951,PullRequestReviewComment,"That's cool...Whilst I was writing this, I was thinking... will you want us to describe the `daterange` class as this is a documentation, or for now will we simply expand on the documentation as and when?",,,,,,
43552668,951,PullRequestReviewComment,This seems a bit basic - could we jazz this up a bit?e.g. To search for repositories using Octokit you need to create a `SearchRepositoriesRequest` and populate it with the search criteria.,,,,,,
43552833,951,PullRequestReviewComment,"It'd be nice to have an example below this around how to use this with a `GitHubClient`, if only to see something like:or whatever it's supposed to do...",,,,,,
43553688,951,PullRequestReviewComment,"That's cool, would this be better served at the top? I mean... assuming that we have already told the user about creating a githubclient, we could simply say at the top of this page. Then pass in any of the request objects below e.g. `SearchRepositoriesRequest` etc. What do you think?EDIT: I meant underneath the Search Repositories heading.",,,,,,
43553864,951,PullRequestReviewComment,"That's cool, would this be better served at the top?Yeah! Let's do that!",,,,,,
43554811,951,PullRequestReviewComment,:lipstick: single ` here should work fine too,,,,,,
43554828,951,PullRequestReviewComment,?,,,,,,
43554869,951,PullRequestReviewComment,And should this be _after_ the `request` ctors defined below?,,,,,,
43555114,951,PullRequestReviewComment,Let's not worry about the comment here.,,,,,,
49159719,950,PullRequest,"Let me kickstart my documentation contribution with this PR.Relates to #948Let me know what you want me to improve on./cc  EDIT: I am sure I targeted to `documentation` branch on octokit, can I update that or do I close and start again?",,,,,,
49092450,949,PullRequest,added a customization template for the project and organized the existing content under something resembling a hierarchy,,,,,,
49080230,948,PullRequest,"This will be the feature branch for whatever documentation we think needs to live in Octokit.Currently we're just pulling in everything under the `docs` folder, but I'm sure you all have ideas or suggestions.You can view the current state of this branch here: Fixes #463",,,,,,
49046167,947,PullRequest,Let us see if #904 still happensFixes #938 Supersedes #939,,,,,,
43299613,947,PullRequestReviewComment,This seems unrelated to the other changes - could you add it back in?,,,,,,
43299662,947,PullRequestReviewComment,typo: `Arbitrry` -> `Arbitrary`,,,,,,
43300590,947,PullRequestReviewComment,This test description should mention that it's interested in the markdown endpoint.,,,,,,
47944559,943,PullRequest,This commit  addresses the http response which wasn't handling response `content-type` `application/octet-stream` for binary items.Fixes #854,,,,,,
42547461,943,PullRequestReviewComment,I don't know if the response content type could be anything else other than `application/octet-stream`. From the test's that I have done with API  for `zip` and `txt` the response content type has only been `application/octet-stream`. Do we need the other types?,,,,,,
42611865,943,PullRequestReviewComment,I wouldn't worry about other types here...,,,,,,
42611920,943,PullRequestReviewComment,":lipstick: bring this up to the previous line, and a space after the `,`",,,,,,
42612074,943,PullRequestReviewComment,":lipstick: align all of these with a trailing `,` on each line (where relevant)",,,,,,
47501767,942,PullRequest,Fixes #941,,,,,,
47378314,940,PullRequest,Included build.sh to build form non-windows.,,,,,,
41742844,940,PullRequestReviewComment,Do we need to pass in the `MONO` flag here?,,,,,,
41750774,940,PullRequestReviewComment,It is for conditional compilation to `MONO`. I don't think so.,,,,,,
41752944,940,PullRequestReviewComment,:thumbsup:,,,,,,
47370200,939,PullRequest,#938added NewArbitraryMarkdown Class and implemented RenderArbitraryMarkdown method and unit tests.,,,,,,
47350584,937,PullRequest,#910added assignee property and constructor param.,,,,,,
47349894,936,PullRequest,#867.Set Merged to be Merged||MergedAt.HasValue. Merged is not always FALSE anymore.,,,,,,
41699832,936,PullRequestReviewComment,Let's completely remove the `merged` constructor parameter. `Merged` will be a calculated property. So this should be `Merged = MergedAt.HasValue`.,,,,,,
41699839,936,PullRequestReviewComment,Lets remove this property and constructor parameter since it's deprecated.,,,,,,
41699896,936,PullRequestReviewComment,well. Another quuestion is merge-commit-sha. It is suggested that we use Mergeable instead of merge-commit-sha. Shall we also remove that?,,,,,,
41703551,936,PullRequestReviewComment,"Yes, that's what I'm referring to. We should remove `MergeCommitSha`",,,,,,
47324982,935,PullRequest,‚Ä¶te with existing syntax.it generates a CA1502 code excessive complexity warning and i suppressed it.#839,,,,,,
41690030,935,PullRequestReviewComment,"Minor nit but there should be a space after ""updated,"" there. :smile:",,,,,,
43334339,935,PullRequestReviewComment,:lipstick: insert a newline between the `{` and the `[Fact]` to give each test some space,,,,,,
43334346,935,PullRequestReviewComment,:thumbsup:,,,,,,
43335174,935,PullRequestReviewComment,And here,,,,,,
43335178,935,PullRequestReviewComment,And here,,,,,,
43335183,935,PullRequestReviewComment,And after this line,,,,,,
47277915,934,PullRequest,Rebased 's from #819 and mine from #931 on top of master.Fixes #373.,,,,,,
41743280,934,PullRequestReviewComment,"via  from some other PR: Yeah, they probably should inherit from `ApiException`.",,,,,,
41743287,934,PullRequestReviewComment,"via  from some other PR: Yeah, they probably should inherit from `ApiException`.",,,,,,
47226498,933,PullRequest,Deploying new releases using octokit #905 - [x] Automate deploying to github using octokit - [x] Deploy nuget package to the nuget server.,,,,,,
42215353,933,PullRequestReviewComment,"Should this be named `GITHUBOWNER` to indicate this is specific to the GitHub API (rather than the Git repository)?And `octokit` is an organization, so this is just going to fail miserably with the default. Not sure what to put here, so let's leave it empty.",,,,,,
42215370,933,PullRequestReviewComment,?,,,,,,
42216595,933,PullRequestReviewComment,"I can see it's also used to find the right remote (I have both my fork and the upstream `octokit` repos tracked as remotes, so perhaps this needs to be two variables?",,,,,,
42216739,933,PullRequestReviewComment,OCD: `GitHub` not `Github`,,,,,,
42218115,933,PullRequestReviewComment,"This seems to be working on Mono `master` - is there a specific build we should be using here to ensure this works on Mono, or is it too early to rely on this fix being present?",,,,,,
42234502,933,PullRequestReviewComment,is used while publishing the release. You could use . If you don't provide this argument then console would prompt it while deploying. It is an optional argument.,,,,,,
42234869,933,PullRequestReviewComment,is used for `SourceLink` . Sourcelink is excluded on mono,,,,,,
42235145,933,PullRequestReviewComment,Fixed it.,,,,,,
42236841,933,PullRequestReviewComment,"Apologies, I wasn't clear.I was suggesting this be renamed from `GITPASSWORD` to `GITHUBPASSWORD`.",,,,,,
42236865,933,PullRequestReviewComment,:ok_hand:,,,,,,
47189518,931,PullRequest,On top of #819.Merged master in and added tests for newly added exceptions.,,,,,,
47066103,929,PullRequest,Fixes #389Added following links to the Message property:- 'Deleting a repository' at - 'What plan should I use?' at,,,,,,
46963659,927,PullRequest,Updated it with the logo,,,,,,
41328771,927,PullRequestReviewComment,"I love it! However, the logo is HUGE and takes up so much space. Let's use a normal image tag and size it to a reasonable size.",,,,,,
41328941,927,PullRequestReviewComment,How about this one,,,,,,
41331600,927,PullRequestReviewComment,:+1:,,,,,,
46734214,924,PullRequest,"First off, sorry for letting the deployment instructions get out of date and of course something would come up as soon as I go on holiday :cry:Fixes #899 Here's me brain-dumping and scripting stuff out, so it won't happen again:- [x] `script/bootstrap` to setup your repository right- [x] `script/build` to just build and test- [x] `script/package` to ensure you can correctly generate packages- [x] refactor pre-requisite installation into common function for use in both `build` and `package`- [x] resolve missing dependency for SourceLink (found on multiple environments)- [x] update and centralize docs- [ ] the normalizing of the repo seems to fail - why?There's lots of potential headaches here with running the integration tests (exhausting API limits, hitting anti-spam measures, etc) so that's a lower priority for me right now.I'll also leave automating the releases in #905 to",,,,,,
46724868,923,PullRequest,Fixes #423,,,,,,
43904424,923,PullRequestReviewComment,Could we clean this up so it looks like the `String.Equals` call above?,,,,,,
43907608,923,PullRequestReviewComment,"I might have been too eager with this, given you need `EndsWith` to verify this. Disregard.",,,,,,
46691444,922,PullRequest,The FAKE build has deprecated XUnit2Helper  .This fix replaces XUnit2Helper with XUnit2.,,,,,,
41080436,922,PullRequestReviewComment,"Couldn't this affect someone? It's now outputting HTML instead of XML, right?",,,,,,
41087443,922,PullRequestReviewComment,"AFAIK it wasn't used. If it affects someone, I could change it to XML.",,,,,,
41087860,922,PullRequestReviewComment,I dunno. I thought maybe AppVeyor or someone might've picked it up. Just thought I'd ask :smile:,,,,,,
46650412,921,PullRequest,Implement LINQPad samples in NuGet packages. #505 - [x] Implement LINQPad samples - [x] Update build to include the sample as nuget package- [x]  ~~Write a test~~  Change the `build.fsx` to do a  [lprun] `-compileonly` check to make sure new check-in's don't break the samples.,,,,,,
46447597,919,PullRequest,"Currently, installing Octokit into a project which does not have a reference to `System` fails like so:I always strip out all references from a project and only add back in what is required (it's surprising how often something like a simple business logic lib doesn't even need a reference to `System`).Anyhow, this nasty looking error can be avoided by declaring `System` as a required framework assembly reference.I've no idea if this is also required for `netcore45`. I tried it out in a sample `netcore45` project but the whole notion of referencing framework assemblies explicitly doesn't even seem to exist there.",,,,,,
46353664,918,PullRequest,This (hopefully) fixes #817,,,,,,
40849985,918,PullRequestReviewComment,"Honestly, I'd rather not have this method and only have the `TimeSpan` I think it promotes better practices. Also, if we really want this overload, we can add it as an extension method to the interface.",,,,,,
40850114,918,PullRequestReviewComment,We should probably validate that the TimeSpan is not negative as a negative value is almost certainly a programmer error. I'd throw an `ArgumentOutOfRange` exception.,,,,,,
40850244,918,PullRequestReviewComment,Validate the `TimeSpan` argument here too please.,,,,,,
41116462,918,PullRequestReviewComment,:thumbsup: done on line 182,,,,,,
46164146,917,PullRequest,"Introducing `NewRepositoryWebHook`, a new strongly typed class that derives from the existing `NewRepositoryHook` class but adds properties and constructor parameters for config settings that should be passed to the API when creating a new web hook. These settings are merged with the config settings that are specific to the web service the web hook will be interacting with (as per []).Fixes octokit/octokit.net#914",,,,,,
41099808,917,PullRequestReviewComment,/wether/whether,,,,,,
41099819,917,PullRequestReviewComment,"Please add a space after the period before the word ""Supported""",,,,,,
41099824,917,PullRequestReviewComment,Space after the period.,,,,,,
41099834,917,PullRequestReviewComment,"Space after ""the""",,,,,,
41099840,917,PullRequestReviewComment,"Space after ""payloads.""",,,,,,
41099843,917,PullRequestReviewComment,"Let's quote ""web"" here.",,,,,,
41099852,917,PullRequestReviewComment,This line looks like it doesn't belong.,,,,,,
41099856,917,PullRequestReviewComment,"Remove ""JSON"" here.",,,,,,
41099880,917,PullRequestReviewComment,What happens if `Config` contains a duplicate key? We should test that scenario and define what we expect to happen.,,,,,,
41110300,917,PullRequestReviewComment,"So right now, it will fail with the following error `An item with the same key has already been added.` :bomb: This is of course due to the way the equality comparison on a key value pair checks the object, not just the key.So we can introduce a custom equality comparerand use that like thisThis way we will only include distinct key/value pairs based on the key itself, the value that would be used is the one that was passed in the `config` parameter in the `ctor`. Personally I'm leaning to that we should be using the values of the `NewRepositoryWebHook` properties to override the values in the `config` parameter...although, maybe we should throw a helpful error message if they pass web hook specific config values in the `config` parameter...thoughts?",,,,,,
41166362,917,PullRequestReviewComment,"Yeah, I kind of lean towards throwing an exception. Quietly overriding values could be surprising. Also, if you choose to use the `NewRepositoryWebHook` we should alert you to the fact if you're doing it wrong.",,,,,,
41204041,917,PullRequestReviewComment,"Yea, I'm not too keen of unexpected behaviour of a framework :smile: so I'm happy to return an error message if duplicate keys exists.",,,,,,
46127435,916,PullRequest,Replace `SignatureResponse` and `CommitEntity` with `Committer`A recent PR added `CommitEntity` but we already had `SignatureResponse` expressly for this purpose.So this commit renames `SignatureResponse` to `Committer` and removes `CommitEntity` and replaces it with `Committer`.I also had to retarget the NetCore45 app so it builds in VS 2015.,,,,,,
46112348,915,PullRequest,"Our build status has a :poop: load of warning about undocumented public properties/methods/etc.We could turn it off, or given that this is a library, we could actually document everything.This ends up being a big task, so this PR just documents all the Request models. I also fixed a few bugs I found while doing this.",,,,,,
40512138,915,PullRequestReviewComment,"Hey , I mentioned this in the chat room, but figured a GitHub comment message was less transient.According [to the docs] if you don't specify a `since` it defaults to `Time.now` which doesn't make sense to me as there can't be any notifications since now at the time you make this request.It makes more sense that `Time.now` is the default for `before`, not `since`. Are the docs wrong?",,,,,,
41117218,915,PullRequestReviewComment,l o l,,,,,,
46093804,912,PullRequest,"and `Affiliation/Visibility` are exclusive, if one is set the othercan't be, so the enum properties have to be nullable. The defaultbehaviour when no parameters are passed is whatever the new defaultbehaviour is on the server for the new api (currently, it is = `All` and `Affiliation` = `Owner | Collaborator`).- [ ] Add unit tests- [ ] Update integration tests- [ ] Test itReplaces PR #780",,,,,,
45737796,909,PullRequest,"This solves Issue #655 I created the structure and refactored the `RepositoriesClientTests` as a way to test what the new syntax looks like. It looks good, but having to write  `var createdRepository = context.Repository;` every  time is kinda boring, I wonder if this can be simplified somehow.If this looks good I'll refactor the other test classes to use the new syntax as well---Those use the same repository for multiple tests, so they won't have the nice `using` syntax. I'll change them for consistency, though- [x] AssigneesClientTests.cs- [x] BlobClientTests.cs- [x] CommitsClientTests.cs- [x] CommitStatusClientTests.cs- [x] DeploymentsClientTests.cs- [x] DeploymentStatusClientTests.cs- [x] IssuesClientTests.cs- [x] IssuesEventsClientTests.cs- [x] IssuesLabelsClientTests.cs- [x] MergingClientTests.cs- [x] MilestonesClientTests.cs- [x] PullRequestReviewCommentsClientTests.cs- [x] PullRequestsClientTests.cs- [x] ReferencesClientTests.cs- [x] ReleasesClientTests.cs- [x] RepositoryCommitsClientTests.cs- [x] RepositoryDeployKeysClientTests.cs- [x] TreeClientTests.cs- [x] ObservableIssuesClientTests.cs, however, uses the `RepositoriesHooksFixture` class, I wonder if this shoud be replaced to use the new context approach or not",,,,,,
45639556,908,PullRequest,"Related to #907The failing test yields:    Expected: True       Actual:   FalseNow it will include the offending members, which IMO is much more helpful: Model type 'Octokit.RepositoryContent' contains the following mutable properties:        EncodedContent",,,,,,
45618404,907,PullRequest,Making `EncodedContent` public to get the raw bytes of a file. #861,,,,,,
45608395,906,PullRequest,Updated the readme to include the nuget reference to Octokit.Reactive,,,,,,
45476754,903,PullRequest,Fixes [#779] :),,,,,,
45468472,902,PullRequest,With this fix we should be able to compile the Xamarin Studio Solution from the shell.,,,,,,
45405885,901,PullRequest,Fixes octokit/octokit.net#885,,,,,,
45333130,898,PullRequest,- [x] Release notes and- [x] bumped version- [x] integration tests passed,,,,,,
45281561,897,PullRequest,fixes #893,,,,,,
39738419,897,PullRequestReviewComment,Now I really understand the power of the `?.` operator,,,,,,
39741006,897,PullRequestReviewComment,Indeed! :unamused:,,,,,,
39777675,897,PullRequestReviewComment,We could probably upgrade our compiler to use C# 6 if someone wants to take a crack at it. As long as we don't break our other platforms.,,,,,,
45185787,895,PullRequest,Fix for Upload to Github releases stopped working #894. The `ExpandUriTemplate` could handle only one parameter which is the bug.,,,,,,
39694444,895,PullRequestReviewComment,Is that the proper expansion? Or should it be `?name=example name.txt&label=labeltext`,,,,,,
44863256,892,PullRequest,See  for more information aboutthis endpoint.,,,,,,
44785220,890,PullRequest,(see ),,,,,,
44693885,889,PullRequest,The mono android projects were referencing to files that were missing which was causing the build to fail. This is similar to #888,,,,,,
44633570,888,PullRequest,Fixes #886cc,,,,,,
44629461,887,PullRequest,- [x] version bump- [x] release notes- [x] integration tests,,,,,,
39127554,887,PullRequestReviewComment,"This was a regression in #860 as `ResetAsUtcEpochSeconds` is the source of truth from the response (I should have called out the `ignoreThisField` earlier). Anyway, the test caught this so yay tests!",,,,,,
44581157,884,PullRequest,This fix surfaces the comments URL in the Issue response object. #883,,,,,,
44310312,881,PullRequest,"The readme doesn't mention the docs folder, and it should.I wasn't sure exactly where to put the link so if anyone thinks it should be bumped down a bit (perhaps in the ""Getting Started"" section?) let me know and i'll move it.",,,,,,
44178884,878,PullRequest,Octokit currently uses an undocumented endpoint for creating app authorizations.This makes Octokit send the fingerprint as part of the URL which only works as long as the fingerprint doesn't contain any characters that has special meaning in urls (most notably `/`). Seeing how fingerprints are an opaque string we can't expect them not to contain reserved characters.This PR switches the endpoint to the [documented one] which accepts the fingerprint as part of the JSON body where we can use any characters we want.cc,,,,,,
43715336,876,PullRequest,hello.,,,,,,
43427933,871,PullRequest,This PreviousFileName property is returned from the GitHub API when a file was modified. Check  for an example of returning a commit containing file renames. Let me know what you think about the change and if there are any modifications I should make related to it.,,,,,,
42008341,864,PullRequest,"I couldn't find a helpful `FileName` property for code search (see ) , so I added it!",,,,,,
41942013,862,PullRequest,"Fixes #836If we get a 204 No Content response to GetQueuedContent, we should return an empty collection rather than throw an exception.",,,,,,
41641912,860,PullRequest,Just tidying up some code,,,,,,
39119700,860,PullRequestReviewComment,"Yeah, I don't know why we'd need this `set`. Nice spot!",,,,,,
39119772,860,PullRequestReviewComment,I wonder if this will be reverted the next time I run it through the FAKE build script...,,,,,,
41389083,857,PullRequest,"resolves #841This seemed really straightforward, but if there's more to it, let me know!",,,,,,
41366777,856,PullRequest,"While exploring some organizational automation with `octokit.net` I discovered that the `TeamClient.AddMembership(..)` call passes a `null` value into a parameter of `ApiConnection.Put(..)` that fails on an `Octokit.Ensure.ArgumentNotNull(..)` call.The GitHub API 3.0 Team docs state that the correct way to call the _Add Team Member_ endpoint is to essentially pass an empty body: Note that you‚Äôll need to set Content-Length to zero when calling out to this endpoint. For more information, see ‚ÄúHTTP verbs.‚Äù -  [Add Team Member] API docsMy proposed fix (that I will submit shortly in this PR) is to have `ApiConnection.Put(..)` check for a `null` body and respond by setting the `Content-Length` header to zero as instructed, if that is possible, rather than throwing an `ArgumentNullExceptionValue`.#### Todo- [x] vet the design approach;- [x] configure the underlying `Connection` object to add the `Content-Length` header when the `body` is `null`- [x] removed the `Content-Length` header as that generated a `System.InvalidOperationException: Misused header name.`- [x] confirmed worked for my use case, used octokit to add users to a team;",,,,,,
41323303,855,PullRequest,As discussed in issue #504 Allows the user to get the contents of the last ApiInfo (so last Api call).  Provided as a property of GitHubClient which calls a property of Connection then a property of HttpClientAdapter.The most obvious use for it is to check the current rate limit without making a separate API call.Two concerns for me:- Can't put a test in for the HttpClientAdapter.  The underlying HttpClient is concrete and the send method is not virtual so can be substituted.  Could abstract the HttpClient (interface and wrapper) - this would help to put more testing into for the HttpClientAdapter (currently quite light).- Must be a better design than having to implement a property through every layerThanks,,,,,,
35960259,855,PullRequestReviewComment,"This sounds like an interface for the `ApiInfo` itself. What about `IApiInfoProvider`, it seems to be more in line with the comments as well?",,,,,,
35960433,855,PullRequestReviewComment,This does not have to be set here and IMO it's not a HTTP concern at all. All requests go trough [`Connection.RunRequest`] so I think it would be better to move this up a level.,,,,,,
35960479,855,PullRequestReviewComment,This does not feel right. API info is not a HTTP concern (see previous comment for a potention solution).,,,,,,
35960525,855,PullRequestReviewComment,"Also, what about threading? Should there be a lock introduced here?",,,,,,
36044463,855,PullRequestReviewComment,I've added this for the thread safety.  Thoughts welcome,,,,,,
36044471,855,PullRequestReviewComment,I moved the setting of the LastApiInfo before HandleErrors so that the LastApiInfo is still set even if an exception is thrown from the HandleErrors,,,,,,
36696192,855,PullRequestReviewComment,"Hmm, do we actually need locks here? If someone is reading the value _just_ as another thread is writing the value, it sort of doesn't matter who wins. After all, the read value will only be _slightly_ outdated.In other words, I don't see any problems with race conditions in this case as this isn't data that's timing sensitive. I don't think torn reads are a problem because these are 32 bit references.This value is going to be set on every request, I'd rather avoid a lock here unless it's absolutely needed.",,,,,,
36772015,855,PullRequestReviewComment,I'm easy either way - with locking/ withoutWhat's the preferred method of resolving coding decisions?  A well argued debate between respectful & collaborate peers?  Rocks/ Paper/ Scissors?  A fight to the death?(is it wrong to hope for the last one),,,,,,
36772231,855,PullRequestReviewComment,"I've been taking the Benevolent Dictator role. :stuck_out_tongue:I'd like to hear from  if there are specific concerns with removing the locks. If not, let's remove them.",,,,,,
36773067,855,PullRequestReviewComment,(Off topic)Please tell me someone out there is photoshoping the below - replacing with  and the Octocat (not saying which way round),,,,,,
36773988,855,PullRequestReviewComment,"I think it's fine to remove the locks, it's probably a bit too much. I just brought it up because there's now some shared, mutable state going on.",,,,,,
36774884,855,PullRequestReviewComment,":thumbsup:Let's remove the locks, but make sure we comment it and explain why so if someone else comes along, they understand why there's shared mutable state.Also, one idea we should do is to set `LastApiInfo` to a copy of the `ApiInfo` to reduce the sharing of mutable state. In fact, I think `LastApiInfo` should be a method `GetLastApiInfo` and it should always return a copy of the last `ApiInfo`That way, Octokit is in control of the lifetime of that object and a consumer can't inadvertently keep the object around longer than expected. Thoughts?",,,,,,
36775263,855,PullRequestReviewComment,SGTM :+1:,,,,,,
37150236,855,PullRequestReviewComment,Extra points for explaining why I needed to add this null check.  For some reason bundles of tests fail without it (comment and see what happens).  I think it is something to do with how the mocking framework is handling the object - but can't understand why it touches it.,,,,,,
37913129,855,PullRequestReviewComment,When would `this` be null though?,,,,,,
37913971,855,PullRequestReviewComment,"As a minor code style, I think this should use object initializer syntax.",,,,,,
37955824,855,PullRequestReviewComment,Fair point.I really not sure why I need this line at all - but something blew up within the mocking framework so I added everything and kitchen sink.Maybe went a tad overboard ;),,,,,,
40883879,852,PullRequest,"Fixes #830 Fixes #850 This adds an `Octokit.Experimental` solution file as a test-bed for DNX support. I'm only starting with the `Octokit` project but this should also include `Octokit.Reactive`There's a new build target so I can start testing things on the build server. You can invoke it from the command line:cc  **Goals:**- [ ] can open and build solution in VS2015 Community - Windows 7- [ ] can open and build solution in VS2015 - Windows 8.1- [ ] can open and build solution in VS2015 Community - Windows 10Given the projects here which depend on having Windows 8.1, I think I'll need to have a core project which excludes those. Ugh, complexity.**Road Map:**- [x] build and test solution on MSBuild v14.0 only- [x] packaging changes due to `netcore45` modifications?- [x] bootstrap a `Octokit.Reactive` `project.json` file- [ ] update assembly version in both `project.json` files as part of CI**Exploration:**- [ ] can we add a `PCL` target to each `project.json`? `System.Net.Http` might be a problem.- [ ] `dnu pack` to create new packages?- [ ] can we run existing test projects against new binaries?- [ ] can we enable CI to test these new projects?",,,,,,
40814825,848,PullRequest,"Added support for the rate_limit API .  Note that this is the Miscellaneous API call - not the rate details returned as part of the headers for every API call.  This functionality is referenced in #811 I'm interested in feedback (thus marked as WIP).  Taken a couple of design decisions that may not fit with the overall solution:1. Created a separate ResourceRateLimit model rather than re-purpose the existing RateLimit.  I've chosen to keep them separate as they have such different source (API vs Header) and could be changed by GitHub independently.2. Created a structure made up of MiscRateLimt/ ResourcesRateLimits/ ResourcesRateLimit using the Poco Json deserialization - fitting the API structure.  Possibly better to perform custom deserialization (similar to ActivityPayload?) to return an array of a simple object (resource name, limit, remaining, reset).  Note entirely sure of the names either.3. I've included the depreciating ""Rate"" for completeness.  Given that it will depreciate, then maybe better to simply not get anyone into bad habits.  Would be removed anyway if I go for custom deserialization.4. To utilize Poco Json deserialization I've created a reset (long) and resetAsDateTimeOffset.  Better way to do?  Again, if I go down custom deserialization then I can just use the reset as DateTimeOffset.Feedback always welcomed.",,,,,,
35465529,848,PullRequestReviewComment,We try to avoid abbreviations. So I'd call this `MiscellaneousRateLimit`,,,,,,
35466147,848,PullRequestReviewComment,I'd rather we just use `RateLimit` and not this class. The name of this class is too similar to `ResourceRateLimits`. The data we show in this response and in the headers are the same and not likely to change (as we try and avoid breaking changes).,,,,,,
35466238,848,PullRequestReviewComment,"Per my [previous suggestion], I think this should be `ResourceRateLimit` and the property types should be `RateLimit`",,,,,,
35498272,848,PullRequestReviewComment,Changed now to use RateLimit,,,,,,
35498279,848,PullRequestReviewComment,Changed as suggested,,,,,,
35498282,848,PullRequestReviewComment,Done,,,,,,
35499082,848,PullRequestReviewComment,Looks like these files need to be unified...,,,,,,
35499174,848,PullRequestReviewComment,Looking into it now,,,,,,
35499446,848,PullRequestReviewComment,"While I love the explicitness here, I think letting this fall through to the Assert.Equals is totally fine to simplify the tests...",,,,,,
35499472,848,PullRequestReviewComment,I think this can live outside the `#if`,,,,,,
35499479,848,PullRequestReviewComment,Does this need to be `public`?,,,,,,
35499485,848,PullRequestReviewComment,I'm not sure where we ended up with this - is it `ResourceRateLimit` or `RateLimit`?,,,,,,
35529248,848,PullRequestReviewComment,"Just to clarify, is this the NotNull check?  What about the other NotNull tests further down - lose them as well to make more readable?",,,,,,
35529325,848,PullRequestReviewComment,Will do.  I changed all this when I thought it was causing the appveyor problems (there was reasoning behind my thinking but I won't bore you),,,,,,
35529348,848,PullRequestReviewComment,As above - introduced (incorrectly) as trying to fix appveyor.  Will change.,,,,,,
35532965,848,PullRequestReviewComment,I assumed the above was yes & yes,,,,,,
35533186,848,PullRequestReviewComment,Three models in use:1. Originally MiscRateLimit -> Changed to MiscellaneousRateLimit to avoid abbreviation2. Originally ResourceRateLimits -> Changes to ResourceRateLimit 3. Originally ResourceRateLimit -> Changes to use existing RateLimitHopefully that makes sense,,,,,,
35586085,848,PullRequestReviewComment,:+1:,,,,,,
40616311,846,PullRequest,"We were bumped up to MSBuild v14 a few days ago, which highlighted [this bug] with PCL projects with Code Analysis enabled.For now, I'm going to mute this - the other projects run Code Analysis, so I'm happy what we lose here is covered elsewhere.- [x] CI passes- ~~[ ] restore xml-doc generation~~",,,,,,
40603522,845,PullRequest,"Looks like the tool I wrote to add `` to all *.csproj's had a bug that added them to the `Debug` section, not the global one. This has been fixed now :smile:",,,,,,
40398355,844,PullRequest,Forgot to change these... :disappointed:,,,,,,
40306644,842,PullRequest,"I didn't remove the validation, since it still gives some value in validating the owner and repo names separately.",,,,,,
34957360,842,PullRequestReviewComment,Fun fact - you can also have `Add(string nameWithOwner)` here and both sorts will happily work with the collection initializer syntax. should we support both? I still like the succinctness of writing them inline rather than splitting them out...,,,,,,
34957371,842,PullRequestReviewComment,"I actually had both in there, but decided to delete the overload. I guess it doesn't hurt to have it in, since we still do the same, full, validation :smile:",,,,,,
34957441,842,PullRequestReviewComment,"I added a commit with the single string overloads, you can just strip them out if you decide you don't want both.",,,,,,
35039337,842,PullRequestReviewComment,"Since the repository list will always be a finite collection, should this be an `IReadOnlyCollection`? And could it not simply inherit a concrete class at that point?",,,,,,
35039556,842,PullRequestReviewComment,:thumbsup: to more specialized collectionNot sure if the PCL library might get in the way of using a concrete class here though...,,,,,,
35040007,842,PullRequestReviewComment,Well there's List` would make more sense.,,,,,,
35041769,842,PullRequestReviewComment,"The only reason it implements `IEnumerable`, but landed on `IEnumerable` in the original implementation because it didn't allow simple strings.",,,,,,
40298517,838,PullRequest,- [x] version bump- [x] release notes- [x] tests all pass- [x] :shipit:,,,,,,
39906482,835,PullRequest,"Fixes #834 This is a breaking API change to support being able to search across repositories. We currently have an `ctor` overload that accepts an `owner` and `name` for the repository:The change here is adding a public property `Repos` which accepts a collection of `owner/name` strings (i've added some validation to ensure these are formatted correctly for the server):This replaces the old `Repo` property, which was constrained to one string:Rather than carry around both `Repo` and `Repos` for a period of time (leading to possible confusion), I'm just going to :fire: the property here - I think many people would prefer to just use the `Repos` property anyway...- [x] confirm regex rules match our repository rules- [x] make changes in `SearchIssueRequest`- [x] make changes in `SearchCodeRequest`- [x] a more-friendly abstraction than just a collection?- [x] document how to search issues (with some examples)- [x] document how to search pull requests (with some examples)- ~~[ ] document an example of searching code~~- [x] wtf ci?[Rendered docs]cc  -Zuber",,,,,,
38795407,828,PullRequest,"Fixed issue #732, to be able to create requests with no search term.Added no-args constructor to BaseSearchRequest also.Added a test to check things work as expected.",,,,,,
37858048,821,PullRequest,"Putting out this before repository redirects land (oh, and I need #795 for something)- [x] release notes- [x] version bump- [x] integration tests pass- [x] :shipit:",,,,,,
37835893,820,PullRequest,Woah! Quite a lot of projects you got going on there... :weary::gun:This'll make Visual Studio/R# stop teasing me with those new and :sparkles:shiny:sparkles: C# 6 features :lipstick:Though maybe it's time to start thinking about it? :wink:,,,,,,
37792946,819,PullRequest,- [ ] update xml-docs to call out exceptions- [ ] integration testsFixes #373See [the docs] for more details.,,,,,,
37783627,818,PullRequest,Fixes #704,,,,,,
36590676,810,PullRequest,"This was started in #765 but due to #808 we either need to:- implement a workaround for users to opt-out of redirects, leave the feature incomplete- just finish the feature, make retrieving the link unnecessaryI've favoured the latter, and marked the existing `GetArchiveLink` methods as obsolete.Doing this as a separate PR into the redirect PR so we can discuss whether users want to access the link without initiating the download.Fixes #748 cc",,,,,,
36007456,808,PullRequest,"Fixes #798 Fixes #748 Fixes #812Building on the awesome start that  started over in - [x] cry forever, then get up and ponder on what to do with all the suppressed warnings about incorrect disposal- [x] write integration tests for redirecting repositories:  - `` -> ``- [x] write some tests around creating data and handling the `307`  - setup a public repository to test this- [x] `RepositoryContentsClient.GetArchiveLink` depends on not following the redirect, prolly need to address this- [x] documentation- [x] set the timeout for downloading the archive above the default anything I've missed here?",,,,,,
31388767,808,PullRequestReviewComment,I'm almost inclined to obsolete `request.AllowAutoRedirect` and simplify things - as we need to control this behaviour in our very specific way. Any objections?,,,,,,
31389801,808,PullRequestReviewComment,"It felt like a nice feature to have, but I'm struggling to think of a scenario where I would actually need it.",,,,,,
31389814,808,PullRequestReviewComment,It was one of the first things I'd removed when refactoring earlier attempts. Good enough for me :fire::fire::fire::fire::fire:,,,,,,
34910841,808,PullRequestReviewComment,Couldn't this fail if there's no value here? Or do we always seed this with a value?,,,,,,
34912851,808,PullRequestReviewComment,"I think this would only fail if someone pre-filled the property with a value that cannot be cast to an int.  A value is assigned to the property when it is initially created, right after this If ends.",,,,,,
35721493,807,PullRequest,"This is wired up in the build script so you can run it at your leisure:The source code for the tool: I disabled a couple of rules from the upstream codeformatter repo which go against our coding style:- new line above first `using` statement- specify the visibility of a field/member explicitly- private fields naming styleThe net result is that things are actually pretty good, and we get some cleanup of whitespace for free.- [x] is the unicode (c) correct inside `AssemblyInfo.cs`?-  ~~[x] update `AssemblyInfo.cs` contents~~ :boot:ed- [x] braces for empty constructors - what rule is this?-  ~~[ ] remove copyright rename rule~~ :boot:ed- [x] wait for #799 to land and then rebase this - [x] docs docs docs- [x] hold for VS2015 support- [x] run over codebase once #808 is merged",,,,,,
30647276,807,PullRequestReviewComment,This looks a bit odd to me :hushed:,,,,,,
30871047,807,PullRequestReviewComment,"I had a look into this, and it turns out the rule is working this way due to:- open brace always on a newline- close brace (where trivial) is moved on to the same lineIf someone wants to fight me on this and put it back, they're more than welcome to poke around and see if they can fix this over on my CodeFormatter fork - it's `BraceNewLineRule` you want to look at...",,,,,,
30871288,807,PullRequestReviewComment,"aaaahhh...sorry, I must have forgotten to put on my :eyeglasses: when I looked over this...it was the indentation that got me...:nothingtoseehere: :movealong: :flushed:",,,,,,
35706766,806,PullRequest,- [x] version bump- [x] release notes- [x] integration tests pass,,,,,,
35680592,805,PullRequest,Fixes #804,,,,,,
40510163,805,PullRequestReviewComment,"I'm currently fixing this, but according to the docs here: This is _not_ optional and it should be `CommitMessage`. Did you happen to see something that suggests otherwise?",,,,,,
40511156,805,PullRequestReviewComment,"I would've thought I _did_ see something that suggested that the `Message` property was optional, but can't for the life of me remember (or find) where.",,,,,,
40512059,805,PullRequestReviewComment,Well the _response_ is `message` but the _request_ is `commit_message`. The docs are actually a bit unclear on this so I'll ask  for clarification.,,,,,,
35124828,799,PullRequest,Clean up the tests in order to comply with #782 - [x] `OctoKit.Tests`  - [x] `Clients`  - [x] `Helpers`  - [x] `Http`  - [x] `Reactive`- [x] `Octokit.Tests.Integration`  - [x] `Clients`,,,,,,
35059664,797,PullRequest,- [x] release notes- [x] version bump- [x] integration tests- [x] :shipit:,,,,,,
34991243,796,PullRequest,This is the first step down the path I talked about in #781 - a minor internal change to `HttpClientAdapter` to make it's `HttpClient` reusable- use a `CancellationToken` based on the specified `IRequest.Timeout` value- deprecate the `BaseAddress` and `Timeout` values when constructing the `HttpClient`- update impacted tests,,,,,,
34988924,795,PullRequest,"Thanks to  for starting this off.- [x] compare implemented APIs to what is in #331- [x] ~~ to be deprecated, use - [x] ~~ to be deprecated, use - [x] ~~ to be deprecated, use - [x] - [x] ensure no breaking changes in existing API- [x] lol fxcop",,,,,,
34985110,794,PullRequest,"Supersedes #542- [x] Finish Gists API Implementation  - [x] [Add method to get gist    commits]  - [x] [Add method to get gist    forks]Fixes #328Fixes #216Added implementation for the remaining pieces of the Gists API.  The others mentioned in #328 and #216 were completed through other PRs. Needs review, but I believe it is merge ready.",,,,,,
34188903,792,PullRequest,Fixes issue #784.,,,,,,
29987889,792,PullRequestReviewComment,Just a heads-up - this change also traps `application/json` output which breaks serialization (I should have caught this). I've updated it for the latest release to be more strict:,,,,,,
34123779,789,PullRequest,Properties not serialized correctly due to invalid names.,,,,,,
33912750,788,PullRequest,"As part of shipping 0.10 I disabled `GetAllPublic` because I couldn't get to the bottom of why it was infinite-looping. With a bit of sleep, however, I found a workaround.As part of generating the complete URL for the request, Octokit will take values in it's request collection and overwrite whatever's in the URL. This is fine for the first request, but it was also kicking in for subsequent requests - and getting stuck.I'm taking away this nice thing for just this endpoint, and providing just the URL it needs to start things off.The test is still taking too long, so I've disabled it anyway until I can get a chance to finish off #760.cc",,,,,,
33819686,787,PullRequest,- [x] version bump- [x] docs- [x] integration tests- [x] :shipit:,,,,,,
33806483,786,PullRequest,It's a long story.Fixes #785,,,,,,
28834876,786,PullRequestReviewComment,I think this should also be `Post` as per,,,,,,
28835367,786,PullRequestReviewComment,I _really really really_ think this should be a `Put` as per,,,,,,
28835612,786,PullRequestReviewComment,This should be `Authorization` not `Authentication` :lipstick:,,,,,,
28835671,786,PullRequestReviewComment,And this one :lipstick:,,,,,,
33632077,783,PullRequest,"I was running into an issue where i wanted more information from theTwoFactorChallengeFailedException. It turns out, the exception couldeasily provide both the TwoFactorType AND the authentication codeprovided. So :boom:!",,,,,,
28662013,783,PullRequestReviewComment,:memo: this should remain as `TwoFactorChallengeFailedException`,,,,,,
28662023,783,PullRequestReviewComment,:lipstick: indenting,,,,,,
28664559,783,PullRequestReviewComment,Nice catch!,,,,,,
33485553,780,PullRequest,"Type and Affiliation/Visibility are exclusive, if one is set the othercan't be, so the enum properties have to be nullable. The defaultbehaviour when no parameters are passed is whatever the new defaultbehaviour is on the server for the new api (currently, it isVisibility = All and Affiliation = Owner | Collaborator).",,,,,,
32584438,777,PullRequest,"A few breaking changes in here, so why not push this out as soon as possible?- [x] release notes- [x] version bump- [x] tests pass- [x] :shipit:",,,,,,
31754494,776,PullRequest,"Hi,First time doing a pull request, so if I have done anything different than expected, then I would be happy to know.I have tried continuing on the pr for the issue #495, where it was stated that it was missing integration tests.Therefore, I would like to have some input on the changes made and if I have missed anything, that needs to be changed.I have done the following changes to the code:- [x] Updated the previous code to match current convention rules and changes made in the interfaces- [x] Implemented integration tests for the forks api- [x] Implemented integration tests for the hooks api- [x] Implemented hooks ping command- [x] Added 'sort' parameter to forks list command- [x] Merged master into the branch to get the code up to date as the original pull request was oldTasks missing:- [x] Waiting for response from GitHub on error reported, when creating a hook and stating it should be 'active' = false, then it is created as 'active' = true. Minor error, but I have a test checking it and I do not like having a test that creates active web hooks (I can change the assert, but as I would like some input on the code, there is some time)",,,,,,
28657783,776,PullRequestReviewComment,:fire: unnecessary `using` statement,,,,,,
28657787,776,PullRequestReviewComment,:fire: unnecessary `using` statement.,,,,,,
28657854,776,PullRequestReviewComment,":grey_question: we've turned off parallelization here as part of running the integration tests, so these guards aren't necessary. Do you think they're useful to have anyway when running these hooks tests?",,,,,,
28657866,776,PullRequestReviewComment,"Ah, now I'm seeing the other valuable part!",,,,,,
28657878,776,PullRequestReviewComment,cc  as this might be a better way for us to simplify the setup and teardown of repositories in tests that we were throwing around in #655,,,,,,
28657995,776,PullRequestReviewComment,Swap these out in the new tests for the `Assert.ThrowsAsync<>` that ship with xUnit 2.0 - it'll mean the inner `async/await` goes away as well...,,,,,,
28658020,776,PullRequestReviewComment,Opened  to address this in our other tests.,,,,,,
28658037,776,PullRequestReviewComment,:lipstick: make the contents of the property definition a oneliner,,,,,,
28658038,776,PullRequestReviewComment,:lipstick: make the contents of the property definition a oneliner,,,,,,
28658059,776,PullRequestReviewComment,"Inside our serializer we'll take the C# values and lowercase them, so these overrides aren't really necessary.Where they do become helpful is where you want to show a completely different value.Feel free to drop them.",,,,,,
28658099,776,PullRequestReviewComment,"If we don't need to send any data with the payload for a POST, can we live without this class?",,,,,,
28658102,776,PullRequestReviewComment,"As above, if we've got an empty class here I think we can just do away with it for now.",,,,,,
28658182,776,PullRequestReviewComment,"Ok, now that I understand the reason for the empty classes let me see if I can suggest an alternative:Given both these methods should return `204 No Content`, should we be inspecting the response code? With many of our Delete actions we use `Task` to check that nothing unexpected happened (see `WatchedClient.UnwatchRepo` for an example).We don't have an equivalent overload for `Post` right now that fits this scenario, but given you have two scenarios here which seem to fit it I think it's worth incorporating.e.g:Thoughts?",,,,,,
28658218,776,PullRequestReviewComment,Could we just use `object` here?,,,,,,
28658232,776,PullRequestReviewComment,Or could we make it a collection type that helps the user understand what sort of payload they're sending?,,,,,,
28658255,776,PullRequestReviewComment,Same question as above - I think this could be a dictionary of string pairs,,,,,,
28721812,776,PullRequestReviewComment,"Yeah. There were two reasons for why I want to use collection fixtures. Never tried them before, but I do like them and would like to have them in other test frameworks. :smile:The first and foremost reason is that for all/alot of my tests I only want to create my repositories and other readonly states once for all tests, so to minimize the times I am hitting the github Api. If I run all the tests in Octokit I will be throttled by github.The second reason is that it helps encapsulate the creation and disposal logic, though it is a bit indirect and requires people to know them.I looked at the code and not having read it for 2-3 weeks, I have some suggestions which I would like to run by you guys.I define the name of the collection as a constant string in the collection class:Which I then use in the 'CollectionDefinition' attribute. On each test class instead of writing the string name of the collection, I use the constant string defined in the collection class:That should make it a bit less brittle than before.Furthermore the `RepositoriesHooksCollection` class is very small and very closely tied to the `RepositoriesHooksFixture` class. Would it be an idea to move the collection class into the same file as the fixture class. I am not normally a big fan of having two class inside the same file.",,,,,,
28722356,776,PullRequestReviewComment,:pensive: Oops. Apologies. Has been removed.,,,,,,
28722364,776,PullRequestReviewComment,:pensive: Has been removed.,,,,,,
28722812,776,PullRequestReviewComment,Replaced the assertions in the forks and hooks unit tests.,,,,,,
28723083,776,PullRequestReviewComment,:one: lined,,,,,,
28723095,776,PullRequestReviewComment,:one: lined,,,,,,
28723740,776,PullRequestReviewComment,Sounds good. They have been removed.,,,,,,
28730766,776,PullRequestReviewComment,Sounds like a good way to go. Especially if the pattern is already being used for one of the other http methods.I have implemented a suggestion of the solution. When I am done with the rest of the review comments I will push them to the pr branch.,,,,,,
28736238,776,PullRequestReviewComment,"Changed from the dynamic type to Dictionary.I had to place the config in the constructor of the 'EditRepositoryHook' with a default argumentless constructor also.The reason being the code analysis requires the dictionary not to have a public 'set' and I needed the Config property to be default 'null', because else the edit call would overwrite the config settings even if the user did not provide any.",,,,,,
29919188,776,PullRequestReviewComment,":lipstick: the inner async/await pair can be scrubbed from these files, i.e. `() => client.Forks....`",,,,,,
29919260,776,PullRequestReviewComment,:fire: unnecessary using statement,,,,,,
29919270,776,PullRequestReviewComment,:lipstick: drop the inner async/await pair for these,,,,,,
29991666,776,PullRequestReviewComment,Gone @ :gun: point. They wanted soo much to :zzz:,,,,,,
29991689,776,PullRequestReviewComment,:pensive: Has been removed.,,,,,,
29991740,776,PullRequestReviewComment,Gone @ :gun: point. They wanted soo much to :zzz:Did the same changes in 'RepositoryHooksClientTests'.,,,,,,
30199583,776,PullRequestReviewComment,Change this attribute to `[OrganizationTest]` so that it only runs if you have the right environment variables set :metal:,,,,,,
31731414,774,PullRequest,Fixes #686 part deux,,,,,,
27083757,774,PullRequestReviewComment,"I think this test is going to run forever, but I'll mute this as part of preparing the next release",,,,,,
27083774,774,PullRequestReviewComment,:lipstick: `Assert.NotEmpty` here to make these two statements redundant,,,,,,
27088160,774,PullRequestReviewComment,"Currently, yes it most likely will :smile: but when I created the test, it ran for a few seconds, so I can at least say I tested the feature :grimacing: I'll mute it when I do the fix for the comment below.",,,,,,
27788747,774,PullRequestReviewComment,:lipstick: `Task.FromResult` here there and everywhere?,,,,,,
27788774,774,PullRequestReviewComment,Would it be worth making this a required parameter?,,,,,,
27795188,774,PullRequestReviewComment,"Yep, certainly as if you wanted to find **ALL** public repos you'd just call the parameterless `GetAllPublic` method :see_no_evil:",,,,,,
31685313,771,PullRequest,- [x] Convention Test- [x] Update all methods that failed the convention test- [x] Breaking changes all around :neckbeard: - ~~[ ] [:cherries: on top] Convention test to include Observable clients~~...this would be caught in the `SyncObservableInterfaces` test though...~~so might not be urgently needed~~.Fixes #767 #768 #769 #770 #772,,,,,,
31671589,766,PullRequest,Fixes #764,,,,,,
31671475,765,PullRequest,Partial fix for #748 - [x] Get link to the archive- ~~[ ] Get the **actual** content of the archive.... :santa: :gift:~~ Will send a separate PR for this one,,,,,,
28893592,765,PullRequestReviewComment,"Wait, what?",,,,,,
28908982,765,PullRequestReviewComment,"Uhm.......üò≤I have no idea where that would have come from...I will of course remove said reference quicker than quick üòÅ---From: Brendan Forstermailto:notifications.comSent: ‚Äé23/‚Äé04/‚Äé2015 3:10To: octokit/octokit.netmailto:octokit.net.github.comCc: Henrik Anderssonmailto:henrik.a.andersson.comSubject: Re: [octokit.net] Repository Get Archive Link (#765) @@ -1,5 +1,6 @@  Ôªøusing System;  using System.Reactive.Threading.Tasks; +using Microsoft.SqlServer.Server;Wait, what?---Reply to this email directly or view it on GitHub:",,,,,,
29919587,765,PullRequestReviewComment,:lipstick: just use `Helper.GetAuthenticatedClient()` for these integration tests,,,,,,
29928932,765,PullRequestReviewComment,"That's what `ctrl-c, ctrl-v` gets you, shouldn't trust previous methods in same class :innocent: (_just kidding_)",,,,,,
31576204,763,PullRequest,"I was trying to create a repository and I wasn't sure which parameters were required. Following our philosophy of exposing required parameters in the constructor, I change the `NewRepository` object to take in a repository name and to make that property readonly.",,,,,,
31503001,760,PullRequest,"The goal here is to have overloads flowing through Octokit which let the consumer specify the pagination options available.The current properties supported are:- `PerPage` - number of results to return for each page- `StartPage` - skip pages by specify this value- `PageCount` - number of pages to returnPrevious attempts at this PR have meant updating everything, but for now I've just updated `IReleasesClient` as it has one usage. I've added some integration tests which caught an issue with the internals that I need to look at (the `HACK:` commit).- [x] rewrite one method to support an `ApiOptions` overload- [x] port over existing behaviour for internals of pagination- [x] write convention test to ensure all `GetAll*` methods have an overload- [x] port a usage over and add integration tests- [x] add some new unit tests around this behaviour- [x] extract duplicated behaviour for pagination into a separate function- [x] clean up implementation so there's less null hacks### Ship List- [x] finish all the xml-docs stuff- [x] documentation on how pagination works- [x] integration tests all pass- [x]  is happy- [x] someone else is happy- [x] script to generate issues for API migration steps",,,,,,
52840840,760,PullRequestReviewComment,"The contents of this class have fallen out of the refactoring to get pagination into the app.I found myself duplicating this for the `Task` and `Observable` APIs, so this ended up as the simplest abstraction that could do both.Perhaps I'll go further with the refactoring to get this feeling more natural, but for now it does the job.",,,,,,
52840853,760,PullRequestReviewComment,"I'm somewhat concerned about this becoming a ""bucket"" to put all the stuff we don't really know how to put elsewhere, but ultimately this is what the user should pass through to the library to tweak the defaults.",,,,,,
52840886,760,PullRequestReviewComment,"I feel so awful about this escape hatch. But `_nextPageFunc()` currently returns a task to indicate it has results. There's no real equivalent here to indicate we should bail out, so I'm going down this path.Thankfully tests caught some stupid things I'd assumed, like `null.ConfigureAwait(false)` is a dumb idea.",,,,,,
52840907,760,PullRequestReviewComment,"If I get a :thumbsup: and land this PR, I can then run this test and extract tasks to get things update accordingly.For now, it's not so noisy...",,,,,,
52840911,760,PullRequestReviewComment,"Also, that should say `Enable` instead of `Disable`.",,,,,,
52840921,760,PullRequestReviewComment,"We haven't implemented `IEqualityComparer` on the response models, so I'm being lazy here.If anyone else cares about this I'll take it to a separate discussion.",,,,,,
52842731,760,PullRequestReviewComment,"Dont feel too bad :grinning: It seems like an acceptable compromise in order to implement the ""bail out"" without having to totally change the entire way Octokit.net has looped through all the paged responses until now...",,,,,,
52842900,760,PullRequestReviewComment,"Just a note on usage of `AcceptHeaders` helper from unit test land...When I implemented the `AcceptHeaders` helper class, it was purposely only used in implementation code, and left any unit tests still needing to ""hardcode"" the expected headers value.  This was in order to follow the principle that the tests shouldn't just echo something from the implementation side lest there ever be a bug in the implementation side and the test just passes blindly.  Just mentioning it incase you accidentally used it here.  This would be the first case of it's usage in test land so thought it worth pointing out.I guess I modelled it similarly to how `RequestsCorrectUrl` unit tests always hardcode the expected url rather than using the `ApiUrls` helper class like the implementation side does.  Doing a quick check now, it seems this rule has been broken for `ApiUrls` a couple of times, although only about 6 usages in unit tests, out of a total of 419",,,,,,
52842950,760,PullRequestReviewComment,"This is pretty :hankey: but I guess managing the overloads of the classes like `ApiConnection` gets pretty tricky with yet another option, and no way for the compiler to know when you call `GetAll(string, null)` which of the 2 parameter overloads you intended.  Though it would be nice to see whether the overloads can be consolidated to avoid this (or is the intention that things like the accepts header of timeout would shift into this new `ApiOptions` parameter?  Even so I guess to maintain backwards compat, most of the overloads would have to stay (or can we just cop a breaking change, given something like implementing pagination support is pretty major, and you arent actually out of beta yet)?",,,,,,
52843146,760,PullRequestReviewComment,"Ive hit this quite a few times when writing tests as well.  Would be great to be able to do `Equality` on the response models (and request models for that matter).  If you start a separate discussion I'd be interested to see what the plans are, however for this PR I'd say the test above is fine",,,,,,
52848112,760,PullRequestReviewComment,"good point - yeah, I'll undo this change",,,,,,
52848135,760,PullRequestReviewComment,I shouldn't _need_ to pass `null` in here. I'll investigate further and see what other options I have here.,,,,,,
52848444,760,PullRequestReviewComment,:boom:,,,,,,
53603424,760,PullRequestReviewComment,?,,,,,,
53916583,760,PullRequestReviewComment,#NAME?,,,,,,
53924540,760,PullRequestReviewComment,I'm not sure I follow,,,,,,
31469137,759,PullRequest,Closes #750,,,,,,
26704390,759,PullRequestReviewComment,These tests are also present in `RepositoryContentsClientTests` :confused:,,,,,,
26709590,759,PullRequestReviewComment,"That sounds about right, but they're calling the right API there at least...",,,,,,
31424985,758,PullRequest,AFAIK qed isn't used in this repo anymore.I also added a link to the AppVeyor account to the build badge which is much more useful than getting the image.,,,,,,
31422195,757,PullRequest,- [x] version bump- [x] release notes- [x] tests pass- [x] :shipit:,,,,,,
31391977,755,PullRequest,Closes #660 :dancers:,,,,,,
26703021,755,PullRequestReviewComment,:sparkles:,,,,,,
26703240,755,PullRequestReviewComment,"I guess I should've added these to most (all?) parameters in the other response class ctors as well, but wanted to keep to the issue at hand. Do we care?",,,,,,
26704567,755,PullRequestReviewComment,"I really want to get Fody.NullGuard integrated into this. So I do care, but not that much.",,,,,,
31385254,754,PullRequest,This implements the miscellaneous API endpoints for retrieving license info. This API is a PREVIEW api.,,,,,,
26624349,754,PullRequestReviewComment,:cry:,,,,,,
26624650,754,PullRequestReviewComment,Tears? What for?,,,,,,
26624880,754,PullRequestReviewComment,Just general sadness at the need to `SelectMany`. It's fiiiiine.,,,,,,
26629678,754,PullRequestReviewComment,Gotta love those convention tests :wink:,,,,,,
26629867,754,PullRequestReviewComment,:star2:,,,,,,
26630788,754,PullRequestReviewComment,:lipstick: indenting,,,,,,
26632012,754,PullRequestReviewComment,"Yeah, this is now correct, no? Before it wasn't.",,,,,,
26632094,754,PullRequestReviewComment,"I'm indifferent on which way is correct, but either this one is right or the new code below is right.",,,,,,
26632347,754,PullRequestReviewComment,Ha! I let R# sort it out.,,,,,,
26632378,754,PullRequestReviewComment,:sparkles:,,,,,,
31359900,753,PullRequest,I have kind of an urgent need for this. :smile:,,,,,,
31222892,752,PullRequest,- [x] Add `sort` to `PullRequestRequest`- [x] Add `direction` to `PullRequestRequest`- [x] Unit tests- [x] Integration tests- [x] Fix merge conflictsFixes #746Fixes #747,,,,,,
30615916,743,PullRequest,- [x] version bump- [x] run integration tests- [x] :thumbsup: on release notes- [x] :shipit:,,,,,,
30611155,742,PullRequest,See  for the detailscc,,,,,,
30594809,741,PullRequest,just noticed a small issue with the code listed,,,,,,
30441822,740,PullRequest,":cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: **WORK IN PROGRESS** :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus: :cactus:  **DO NOT MERGE** :cactus: :cactus: :cactus::cactus: :cactus: :cactus: :cactus: :cactus: :cactus:  I'd been noodling around with how to tackle paging in Octokit, and here's my first attempt at a solution.#### The ProblemBy default, if there's new data to fetch, the Octokit client will go and fetch it. Thanks to the [pagination] APIs, this is rather easy to do. For my use case, that's been Good Enough. But I'm at the point where I'd like to do things like:- adjust the number of results per page- stop at a certain page number- skip certain pages- opt-in to preview API behaviour by overriding accepts headerSome endpoints support other sorts of filtering (for example, [issues search] has a `since` parameter. I'm not worrying about those here - this approach should work for all endpoints that return arrays of results.This isn't something I've focused on given I spent most of my days working with desktop apps, but I know other platforms would love having this level of control to conserve data.And we have #259 and #625 as open issues, so why not do try and resolve this?#### The ApproachYou can await any type in C# with the presence of `async`/`await` - and it's pretty easy once you know how to get started. For backwards-compatibility, I didn't want to force you to update your code - if you didn't opt-in to this behaviour, you should get the existing behaviour.So I started with this ideal API:Instead of returning `Task request)    {        Ensure.ArgumentNotNull(request, ""request"");        return request.ToTask();    }} csharpvar repositories = await github.Repository.GetAllForCurrent()    .WithOptions(new ApiOptions { PageSize = 10, PageCount = 1 });`#### Limitations~~I need to think about how to do this with the Observable-based APIs - currently we just cheat and transform the Task-based API, but because we surface an  `IObservable` we'd need to do something similar here. Plus there are extension methods like `Skip` and `Take` available that we should be respecting (and not fetching all the records in the first place). Perhaps this is when the two libraries diverge, implementation-wise :cry:~~ **EDIT:** we actually use a different implementation inside the `GetAll`s for the observable clients - `GetAndFlattenAllPages` - so I'm gonna put this question aside for another day.#### TODO- [x] unbreak all the tests- [x] resolve muted fx:cop: issues- [x] `ILazyRequest` -> `IDeferredRequest`- [ ] finish `RepositoriesClient` migration- [x] experiment with content responses in Issue Comments- ~~[ ] ponder on how to do this with `Octokit.Reactive`~~ :boot: punt to another time",,,,,,
25829509,740,PullRequestReviewComment,This might also be how we support different media types in the response without hard-coding :shit: everywhere. Added a task to explore this further.cc,,,,,,
26205610,740,PullRequestReviewComment,"So I could :fire: this awaiter and make the user call `.ToTask()` for these methods.It's less magical, but takes away the hot/cold issue.",,,,,,
26205749,740,PullRequestReviewComment,Still a breaking change. The API itself has changed from hot to cold and existing code now needs to .ToTask()Right?,,,,,,
26205911,740,PullRequestReviewComment,"Yeah, I'm not sure I can magic up a type here that's both Hot and also modifiable using WithOptions.So I'm weighing up varying degrees of breaking changes to see how they feel.",,,,,,
26206008,740,PullRequestReviewComment,"The API itself has changed from hot to cold and existing code now needs to .ToTask()Yes, any existing API calls will no longer magically work with `await`. So you're updating anyway.",,,,,,
30401021,739,PullRequest,"Added obsolete tag to the SubscribersCount fieldNot fully confident in understanding the codebase, so might need som more work. If so please let me know.Fixes #736",,,,,,
30329916,737,PullRequest,resolves #703,,,,,,
25764204,737,PullRequestReviewComment,You can add `Forkee` to the `CustomDictionary.xml` to make this error go away,,,,,,
25764394,737,PullRequestReviewComment,I'm not sure why these references are necessary.Could you :fire: this one and the one in `Octokit.Tests-Portable`?,,,,,,
25764423,737,PullRequestReviewComment,:fire: unused reference,,,,,,
25764603,737,PullRequestReviewComment,Can you drop all this excess namespace and just have `Octokit` here?,,,,,,
25764613,737,PullRequestReviewComment,:arrow_up:,,,,,,
25764620,737,PullRequestReviewComment,:arrow_up:,,,,,,
25764626,737,PullRequestReviewComment,:arrow_up:,,,,,,
25764631,737,PullRequestReviewComment,:arrow_up:,,,,,,
25764635,737,PullRequestReviewComment,:arrow_up:,,,,,,
25764641,737,PullRequestReviewComment,:arrow_up:,,,,,,
25764650,737,PullRequestReviewComment,:arrow_up:,,,,,,
25765074,737,PullRequestReviewComment,Would it be worth extracting this to an extension method for better readability?,,,,,,
25766657,737,PullRequestReviewComment,"Personally, I'd prefer to keep it how it is - but I'm happy to change it to an extension method if you want.",,,,,,
25766676,737,PullRequestReviewComment,Sure,,,,,,
25766724,737,PullRequestReviewComment,I'm going to blame resharper for this one :P,,,,,,
25766732,737,PullRequestReviewComment,"Cool, will do",,,,,,
25767181,737,PullRequestReviewComment,Not something I'll block this on. I wonder if  has any opinions on this.,,,,,,
25767199,737,PullRequestReviewComment,Suuuuuuuuure :P,,,,,,
30240147,734,PullRequest,Fixes #733  there's one particular _popular_ repository you have access to which is causing the excessive paging you're seeing.I'm removing that feature (as it's part of the preview APIs) and will bring this up with the team in the morning.- [x] release notes- [x] integration tests- [x] :shipit:,,,,,,
30202795,731,PullRequest,"Add functionality for checking, resetting and revoking OAuth application tokens- [x] Add tests- [x] Add integration tests- [x]  is happyFixes Fixes Fixes Fixes",,,,,,
26452557,731,PullRequestReviewComment,:memo: a summary for this method?,,,,,,
26452577,731,PullRequestReviewComment,Is it worth asserting the action succeeded here?,,,,,,
26452588,731,PullRequestReviewComment,:memo: a summary here for the method?,,,,,,
26453058,731,PullRequestReviewComment,good :eyes:!,,,,,,
30199791,730,PullRequest,"as far as i could tell, it was impossible to specify the ref parameter on the get contents api method",,,,,,
29919804,730,PullRequestReviewComment,"Because we maintain an set of `IObservable` APIs that mirror this, the build server is currently complaining.To fix this, you'll need to add the new method to `IObservableRepositoryContentsClient` and implement it over there too.",,,,,,
29968787,730,PullRequestReviewComment,This should be `IObservable`,,,,,,
29968866,730,PullRequestReviewComment,Check the method above and steal the `GetAndFlattenAllPages` code to unwrap this list,,,,,,
29988079,730,PullRequestReviewComment,In #771 we added a rule to the test suite to ensure all methods which returned a `IReadOnlyList` were named with the prefix `GetAll` - if you update this name and the related observable method name you should be :sparkles:,,,,,,
30028398,727,PullRequest,[Pull request #711] was created under the assumption that the Parameter attribute worked on both serialization and deserialization of json. Unfortunately that turned out not to be the case. It's only supported under serialization. Let's try again! :),,,,,,
30028186,726,PullRequest,Fixes,,,,,,
29890491,725,PullRequest,This wasn't as painless as I feared once I'd wrestled with all the NuGet-related changes (we'd kinda hacked in using `xunit.execution` but that's now become a real package).- [x] upgrade to 2.0 RTM- [x] CI is happy- [x] Visual Studio is happy- [x]  is happy,,,,,,
25246421,725,PullRequestReviewComment,The biggest change from where we were is the `XunitTestCase` ctors - I stole this code from the  repo.,,,,,,
25246461,725,PullRequestReviewComment,"I'd like to add skipped tests to the repo with a helpful message to explain why it's occurring, but for now I'm cool to drop this...",,,,,,
25246477,725,PullRequestReviewComment,"less hacks, less upset",,,,,,
29886315,724,PullRequest,This was incorrectly introduced in 0.7.0.Fixes #721,,,,,,
29886230,723,PullRequest,This was incorrectly introduced in 0.7.0.Fixes #721,,,,,,
29879218,720,PullRequest,- [x] release notes- [x] version bump- [x] update notes for #724 - [x] :thumbsup: on integration tests- [x] :shipit:,,,,,,
29868324,718,PullRequest,"Fixes #715 When you update an issue, the value in `Labels` is important. From the [docs]: Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[ ]`) to clear all Labels from the Issue. There's three scenarios we need to support here, and I think this is the best compromise:- [x] you start with `.ToUpdate()` to setup your update request - this gives you a `null` collection of branches, which means you're not changing anything server-side.- [x] calling `AddLabel` manages the internal state of the list - and give you a collection which will replace whatever is currently there- [x] calling `ClearLabels` should give you an empty collection - if this is used, it'll drop whatever labels you have defined on the server.- [x] write some docsHow does that feel  ?",,,,,,
29864283,717,PullRequest,Octokit-Monotouch won't build with the missing files,,,,,,
29863164,716,PullRequest,It should be skipped if you don't,,,,,,
29859179,714,PullRequest,Supersedes #712- [x] renamed existing `AccountType` to `AccountSearchType`- [x] added nullable `Account.Type` property- [x] added integration tests for user and repository APIs- [x] update `ctors` to set new field,,,,,,
29780040,712,PullRequest,"I need to put this in for a couple of upcoming API changes, and I think it was added since the Account/User/Organization APIs were first ported over.~~We have an `AccountType` enum which we use in the search APIs - I didn't want to couple this to that, but perhaps I need to.~~ done and done- [ ] rename the properties- [ ] ensure response isn't set (Nullable?) if value doesn't exist in JSON dictionary",,,,,,
25140853,712,PullRequestReviewComment,"I'm not so sold on this name. `AccountType` is used for a certain request, but `Org` doesn't map to `Organization`.",,,,,,
25141764,712,PullRequestReviewComment,"I don't understand. Are you saying we can't use `AccountType` here because the API endpoint that needs `UserType` returns ""Organization"" and the API endpoint that needs `AccountType` returns ""Org""? Ugh.",,,,,,
25141768,712,PullRequestReviewComment,Extra newline.,,,,,,
25142522,712,PullRequestReviewComment,"Sorry, I should have been clearer here:- [This link] indicates when using the Search APIs you use `type:org` in the request parameters.- [This link] shows the response you get back has `""type"": ""Organization""` in the response when searching on users or organizations everywhere else.",,,,,,
25181814,712,PullRequestReviewComment,/khanify api inconsistencyI think `AccountType` is the best name. So here's an idea. Make the search one `AccountSearchType` or `AccountRequestType` and keep this one `AccountType`.What do you think? My reasoning is I bet people will see this one much more often than they'll use the search api so I want to give this one the nice name.,,,,,,
25199932,712,PullRequestReviewComment,:ok_hand:,,,,,,
29653549,711,PullRequest,Let's use the official spelling of [event types] to avoid blowing up on deserialization of events. Fixes,,,,,,
29646940,708,PullRequest,/cc,,,,,,
29471007,705,PullRequest,Fixes #418,,,,,,
24864811,705,PullRequestReviewComment,"This is a little confusing. I assume `repo` here should actually be the repo name and repo owner. For example, `octokit/octokit.net` as opposed to just `octokit.net`.I think we should probably use the pattern we use elsewhere and have separate parameters for the owner and the name and then concatenate it ourselves./cc  for thoughts in case I'm missing something.",,,,,,
24867134,705,PullRequestReviewComment,"Yes, this should include the `owner` property.For example,  returns a validation error. But  returns an array of results.",,,,,,
29343929,702,PullRequest,- [x] version bump- [x] release notes- [x] integration tests all pass- ~~[ ] :thumbsup: and merged #712~~ :boot:- ~~[ ] update release notes to add #712~~ :boot:- [x] drop pre-release workarounds in build scripts- [x] update timestamp- [x] :shipit:- [x] tag it and merge it,,,,,,
25139015,702,PullRequestReviewComment,"my testing of this (and a part of the HTTP spec I neglected to recall) indicates that the first match of an `Accept` value is the one the server will use. In this case, we'd need to put the preview API first.![]",,,,,,
28518469,696,PullRequest,Added missing property 'Files' in 'CompareResult.class',,,,,,
28495489,695,PullRequest,Updated TeamMember api endpoint to route to latest team github apiendpoint (old endpoint was deprecated),,,,,,
28435884,693,PullRequest,Rename test methods. **From:**_RequestsTheCorrectUrlAndReturnsOrganizations()__RequestsTheCorrectUrlAndReturnsOrganizations()__RequestsTheCorrectUrlAndReturnsOrganizations()_**To:**_RequestsTheCorrectUrlAndReturnsRepositories()__RequestsTheCorrectUrlAndReturnsRepositories()__RequestsTheCorrectUrlAndReturnsRepositories()_,,,,,,
28435556,691,PullRequest,Added the functionality and tests. Not sure if it can be used as is though.The request takes to long to return. About 10 minutes for about 65K repositories in my tests.Maybe this could be done passing the pagination ability to the caller of the method.,,,,,,
25237269,691,PullRequestReviewComment,"If you could throw a `Skip` on this test, it'd be greatly appreciated - this test is going to run for a _long, long, long_ time",,,,,,
25238012,691,PullRequestReviewComment,"Of course. I will do that.On Tue, Feb 24, 2015 at 9:07 AM, Brendan Forster notifications.comwrote: In Octokit.Tests.Integration/Clients/RepositoriesClientTests.cs :  > @@ -534,6 +534,19 @@ public class TheGetMethod >          } >      } > -    public class TheGetAllPublicMethod > -    { > -        [IntegrationTest]  If you could throw a Skip on this test, it'd be greatly appreciated - this test is going to run for a _long, long, long_ time  ‚Äî Reply to this email directly or view it on GitHub .",,,,,,
28415478,690,PullRequest,"Fixes #685I'm sending this PR live from stage, so bear with me... :sparkles:",,,,,,
28252294,687,PullRequest,- [ ] the tests discover and can be run in Visual Studio- [ ] the tests run on CI,,,,,,
27758561,683,PullRequest,This PR will implement the following issues as they are all related to the same area of OAuth application authorizations:- [ ]  - Check an authorization  - [ ] Implementation  - [ ] Unit tests  - [ ] Integration tests- [ ]  - Revoke an authorization for an application  - [ ] Implementation  - [ ] Unit tests  - [ ] Integration tests- [ ]  - Revoke all authorizations for an application   - [ ] Implementation  - [ ] Unit tests  - [ ] Integration tests- [ ]  - Reset an authorization  - [ ] Implementation  - [ ] Unit tests  - [ ] Integration tests,,,,,,
27723156,681,PullRequest,Gists & their comments all have string Ids. Changed the GistCommentClient to take a string instead of an int.e.g:,,,,,,
27629877,680,PullRequest,"Introduced some plumbing code to be able to create disposable repositories while doing integration testing.Do let me know if I am on the right track, before I get too far :)",,,,,,
23242155,680,PullRequestReviewComment,Why is this named `DisposableRepository2` and not just `DisposableRepository`?,,,,,,
23242246,680,PullRequestReviewComment,Not a fan of calling `Wait` here. I'd rather this method return `Task`. Then users can just `await` the call to this.,,,,,,
23242454,680,PullRequestReviewComment,"I agree, it should be DisposableRepository. I had earlier created another class by the name DisposableRepository hence this class got its name as DisposableRepository2.",,,,,,
23242891,680,PullRequestReviewComment,"But this is the method that will be used within the using statement, which is not awaitable? Did I go wrong somewhere?",,,,,,
23244668,680,PullRequestReviewComment,"But this is the method that will be used within the using statement, which is not awaitable?Says who?! :smile:It's perfectly fine to have an `await` within a using block.",,,,,,
23247349,680,PullRequestReviewComment,"Oops, my bad. Implemented the methods as Task as suggested.",,,,,,
23282708,680,PullRequestReviewComment,"Rather than introducing extra abstractions for GitHubClient and RepositoryClient, you could do this inside `CreateDisposableRepository`:",,,,,,
23282827,680,PullRequestReviewComment,"I'd love to not need the inheritance in this class, but instead have tests access the repository directly through a property, e.g:But that means we'd need to change the tests to read that inner property. I'm somewhat neutral on which approach is better, but the reflection code in here concerns me a bit.",,,,,,
24730311,680,PullRequestReviewComment,Rename this to `Initialize` - I think there's enough detail from the API surface to indicate we're working with repositories here.,,,,,,
27578063,679,PullRequest,"Resolves .There are a lot of code analysis warnings about URIs as Strings.  Let me know what the preferred way to resolve this is and I'll apply the fix across the board in this PR.Also, this doesn't build currently due to the usage of obsolete properties.  An example is User.cs which has an Obsolete GravatarId.  The constructor assigns it, which causes an obsolete usage warning at compile time.  What is the preferred way to deal with this situation?",,,,,,
27561764,676,PullRequest,"Not sure how those 's' characters got there, but they would show up in the VS tooltip.",,,,,,
27546386,675,PullRequest,"This is a fix that  found a few days ago for the VS test runner parallelizing all tests by default.I've applied this to the integration tests only, as everything else has been fine. And here's what it looks like running non-integration tests from VS2013:",,,,,,
27157788,674,PullRequest,"See  for details on the truncated attribute.I am operating under the assumption that if a property is missing from the json object then the property will be set to its default value (false in this case).I'm not sure how to test this.  If someone can point me at some existing tests that validate the json deserializer behaves correctly in certain scenarios (like when the property is missing) I can add some test coverage.  Though, if using an off-the-shelf deserializer then perhaps that wouldn't be testing anything meaningful in the library.",,,,,,
27157316,673,PullRequest,"Initially I implemented this as an optional boolean parameter on `TreeClient.Get` that would append `?recursive=1` to the end of the URI.  Unfortunately, code analysis complained about that (optional parameters) so I went with a set of new overloads instead.Let me know if a different approach is preferred for adding optional query string parameters to API methods or if this is the preferred solution.  The problem with this solution is that it doesn't scale out well with multiple optional parameters.",,,,,,
22768129,673,PullRequestReviewComment,Remove this line,,,,,,
22768134,673,PullRequestReviewComment,Remove this line,,,,,,
22769432,673,PullRequestReviewComment,Fixed.,,,,,,
22769434,673,PullRequestReviewComment,Fixed.,,,,,,
27156573,672,PullRequest,The roslyn compiler creates a folder name [solutionname].sln.ide next to the solution file.  This folder is used for storing temporary files and should not be committed to source control.,,,,,,
22763100,672,PullRequestReviewComment,Let's use the same rule that's in the official repo: `*.ide/`,,,,,,
22763130,672,PullRequestReviewComment,Ah! Good catch.,,,,,,
27009466,667,PullRequest,Fixed #633,,,,,,
22670348,667,PullRequestReviewComment,"In looking at this, shouldn't we always be passing in `baseAddress` to `RepositoryExistsException`. Why would we only pass it in if we know your org?",,,,,,
22688406,667,PullRequestReviewComment,In the previous version of the code `ExistingRepositoryWebUrl` was being set only if the owner is an organization. This is due to fact that we don't have access to the owner's name if it's an account and not an organization.,,,,,,
23548765,667,PullRequestReviewComment,"This is due to fact that we don't have access to the owner's name if it's an account and not an organization.Ah. And we don't have access to the name because when we do operations for the _current_ account, the name isn't needed as part of the URL. Right?That was confusing to me and I should know that. :stuck_out_tongue:",,,,,,
23581448,667,PullRequestReviewComment,"Ah. And we don't have access to the name because when we do operations for the current account, the name isn't needed as part of the URL. Right?Exactly :smile: at least the integration test is passing now!",,,,,,
26859360,663,PullRequest,Fixes #661 :dancers:,,,,,,
22513143,663,PullRequestReviewComment,s/Has/Have,,,,,,
22513149,663,PullRequestReviewComment,s/Has/Have,,,,,,
22770798,663,PullRequestReviewComment,Not sure how I feel about adding in public default constructors. ?,,,,,,
22771430,663,PullRequestReviewComment,"For a `response` object, they might be necessary for the serializer to work.",,,,,,
22771443,663,PullRequestReviewComment,"Yes, that would do it :metal:",,,,,,
26804893,662,PullRequest,":warning: BREAKING CHANGE ALERT! :warning: One of the haacks we've had in the API design is that `IResponse` was not a readonly interface. We made the `BodyAsObject` property settable. The reason was it made it convenient to separate the creation of the response from the deserialization.But in thinking about this, I think the proper approach to that is not to mutate the response object, but to wrap it with another object that accepts the deserialized type (look at how the `Connection.Run` method changes as well as `JsonHttpPipeline` object).So in this PR, I went all out and we have a `Response` object that's pretty simple. And we have a separate `ApiResponse`. However that means that any implementations of `IHttpClient` would be responsible not only for creating a response, but deserializing it. With the current implementation, an implementation of `IHttpClient` doesn't have to worry about deserialization. It's handled separately.Thoughts?",,,,,,
22695629,662,PullRequestReviewComment,:heart::heart::heart::heart::heart:,,,,,,
22695695,662,PullRequestReviewComment,"Is `MediaTypeType` necessary here, or just a refactoring mistype?",,,,,,
22695793,662,PullRequestReviewComment,This seems to be the only property that didn't survive the refactor intact. Any particular reasons why?,,,,,,
22695897,662,PullRequestReviewComment,This was marked as `[Obsolete]` (probably by me). Do we need it?,,,,,,
23114893,662,PullRequestReviewComment,I think because it wasn't being used anywhere. Do we need it? Easier to add it later than remove it.,,,,,,
23114972,662,PullRequestReviewComment,"I don't think _we_ need it, but it may be useful to people who call `IHttpClient` directly. For example, we use this extension method in GHfW.",,,,,,
23114984,662,PullRequestReviewComment,"Yeah, that's fine. I'll run the tests for this and confirm it's all kosher.",,,,,,
23115108,662,PullRequestReviewComment,"Yeah, this bit me upgrading to vLatest this week. I didn't mind calling out `CancellationToken.None` for these few usages, so I guess I'm debating cosmetics and shortcuts here. Happy to bring it back :tada:",,,,,,
23118332,662,PullRequestReviewComment,We can always add the extension method to the GHfW side and remove it from here. I don't feel strongly either way other than leaning towards being lazy. :stuck_out_tongue:,,,,,,
23118407,662,PullRequestReviewComment,":thumbsup: to lazy, that work hasn't made it into a GHfW PR yet.If I get caremad about it again, I'll PR it separately.",,,,,,
23118728,662,PullRequestReviewComment,"This is just the integration test project being nested. I'll undo this, not a blocker.",,,,,,
23119691,662,PullRequestReviewComment,Do we need this to be `public`? The namespace intent is confusing me...,,,,,,
23119752,662,PullRequestReviewComment,"Tests are :sparkles:, just giving this another :eyes:",,,,,,
23119769,662,PullRequestReviewComment,"As above, do we need to make this `public`?",,,,,,
23120631,662,PullRequestReviewComment,"Hmm, I guess not. I could make it internal till someone complains.",,,,,,
23120717,662,PullRequestReviewComment,"Ideally I'd like everything under `Octokit.Internal` to be marked as internal - my thinking on this is that if there's a compelling case to make a type public, it shouldn't be in this namespace.Happy to do a once-over on this after this PR (before the next major release), just calling this out as it's a new type.",,,,,,
23135760,662,PullRequestReviewComment,"Ideally I'd like everything under Octokit.Internal to be marked as internal - my thinking on this is that if there's a compelling case to make a type public, it shouldn't be in this namespace.Hmm, that's not the original intent I had for this namespace. It wasn't to mark types as `internal`. The keyword suffices for that.It's specifically for types that most people don't need to see directly, but many, if not most, need to use. For example, `ApiResponse` is in this namespace.Most users can get by importing just the `Octokit` namespace and these other types won't ""pollute"" their namespace, but are still usable as return values. If they need these types directly, they can import `Octokit.Internal`.I'm not opposed to making these specific case internal. I just wanted to clarify why we have `Octokit.Internal` in the first place. Maybe a better name for that namespace is in order. I wonder if `Octokit.Internals` is slightly better to distinguish between the keyword and the fact that these types represent the internal workings of the lib. :smile:",,,,,,
26789199,659,PullRequest,- [x] update release notes- [x] version bump- [x] :thumbsup: on release notes- [x] integration tests all :ok_hand: - [x] :ship: to MyGet- [x] :shipit:,,,,,,
22435911,659,PullRequestReviewComment,This change reduces some resource contention when parallelizing tests (but isn't the only problem).Do you have any objections to this ?,,,,,,
22436042,659,PullRequestReviewComment,"subclasses `IEnumerable`, so some of our tests which return `Dictionary` were being caught here and deserialized incorrectly.Feel free to submit a PR to make this a bit more cleaner.",,,,,,
22436080,659,PullRequestReviewComment,Just tidied up this function to behave like `GetEmoji` while I was in changing `IDictionary` to `Dictionary`,,,,,,
22436418,659,PullRequestReviewComment,"No objections. In fact, I meant to make this change everywhere. We should never be using `StartNew` just to wrap an object in a task.",,,,,,
22436692,659,PullRequestReviewComment,I'll clean that up against `master` once this is merged in.,,,,,,
22437607,659,PullRequestReviewComment,"Also, I can see a `Task.Factory.StartNew` inside `HttpClientHandler.SendAsync` that also causes contention (I see four requests enter, but none complete). ![]",,,,,,
26767875,658,PullRequest,"This makes our response models readonly. I made the setters `protected` instead of `private` to provide flexibility for others such as inheritors, testers, etc.. Also, it gets rid of that warning that the setter is never used. Let me know what you think.Fixes #650",,,,,,
22420080,658,PullRequestReviewComment,Can these be removed now? There are about 12 of them...,,,,,,
22420281,658,PullRequestReviewComment,"Thinking about it, shouldn't collection properties be initialized in the constructors and have `private` setters? I assume SimpleJson supports it since it supports `protected` setters?",,,,,,
22423568,658,PullRequestReviewComment,We shouldn't initialize them in the ctors for these types because they'll just get replaced when SimpleJson deserializes the json into an object. It uses the private setters to set the collection.,,,,,,
22428524,658,PullRequestReviewComment,"Just a follow-up. For ""request models"" what you described is exactly correct. The ctor should instantiate the collection and the setter should be private. I made that change. Let me know if you find any cases I missed.",,,,,,
22440492,658,PullRequestReviewComment,?,,,,,,
22440507,658,PullRequestReviewComment,Maybe it's a good idea to standardize on either `IReadOnlyList`?,,,,,,
22440511,658,PullRequestReviewComment,?,,,,,,
22440521,658,PullRequestReviewComment,Same here...,,,,,,
22440527,658,PullRequestReviewComment,And here :smile:,,,,,,
26753064,657,PullRequest,"- [x] centralize client creation behind `Helper` to eliminate duplication- [x] removed some unused using statements- [x] trivial code comments :fire::fire::fire::fire::fire:- [x] enabled commented out test, but with skip reason",,,,,,
26750894,656,PullRequest,Fixes #631- [x] added `[PaidAccountTest]` attribute- [x] ported `TheEditMethod.UpdatesPrivate` to new attribute- [x] ported `TheCreateMethodForUser.CreatesANewPrivateRepository` to new attribute- [x] fixes bug with error message not being extracted from message  and - [x] update docs for new environment variable,,,,,,
26713136,649,PullRequest,"This incorporates and supersedes #434 I took a slightly different approach. In the interest of keeping close to the API, there's only one method called `GetContents` that maps to the [""Get contents"" API]. I was able to accomplish this by changing the serializer a bit. When it's trying to deserialize a JSON object into an `IEnumerable` but the JSON text is clearly a `T` and not an array, I simply wrap the json text with square brackets turning it into an array of one item and then deserialize it.The other bit I had to do is when creating content, the text of the content needs to be base64 encoded. Also, when requesting content, the data is base64 encoded. So I changed the serializer to handle this transparently by simply applying the `SerializeAsBase64` attribute. So the consumer of the client doesn't have to worry about this.",,,,,,
22373439,649,PullRequestReviewComment,"Since the property below now is called `Content` instead of `Contents`, maybe these should be changed as well? :smile:",,,,,,
22373451,649,PullRequestReviewComment,Same with these...,,,,,,
22373467,649,PullRequestReviewComment,Aaaand here...,,,,,,
22373472,649,PullRequestReviewComment,You get the point :wink:,,,,,,
22391052,649,PullRequestReviewComment,Good catch!,,,,,,
22404189,649,PullRequestReviewComment,Should this guard against `null` for `EncodedContent`?,,,,,,
22404193,649,PullRequestReviewComment,dat newline,,,,,,
22404211,649,PullRequestReviewComment,You could probably :fire: this `foreach` loop and populate `_membersWhichShouldPublishNull` directly:But this code is already much more simpler than what was there before :sparkles:,,,,,,
22404217,649,PullRequestReviewComment,Or even make my hacky workaround go away completely `¬Ø\(¬∞_o)/¬Ø`,,,,,,
22404229,649,PullRequestReviewComment,"Urgh, I need to renew my Xamarin license and ensure everything still builds there...",,,,,,
22404240,649,PullRequestReviewComment,Paranoia check: could this break if we get whitespace around the `{}`? (it's probably unlikely),,,,,,
22404629,649,PullRequestReviewComment,"We've got a couple of different ways to dispose of repositories when we create them in the scope of an integration test (mostly I believe it's around using `IDisposable` in tests to use xUnit hooks.Not a blocker on shipping this feature, but I'd like to unify these:",,,,,,
22406630,649,PullRequestReviewComment,"Whitespace before the ""{"" would be an invalid JSON response so we'd be fubar anyways.",,,,,,
22406684,649,PullRequestReviewComment,In another PR. I have some upcoming improvements to how we do serialization.,,,,,,
22407045,649,PullRequestReviewComment,:ok_hand:,,,,,,
22407047,649,PullRequestReviewComment,:ok_hand:,,,,,,
26525567,648,PullRequest,"Hello, I'm taking a swing at Issue . I'm also looking into a Test for this but notice that That is used in returns null parameters. Any input is appreciated. Fixes #599",,,,,,
26496948,647,PullRequest,"Fixes #617- [x] update [List your authorizations] to obsolete `token`- [x] update [Get a single authorization] to obsolete `token`- [x] switch to new endpoint if `fingerprint` provided for ""Get-or-create an authorization""- [x] drop shared response model returned from [Get-or-create an authorization] to return `token`- [x] update [Update an existing authorization] to obsolete `token`- [x] integration tests- [x] address feedbackcc",,,,,,
24727042,647,PullRequestReviewComment,Nitpick Nathan says one newline will do where two are present.,,,,,,
24727054,647,PullRequestReviewComment,"I'm wary of passing in arrays given they can be mutated. At the very least, we should probably set `Scopes` to a copy of the arry, right?",,,,,,
24727058,647,PullRequestReviewComment,"Are scopes always required? If so, maybe this should be readonly?",,,,,,
24727060,647,PullRequestReviewComment,"Nevermind, I noticed we have an empty ctor.",,,,,,
24727080,647,PullRequestReviewComment,I guess we have the same problem with the property setter. We can maybe worry about this separately as a general problem and not in this PR.,,,,,,
24727829,647,PullRequestReviewComment,:cool:,,,,,,
24727838,647,PullRequestReviewComment,"I'll cut a release branch for All The Breaking Changes before merging this, so we can think on this issue further.",,,,,,
24727851,647,PullRequestReviewComment,:ok_hand:,,,,,,
25141163,647,PullRequestReviewComment,This is now in-flight,,,,,,
26493625,646,PullRequest,"Added `Stats` and `Patch` fields to `GitHubCommit` and `GitHubCommitFile`, repectively. Also, modified the type for the `Signature.Date` field since it was `DateTime` and everywhere else in the project uses `DateTimeOffset`. PS. My stupid Mac or stupid Xamarin instance won't build the test projects for some reason I have yet to run the tests at all so don't be surprised if I fail the continous integration build :sunglasses:",,,,,,
26488789,645,PullRequest,"Just pushing out a few of the recent accepted PRs, and poking around the testing infrastructure changes...While evaluating the integration test suite against the new xUnit test runner, I also monitored the network activity in Fiddler. Some integration tests were unnecessarily chatty - for example, fetching all commits for a repository, and some were unnecessarily bound to creating a dummy repository.I focused on `RepositoryCommitsClientTests` and tuned these for faster feedback. I'll keep an eye on other slow tests as we're pushing out other releases. I'll come back to those other skipped tests as well.- [x] version bump- [x] release notes- [x] publish to MyGet- [x] tag the release- [x] :shipit:",,,,,,
22241321,645,PullRequestReviewComment,"""bollocks"" is the technical term, right?",,,,,,
26479382,644,PullRequest,"Fixes #642.- Updated the EventInfoState enum to reflect the current standing in the API docs.- Added `Assignee` and `Label` properties to allow for them to be populated on `Assignee` and `Labeled` events, respectively.",,,,,,
26429879,641,PullRequest,"Since should not be defaulted to Now since its really really unlikely you just got a notifiction during the time you created this message and the time GitHub received the message. If you don't change the `Since` you'll potentially always get 0 results. Instead, change the default behavior to MinValue so all Notifictions are returned - much like the default value of GetAllForCurrent without the NotificationsRequest argument.",,,,,,
26429800,640,PullRequest,Fixes boolean type parameters by converting their string representation to lowercase - which GitHub understands. Could have probably just overloaded the return lambda right below this but I thought I might as well make it look like the other type exceptions above.,,,,,,
26401585,637,PullRequest,It is no longer needed:,,,,,,
26293622,636,PullRequest,Fixes #628 - [x] migrated tests over to new infrastructure- [x] VS runner packages included for VS2013+- [x] console runner included for CI scripts- [x] Is Appveyor Happy?- [x] cleanup all the things,,,,,,
22051585,636,PullRequestReviewComment,"The reason I didn't ignore it before is I didn't want the build script to have to install it every single time. That adds unnecessary time for something that doesn't change often. Instead, when we upgrade, you just delete it and run the script once, and then commit it.But I'm open to changing it if you feel it's better this way.",,,,,,
22070966,636,PullRequestReviewComment,"This is just so the files aren't committed. NuGet should skip installation if the folder exists on disk, and the caching should mean it doesn't hit the network after the first installation. :cool:?",,,,,,
22079252,636,PullRequestReviewComment,:cool: I forgot about the machine cache. And I was the PM at the time!,,,,,,
26057629,634,PullRequest,Fixes #632,,,,,,
26032444,630,PullRequest,"It's a bit copy-paste, but thankfully the build will propagate the xml-docs from interface to implementation, so less :poop: work all round- [x] document `IGitHubClient`- [x] document `IObservableGitHubClient`- [x] document `Exceptions` namespace- [x] document `Authentication` namespace- [x] document `Extensions` namespace",,,,,,
26031700,629,PullRequest,Fixes #627- [x] ensure CI passes- [x] quiet output,,,,,,
26023184,626,PullRequest,"Hi, guys, here is a small PR, which should fix #609. I simply added an `enum`, changed the corresponding method signatures in *OrganizationMemberClients classes/interfaces and added a couple of tests.",,,,,,
21792698,626,PullRequestReviewComment,remarks are not meant to be inside summary,,,,,,
26014274,624,PullRequest,"#623Many integration tests are failing, is that to be expected?",,,,,,
25858830,622,PullRequest,"Alright, guys, so I marked the GravatarId of User and Author as 'obsolete' (issue #613). User derives from Account, which has the AvatarUrl property, which should be used instead and the Author has it anyway. As far as I can see, the test data in the deserialization tests already includes the avatar_url, so I guess the tests are fine as well. Is this correct? Did I miss anything?",,,,,,
25812307,621,PullRequest,- [x] release notes- [x] integration tests pass- [x] publish preview builds to MyGet- [x] test source indexing after install- [x] confirm `core.autocrlf` change doesn't break the world- [x] add document about instructions/prerequisites for shipping releases- [x] add documentation for enabling symbol source support in VS - [x] :shipit:,,,,,,
21620723,621,PullRequestReviewComment,Shouldn't `files` be capitalized? Is it a property name?,,,,,,
21633982,621,PullRequestReviewComment,"Yeah, I was thinking about the API field here which probably isn't right. Will update.",,,,,,
21649704,621,PullRequestReviewComment,"I _think_ this change should be fine - I'm testing this on a vanilla VS2013 Update 4 VM, so perhaps this is some hangover from VS2012...",,,,,,
21650190,621,PullRequestReviewComment,¬Ø\_(„ÉÑ)_/¬Ø,,,,,,
25808879,620,PullRequest,- [x] merge `master` backand that's it!,,,,,,
25789891,618,PullRequest,"Added the new endpoint for [combined commit statuses], replaced a legacy URL and added some XML docs :lipstick: Tell me if you want the commits squashed after a review :smile:",,,,,,
22433600,618,PullRequestReviewComment,"Hmmm, I might want to start using GhostDoc again. It helps with the boilerplate ctor descriptions etc. What's in the .xml doc? Would we want to include this in the repo if we start using GhostDoc?",,,,,,
22434924,618,PullRequestReviewComment,"It's a really nice tool when having to do a lot of XML docs :smile: The file is for custom settings and ignore words etc. for spell checking. GhostDoc generates it automatically for each solution I open, so I figured I might as well ignore it so I don't accidentally commit it. If you want it in the repo, I'll drop the commit :smile:Here's a default file:",,,,,,
22436353,618,PullRequestReviewComment,what do you think?,,,,,,
22436698,618,PullRequestReviewComment,Someone would need to convince me of the value of GhostDoc -  I have nothing but bad memories from the time I last touched it.:thumbsup: to ignoring for now,,,,,,
22437122,618,PullRequestReviewComment,"Add in a test for this commit - it has multiple statuses, so you can test that we're handling collections correctly:",,,,,,
22437129,618,PullRequestReviewComment,R# 9 update?,,,,,,
22437144,618,PullRequestReviewComment,here,,,,,,
22440398,618,PullRequestReviewComment,No idea really. The lines were added automatically when opening the sln with R# 9. Want me to remove it?,,,,,,
22440474,618,PullRequestReviewComment,Just changed the existing test. It didn't really test what we wanted (more or less just copied from the test above :stuck_out_tongue:).,,,,,,
22443270,618,PullRequestReviewComment,"Until I get around to codifying a R# settings file for it, let's :fire: these automagic changes...",,,,,,
22443273,618,PullRequestReviewComment,:ok_hand:,,,,,,
25617208,614,PullRequest,fixes #610,,,,,,
21420577,614,PullRequestReviewComment,Is the `Statistics` step here a refactoring typo?,,,,,,
21420604,614,PullRequestReviewComment,fixed,,,,,,
21420623,614,PullRequestReviewComment,Any particular reason to `virtual`-ize these? Should we be doing it for all of them?,,,,,,
21420626,614,PullRequestReviewComment,s/on GitHub/on a GitHub/,,,,,,
25473868,611,PullRequest,"Last one from the milestone bucket, then onwards and upwards to some newer stuff:- [x] update release notes- [x] publish to MyGet- [x] sanity test updates- [x] :shipit:Once this is out, I'll look to do a version with the latest stuff in `master` mid-next week and bump it to 0.6.x",,,,,,
25193952,608,PullRequest,Fixes #607.,,,,,,
24594312,606,PullRequest,"While using Octokit, I noticed a bug when interacting with Pull Requests.  The Repository property for the Head and Base references was always returning null, instead of a valid Repository.The problem was that the JSON API uses ""repo"" as the field name, but the object model was expecting ""Repository"".The issue here seemed similar to what was fixed by  for #387, but instead of adding another special case to the name mapping, I updated the serialization logic to allow ""[Parameter]"" to control the JSON Field name.  It looks like this was the intention based on how the GitReference object was designed.The first three commits in the PR are small changes to SimpleJson itself.  I would be happy to try to get these changes pushed up stream if you feel this is the correct approach to the problem.  I did not do this proactively as I figured there was no reason to spend them time doing so if you'd rather I take a different approach.  The final commit are the changes to the Ocotokit codebase to start using [Parameter] as a way to control serialization.I did not add a specific test for deserializing a Pull Request object.  The root cause of the issue is due to an impedance mismatch between the JSON response and the object model we deserialize to, which is already covered by an existing test, for the ""_links"" behavior.  I'm happy to add one specifically for this scenario if you'd prefer.",,,,,,
20627547,606,PullRequestReviewComment,:heart: updating the test name as well,,,,,,
24091959,604,PullRequest,"Found some cases where we had `async void` methods which means the tests weren't being run.Also found cases where we called a lambda with `async` but the method didn't accept `Func` so it didn't await on the lambda. Most of these were in the form of `Assert.DoesNotThrow` which is kind of pointless since we could just call the method and if it doesn't throw, the test will pass anyways.",,,,,,
23895010,603,PullRequest,"There is no implementation of the github merging api in octokit, so I decided to implement it.The base functionality is done, but I need to figure out how to make a suitable integration tests (which seem to be hard since there is no handles to create branches - or am I missing something?).",,,,,,
23892818,603,PullRequestReviewComment,"These last two `Ensure.ArgumentNotNullOrEmptyString` calls should be in the constructor of `NewMerge` not here. We reserve argument null exceptions for when the argument is null, not when a property of the argument is null.",,,,,,
23892856,603,PullRequestReviewComment,The pattern we use for request objects like this is that the `ctor` should only accept values that are absolutely required. Thus we should ensure that `` and `head` are not null nor empty. `commitMessage` is optional so it shouldn't be a parameter to the ctor.,,,,,,
23892868,603,PullRequestReviewComment,"Since `Base` is required and set by the ctor, make this a `readonly` property.",,,,,,
23892877,603,PullRequestReviewComment,Make this `readonly`,,,,,,
23892977,603,PullRequestReviewComment,"Ah, this won't compile with your last changes.",,,,,,
23892986,603,PullRequestReviewComment,Ah - doh - I will fix it quickly..,,,,,,
23853795,602,PullRequest,"Source indexing the pdb files and including them in the nupkg files allows Visual Studio and other clients to download the source files on demand from GitHub. Several open source and closed source projects are using my project, [SourceLink] to source index their projects./to  & GitHubI would like this solution to work for our private repositories on GitHub, but we need a compatible authentication mechanism for raw content that works with `srcsrv.dll` in Windows. I'm at the Microsoft MVP Summit in case anyone wishes to chat in person about this.",,,,,,
19899858,602,PullRequestReviewComment,Can we get some tracing here when you don't have `pdbstr` in `$PATH`?,,,,,,
19900299,602,PullRequestReviewComment,"Also, any preference here for specifying the x86 or x64 version of `pdbstr.exe`?",,,,,,
19900667,602,PullRequestReviewComment,"Ok, so I found out you're choosing x64 when resolving this:  :cool::cool::cool::cool::cool:",,,,,,
19912084,602,PullRequestReviewComment,"The `if Pdbstr.tryFind().IsSome then` line isn't needed. Would you like me to remove it? With it removed, you would get [this error when not found].",,,,,,
19912535,602,PullRequestReviewComment,I'm happy to let that error bubble up to the user. :thumbsup: to dropping this check.,,,,,,
19915602,602,PullRequestReviewComment,Done.,,,,,,
23688004,600,PullRequest,Extend the Definition of ReleaseAsset to contain the 'browser_download_url'.,,,,,,
23332221,596,PullRequest,"The member variable should be readonly. We were setting it outside actor via a static method, but that's not the right approach. I fixed it.",,,,,,
22656064,592,PullRequest,"Pulled in a couple of PRs, there's some breaking changes so those are captured here in detail:- [x] thumbs up on release notes- [x] run integration tests properly- [x] tag and :shipit:cc",,,,,,
18781529,592,PullRequestReviewComment,"""Implement ability"" is the work we did. It's not what's new in the release. How about,""New: Method to add repository to team...""",,,,,,
18781540,592,PullRequestReviewComment,"""are now nullable""",,,,,,
22614830,591,PullRequest,This is #561 applied on top of the v0.6 branch.I also tidied up some of the tests which were impacted by this change.,,,,,,
22609828,590,PullRequest,Fix some copy/paste typos in doc strings,,,,,,
22604176,589,PullRequest,Porting #546 over to this release. Just a bit of merge :poop: because I'd left it for so long.,,,,,,
22500617,588,PullRequest,Was reading code and stumbled over this,,,,,,
22373869,587,PullRequest,"So #554 is one option for addressing the timeout issues in #567, but as  and I discussed it'd be nicer to avoid the static property. So this is my proposal to satisfy that in the simplest possible way. is where we create the `Request` objects, before passing them to the `HttpClientAdapter` - so why not configure it there?This adds a new `ctor` to `GitHubClient` where you can set this:I don't believe anyone else is using more than the default one, but I'm sure I'll hear about them sooner rather than later if they also want this...- [x] confirm via feedback that this approach suits the known issues/limitationscc   for feedback",,,,,,
20041690,587,PullRequestReviewComment,Whitespace.,,,,,,
20041831,587,PullRequestReviewComment,"We should ensure the `TimeSpan` is not negative.Also, today I learned that `TimeSpan.Duration` gives you the absolute value of the `TimeSpan`. I don't think we should use that here because I feel if someone passes us a negative `TimeSpan` they probably fucked up and should know about it.",,,,,,
20056135,587,PullRequestReviewComment,The two SendData methods are very similar. I can see a modified-one-but-not-the-other error in your future.,,,,,,
20056155,587,PullRequestReviewComment,Fiiiiiiine I'll merge those together better,,,,,,
22367495,586,PullRequest,- [x] stub release notes for 0.5.1- [x] update FAKE to latest stable release- [x] add xml-docs to build artifacts - fixes #573 - [x] add some extra docs to the `*Client` interfaces,,,,,,
22351891,584,PullRequest,"Hi there!I have added the github [hooks API] and PubSubHubbub.I haven't put all needed tests, as I don't know how to tests them actually (I'm using Resharper that doesn't recognize Xunit... ah, nevermind, I remember that I probably need to install a plugin... ok...)Probably not mergeable as-is, but at least you get a grasp of the work.",,,,,,
18725842,584,PullRequestReviewComment,If the only valid result here is `true` perhaps just make the return parameter here a `Task`...,,,,,,
18725985,584,PullRequestReviewComment,"I don't want to be enforcing `sealed` everywhere. If you're brave enough to be subclassing arbitrary things, I'm not going to stand in your way.",,,,,,
18726203,584,PullRequestReviewComment,My psychic debugger here thinks you were adding these by hand.We have a magic script to do this: just run `.\build FixProjects` from the root of the project and it'll take care of this (if you've got it all added to the `Octokit.csproj` file.,,,,,,
18726246,584,PullRequestReviewComment,Any reason why we've added this?,,,,,,
18739397,584,PullRequestReviewComment,"This is to tag Namespace provider to false (actually I just pushed also Models.Request and Http folders), as Octokit is developed in a single namespace, these folders should be removed from namespace providers (otherwise I see the namespace description with a warning with tools like ReSharper)",,,,,,
18739416,584,PullRequestReviewComment,"Ah, sorry, didn't look at this script. Will run it again. Maybe using ""shared projects"" from VS2013 will avoid the need for this kind of scripts...This is fixed by commit 48c659a24a765294d07cad94d63e58384f1a25f9",,,,,,
18739420,584,PullRequestReviewComment,This is fixed by commit 41b38c478563a3671652e1e35867cb8445e62945,,,,,,
18739421,584,PullRequestReviewComment,This is fixed by commit b93d5f7ff71ae0cd5c68e028aa03c066fcc793c2,,,,,,
18739501,584,PullRequestReviewComment,"This is to fix namespace providers, as Octokit is developed under a single namespace, all subfolders should be unmarked as namespace providers.",,,,,,
18741061,584,PullRequestReviewComment,:cool:,,,,,,
18826825,584,PullRequestReviewComment,"As this is documented under `Repos` -> `Hooks`, can this be moved to a property on `IRepositoryHooksClient`? This will also keep the top level API less cluttered.",,,,,,
22351652,583,PullRequest,"Hi there!One commit to fix OauthToken.Scope not correctly being deserialized (issue #582). I understand that the original code was able to serialize/deserialize list into comma separated values. Another one is when deserializing a bool that can be null (It happens when receiving a webhook callback with mergeable property that is ""bool"" but had a null value in the payload). Again, not a big issue, as I finally opted to use json.net to deserialize the data in a safer way and don't really use this fix anymore (I don't want the deserialization process to fail because it is not correctly mapped to the language and just need to access some specific properties in the payload)So probably this pull request cannot be merged, but I I just keep this fix here at least to leave a reminder of the problem on your side (and keep a working code on my branch).",,,,,,
22243814,581,PullRequest,"I bumped the minor number as this adds support for Universal Apps, and upgrades Rx.- [x] version bump- [x] :thumbsup: on release notes- [x] tag it and test it- [x] investigate how scopes are `null` in #582 - [x] :shipit:",,,,,,
22110418,579,PullRequest,"When a pull request is closed, the Mergeable property is null. In order to avoid a serialization error, the property was changed from bool to bool?",,,,,,
21848827,577,PullRequest,- added uri for User info;- added uri for commits before or after a date;- added uri for commits from a branch,,,,,,
18147405,577,PullRequestReviewComment,We actually have these defined inline in `UsersClient` - could you update those usages to point to this method?,,,,,,
18147495,577,PullRequestReviewComment,"If you're feeling up for the challenge, methods which use these URLs could be implemented in `RepositoryCommitsClient` as the data returned should be the same format as before...",,,,,,
21816795,576,PullRequest,"In class PullRequest the property Mergable is misspelled. Because of that, when getting PR details, the property always return false regardless if the PR is mergeable or not.",,,,,,
21675330,575,PullRequest,this is to solve,,,,,,
17943885,575,PullRequestReviewComment,We don't need this change. :fire: it.,,,,,,
17944620,575,PullRequestReviewComment,"the PCL retargeting dialog adds that rather intentionally when targeting wpa81, wp81 or win81,",,,,,,
17944757,575,PullRequestReviewComment,"Not sure why it'd target an older version, but we can't support VS2012 or lower due to a WONTFIX issue with PCL + CodeAnalysis...",,,,,,
21559673,572,PullRequest,"I ignored this issue when reviewing and merging #564, so here's my penance- [x] mute problem integration tests- [ ] AppVeyor is also happy",,,,,,
18147103,572,PullRequestReviewComment,"Once I get this build back to green I was planning to ship a release. This change will be included - it's a minor thing, but the HTML you now get back is slightly different...",,,,,,
21509910,571,PullRequest,"This is WIP and for discussion.The release target would create a git tag push it to github and create a ""github release"" using the latest octokit version.Open issues:- Can we use the currently build Octokit.dll?- Which files do you want to release",,,,,,
20843545,564,PullRequest,Upgrade the packages we depend on including Rx and HttpClient.,,,,,,
16943018,563,PullRequestReviewComment,I'm curious if we can eliminate the duplication here and pass in both the `octokit.nuspec` file and `Octokit.symbols.nuspec` file here...,,,,,,
19898231,561,PullRequest,"There were a few update models, used in PATCH requests, which had fields that were not nullable. This pull requests makes sure all fields within PATCH models can null every field (unless otherwise specified by the API docs).1. Cloned the ReleaseUpdate (used in PATCH requests) model into a NewRelease model (used in PUT requests) since the two models should not have been shared between the request types as they had different field requirements.2. Cleaned up the PullRequestUpdate object as it looks like there was a copy and paste mistake since it contained a few too many fields that don't exist on the update.",,,,,,
18432024,561,PullRequestReviewComment,"Good point, this is no longer necessary (and `Head` below!)",,,,,,
18432303,561,PullRequestReviewComment,"Not so sure about this one - `Name` is required here, and I think having a default `ctor` might put this entity into an invalid state...",,,,,,
18432440,561,PullRequestReviewComment,"Ah yeah, I must'a blacked out or something. I'll remove that guy.",,,,,,
18731183,561,PullRequestReviewComment,"Bring this `ctor` back, the empty list of `Labels` is used in various tests.",,,,,,
18732946,561,PullRequestReviewComment,"I'm not so sold on this change, for two reasons:- it should either be true or false as per the docs - while setting these to `null` means the values won't be sent, I'm not sure this flow is intuitive to users (maybe this is related to the first point).As I was writing tests for this area I got annoyed at the process of taking a release, editing it and then publishing the change. So that was the motivation for the `Release.ToUpdate()` helper method.",,,,,,
18733196,561,PullRequestReviewComment,"I wish I had more notes here because my memory is shot right now on _why_ I made `tagName` a mandatory field.I suspect it's due to that ""use the one model for two operations"" issue you called out earlier...",,,,,,
18742547,561,PullRequestReviewComment,"The PATCH verb is a tricky beast. Based on the nature of the PATCH  verb I believe it quite reasonable to have all fields nullable (unless the documentation states _required_) so that it may adhere to the PATCh standard : Used for updating resources with partial JSON data. For instance, an Issue resource has title and body attributes. A PATCH request may accept one or more of the attributes to update the resource.It's not necessarily that a value must be true or false because in a PATCH request a null (or absence of a value/field) is a reasonable request as well. For example: If this was still a non-nullable field it would mean that the serialize would serialize the value whether you set it or not. However, this is not desirable. I, as a user, don't want to be forced in sending data that I don't want to change. This means that if I wanted to update the title of the Release I must also know the previous state of the ""Draft"" field so that I may maintain it's value.",,,,,,
18742582,561,PullRequestReviewComment,"This follows the other comment I made about the importance that the PATCH model object be completely nullable with the exception of the _required_ fields. In this case, there is a drastic difference between the labels field being null and it being an empty list. For example: If I want to change the title of an issue and only the title when I instantiate this `IssueUpdate` model it automatically sets the `Labels` to an empty list. When I send the request, the serializer will serialize the request as:which GitHub will interpret as ""i want this issue to have no labels"". However, what really should have happened is that, because the ""Labels"" was null, the serialize did not serialize the field:and thus GitHub did not modify the Labels resource on the other side and only modified the title.",,,,,,
18747142,561,PullRequestReviewComment,:thumbsup:,,,,,,
19896035,560,PullRequest,Addresses missing fields in the repository object via #559,,,,,,
17523655,560,PullRequestReviewComment,As  mentioned here  this field is marked for future deprecation...,,,,,,
19890548,558,PullRequest,Implementing the rest of the notifications API as stated in #326.,,,,,,
18728744,558,PullRequestReviewComment,"There's a coding convention here we're enforcing via the test suite - methods with different overloads should be in the same order for the observable interface as they are for the task-based interface. If you move this below the `MarkAsReadForRepository(string owner, string name)` method this will now pass.",,,,,,
18742692,558,PullRequestReviewComment,"Whoa, that's pretty cool. I didn't even think you could enforce something like that. Very cool!",,,,,,
18742756,558,PullRequestReviewComment,It's actually an accidental side-effect (we _could_ sort on parameter counts and all that using reflection to be more tolerant)...,,,,,,
19869562,557,PullRequest,"Related to Integration test was failing, there is only 1 commit in the collection and we are expecting 2.",,,,,,
16319996,557,PullRequestReviewComment,"This test is actually creating two commits - `CreateTheWorld` creates the first commit, and then the second commit is added above.",,,,,,
19862995,556,PullRequest,#409,,,,,,
19569125,554,PullRequest,"When uploading a binary asset via release client API, 100 seconds are too less. The upload is very slow (regardless of the internet connection, i tested it on a root server in a datacenter with dedicated uplink). For a 8 MB file, it takes round about 150-200 seconds.Without setting a larger timeout, the UploadAsset-Method is useless.",,,,,,
19260741,552,PullRequest,Closes #551.,,,,,,
19260310,550,PullRequest,"Fixed the issue with the ItemState enum which didn't contain the ""All"" value. Added the value, wrote an integration test. This fixes issue #517.",,,,,,
18770431,546,PullRequest,This PR adds the ability to modify a team so that it will grant access to a repository. See  for API docs.,,,,,,
15260540,545,PullRequestReviewComment,flot -> flat,,,,,,
18725201,544,PullRequest,"There are cases where you need to override the accepts header in an observable client. Rather than add an override to every possible method, I'm just making the `GetAndFlattenAllPages` method public. That way, you can drop to the underlying `IConnection` method and pass in an accepts header, but you don't have to recreate all the logic for paging.",,,,,,
18671660,542,PullRequest,"- [x] Finish Gists API Implementation  - [x] [Add method to get gist    commits]  - [x] [Add method to get gist    forks]Fixes #328, Fixes #216Added implementation for the remaining pieces of the Gists API.  The others mentioned in #328 and #216 were completed through other PRs. Needs review, but I believe it is merge ready.",,,,,,
18622650,541,PullRequest,"Found myself using the same answer for multiple StackOverflow docs, so I guess it's time to write a doc about it:[Rendered]- [x] add OAuth doc- [x] one more section about getting some basic data for the current user?- [x] proofread- [x] update README to link to docs section",,,,,,
18458914,540,PullRequest,- RepositoryCommitsSince - to get commits since a specified date- RepositoryCommitsUntil - to get commits after a specified date- RepositoryCommitsBetween - to get commits between 2 dates,,,,,,
18304797,538,PullRequest,"And added an #if around using in RequestParameters.cs (worth having alook, may have implications when building on different platforms)",,,,,,
18265409,537,PullRequest,- [x] updated release notes- [x] version bump- [x] merge in,,,,,,
18255500,536,PullRequest,Extracted some test helpers for generating repository data - can probably be refined further but It Does The Job.,,,,,,
18254665,535,PullRequest,"I failed to pick up this convention test when reviewing and tidying up #531, and CI didn't tell me either (I suspect because the test assembly isn't suffixed with `Tests`.",,,,,,
18204025,534,PullRequest,"I'm tracking  to ensure we don't forget, but for the moment I'd like for us to have a green build...",,,,,,
18200774,531,PullRequest,"Based off the awesome work from  in #228, with some additional polish:- [x] dropped the `PullRequest` mentions from the `IPullRequestReviewCommentsClient` interface- [x] simplify setup and teardown of tests- [x] simplify passing around objects between tests- [x] address [this comment] around how UpdatedAt is working for review comments- [x] what's going on with that one weird test?",,,,,,
18130144,529,PullRequest,"- [x] List Commits on a Repository  - [x] [Add method to get all commits for a repository]  - [x] [Add method(s) to get commits for a repository based on parameters]- [x] [Add method to get a single Commit]Added the logic for getting all commits for a repository including unit tests and XML docs for Issue #333.Still need to implement getting the list based on parameters.  I saw two different implementations in the existing clients.  In some places, the implementation is to postfix the parameter to the method name as in `ReferencesClient.GetAllForSubNamespace(string owner, string name, string subNamespace)`. While in another section, the implementation is to accept a `RequestParameters` object as the final argument as in `PullRequestsClient.GetForRepository(string owner, string name, PullRequestRequest request)`.Is there a preference to how I implement that portion  / ?",,,,,,
14753564,529,PullRequestReviewComment,Might as well refactor this to tidy it up a bit now you're referencing it above...,,,,,,
18082970,528,PullRequest,ensuring the search API returns both open and closed issues,,,,,,
18082728,527,PullRequest,Closes #283,,,,,,
18081467,526,PullRequest,Fixes - [x] helper function to convert an issue into an issue update- [x] failing test to clear the milestone from an issue- [x] fix the bug,,,,,,
14665688,526,PullRequestReviewComment,Amazing that `Collection` doesn't have `AddRange`.,,,,,,
14665702,526,PullRequestReviewComment,Much better name than I proposed!,,,,,,
14666001,526,PullRequestReviewComment,"Ugh, it sucks that we have to duplicate this logic. I wonder if we can convince  to add more properties to `GetDelegate`.",,,,,,
18080070,525,PullRequest,"As a starting point from #340, implemented these two endpoints:- [x] - [x]",,,,,,
14634041,525,PullRequestReviewComment,"has become a big class with everything intermixed. Moving forward, I think we should break it out so that things are easier to navigate.",,,,,,
14666255,525,PullRequestReviewComment,Sounds good. What did you have in mind?,,,,,,
14745722,525,PullRequestReviewComment,"As part of code reviews, if you're modifying/adding URLs - move it out to a separate partial class.",,,,,,
18078216,524,PullRequest,"Fixes #366 Also corrected an API issue with `Add` where it was returning an array of objects, rather than an array of strings.",,,,,,
18077030,523,PullRequest,Fixes #442,,,,,,
18036072,522,PullRequest,Supersedes #510 now we know the root cause,,,,,,
18031272,521,PullRequest,Just some build fixes while looking into a testing issue,,,,,,
18029336,520,PullRequest,Some changes to API behaviour we weren't handling correctly in our integration tests:- [x] the default commit status result now returns a non-null value- [x] deployments now try to auto-merge `master` by default - which breaks the tests- [x] [creating a deployment] no longer supports the `Force` parameter - marked as obsolete,,,,,,
18025251,519,PullRequest,"- [x] dropped the `Release` suffix- [x] added helper functions to transform a `Release` and `ReleaseAsset` into update operations- [x] add some more testsNot sure what to do with the `Assets` prefix here, but I'll cross that bridge another time...",,,,,,
17782216,514,PullRequest,The release id is not needed to edit or retrieve an asset.Fixes #506,,,,,,
17141682,512,PullRequest,Fixes - [x] - [x] - [x] - [x] ~~- [x] - [x] Tests- [x] Integration Tests- [x] Observable client- [x] Observable client tests- [x] Observable client integration tests,,,,,,
14474095,512,PullRequestReviewComment,No need for this newline between the closing semi-colon and the code above.,,,,,,
14474134,512,PullRequestReviewComment,So many newlines! Let's delete one of these.,,,,,,
17131781,511,PullRequest,"**Commit Comments:**Added new test for a Get call for References that returns a list of objectsUpdated the related methods to return the read only list of referencesUpdated the tests that were looking for a single reference to use the first index positionUpdated the SimpleJSON DeserializeObject method to check the if the return type is a generic collection, or assignable form one, to create the List when only a single reference is returnedThis was required because the API returns a single object from the Get method without the list wrapper if it only finds one**Discussion Notes:**The ObservableReferences Get most likely needs to change still.  It is not being flattened like the GetAll methodArray index notation is being used to grab the first element when other places were expecting a single reference.  Perhaps those should be changed as well?",,,,,,
13807556,511,PullRequestReviewComment,Added a pull request to the Simple JSON Project as well at facebook-csharp-sdk/simple-json#63 for the deserialization changes I made to SimpleJSON.cs,,,,,,
17130718,510,PullRequest,This threw an NRE on null values when parsing a user on Xamarin.,,,,,,
17079495,508,PullRequest,- [x] the story about how to create/edit releases - [x] how to upload assets- [x] PR for API refactoring #519   - `CreateRelease` -> `Create` in API  - `EditRelease` -> `Edit` in API- [x] PR for extension method to transform a `Release` into a `ReleaseUpdate` object #519 - [x] ensure can you change the release `target_commitish` as part of an update #536,,,,,,
13572683,507,PullRequestReviewComment,Can you name that parameter `id` as we do elsewhere?,,,,,,
16567936,503,PullRequest,Any edits/suggestions about this situation are welcome.,,,,,,
13426411,503,PullRequestReviewComment,/organise/organize because this is `murrica!,,,,,,
16299564,501,PullRequest,Plotting and scheming in the OSS space: - [x] display build status in README- [x] get unit and integration tests running- [x] make all the tests pass woooooooo- [x] no Windows 8 XAML installed on build server. whyyyyyy?- [ ] setup Actual Proper Build Environment Account- [ ] update correct URLFixes,,,,,,
13261748,501,PullRequestReviewComment,Should we setup a GitHub account so we can bring multiple projects under the one umbrella?,,,,,,
14412693,501,PullRequestReviewComment,Yeah.,,,,,,
16087593,495,PullRequest,"This replaces #313. I've rebased it with master, and cleaned up a few things that were missing on the original PR. This is what's left- [ ] Write integration tests  - [ ] For Hooks API  - [ ] For Forks APIAnything else?",,,,,,
16028391,494,PullRequest,Added the comment_count property and an integration test to ensure it's read properly from the API.Line is now [deprecated] for CommentCommit so I made the property nullable.issue #374,,,,,,
16017917,493,PullRequest,The issue needed to be assigned to the userissue #222,,,,,,
16017281,492,PullRequest,Removed the Assert.DoNotThrow as they're not needed (the test will fail if the callback throws anyway). The test then passed three times in a row.issue #424,,,,,,
12766226,492,PullRequestReviewComment,Nice spot!,,,,,,
16016057,491,PullRequest,"Fixes #490 - [x] `Create` returns expected result- [x] `Create`, then `GetAll` returns expected result- [x] `Create` with pending, then `Create` with success, returns in expected order- [x] add preview support for contexts as per [ Commit Status API changes]- [x] `Create` with pending from context A, then `Create` with pending from context B, `GetAll` returns 2 statuses",,,,,,
12765507,491,PullRequestReviewComment,what are your thoughts about adding in preview features like this?,,,,,,
15945481,486,PullRequest,fixes #484,,,,,,
15726251,485,PullRequest,Fixes build on GNU Linux/Mono platform:,,,,,,
15477279,483,PullRequest,Yup,,,,,,
15384087,481,PullRequest,"Fixes #480 There's some internal behaviour of the search APIs which need tightening, and #409 is almost ready to integrate.",,,,,,
12193446,481,PullRequestReviewComment,This seems redundant. I thought we automatically lowercase in `ToParameter` when it's an enum.,,,,,,
12267861,481,PullRequestReviewComment,I think you're right. Let me confirm.,,,,,,
12267924,481,PullRequestReviewComment,"Hahahaha, it makes things worse: `q=phone+state:+repo:caliburn-micro/caliburn.micro`Note how `state` is not defined :crying_cat_face: :crying_cat_face: :crying_cat_face: :crying_cat_face:",,,,,,
12268047,481,PullRequestReviewComment,"Feels a bit dirty, but should do the trick...",,,,,,
12268108,481,PullRequestReviewComment,Looks good to me. Though we potentially call `prop.ToString()` twice in this method. It's not a free call so might be worth caching that value in a temporary variable.,,,,,,
15377029,479,PullRequest,"We had one straggling public class where we were using the bizarro ""*Async"" standard for method naming, fix it. Fixes #478.",,,,,,
15369866,476,PullRequest,- [x] release notes- [x] generate packages- [x] test update- [x] :shipit:,,,,,,
15326552,473,PullRequest,"There's a couple of things in here that aren't right:- [x] `Credentials.Login` isn't always a username (for example, OAuth) - drop assumption- [x] `Connection.Credentials` hides a `Task.Result` and will block in some edge cases- [x] the `ctor` of `RepositoryExistsException` assumes we know the owner",,,,,,
12149250,473,PullRequestReviewComment,^^^ Wat? Why would `owner` ever be null? Using a null value to indicate an organization is weird to me. An organization can be the owner.,,,,,,
12150970,473,PullRequestReviewComment,"Nevermind, I get it.",,,,,,
15155675,472,PullRequest,"Cheers,Steffen",,,,,,
15101512,471,PullRequest,Hey  this is just a demo,,,,,,
11934917,471,PullRequestReviewComment,This should be ## not  ###,,,,,,
15072017,468,PullRequest,"If this looks good to you, give me the squirrel and I'll cut a NuGet release. :smile:",,,,,,
15044717,467,PullRequest,- [x] catch null inputs for `Sort` parameter- [x] unit test to catch regression- [x] encoding `q` parameter makes query return empty results when you have special charactersResolves #474 and should make everything greeeeeeeeeen,,,,,,
15037924,466,PullRequest,Implemented the teams/{0}/members endpoint to retrieve team members.,,,,,,
15036221,465,PullRequest,"It can be automatically applied by the QuickSettings extension, or done manually by the developer.",,,,,,
14947974,462,PullRequest,Provide methods to make it easy for developers to implement the GitHub OAuth web flow.Example of usage.### When not authenticatedRedirect to GitHub.com. This allows the user to accepts the scopes.### Server to server request to get the auth token.,,,,,,
11800777,462,PullRequestReviewComment,Do we need to make this public?,,,,,,
11801801,462,PullRequestReviewComment,Probably not.,,,,,,
11859602,462,PullRequestReviewComment,This file doesn't actually exist so I removed it from the .csproj along with this other change.,,,,,,
11880131,462,PullRequestReviewComment,:thumbsup:,,,,,,
14936682,461,PullRequest,Actually fix #454 cc -sampson,,,,,,
14839425,457,PullRequest,People have their reasons. We're going to use the same `IHttpClient`to request emoji images.,,,,,,
11704360,457,PullRequestReviewComment,You intentionally remove the trailing newline?,,,,,,
11705201,457,PullRequestReviewComment,I have a feeling `FixProjects` did that. :frowning:,,,,,,
14819121,455,PullRequest,The compiler directive SIMPLE_JSON_READONLY_COLLECTIONS was missing from a number of the projects meaning some responses weren't being deserialised correctly.I picked this up in the Windows 8 project but noticed it missing in the Portable and Mono ones as well.Fixes #454.,,,,,,
14790256,453,PullRequest,Save a dependency and hopefully make our library more compatible with stuff /cc,,,,,,
14616259,452,PullRequest,"Marked as WIP. Re #373.So to shed a little light: I sent this PR (somewhat hurriedly) during my talk this evening  as a demo of OSS contribution. Still a few things outstanding:- [ ] tests- [ ] reconsideration of the design of `PullRequestNotMergeableException` (I simply copied `PrivateRepositoryQuotaExceededException` and just made the minimum alterations to get it compiling)- [ ] inclusion of the new exception in the Mono, NetCore45 and Portable projects (skipped to save time)- [ ] XML docs for `PullRequestNotMergeableException` (I just ripped out the existing ones since they didn't make sense on the new type)Have I taken the correct approach in `PullRequestsClient.Merge()`?",,,,,,
14483103,451,PullRequest,"Remove redundant ""Team"" suffix from ITeamsClient methods.Fixes #450",,,,,,
14482974,449,PullRequest,Issue #331.Added integration tests and a new attribute that requires a new environment variable with an organization to test.,,,,,,
11378573,449,PullRequestReviewComment,"Can you update the [CONTRIBUTING.md] docs to include this new field? Also, do you want to support running both user and org tests in the same context?",,,,,,
11378851,449,PullRequestReviewComment,Let me test to see if I can understand the _why_ of this endpoint,,,,,,
11385870,449,PullRequestReviewComment,"I think so. Even for organization tests, you always needs a valid user with ownership of the org. Team tests don't work for users since it appears only orgs can own teams (just realized of this because I got errors trying with a user, and it's not doable on the website either)",,,,,,
11387909,449,PullRequestReviewComment,CONTRIBUTING.md doc updated!,,,,,,
14436272,447,PullRequest,"New versions of FAKE and Nuget,exe",,,,,,
14413407,446,PullRequest,"This was done in other project files in #426.Before this PR, I get the following build errors:",,,,,,
14157205,445,PullRequest,- [x] add release notes- [x] bump version- [x] test packages- [x] :shipit:,,,,,,
13997017,440,PullRequest,"This is a bit of a weird pull request, the app I'm building has Markdown support, so I'm using the underlying ApiConnection class to make use of Octokit, but with a custom accepts header. For instance:However some of the methods don't have overloads that take an accepts parameter. This will add them.",,,,,,
13884046,438,PullRequest,Noticed these where backwards :wrench: :lipstick: :dancer:,,,,,,
13849534,437,PullRequest,"In 451eddc we were a little overzealous in removing async/await calls. Anywhere we do a try/catch around amethod that returns a Task, we need to use await.",,,,,,
13718593,436,PullRequest,Bumping the minor number as it included PCL support- [x] add release notes- [x] bump version- [x] test packages- [x] :shipit:,,,,,,
13702164,434,PullRequest,Figured I might as well open this PR to get some feedback right away :smile:,,,,,,
10722690,434,PullRequestReviewComment,I do like this approach as we get towards 1.0 and better structure the clients. Thanks!,,,,,,
13694174,433,PullRequest,Issue:I have added the compare and tests. Ive made the model out from the json.Uses:,,,,,,
10713240,433,PullRequestReviewComment,This attribute requires that you actually have a private (or internal) property named `DebuggerDisplay` that returns a string. We usually only show a couple property values in such a property. The ones you'd want most to see in a debugger.,,,,,,
10713258,433,PullRequestReviewComment,Also needs a `DebuggerDisplay` property added to the class.,,,,,,
10713320,433,PullRequestReviewComment,This looks like the wrong method call. :smile:,,,,,,
10713411,433,PullRequestReviewComment,This comment refers to `get-branch`. I think that's the wrong URL.,,,,,,
10717080,433,PullRequestReviewComment,"Ah I see, never used that atribute but I can now see how its used :) ive decided that the inherited class had the necessary information for this class",,,,,,
10717114,433,PullRequestReviewComment,ah :D fail,,,,,,
13609768,431,PullRequest,"Before this PR, I see the following warnings when building in VS 2013:After this PR, I see the following warnings (I don't want to attempt to address these in the same PR):",,,,,,
13601236,430,PullRequest,This triggers VS2013 to install the tooling required to maintain Windows Store Apps (it comes with VS2012).Resolves #143,,,,,,
10633878,430,PullRequestReviewComment,Was this the little magic?,,,,,,
10633898,430,PullRequestReviewComment,"I tried lots of GUIDs, but not these specific ones.",,,,,,
10633932,430,PullRequestReviewComment,I just borrowed the values from a new Windows Store App project. But it's basically project magic so whatever...,,,,,,
10637845,430,PullRequestReviewComment,4 commits for this one line change?,,,,,,
10637846,430,PullRequestReviewComment,Are you trynna pad your contribution graph? :stuck_out_tongue:,,,,,,
10637909,430,PullRequestReviewComment,L O L maaaaaaybe,,,,,,
10637927,430,PullRequestReviewComment,the history accurately reflects what happened. Are you trying to hide information from people? :stuck_out_tongue_winking_eye:,,,,,,
13339575,429,PullRequest,- some xml-docs out of sync- removed unnecessary using statements- removed the `Octokit.Response` namespace from the statistics API as it's all alone in that namespace,,,,,,
13339413,428,PullRequest,"- [x] add interface, implementation and response- [x] add reactive implementation - [x] unit tests- [x] convention tests- [x] integration tests- [x] update commit model to use what's in #433 - [x] tighten up parameter validation based on feedback",,,,,,
10726634,428,PullRequestReviewComment,needs the DebuggerDisplay,,,,,,
10729681,428,PullRequestReviewComment,It's in the base class,,,,,,
10740415,428,PullRequestReviewComment,ah sorry yes :P,,,,,,
10767344,428,PullRequestReviewComment,^^^ :trollface: (I actually don't care. Just wondering if you do.),,,,,,
10767411,428,PullRequestReviewComment,The quoted name doesn't match the argument name.,,,,,,
10767473,428,PullRequestReviewComment,Validate these arguments. I'm about ready to use Fody.NullGuard all over this library. I've had good results with that. You :thumbsup: to that?,,,,,,
10767490,428,PullRequestReviewComment,Always be validating.,,,,,,
10767509,428,PullRequestReviewComment,Care about what?,,,,,,
10767511,428,PullRequestReviewComment,:trollface:,,,,,,
10773003,428,PullRequestReviewComment,"Fody looks interresting, but needs alot of work when adding to a large project :) But something thats needed to get looked at",,,,,,
10773998,428,PullRequestReviewComment,"That little red mark there means the file doesn't end with a line ending. Some folks really care about that sort of thing. Others don't. it's like removing and sorting namespaces. I always do it, but I don't block a review for it. ;)",,,,,,
10785915,428,PullRequestReviewComment,"One of the reasons for needing the line ending is so you can stage lines and hunks in git gui, if there is no line endings it will give an error.",,,,,,
10786963,428,PullRequestReviewComment,"Right, so the PR summary screen is trolling me again:![screen shot 2014-03-20 at 10 15 50 pm]",,,,,,
10802197,428,PullRequestReviewComment,"LOL :trollface: Here's what I seey![-594] One of the reasons for needing the line ending is so you can stage lines and hunks in git gui, if there is no line endings it will give an error.That's just horrible. Git Gui should handle that.",,,,,,
10813361,428,PullRequestReviewComment,"Yes I agree, have been thinking about making one that works and is better then that awfull tool :)In my team we have made stylecop apart of the solution build so it always checks for the lineending, dont know if code analyzer have the same option but its maybe its something to add",,,,,,
13337171,427,PullRequest,- [x] support for `creator` field- [x] support for `assigned` field- [x] support for `mentioned` fieldFixes #425,,,,,,
13336165,426,PullRequest,"This fixes code analysis errors (CA1704), which prevent my build from continuing.I believe this only happens on en-(non-US) machines (mine is en-AU). We had [the same issues in AutoFixture] where  kindly submitted a PR to fix it.Here are the errors I see when running `build.cmd` from a VS2013 command prompt:",,,,,,
13239912,422,PullRequest,"The deployment APIs now support any JSON payload, which impacted our existing tests.I've opened #421 to address this properly.Egad, lots of changes in this one. Thanks all!",,,,,,
10325770,422,PullRequestReviewComment,I'm not sure this change ever affected users so probably doesn't need to be in the release notes.,,,,,,
10325803,422,PullRequestReviewComment,"I'm torn. I want to give credit. But these release notes appear in the NuGet package and as such, end users don't care if tests are tidied up or not.",,,,,,
10326710,422,PullRequestReviewComment,"Oh, and we need to update SimpleJson to support read-only dictionaries at some stage...",,,,,,
13207428,420,PullRequest,":cactus: :cactus: :cactus: **Based on #412 and #417 and #419, review and merge those first** :cactus: :cactus: :cactus:Based on issue raised in #411Fixes #415",,,,,,
13206929,419,PullRequest,":cactus: :cactus: :cactus: **Based on #412 and #417, review and merge those first** :cactus: :cactus: :cactus:Based on issue raised in #411Fixes #414",,,,,,
13206289,417,PullRequest,":cactus: :cactus: :cactus: **Based on #412, review and merge that first** :cactus: :cactus: :cactus:Based on issue raised in #411Fixes #416",,,,,,
13184551,413,PullRequest,Closes #408,,,,,,
13156962,412,PullRequest,"As part of resolving #411 we need to do a bit of work to deserialize things properly.This is what we get from the server:I thought about whether we could bypass all this and check for the presence of `items` in the JSON - perhaps we don't care about `total_count` - but the magic for that is deep inside `Connection`.This PR fixes the `SearchRepo` method the user has report, but the other search methods need to be addressed as well.- [x] add integration test and fix problem- [x] update impacted tests- [x] we should return a read-only collection - this isn't working in SimpleJson (how are we doing with updating that ?)Fixes #411",,,,,,
10313265,412,PullRequestReviewComment,"Heh, I just noticed our intermediate path is still Net40. Doesn't matter, but it's odd. :smile:",,,,,,
13098897,410,PullRequest,Closes #382,,,,,,
13083704,409,PullRequest,Complete repos search api similar to the work done on #274 #275- [x] update to use base search class- [x] pass those tests- [x] update all projects,,,,,,
14584118,409,PullRequestReviewComment,You need to apply the `Parameter` attributes to the `RepoSearchSort` enum above to get that last failing test passing.Then it's ready to :ship:!,,,,,,
13079003,408,PullRequest,See issue #332 for details.,,,,,,
13059781,406,PullRequest,"What Haacked, PaulBetts, and Shiftkey suggested. Abstracted ProductHeaderValue, changed tests to use internal ProductHeaderValue. Also, removed some unused usings in the tests if I saw them.",,,,,,
10171827,406,PullRequestReviewComment,Please remove the newline.,,,,,,
10171839,406,PullRequestReviewComment,This curly brace is so far from his homies. Maybe remove that newline up there so he can be closer.,,,,,,
10171846,406,PullRequestReviewComment,Clean up the extra newline por favor.,,,,,,
10172009,406,PullRequestReviewComment,Another lonely curly brase.,,,,,,
13037813,404,PullRequest,"I am using octokit.net in a Visual Studio Extension, but extensions must be strongly named. Therefore, all assemblies that my extension references must also be strongly named.I added a strong name key file and used it to sign all of the assemblies. I modified the InternalsVisibleTo accordingly.I also added two rules to Octokit.ruleset that were causing the build to fail with dozens of errors in Visual Studio 2013. New rules or better detection? Either way, they should be easy to fix and re-add.- CA1811: Avoid uncalled private code- CA1812: Avoid uninstantiated internal classesEverything builds and all unit tests pass.",,,,,,
13028711,403,PullRequest,"By not recreating the `HttpClient` for each API request we save the setup and teardown of http and ssl connections for consecutive requests at the cost of potentially keeping connections open a bit longer than necessary when consumers aren't properly disposing the client. We should be encouraging people to share the client as much as possible.The HttpClient was [designed to be reused] and it's request methods are safe to share between threads.This is targeted against #369 as they kind of go hand in hand. The downside to all of this is that I had to make `IHttpClient`, `IConnection`, `IGitHubClient` and `IGitHubObservableClient` disposable. Re:  - those results aren't matching mine when running the integration tests. 384 seconds without etags vs 317 seconds with (both on this branch with the shared http client though). Having looked at that run I'm not surprised we don't see greater wins though. It's basically doing every possible requests and most of them aren't cacheable (ie POSTs, PUTs) and I'm guessing at some point the cache starts clearing as well.",,,,,,
10148552,403,PullRequestReviewComment,Nitpick nanny! Please add a space before the `:`,,,,,,
10148587,403,PullRequestReviewComment,Space before the `:` gracias!,,,,,,
10148600,403,PullRequestReviewComment,Space before the `:` danke.,,,,,,
10148604,403,PullRequestReviewComment,Space before the `:`,,,,,,
10148681,403,PullRequestReviewComment,"I think this should be `protected`. Whether it should be disposed is pretty much entirely dependent on which ctor you call, right? We can make that decision for them with the other ctors as you've already done.  thoughts?",,,,,,
10148704,403,PullRequestReviewComment,"BTW, it feels like we're exposing an implementation detail, which is why I'd rather not expose it to callers.",,,,,,
10148768,403,PullRequestReviewComment,":thumbsup: it's an implementation detail, so let's not confuse ppl",,,,,,
10148802,403,PullRequestReviewComment,so this mirrors the [HttpClient ctor] and also stuff like [StreamWriter]. What I'm saying is this is not one of my new weird ideas :),,,,,,
10148924,403,PullRequestReviewComment,"Well those are more primitive constructs, so maybe there's a reason for it. I'd like to do without and add it if a scenario pops up. After all, someone can still inherit and call the right ctor so we wouldn't be totally preventing it. :)",,,,,,
10148940,403,PullRequestReviewComment,Good point. I'll fix it.,,,,,,
13027430,402,PullRequest,This is going to be a work in progress for issue #331So far I have implemented the API call for,,,,,,
14751087,402,PullRequestReviewComment,"Hrm. Given how generic the `ApiException` is, is this worth doing? cc",,,,,,
14766684,402,PullRequestReviewComment,True.  I guess it should be assumed it can happen in any of the API methods.,,,,,,
14767030,402,PullRequestReviewComment,What are your thoughts if I add an exception tag for ApiValidationException on this method?It would be raised if someone tried adding an organization as a member to the team,,,,,,
14774374,402,PullRequestReviewComment,"Yeah, either we add this documentation to every method, or remove it from here. Ideally, it'd be on every method. But I'd be happy with removing for now.",,,,,,
14774400,402,PullRequestReviewComment,Seems legit. We probably should get better about documenting the exceptions.,,,,,,
14798330,402,PullRequestReviewComment,Or make more specific exceptions for those situations where we know a post-condition can trigger it...,,,,,,
14798407,402,PullRequestReviewComment,"I'm :cool: with documenting the specific `ApiValidationException` here in the xml-docs, while we think about how we want to do this better globally...",,,,,,
13015024,401,PullRequest,"Unfortunately, portable class libraries (or is it library's :see_no_evil:) do not support ConcurrentDictionary. So I did some research and added a ConcurrentCache class, inspired by [this]. With this, came adding a nuget dependency for the portable project to [Microsoft.Net.Http], and  [Microsoft.Bcl.Immutable].  Added a portable tests project, that _should_ use the portable directive to test the concurrent cache. I stepped through it and everything seemed to work. Not all the integration tests ran, but they were around private repositories, and my test user does not have a premium account.- [x] add test portable project- [x] add portable project- [x] figure out how to implement a concurrent dictionary in a portable library- [x] test portable library- [x] figure out how to package nuget- [x] test nuget package for both portable and net45",,,,,,
12991306,398,PullRequest,We don't want to propagate this package dependency to consumersof Octokit.,,,,,,
12988925,396,PullRequest,"The ""xml documentation comment copying build task"" (trademark pending) had a name change, some polish and is now available as a NuGet package. So this takes care of replacing the old one as well as adding it to the Reactive project.Yeah, DocPlagiarizer is what it's called now. Because naming projects should be left to someone else.Some clumsy oaf managed to delete the remote branch of the previous pull request for this, so here is the remake!Closes #388",,,,,,
12988395,395,PullRequest,"The documentation comment copying build task (that's quite a mouthful) is now on NuGet. So removed the old dll's and project nodes and added it through NuGet instead.Yeah, DocPlagiarizer is what it's called now. Because naming projects should be done by someone else.Just have the WIP on this so that I can look over it once more on here.Closes #388",,,,,,
12985441,394,PullRequest,These methods actually returned mutable collections that happento implement the readonly interfaces. User could cast them tothe actual type and add things. I'd rather avoid even thatpossibility by making these truly return readonly stuff.,,,,,,
10110441,394,PullRequestReviewComment,?,,,,,,
10110446,394,PullRequestReviewComment,:arrow_up:,,,,,,
10110450,394,PullRequestReviewComment,:arrow_up:,,,,,,
10110453,394,PullRequestReviewComment,:arrow_up:,,,,,,
10113746,394,PullRequestReviewComment,Nope. That asserts that it's _exactly_ that type. I want to test the `is a` relationship. Unfortunately there's not a built in assertion for exactly this.,,,,,,
10113953,394,PullRequestReviewComment,"Of course it does, silly me.What about an custom assert that does the opposite of `Assert.IsAssignableFrom` to make this a bit more descriptive?",,,,,,
10114010,394,PullRequestReviewComment,"Well I think it reads just fine, but I could add `AssertEx.IsNotAssignableFrom`",,,,,,
10114072,394,PullRequestReviewComment,Or...,,,,,,
10114131,394,PullRequestReviewComment,:thumbsup: to `IsReadOnlyCollection`,,,,,,
10114145,394,PullRequestReviewComment,Even better.,,,,,,
12972228,393,PullRequest,"These should have been in the previous cleanup. Premature pull requestwithout a WIP tag, yay!- [x] Double check that stuff is the way it's supposed to be",,,,,,
12966244,392,PullRequest,awaited by awaiting them. Also removed `async`/`await` from the test lambdas of those `Throws` calls.,,,,,,
10093177,392,PullRequestReviewComment,"Changing `Assert.Throws` to `AssertEx.Throws` here simply because I was in the file and I'm having a change of heart about preferring `Assert` over `AssertEx`.Used to prefer `Assert.Throws` over `AssertEx.Throws` simply on the merit of it being a standard `xUnit` assertion.But now `AssertEx.Throws` for these makes more sense to me as it means we would not have to rewrite the test if the argument validation would ever happen to be handled after an internal await. Granted that seems like a silly thing to ever do, but at least with `AssertEx` it's one less reason to ever have to rewrite the test.",,,,,,
10093325,392,PullRequestReviewComment,Sounds good to me. I'm hoping xUnit adds a Task based `Assert.Throws` soon.,,,,,,
12935184,391,PullRequest,Will not add extra text and it's all in #239.,,,,,,
10085829,391,PullRequestReviewComment,What's up with the indentation in this file. Everything is indented a lot except the first declaration. Please adjust. Thanks!,,,,,,
12832985,390,PullRequest,"see Cheers,Steffen",,,,,,
12756718,387,PullRequest,Special case JSON _links property.,,,,,,
9953993,387,PullRequestReviewComment,Is it safe to do this in all cases? I guess we could add a marker if we ever find a place where it shouldn't be handled this way.,,,,,,
9954463,387,PullRequestReviewComment,"I did a search through the API and I didn't find any exceptions. So ""yeeeeahhhh?????"". :smile:",,,,,,
12753929,386,PullRequest,For issue #325I have one issue: the JSON deserializer didn't match _links to Links; at the moment it's set to _links in Octokit/Clients/ActivitiesClient.cs,,,,,,
9916135,386,PullRequestReviewComment,maybe?You might be right on this one. I thought I saw it being returned by a client call but now see that it's a property of `Feeds`. In which case the convention tests won't care about the `DebuggerDisplay`,,,,,,
9916146,386,PullRequestReviewComment,see :arrow_up:,,,,,,
9916221,386,PullRequestReviewComment,For this to work you also need a `private` `string` property named `DebuggerDisplay` on the class that returns the value to display in the debugger.Looks as if  made them `internal` in her `DebuggerDisplay` frenzy. Might want to stick to that rather than `private` for the sake of convention.,,,,,,
9916310,386,PullRequestReviewComment,is somewhat misleading as a variable name here. `connection` perhaps? :),,,,,,
9917326,386,PullRequestReviewComment,Could have some guidance with DebuggerDisplay messages? What sort of messages would you like to see for objects like FeedLinks? It seems there are too many links to be able to display well in the debugger.,,,,,,
9917537,386,PullRequestReviewComment,"See my updated comment above, was writing it as you entered yours",,,,,,
9924246,386,PullRequestReviewComment,"Ok, I completely missed this.. this file seems a little lost in `Octokit/Models/Response/`",,,,,,
9932225,386,PullRequestReviewComment,Yikes! Good catch.,,,,,,
12741374,385,PullRequest,"- [x] wireup in CI build script- [x] descriptive error for ""the observable interface is missing""- [x] descriptive error for ""interfaces have different methods""- [x] descriptive error for ""methods do not have same parameter count""- [x] descriptive error for ""methods do not have same parameters""- [x] descriptive error for ""methods do not have correct return value""- [x] descriptive error for ""oh man method overloads are here and i don't know what to do""- [x] use `Environment.NewLine` because Mono",,,,,,
12732821,384,PullRequest,This reverts the update to Rx 2.2.2. _sigh_,,,,,,
12732578,383,PullRequest,This reverts commit a12531ae438fea9e489333ecfd776d1135b73761.Upgrading to Rx 2.2.2 breaks everything.,,,,,,
12727529,381,PullRequest,Releasing freals this time.,,,,,,
12723721,380,PullRequest,Let's cut a new release!,,,,,,
12686141,379,PullRequest,This provides a custom exception for when creating a repository exceeds the private repository quota.,,,,,,
12685640,378,PullRequest,Fixing #361,,,,,,
12679749,377,PullRequest,This exception is thrown when we try to create a repository but italready exists on the server.Wanted to get some eyes on this early. This is ready to merge. I plan to take the same approach for:1. `OverPrivateRepositoryQuotaException`2. `CannotCreatePrivateRepositoryOnFreePlanException` (not sure this is doable in Octokit.net yet).^^^ I could use help naming those better. :),,,,,,
9850053,377,PullRequestReviewComment,"Ignore this change. This was a different road I was planning to take, but decided against. I'll revert it.",,,,,,
12647924,376,PullRequest,"Before I can officially integrate the Convention Tests into the build, the convention tests should actually pass. Crazy, I know...This PR addresses that issue.- [x] interfaces and methods tests pass- ~~[ ] `DebuggerDisplay` tests pass~~ see #378- [x] wireup to `cibuild.ps1`Resolves #370 and #361",,,,,,
12637147,371,PullRequest,So I :bomb:ed this one when I initially added it. Here's the fix,,,,,,
12440624,369,PullRequest,"There's an ongoing [discussion] about ETag support in Octokit. My take on this is that Octokit should, if possible, defer to the http-level caching layer provided by WinInet. It makes it completely transparent to Octokit and it has the added benefit of supporting all of the other http headers that deal with caching (well, `If-Modified-Since` at least).Doing it in the layer below means no custom cache repositories, no sqlite, no custom file-level cache storage and/or in-memory storage (and the problems associated with that) and apps relying on it won't have to provide a place or provider to store/cache. WinInet will persist responses to disk without us ever having to worry about it and no consumer of this library will have to pick a location for storage or chose between in-memory vs disk vs sqlite.In order to utilize the WinInet cache **I needed to add a reference to** `System.Net.Http.WebRequest` which is a no-go on WinRT and mono. As such this is conditionally compiled for .net 4.5 only now.Consider it a PoC at least.### Proof request and response (with stripped tokens, of course)#### Initial request with no cache#### Second requestResponseIf merged this closes #352",,,,,,
9648374,369,PullRequestReviewComment,Should we also be `.ConfigureAwait(false)`-ing here?,,,,,,
9648392,369,PullRequestReviewComment,"Good point, lemme fix that up",,,,,,
9648918,369,PullRequestReviewComment,"Wait, what? That seems to be related to `HttpWebRequest` - you're still seeing that behaviour with `HttpClient`?",,,,,,
9648939,369,PullRequestReviewComment,uses `HttpWebRequest` for this request,,,,,,
9648991,369,PullRequestReviewComment,![],,,,,,
12385531,368,PullRequest,Just like it says on the tin,,,,,,
12370784,367,PullRequest,Issue #363.,,,,,,
12349269,365,PullRequest,"So, since I knew I had spotted at least a handful of tests that were not actually doing any Asserts I figured I would sit down and see if I couldn't track down most of them. And here's the result.Most of these are un-awaited `AssertEx.Throw`.In most cases these were replaced with `Assert.Throw`. Whenever the method was notasync and there was no reason to await to get to the exception.In the remaining cases they were simply awaited. I also took the liberty of making the lambdas not async whenever possible since awaiting the result returned by the method under test is already handled inside `AssertEx.Throw`.Other ones were validations on `Substitute` objects that were missing the `Receive()`. And some cases of missing receives that were trying to validate the wrong call.If we'd rather have the `Assert.Throw` calls changed into awaited `AssertEx.Throw` I should be able to do that fairly quickly. Go Team Regex!Most of these tests were really only covering argument Ensures. And all but one was functioning as expected. I've made one change where a method was getting the wrong Uri.",,,,,,
9809768,365,PullRequestReviewComment,We don't actually need to do the inner `async` and `await` for this test - `AssertEx.Throws` accepts a `Func` here and takes care of the unwrapping...,,,,,,
9809865,365,PullRequestReviewComment,Same thing here: drop the inner `async` and `await`,,,,,,
9809954,365,PullRequestReviewComment,:metal: to naming things better,,,,,,
9809961,365,PullRequestReviewComment,:metal:,,,,,,
9809968,365,PullRequestReviewComment,:metal:,,,,,,
9809974,365,PullRequestReviewComment,:metal:,,,,,,
9810145,365,PullRequestReviewComment,Yeah there are more places where we do this. I just left them because it was already in place and it still does what's intended.![funny-gif-horse-mask-dont-touch]Want me to just clean it up throughout the projects where it can be removed?,,,,,,
9810230,365,PullRequestReviewComment,Just grab those two I've highlighted - there's enough value in here to not dilly-dally further...,,,,,,
12304127,364,PullRequest,Issue #346.,,,,,,
9537550,364,PullRequestReviewComment,:lipstick: should be `ClientSuffix`,,,,,,
9538035,364,PullRequestReviewComment,Yes. Fixed.,,,,,,
12291267,362,PullRequest,"- [x] run convention tests by default, after unit tests- [x] types that don't exist/don't match- [x] method names that don't exist/don't match- [x] method counts should match- [x] method parameter names should match",,,,,,
9562730,362,PullRequestReviewComment,Just adding some docs here while passing through...,,,,,,
12124417,360,PullRequest,Hey  I'm going to finish this off as it's something I want to start using (and also the oldest PR).Supersedes #173 Implements  - [x] tidy up outstanding feedback around documentation- [x] integration test - create a pull request- [x] integration test - update a pull request- [x] integration test - close a pull request- [x] integration test - merge a pull request- [x] coding style- [x] some more documentation :heart_decoration: - [x] bugfix - PR commits have author details - use different type to encapsulate this info,,,,,,
9816491,360,PullRequestReviewComment,ZOMG! A missing trailing newline :trollface:,,,,,,
9816582,360,PullRequestReviewComment,Shouldn't this be pluralized?,,,,,,
9816607,360,PullRequestReviewComment,Hey! I'm saving them for a rainy day! :trollface:,,,,,,
9816640,360,PullRequestReviewComment,Maybe here as well?,,,,,,
9816647,360,PullRequestReviewComment,E_TOOMANYSPACES,,,,,,
9816672,360,PullRequestReviewComment,Linus is crying... :trolleybus:,,,,,,
9817095,360,PullRequestReviewComment,"The docs themselves are pluralized, and I know we've been explicitly avoiding this on the properties themselves. Moving that discussion over to here: #375",,,,,,
9817102,360,PullRequestReviewComment,:arrow_up:,,,,,,
9817171,360,PullRequestReviewComment,"Because of too little whitespace at the end of the file? I'm :cool: with that, then...",,,,,,
9846014,360,PullRequestReviewComment,"Wait, I see this one now - wasn't visible on the summary page (?!?!?)![screen shot 2014-02-19 at 9 47 12 am]",,,,,,
9850228,360,PullRequestReviewComment,Documentation? It's fine to do it later. :),,,,,,
12123686,359,PullRequest,[Rendered Markdown - CONTRIBUTING][Rendered Markdown - README][Rendered Markdown - DEPLOYMENT]Any gross abuses of the English language? Or things that could be made clearer?cc  -sampson    as you are relatively new contributors- [ ] coding style guidelines- [x] a bit more git-fu,,,,,,
12115713,358,PullRequest,as always you are the first to get it,,,,,,
12111846,357,PullRequest,"As per 's comments in #343, a small clean up PR was in order :smiley:",,,,,,
12081520,356,PullRequest,"I've added code, tests and integration test for adding email addresses to user accounts (#341).If someone can clarify the API for me on how to delete email adresses  then I can do that as well.",,,,,,
9367558,356,PullRequestReviewComment,We never return arrays. That should be an `IReadOnlyList`,,,,,,
9367564,356,PullRequestReviewComment,"If `emails` is null, this should throw an `ArgumentNullException`. If it's empty, an `ArgumentException` is appropriate.",,,,,,
9367568,356,PullRequestReviewComment,Couldn't this also result in an empty array?,,,,,,
12078476,355,PullRequest,I've implemented the organizations API according to #330.,,,,,,
9367538,355,PullRequestReviewComment,"LOL. ""initrode"". Awesome.",,,,,,
9367541,355,PullRequestReviewComment,![],,,,,,
9367554,355,PullRequestReviewComment,"isn't an argument to this method so we shouldn't throw an argument exception.In fact, a question worth figuring out is can you change the name of an organization via the API? If so, then we need to have two parameters to this method. One would be a string that's the name of the organization, and the other would be the `OrganizationUpdate` that has the new values for the org.",,,,,,
12046434,354,PullRequest,Fixes #348,,,,,,
12042590,353,PullRequest,...ild of library first.mastermaster compare as I was not able to create a topic branch in main repo as per [guidelines for contributing]. Apologies.,,,,,,
12014569,351,PullRequest,Currently the ObservableStarredClient isn't accessible through the ObservableActivitiesClient like it is in the async library.This pull request adds IObservableStarredClient to ObservableStarredClient and references it from ObservableActivitiesClient.,,,,,,
12014209,350,PullRequest,Implements the Watching API in both Async and Observable projects with unit tests.Closes #327,,,,,,
11944377,345,PullRequest,New conventions tests project.,,,,,,
9521409,345,PullRequestReviewComment,I'm going to singularize this to `ConventionTests`,,,,,,
11899406,344,PullRequest,- [x] Add missing functionality to the Repository Releases API Client- [x] Add missing functionality to the Observable Repository Releases API Client- [x] Unit tests- [ ] Integration tests- [x] Doc CommentsFixes #338,,,,,,
9196463,344,PullRequestReviewComment,I'm starting to wonder if we should just disable `CA1716`.  any thoughts?,,,,,,
9196666,344,PullRequestReviewComment,Doc comments?,,,,,,
11885997,343,PullRequest,- [x] Stub out the User Followers API- [x] Implement the User Followers API- [x] Write some tests- [x] Implement the Observable User Followers API- [x] Write some more tests- [x] Write some integration testsFixes #339,,,,,,
9291757,343,PullRequestReviewComment,:boom: this line,,,,,,
9291789,343,PullRequestReviewComment,A few places that don't have the `` value specified...,,,,,,
9291796,343,PullRequestReviewComment,:fire: this down,,,,,,
9292949,343,PullRequestReviewComment,Tidy up the return value docs in this file and I think this is ready to :ship:,,,,,,
9367825,343,PullRequestReviewComment,Mind adding doc comments to these methods?,,,,,,
9367847,343,PullRequestReviewComment,Any reason you fully qualified the `Unit` typename? Looks like we have a `using System.Reactive` above.,,,,,,
11826060,324,PullRequest,- [x] PullDownComments update - [x] SimpleJson updated with a minor workaround for netcore45 deserialization- [x] NSubstitute updated,,,,,,
11813263,323,PullRequest,"Did not implement the Delete method as it is a DELETE that sends a request body.Not unheard of but still rather unorthodox especially since the body identified the resources to delete. So maybe it's time to start a lobbying group for that as well? If it's not something that's likely to change I'll go ahead and add the required infrastructure methods to handle deletes with a body, but would at least want to check first.cc Because you seem to be one of the people to call on for all things GitHub API",,,,,,
9291637,323,PullRequestReviewComment,Plans to bring back this integration test?,,,,,,
9297102,323,PullRequestReviewComment,"Yes, there was a reason for this being out and I thought I put a comment in about it. I was obviously mistaken.What I wanted to do was to try and replace it with something that would pass for everyone. Maybe simply check that it returns an email at all?I guess another option would just be to have anyone who wants to run these change the email on their test account?(Not sure if that's doable and it might leave a lot of test accounts with forgotten and un-retrievable passwords? :)",,,,,,
9299334,323,PullRequestReviewComment,Maybe simply check that it returns an email at all?:thumbsup: Let's start simple and go from there,,,,,,
9372208,323,PullRequestReviewComment,Finish up the `returns` elements here and I think this is ready to :ship:,,,,,,
9571985,323,PullRequestReviewComment,"Rx note: when you `await` on an observable you're doing the same thing as a `.First()` (which is now deprecated in Rx).The test itself is just checking we get *something* back, which is fine, but just something to watch for. If you wanted all the results, you could `await client.GetAll().ToArray()`",,,,,,
9573007,323,PullRequestReviewComment,"which is now deprecated in RxWasn't aware that it's been deprecated. I'll just make the test more Rxish in a separate PR.But yes, my intention with the test was just to see that we got at least one `EmailAddress` back.",,,,,,
11771005,321,PullRequest,- [x] write release notes- [x] version bump- [x] publish to MyGet- [x] draft release on GitHub- [x] removed `IGitHubClient.Tree` as it is a duplicate of `IGitHubClient.GitDatabase.Tree`- [x] test test test- [x] publish to NuGet- [x] :shipit:,,,,,,
11745330,319,PullRequest,"There are some concerns regarding naming here to be aware of. Specifically the response model `RepositoryTag`. A class named `GitTag` already exists but the structures are quite different. It looks as if this might be more in line with a lightweight tag so `LightweightTag` might do as a name instead.Secondly the builder implementation in the integration tests is silly at this point, but it felt even sillier repeating the longer section over and over. And this way the option to change the defaults is more centralized and it's easy to add methods to the builder for more customization if it's ever needed. I can take it or leave it but if it stays I have another commit that replaces the hardcoded instantiations throughout the integration tests.Hopefully there aren't many other issues :)",,,,,,
9372226,319,PullRequestReviewComment,Tidy up these `using` statements,,,,,,
9372232,319,PullRequestReviewComment,"Oh dear, is this the new rules in VS2013 ordering the `using` statements alphabetically - instead of `System.*` first?",,,,,,
9372270,319,PullRequestReviewComment,Is it worth using `await` here to make this more readable? cc,,,,,,
9372815,319,PullRequestReviewComment,These people are animals.,,,,,,
9373171,319,PullRequestReviewComment,"How dare they! And yeah, unless one of my add-ins is messing with it that seems to be the case.",,,,,,
9567796,319,PullRequestReviewComment,Is not checked by default since VS 2012 according to [this],,,,,,
9572245,319,PullRequestReviewComment,"The reason for the change in default behavior is due to the fact that Windows App Store applications prefer to have ""Windows._"" at the top of the file rather than ""System._""![wtf-miyamoto]",,,,,,
9572346,319,PullRequestReviewComment,Apparently Windows App Store applications are sentient and therefore have preferences,,,,,,
9572934,319,PullRequestReviewComment,"Haha, the nonsensical justification aside the cause for my wonky sorting seems to be correct and it should now do what it's supposed to.",,,,,,
9811633,319,PullRequestReviewComment,![high-five-fist-bump-gif],,,,,,
9812124,319,PullRequestReviewComment,Indulging in a little bit of self gratification,,,,,,
11726240,316,PullRequest,"Client, as well as unit tests.",,,,,,
9084943,316,PullRequestReviewComment,Nice :eyes:!,,,,,,
11673559,314,PullRequest,"Cheers,Steffen",,,,,,
11659203,313,PullRequest,"Gets the list of hooks defined for a repositorySee  &&  for more information.Usage:var hooks = await authedClient.Repository.Hooks.Get(""owner"", ""repo"");var forks = await authedClient.Repository.Forks.Get(""owner"", ""repo"");This also includes the RX assembly.Resolves #336",,,,,,
8994094,313,PullRequestReviewComment,Clean up the excess whitespace here,,,,,,
9013282,313,PullRequestReviewComment,Any benefits to using `Lazy` here over just `new`-ing it up?,,,,,,
9013924,313,PullRequestReviewComment,Very marginal given how lightweight that ctor is; I was following an example from a Readme method on RepoClient; but that is much more heavyweight. Happy to take your lead and refactor if req.,,,,,,
9014691,313,PullRequestReviewComment,This one? That's an edge case because we don't want to do the rendering until as late as possible. Let's keep it simple for the moment.,,,,,,
9014751,313,PullRequestReviewComment,Why not set `_client` here to `client.Repository.Hooks` here and eliminate some duplication below?,,,,,,
9014821,313,PullRequestReviewComment,"Cool, I'll pull out the lazy loading. Agreed on simplicity.-----Original Message-----From: ""Brendan Forster"" notifications.comSent: ‚Äé20/‚Äé01/‚Äé2014 19:08To: ""octokit/octokit.net"" octokit.net.github.comCc: ""Andy Cross"" andy.comSubject: Re: [octokit.net] Implement Repository Hooks (#313)In Octokit.Reactive/Clients/ObservableRepositoriesClient.cs: @@ -17,6 +18,8 @@ public ObservableRepositoriesClient(IGitHubClient client)              _client = client.Repository;              _connection = client.Connection;              CommitStatus = new ObservableCommitStatusClient(client); -            var apiConnection = new ApiConnection(_connection); -            _hooks = new Lazy( () => new RepositoryHooksClient(apiConnection));   This one?    That's an edge case because we don't want to do the rendering until as late as possible. Let's keep it simple for the moment.    ‚Äî   Reply to this email directly or view it on GitHub.",,,,,,
9014830,313,PullRequestReviewComment,What about a test here that we surface a `NotFoundException` when the id does not exist in the repo?,,,,,,
9015161,313,PullRequestReviewComment,"It's not in this direct code path, instead handled however core api exceptions are. Unless i misunderstand you :)---From: Brendan Forstermailto:notifications.comSent: √Ω20/√Ω01/√Ω2014 19:12To: octokit/octokit.netmailto:octokit.net.github.comCc: Andy Crossmailto:andy.comSubject: Re: [octokit.net] Implement Repository Hooks (#313)In Octokit.Tests/Clients/RepositoryHooksClientTest.cs: -                client.Hooks.Get(""fake"", ""repo"");   + -                connection.Received().GetAll u.ToString() == ""repos/fake/repo/hooks"")); -            }   + -            [Fact] -            public async Task EnsuresNonNullArguments() -            { -                var client = new RepositoriesClient(Substitute.For());   + -                await AssertEx.Throws(async () => await client.Hooks.Get(null, ""name"")); -                await AssertEx.Throws(async () => await client.Hooks.Get(""owner"", null)); -            } -        }   + -        public class TheGetByIdMethodWhat about a test here that we surface a NotFoundException when the id does not exist in the repo?‚ÄîReply to this email directly or view it on GitHub.",,,,,,
9020872,313,PullRequestReviewComment,"It's not in this direct code path, instead handled however core api exceptions areFair, but still a good thing to check that this client is behaving consistently, right?",,,,,,
9021050,313,PullRequestReviewComment,"I'll write the test in the AM (I'm GMT) so +07:00 offset. Honestly, I can't see the value now but hope the test writing will show me your thinking. Currently I can only see mocking out an exception throw to see that the client throws the exception, which is testing only nSubstitute. However it's 22:35, I'm stacked up on stuff for tonight and I'd rather write the code tomorrow than argue ;-)Thanks for the peer review so far <3---From: Brendan Forster notifications.comSent: 20 January 2014 22:30To: octokit/octokit.netCc: Andy CrossSubject: Re: [octokit.net] Implement Repository Hooks (#313)In Octokit.Tests/Clients/RepositoryHooksClientTest.cs: -                client.Hooks.Get(""fake"", ""repo"");   + -                connection.Received().GetAll u.ToString() == ""repos/fake/repo/hooks"")); -            }   + -            [Fact] -            public async Task EnsuresNonNullArguments() -            { -                var client = new RepositoriesClient(Substitute.For());   + -                await AssertEx.Throws(async () => await client.Hooks.Get(null, ""name"")); -                await AssertEx.Throws(async () => await client.Hooks.Get(""owner"", null)); -            } -        }   + -        public class TheGetByIdMethodIt's not in this direct code path, instead handled however core api exceptions areFair, but still a good thing to check that this client is behaving consistently, right?## Reply to this email directly or view it on GitHub.",,,,,,
9021239,313,PullRequestReviewComment,"Take your time, I'm just reviewing bits and pieces as it evolves.I just skimmed for other examples where we check and throw this exeption but we haven't written tests for them. Happy to leave it for now...",,,,,,
9021454,313,PullRequestReviewComment,I don't think we need to worry about this whitespace tidy-up here.,,,,,,
9021747,313,PullRequestReviewComment,This should be returning an `IObservableRepositoryHooksClient` to match the interface,,,,,,
9021902,313,PullRequestReviewComment,"I'll refactor when I remove the Lazy---From: Brendan Forster notifications.comSent: 20 January 2014 23:01To: octokit/octokit.netCc: Andy CrossSubject: Re: [octokit.net] Implement Repository Hooks (#313)In Octokit.Reactive/Clients/ObservableRepositoriesClient.cs: @@ -108,5 +111,14 @@ public IObservable GetReadmeHtml(string owner, string name)          }   -        Lazy -        public IRepositoryHooksClient HooksThis should be returning an IObservableRepositoryHooksClient to match the interface## Reply to this email directly or view it on GitHub.",,,,,,
9172572,313,PullRequestReviewComment,Clean up this unused `using` statement,,,,,,
11659058,312,PullRequest,"Gets the list of hooks defined for a repositorySee  for more information.Usage:var hooks = authedClient.Repository.GetHooks(""owner"", ""repo"").Wait();",,,,,,
11650949,311,PullRequest,"- [x] no longer subclass RequestParameters, but expose a Parameters property and build it up similar to how SearchRepositoriesRequest works- [x] re-add the Sort property- [x] add some testsFixes #275",,,,,,
11623531,310,PullRequest,"Issue #261. Allow deserialization of IReadOnlyCollection, so it's not exactly read only.",,,,,,
8974836,310,PullRequestReviewComment,"Using my test account I actually have a verified email address, which fails this test.Should we just be checking the first email is the primary one?",,,,,,
9043984,310,PullRequestReviewComment,Revert this change - it's no longer necessary,,,,,,
11581206,309,PullRequest,Copy-paste. Fix for #277.,,,,,,
11580672,308,PullRequest,Copy-paste. Fix for #277.,,,,,,
11515356,307,PullRequest,- [ ] Repositories- [ ] Issues- [ ] Pull Requests- [ ] Organizations - [ ] Organization Members- [ ] ???,,,,,,
11512695,306,PullRequest,- [x] added `HttpClientAdapter` `ctor` for users who need to work behind a proxy- [x] added overload to `Connection` to simplify injecting a connectionResolves #302 cc,,,,,,
11509279,305,PullRequest,It's not necessary in both places and is confusing.Resolves #303,,,,,,
11444781,301,PullRequest,"We are repeating a lot of logic inside the searches, hopefully this class will allow us to simply our searching.I will close  so we can keep our discussions on the octokit repo (if anyone else has any input).How do you want this to be merged?I have created the base class, so we can now iterate on it till it's right...Once this is merged - we can open a PR for every search to inherit from base class?  can then use it for his PR  and I can also use it for cc://",,,,,,
8820705,301,PullRequestReviewComment,"You could add `System.Collections.Generic` in a `using` statement together with the other `using`s at the top, makes the method a bit cleaner.",,,,,,
8820718,301,PullRequestReviewComment,Same here...,,,,,,
8820731,301,PullRequestReviewComment,Same as with the ones below,,,,,,
8820760,301,PullRequestReviewComment,and here :),,,,,,
8820836,301,PullRequestReviewComment,Shouldn't the file name be `BaseSearchRequest.cs`?,,,,,,
8821085,301,PullRequestReviewComment,thanks! :thumbsup:,,,,,,
11425658,298,PullRequest,"Apparently the # references don't work in titles. so putting it here. Issue #297I'm having some doubts about a few naming things still, especially some inconsistencies regarding status/statuses. Just something to keep an eye out for and I wouldn't mind a comment or two on that if someone has an opinion about it.There is also a huge chunk of duplicated code between the two integration tests classes, not to mention that a lot of that came from an already existing integration test. It's still DRY if I'm repeating someone else's code, right?Anyway, I'm sure I could put some effort into cleaning that up and maybe implement some sort of setup ""builder"" if that's something we'd want to do. That could hopefully replace the setup in the other integration tests as well, making them all more declarative.Other than that I hope that this should be satisfactory for the most part; After all it was a rather straight forward implementation.If I have time I'll get the Reactive one thrown together tomorrow unless there's a whole horde of issues to resolve with this one.",,,,,,
9372168,298,PullRequestReviewComment,If you make this method return a `Task` then you can await on it (like you do with `AssertEx.Throws`) and the tests will past as part of the CI build script.,,,,,,
9592962,298,PullRequestReviewComment,"Hey buddy. What are you doing way over there on the right. Come over here. It's ok, we won't bite. Perhaps one tab in like you do elsewhere. :smile:",,,,,,
9593016,298,PullRequestReviewComment,^^^ Indentation is off.,,,,,,
9612574,298,PullRequestReviewComment,My own conventions sneaking in there. I generally line up arguments either all on new lines or lined up with the first argument. Dot-notation indentation is a whole other story.,,,,,,
9612600,298,PullRequestReviewComment,Tabs snuck in somehow! thought I had it set to automatically un-tabify .cs files,,,,,,
11380243,296,PullRequest,"Fixes #294:dancer: ### Todo- [x] Implement get contributors list- [x] Implement get commit activity data- [x] Implement get number of additions and deletions per week- [x] Implement get weekly commit count - [x] Implement get commits per hour- [x] Handle 202, 200 for queued jobs- [x] Tests",,,,,,
8780090,296,PullRequestReviewComment,"What is a ""repo"". :stuck_out_tongue: We generally use `name`. If it's not clear that it's a repository, I'd prefer `repositoryName`",,,,,,
8780105,296,PullRequestReviewComment,Could this be a `Uri`? Ditto for the others. ReposUrl probably can't be because of ssh.,,,,,,
8780111,296,PullRequestReviewComment,Go ahead and add a `using System.Diagnostics.CodeAnalysis;` to the top so we can shorten all these to just `[SuppressMessage(...)]`,,,,,,
9808503,296,PullRequestReviewComment,We should pass this cancellation token into `_httpClient.Send` to make the FxCop warning go away...,,,,,,
9808820,296,PullRequestReviewComment,FYI:  is where to go for thiscc,,,,,,
9809010,296,PullRequestReviewComment,Let this little fella breathe a bit,,,,,,
9811293,296,PullRequestReviewComment,Also that was the entire point of this change. My bad.,,,,,,
11282566,293,PullRequest,Fixes #292,,,,,,
11232166,291,PullRequest,Resolves #285,,,,,,
11175659,290,PullRequest,- [x] Update `SearchIssuesRequest` to match current API- [x] Re-Add Sort property- [x] Add tests- [x] Unskip tests awaiting PR #293 - [x] Refactor to use BaseSearchRequest (#301)Fixes #274,,,,,,
8721438,290,PullRequestReviewComment,Trim these lines at 80 char or thereabouts...,,,,,,
8744824,290,PullRequestReviewComment,"Any particular reason why you chose to use `StartsWith` and `Contains` rather than just hard-coding the strings?I think tests should be tolerable, but given the possible set of query terms is large, is it worth being more terse with these checks? EDIT: terse, not succinct. So doing `d[""q""] == ""pub""` for example in the test above.",,,,,,
8745128,290,PullRequestReviewComment,"I'm sure there was a valid reason at the time why I went with `StartsWith` and `Contains`, but I'll take a look and see if we can be more terse as suggested.",,,,,,
8751959,290,PullRequestReviewComment,not sure if it matters (probably me just nitpicking) wondering if there is any use adding a link to:  same with all other qualifiers?,,,,,,
8752589,290,PullRequestReviewComment,That'd be fantastic,,,,,,
8752637,290,PullRequestReviewComment,"Alright, I'll add that",,,,,,
8772617,290,PullRequestReviewComment,"Something I found last night redoing these tests is that the order parameter is coming back as `Descending`, but after having a look at the API docs here  I realised the `order` parameter is either `asc` or `desc`.The `SortDirection` enum  values has a `Parameter(Value="""")` attribute applied to it, so should that automagically :sparkles: convert `Descending` to `desc` or is there something that needs to be done.Or, will the API accept `Descending` as the value of the  `order` parameter?cc",,,,,,
8778116,290,PullRequestReviewComment,"Calling `.ToString()` on an enum will ignore whatever `[Parameter]` you have set, so this definitely feels like a bug. Or, will the API accept `Descending` as the value of the `order` parameter?No, it doesn't even return valid search results",,,,,,
8778408,290,PullRequestReviewComment,"Because we're dropping the `RequestParameters` base class here, we lose this method here which was taking care of the mapping of values to the expected API parameters:Perhaps we need to make the other magic in that class available as an extension method, so you could do something like this:So we can reuse the logic across different enums...",,,,,,
8780449,290,PullRequestReviewComment,I'll take a look tonight,,,,,,
8782588,290,PullRequestReviewComment,We could do this (a rough first attempt):,,,,,,
8783026,290,PullRequestReviewComment,"Or this even, so it can be used on more than just the SortDirection enumcc",,,,,,
8985170,290,PullRequestReviewComment,Could we move the URLs into a `` element and instead make a friendly sentence for each of these?,,,,,,
8986949,290,PullRequestReviewComment,Yessir!,,,,,,
11166467,289,PullRequest,- [x] Refactor to use BaseSearchRequest (#301)- [x] Fix those failing tests,,,,,,
8681907,289,PullRequestReviewComment,These tests are failing because the `.GetAll`,,,,,,
8718852,289,PullRequestReviewComment,My bad - that's been fixed now.,,,,,,
9172849,289,PullRequestReviewComment,"This should be `""something""`",,,,,,
9173156,289,PullRequestReviewComment,"thanks, nearly ready for review now, just updated all tests. I am rebasing now too.",,,,,,
9291282,289,PullRequestReviewComment,A :lipstick: change - bring this back up to the previous line and let the `:` breathe with some whitespace,,,,,,
9291341,289,PullRequestReviewComment,Just add a `using System.Diagnostics.CodeAnalysis;` to this file and clean up this duplication.,,,,,,
11127854,288,PullRequest,Fixes #240 and #242,,,,,,
11127827,287,PullRequest,Fixes #240 and #242,,,,,,
11107899,286,PullRequest,Fixes #278,,,,,,
11091712,284,PullRequest,"I initially had grand plans to have a .NET 4 build alongside this, but it was much :rage1: so that's been delayed...- [x] switch the Octokit and Octokit.Reactive projects to target Profile78- [x] introduce Microsoft.Bcl.Async and Microsoft.Net.Http dependencies- [x] resolve impacted test- [x] test Xamarin Studio (stable channel?) can build the solution still- [x] update `CreatePackages` step to ensure paths are correct and it all Just Works- [x] ensure build server can compile and test this project before merging cc -ogre - [x] update docs to indicate that VS2013 is now necessary- [ ] update dependencies to ensure they include the necessary Async/Http/Immutable libraries- [ ] test the packages install for .NET45 and Win8 because paranoid",,,,,,
11090061,282,PullRequest,- [x] kill of a bunch of unnecessary namespaces in the test suite- [x] added `Helper.Username` as a shorthand way to get the current login- [x] 80 char word-wrap for the `README`- [x] `Helper.DeleteRepo` should wait for up to 15 seconds to ensure proper tidy-up- [x] added  `ctor` overloads to `NewCommit` so that you can create an orphaned commit (no parent) or simple commit (one parent),,,,,,
11089853,281,PullRequest,"So I've been talking with our API guys about some rate-limiting I've been experiencing when running tests.They recommend that I switch over to using an OAuth application and token - which allows for higher - [x] introduce Powershell script because it allows for better scripting of environment- [x] add `set-credentials.ps1` helper script for populating credentials and client id/secret- [x] switch integration tests over to use token (if it exists)- [ ] update documentation to explain these changes - [ ] validate token and, if not valid, get a fresh token and set it before running tests![screen shot 2013-12-26 at 1 22 57 pm]Test Plan:- [ ] no environment variables - see warning message about credentials, no integration tests- [x] existing username/password environment variables - see warning message about new credentials, use Basic authentication for integration tests- [ ] valid token found - no warning message, use token for tests- [ ] invalid token found - no warning message, message about updating token, use new token for tests",,,,,,
11089289,279,PullRequest,- [x] write release notes- [x] complete skipped test `ReferencesClientTests.CanUpdateAReference`- [x] complete skipped test `ReferencesClientTests.CanDeleteAReference`- [x] version bump- [x] publish to MyGet- [x] draft release on GitHub- [x] test test test- [x] publish to NuGet- [x] :shipit:,,,,,,
11079981,273,PullRequest,Added observable client for the search api.This was something missing from cc/ #137,,,,,,
8547362,273,PullRequestReviewComment,"Given these parameters are of type `FooRequest`, can we change the parameter names to `request` to be more descriptive?",,,,,,
8547363,273,PullRequestReviewComment,Should this be something like  Creates the relative URI for searching repositories,,,,,,
11039823,272,PullRequest,#NAME?,,,,,,
11036428,271,PullRequest,I have implemented partially the gists api. Moreover I have done the below operations- Lists gists with an overload method that gets a datetime parameter to filter the results- Star a gist- Unstar a gist- Delete a gist,,,,,,
8521441,271,PullRequestReviewComment,Delete the whitespace here and below to make the `using` statements align,,,,,,
8521444,271,PullRequestReviewComment,Only one newline is necessary between methods,,,,,,
8521446,271,PullRequestReviewComment,Drop this newline to make the coding style consistent,,,,,,
8521449,271,PullRequestReviewComment,And just one more little whitespace here,,,,,,
8537342,271,PullRequestReviewComment,Should these be using the XML Documentation syntax for generics?,,,,,,
8537548,271,PullRequestReviewComment,"I think we can just replace this with ""s"" - as this matches the ISO 8601 specCitation: [MSDN]",,,,,,
8537716,271,PullRequestReviewComment,Should we be doing some pre-population of data here - and validating we get a gist back rather than just checking for null?,,,,,,
8558621,271,PullRequestReviewComment,I fixed this but I don't know why it's still as not fixed. I noticed the other comments are disappeared when I pushed the required changes in my branch.,,,,,,
8577097,271,PullRequestReviewComment,Make sure to change it on the interface only. Not on the concrete class. Our build script will fix up the comments on the concrete class.,,,,,,
8656307,271,PullRequestReviewComment,Thanks for the useful comment. I'll follow this convention from now on. I guess I don't have to change something regarding this for my pull request.,,,,,,
8656452,271,PullRequestReviewComment,I was thinking of this as well but I can't figure a generic way to create some gists and then test against these. Is acceptable to create some gists with my personal test account and use these for testing?Could you also look at my last comment on the corresponding Issue for gists ( #216 ),,,,,,
8537706,270,PullRequestReviewComment,Could you add some XML documentation to this? Feel free to base it on the other methods in this code file...,,,,,,
8537707,270,PullRequestReviewComment,Some XML docs here would be :sparkles:,,,,,,
8537747,270,PullRequestReviewComment,We also document the properties on the models we use for requests and responses.Here's an example:,,,,,,
8552140,270,PullRequestReviewComment,We've centralized these URIs in the `ApiUrls` class. Can you extract this to that class?,,,,,,
10988971,269,PullRequest,This fixes the issue with tests for creating and updating issues comments (#266) which I've introduced by fixing the methods for creating and updating issues comments (#262).,,,,,,
10987592,268,PullRequest,Resolves #266,,,,,,
10960000,265,PullRequest,- [x] version bump- [x] release notes- [x] testing fresh install of Octokit- [x] testing fresh install of Octokit.Reactive- [x] testing upgrade Octokit- [x] testing upgrade Octokit.Reactive,,,,,,
10941414,264,PullRequest,"The ids for the entities in an event are ints, but the id of the event itself is not:Resolves #263",,,,,,
10841035,262,PullRequest,"Attempt to create a comment for issue results in ""400 Bad Request"" (Problems parsing JSON) because request contains the comment body as plain text.In order to resolve the issue the Create and Update methods has been changed to use BodyWrapper.",,,,,,
10746260,260,PullRequest,We now have a build task that copies comments from interface toimplementation.,,,,,,
10630442,257,PullRequest,"I'll get up a repo for this build task some day soon to make the source available, it's still a little ugly as the whole thing is built by trying to create a DSL around Roslyn's types using extension methods. So yeah, the shame runs deep.But for now it would be great if someone just wanted to pull down this branch and give it a go, see if they experience any issues with it, I think I ironed most of them out as I'm finding it difficult to think of any more edge cases to test.Also didn't want to commit the files that it changes quite yet since some of the replaced comments imo were better than the ones on the interfaces, I'll leave that decision to someone else unless it's put in my hands.Once I have a repository up for this I might also add it to nuget so that the binaries don't have to be included  here. Although I think that might be somewhat further down the line as I imagine I ought to make it a lot more flexible before that.",,,,,,
10562281,256,PullRequest,Implements:,,,,,,
8137206,256,PullRequestReviewComment,It'd be great if you could document these signatures like how we document the other clients.There's probably things in here which aren't relevant to your use case...,,,,,,
8137252,256,PullRequestReviewComment,"Excess whitespace, nooooooo!",,,,,,
8137283,256,PullRequestReviewComment,:sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles: :sparkles:,,,,,,
8156721,256,PullRequestReviewComment,Don't forget to implement `IDisposable` so we clean up the repository correctly after the test (this is just an [xUnit convention]),,,,,,
8157733,256,PullRequestReviewComment,"This should be `""repos/{0}/{1}/issues/{2}/labels""`",,,,,,
8157914,256,PullRequestReviewComment,"When you're testing NSubstitute mocks, you'll need to ensure the right generic parameters are specified.So these tests should look for `` - that's one of the reasons why these tests fail",,,,,,
8157952,256,PullRequestReviewComment,"Same as above - check for `` here.Oh, and the URL should be `/repos/:owner/:repo/labels` - drop the `/issues/` part",,,,,,
8157974,256,PullRequestReviewComment,Lucky last - switch to `` and drop `/issues/` from the URL,,,,,,
8158856,256,PullRequestReviewComment,The color value must not contain the leading `#` Can we do some validation in here to ensure users supply this in the correct format?,,,,,,
8158862,256,PullRequestReviewComment,As above - drop the `#` from these tests,,,,,,
8158869,256,PullRequestReviewComment,And one last `#`,,,,,,
8159055,256,PullRequestReviewComment,You can just `await` on these - given we're inside an `async Task` test,,,,,,
8159091,256,PullRequestReviewComment,"So there's something in here where a new repository has a bunch of default labels for issues. So we get 8 instead of 2 in this test.I'll look into whether there's a way to create an actually ""empty"" repository...",,,,,,
8159246,256,PullRequestReviewComment,cc  I don't see an option here I can specify to make the repository not have the default labels,,,,,,
8162577,256,PullRequestReviewComment,No such option exists in the API or on the web site.,,,,,,
8184835,256,PullRequestReviewComment,"I think this logic needs to be flipped, because valid inputs end up throwing the exception",,,,,,
8184846,256,PullRequestReviewComment,"Not that I'm a Regex guru, but could you just condense this down to:and make the if statement more terse?",,,,,,
8184849,256,PullRequestReviewComment,"cc  for his regex opinions: color: **Required.** A 6 character hex code, without the leading #, identifying the color.",,,,,,
8184861,256,PullRequestReviewComment,Could the length check be added to the Regex check? And I think the null check will be caught by the regex too so that's probably redundant here...,,,,,,
8184869,256,PullRequestReviewComment,"Search your feelings, this isn't necessary :grin:",,,,,,
8184984,256,PullRequestReviewComment,"You were right, this throws a different exception to the one we want.We've been using `ctor` checks (like [this one]) to catch most of the bad input like that. Would that be worth plugging into these classes?",,,,,,
8184999,256,PullRequestReviewComment,"Meh. Argument null is probably the right exception anyways. So I think you were actually right although both would work.As for the ctor check, i'm using the property setter to set the value in the constructor, so this check will happen there as well so IMO I think we're good in that regard. Unless you have a different opinion :)",,,,,,
8185016,256,PullRequestReviewComment,"As for the ctor check, i'm using the property setter to set the value in the constructor, It'd be good to enforce such checks for the `ctor` anyway (""let's send a null label name to the API!"" for example)",,,,,,
8185036,256,PullRequestReviewComment,I added the null checks in the ctor. Is that what you had in mind ?,,,,,,
8185061,256,PullRequestReviewComment,"Exactly (well, `ArgumentNotNullOrEmptyString` specifically but I wasn't clear on that)",,,,,,
8185066,256,PullRequestReviewComment,"This is the label name, right?",,,,,,
8185067,256,PullRequestReviewComment,"Same thing, `label name` instead of `color name`",,,,,,
8185076,256,PullRequestReviewComment,"Ok, let's capitalize `Color` here (and in the other case) and I think I'm done with ""things to find wrong"" here :grinning:",,,,,,
8185086,256,PullRequestReviewComment,"I renamed the properties to both start with lower case and match the name of the attributes. I think it looks more consistent like this (matching the exact parameter name), but if you want the capitalization, I can change it.From: Brendan Forster [mailto:notifications.com]Sent: 8 de dezembro de 2013 16:37To: octokit/octokit.netCc: Andr√© RodriguesSubject: Re: [octokit.net] Implement labels CRUD (#256)In Octokit/Models/Request/LabelUpdate.cs: @@ -0,0 +1,41 @@  +Ôªøusing System;  +using System.Text.RegularExpressions;  +  +namespace Octokit  +{ -    public class LabelUpdate -    { -   + -  -  -  - Ok, let's capitalize Color here (and in the other case) and I think I'm done with ""things to find wrong"" here [:grinning:]‚ÄîReply to this email directly or view it on GitHub.",,,,,,
8185089,256,PullRequestReviewComment,"Oh! I'm an idiot. Ignore previous remarks. These should just be the parameter names, not a description. So ""name"" and ""color"" are what should live here.",,,,,,
8185092,256,PullRequestReviewComment,Citation:,,,,,,
8185105,256,PullRequestReviewComment,"Yup. Updated.From: Brendan Forster [mailto:notifications.com]Sent: 8 de dezembro de 2013 16:41To: octokit/octokit.netCc: Andr√© RodriguesSubject: Re: [octokit.net] Implement labels CRUD (#256)In Octokit/Models/Request/NewLabel.cs: @@ -0,0 +1,44 @@  +Ôªøusing System;  +using System.Text.RegularExpressions;  +  +namespace Octokit  +{ -    ///  -    /// Describes a new label to create via the <see cref=""IIssuesLabelsClient.Create(string,string,NewLabel)""/> method. -    ///       public NewLabel(string name, string color)         {             Ensure.ArgumentNotNullOrEmptyString(name, ""name can't be null"");   ```Citation: ‚ÄîReply to this email directly or view it on GitHub.",,,,,,
10553038,255,PullRequest,Added refrence from Github docs,,,,,,
8129018,255,PullRequestReviewComment,"This isn't really related to a header. What about ""The request to authenticate""?",,,,,,
8129228,255,PullRequestReviewComment,"We should have a summary here. What about ""Authenticate a request using the basic access authentication scheme""?",,,,,,
8129345,255,PullRequestReviewComment,"While this is technically correct, for the sake of consistency I'd like this to be something like ""The credentials to attach to the request""Here's an example from another PR, to contrast:",,,,,,
8137021,255,PullRequestReviewComment,I'm being whitespace OCD right here - could you make it just one space between `Token` and `(sent` instead of two spaces?,,,,,,
10460245,253,PullRequest,"Documentation for Issue #196There's more coming once I cherry pick them into meaningful commits andresolve a slight issue with my local repo, fat-fingered it.",,,,,,
8086294,253,PullRequestReviewComment,"What does ""instatiate"" mean? :trollface:I believe you typo'd this. Should be ""Instantiate""",,,,,,
8086311,253,PullRequestReviewComment,"Hmm, this should be more descriptive. Maybe, ""A client for GitHub's Git Database API that lets you update raw Git objects.""",,,,,,
8086320,253,PullRequestReviewComment,There's a few other typos like this. I won't comment them all. :smile:,,,,,,
10418588,252,PullRequest,"Here's an implementation of the gist comments API. The only thing missing should be some integration tests, I can add that later if you want :smile:",,,,,,
10412195,249,PullRequest,"I could have sworn I'd tested this, but I guess I missed it.So when you specify a build config which depends on compilation, it's supposed to enter that first conditional and, you know, build the thing.However I got the condition the wrong way round, and it would run when I specify a target that isn't dependent on compilation, say `FixProjects`.  And for something that was dependent on compilation, say `RunUnitTests`, it would avoid it.![]Bravo me.So let's do it right.",,,,,,
10360163,244,PullRequest,"Assorted things related to tests:- [x] the batch file is gone and replaced with a leaner, meaner Powershell script - [x] if you've got a `OCTOKIT_GITHUBCLIENTID` and `OCTOKIT_CLIENTSECRET` defined (as well as your credentials), the build script will fetch a token from the GitHub API and set it in the environment variables- [ ] this token should be validated in subsequent sessions to ensure it hasn't been revoked- [x] some clown forgot to update his integration tests to actually follow a rule he specified in #243 - [x] document the changes so that contributors can get back to work- [x] removed all the namespaces for the integration test classes- [x] enabled some more testsTest Plan:- [ ] no environment variables defined -> no integration tests run, see message- [ ] four `OCTOKIT_` environment variables defined -> create token, store in $env:, run integration tests- [ ] token + four `OCTOKIT_` environment variables defined -> check token, run integration tests- [ ] bad token + four `OCTOKIT_` environment variables defined -> check token, replace with new token, run integration tests- [ ] revoked token + four `OCTOKIT_` environment variables defined -> check token, replace with new token, run integration tests",,,,,,
10355989,243,PullRequest,"Our integration tests have been kinda lagging behind everything else. So I sat down and wrote a bunch today - particularly around the Git Database API.This highlighted a couple of pain points with the API, so I fixed them.Of note:- [x] 15 more tests - [x] folder structure now mirrors `Octokit.UnitTests`- [x] removed some namespaces around test classes- [x] we missed some properties on `IGitDatabaseClient` were present- [x] `NewTree.Tree` needed to be populated. I'm lazy so I did that in the ctor.- [x] when creating a tree you need to specify the `Mode` property otherwise it totally freaks out when using it in a commit.   - I now validate this inside the request and throw an exception.   - Our API Ninjas are looking to deploy a fix for the Trees request succeeding when it should in fact fail...",,,,,,
10319728,241,PullRequest,"As part of transitioning to using QED for our build server...That's right:![ron-paul]This resolves #119. Prepare yourselves.But first, there's some housekeeping we need to work through:- [x] build script changesCurrently we have a monolithic `build.fsx` that does everything we need. I had to break this up a bit because of how we wanted the build scripts to run on the build server.So developers will still have the `.\build.cmd` script for their local testing. I've dropped creating NuGet packages as part of this build, because you probably don't care about that.For QED we'll point it at `.\script\cibuild.ps1` which will run each these step incrementally:- build- unit tests- integration tests- create packaagesAnd get a clean output if All Is Well.",,,,,,
10248675,239,PullRequest,"Adding support to create a gist.One thing to note, is in order to get serialization correct I had to create an anonymous object and set Files to a JsonObject.  Otherwise, the Dictionary will serialize to an unexpected value that the API will reject.",,,,,,
7882716,239,PullRequestReviewComment,"I'd love to see a syntax which just melts away all the ceremony here, like this:I'm :cool: with doing mapping behind the scenes to a `JsonObject` - given how the API expects data - but we control everything beyond that.",,,,,,
7882733,239,PullRequestReviewComment,"This is fine (it's something we hide from the consumer of the library), but let's cut the long line length down by moving the properties of the anonymous type onto the next line, like this:",,,,,,
7882757,239,PullRequestReviewComment,I think this file is simple enough that we can kill it off. Any objections ?,,,,,,
7882795,239,PullRequestReviewComment,"Agreed.  Intent for the NewGistFile and extra ceremony was API wouldn't have to change if another property was exposed.  Granted, if the API will look the same for v3, then it's entirely unnecessary.",,,,,,
7882825,239,PullRequestReviewComment,"If they add new fields to the API which are mandatory, it should require a breaking change to the API.Let's call [YAGNI]('t_gonna_need_it) on it for now...",,,,,,
7882831,239,PullRequestReviewComment,"Agreed. Intent was to support any additional properties that might become available.  However, if the API for create is set in stone, then absolutely no need for the extra class.",,,,,,
7882844,239,PullRequestReviewComment,"And we can work around new optional properties too - provide overloads that won't impact existing clients, provide default values, etc etc",,,,,,
7930369,239,PullRequestReviewComment,Why don't we just set `Files` to a dictionary in the constructor (and make the setter private) so you don't have to worry about this?,,,,,,
7930406,239,PullRequestReviewComment,Throw some whitespace between using statements and the namespace,,,,,,
8032816,239,PullRequestReviewComment,Might be nice to implement the `Delete` method so we can do proper cleanup of the gists we create in this test.,,,,,,
8033678,239,PullRequestReviewComment,"Don't suppress this. Just make the setter privater.Since the dictionary is initialized in the constructor, there's no need to make it settable.",,,,,,
8048885,239,PullRequestReviewComment,Would it be too far out of scope to go ahead and implement the read of the Gist APIs in the PR?,,,,,,
8048940,239,PullRequestReviewComment,"No, feel free. :)",,,,,,
8184881,239,PullRequestReviewComment,"typo in: ""lenient"" hereAlso, spaces between the `//` and the comment text would be :metal:",,,,,,
8184924,239,PullRequestReviewComment,So while I was testing this method I was seeing 100 pages of results from `/gists/public`- should we make this a smaller window? - we're not really checking here for a specific number of results- integration tests can still be fast :trollface:,,,,,,
10246380,238,PullRequest,Fixes #130It's yours if you want it :smile:I'd love some feedback on how you'd like the `GetAll` overload that takes the `subNamespace` parameter. I think it might be better to use a enum value here. Do you do any validation on the client anywhere?I also snuck some namespace additions in here. Tell me if you'd like me to remove this commit.,,,,,,
7881228,238,PullRequestReviewComment,Nice :lipstick: change - can we drop the whitespace between this and the other using statements?,,,,,,
7881230,238,PullRequestReviewComment,As above - kill ze whitespace,,,,,,
7881244,238,PullRequestReviewComment,"This is something i was agonizing about too when I was reviewing this code last week.Do we:- stick to having namespaces everywhere, because That's How It's Always Been - and suffer with long test names?- drop namespaces everywhere for our test projects, because they're just noise around our proper test names?I'm tending towards the latter, but let's see what -ogre and  think (oh, and anyone else reading this)",,,,,,
7881262,238,PullRequestReviewComment,"Ok, so this is evidently a deliberate thing. I'm not a huge fan of formatting the `using` statements in this way. I just ensure that they're tidy (clean up unused `usings`) and ordered alphabetically (except for the `System.*` bits).",,,,,,
7881285,238,PullRequestReviewComment,not `Tha`,,,,,,
7881290,238,PullRequestReviewComment,instead of `Tha`,,,,,,
7881308,238,PullRequestReviewComment,What about a test here for the non-sub-namespace overload?,,,,,,
7881311,238,PullRequestReviewComment,instead of `Tha`,,,,,,
7881314,238,PullRequestReviewComment,You know the drill :grin:,,,,,,
10228380,236,PullRequest,"Hi,I released FAKE 2.2 (see ) and I think it's a good idea to move Octokit to a stable version.Cheers,Steffen",,,,,,
7871913,236,PullRequestReviewComment,Deleting code? I can get behind this,,,,,,
7872464,236,PullRequestReviewComment,If we pin FAKE to a blessed version then we don't need to work around nuget.,,,,,,
7872633,236,PullRequestReviewComment,Looks good to me!,,,,,,
10155131,235,PullRequest,"Pretty simple, let's just finish up when the script is done.- [x] resolve upstream issue with generated file",,,,,,
10099034,234,PullRequest,Prepared release notes for 0.1.5,,,,,,
10049952,231,PullRequest,"This adds in the ability to get the JSON back from the GetContents API callI am a relatively new developer, so any feedback if this pull request is denied please can you give me some pointers or feedback please.Many Thanks,Warren",,,,,,
7731452,231,PullRequestReviewComment,"This method shouldn't be directly on the IRepositoriesClient. Instead, we probably need a new IRepositoryContentsClient (and associated implementation) client.This is a point of a lot of confusion so I just wrote up a [note on the project structure] that hopefully explains this.",,,,,,
7731914,231,PullRequestReviewComment,"Sorry Phil,I am fairly new to all of this, so please bare with me, whilst I try to understand your comments and make the necessary changes/updates to fix the pull request.Any guidance or pointers would be appreciate.Thanks,Warren :+1:",,,,,,
7772742,231,PullRequestReviewComment,Mind adding documentation comments to each of these properties?,,,,,,
7772772,231,PullRequestReviewComment,"Also, I think `ResponseType` can only be one of two types: `File` or `Directory`. Maybe we should make it an enum.",,,,,,
7772834,231,PullRequestReviewComment,"Actually, there's also `submodule` and `symlink`.",,,,,,
7772897,231,PullRequestReviewComment,New lines are at a premium. We must do all we can to conserve  them. :stuck_out_tongue:,,,,,,
7772969,231,PullRequestReviewComment,"heya no problem I can add comments to the properties now & add in the enum for the ResponseType.Should I rename the property to Type so that the JSON parser can map it to the property, but I think it will create a suppression message if I remember.Just trying to debug an issue currently that I get a null response, think its something to do with the JSON received back from the API & mapping back to the this object. Any quick pointers or ideas please?As not all responses from the API contain the Content property in the JSON object returned.",,,,,,
7772973,231,PullRequestReviewComment,old habits die hard,,,,,,
7772990,231,PullRequestReviewComment,"Oh boy. I just took a look at the API and if the contents is a directory, it returns an array of content files, not a single file. This is kind of tricky because we don't want to return an `object` here.Not sure why that returns an array for a directory to be honest.",,,,,,
7773049,231,PullRequestReviewComment,ah ok that makes sense with the issue I just posted about null mapping to the object. Any ideas on how best to resolve/tackle this please?,,,,,,
7773074,231,PullRequestReviewComment,"Should I rename the property to Type so that the JSON parser can map it to the property, but I think it will create a suppression message if I remember.Yeah, name it `Type`. The suppression message should be added inline and not to the GlobalSuppressions file.",,,,,,
7773707,231,PullRequestReviewComment,"Hmm, let me find out more information about why this is the way it is.Hey ! I would have expected a directory to be a JSON object containing properties about the directory and a property containing an array of the files in the directory. Can you explain the rationale for the current approach? But this returns an array of what I assume are just the contents of the directory. Is that right?",,,,,,
7774452,231,PullRequestReviewComment,"I have added the Enum & the inline suppression message as you suggested, but when doing my tests (using it in a WebAPI for my tests) the Type property in the JSON returned is 0 as opposed to the Enum value of File or Dir to match the API value.Does the Enum need to be lower case to match the values the API returns?",,,,,,
7774499,231,PullRequestReviewComment,"The Contents API is optimized for getting the contents of a path. As the note at the top of that section points out, the [Trees API] can be used to get a list of files recursively. Does that help?",,,,,,
7774633,231,PullRequestReviewComment,&  I am currently only interested in trying to implement the Contents API at the moment.So I suppose my question still stands how best to resolve this issue of the Contents API either returingn a single JSON object or an array.,,,,,,
7774830,231,PullRequestReviewComment,"Oh, I see the problem now. Actually, I'm not sure of the rationale there. Maybe  or  could help.",,,,,,
7833556,231,PullRequestReviewComment,"This specific design decision predates my work on the API. Changing it would break existing clients that depend on the current behavior. So, we expect it to continue to work this way for the foreseeable future.",,,,,,
7833969,231,PullRequestReviewComment,"So I suppose my question still stands how best to resolve this issue of the Contents API either returingn a single JSON object or an array.If you need to predetermine whether the response will be an array or a hash, you could get that information by fetching the contents of the parent directory first. For example, suppose you want to make this request:And you want to know whether the response will be an array or a hash. You could first make a request to:The response will provide an array of items in the root directory:If the `type` is `dir`, you will know that it's a directory. With that information, you can safely expect to get an array in response to this request:Does that help?",,,,,,
8062894,231,PullRequestReviewComment,Move these out to our `ApiUrls` class:,,,,,,
10034256,230,PullRequest,This puts in a missing slash that was ruining the xml doc information.,,,,,,
10027873,228,PullRequest,"_SimpleJson_ can't deserialize fields starting with an underscore (`_links` for example). Is this the expected behavior? In the case of a review comment it's not a big issue as the three links are already contained in the object.For the `Create` [method] should I also ensure that the `HttpStatus` is `201`?I didn't write any integration tests as it would require at least two users. But I tested all the methods with two of my users. In order to have integration tests we would need to create a ""static"" test repository on Github where we could run methods knowing it would always return the same results.Am I supposed to do anything with [Custom media types]? is implemented as Int32 currently, should we use Int64 instead (ie Facebook API)?issue",,,,,,
7731557,228,PullRequestReviewComment,This line will not actually give you a response. Let me explain.When I send this:I get this (modified for succinctness):Switching it over to /issues/ is the fix:which gives me: Why am I raising this? Because the data from the API for the Pull Request uses a mix of `/pulls/` and `/issues/` - the documentation only mentions `/pulls/`:cc,,,,,,
7739782,228,PullRequestReviewComment,There are three different type of comments to consider here:1. The issue comments2. The pull request comments3. The pull request review commentsWhat I was supposed to implement was the pull request review comments. On my pull request it didn't return any result because there was no review comment. Since you just added one now there is one result (and there will be two after I post this one :smile:) .I think this [page] of the API documentation needs to be updated as this is where you're supposed to fetch the comments associated with a pull request. We would then need to update this [issue] accordingly.Does that make sense (I might be completely mistaken as I'm brand new to the Github API)?,,,,,,
7745574,228,PullRequestReviewComment,I think you might be right on this one. This is why I shouldn't do code reviews without coffee - you miss tiny details like that :),,,,,,
7878079,228,PullRequestReviewComment,"This doesn't smell right to me. Methods should validate the arguments passed in, but not necessarily the properties of those arguments. If the `Body` of a comment should never be null or empty, then it's probably up to the `PullRequestReviewCommentCreate` to verify that, not every method that it's passed to. Are there cases where it's fine for `Body` to be null?",,,,,,
7878080,228,PullRequestReviewComment,"Related to my [earlier comment], if `Body` should never be null, then let's make it a read only property and pass it into the constructor for this class. Then we can ensure it's not null or empty in the constructor.",,,,,,
7878082,228,PullRequestReviewComment,Is this `Parameter` necessary? I thought we would do this transformation automatically.,,,,,,
7878084,228,PullRequestReviewComment,Please remove this newline so it's clearer that the comment applies to the next three lines.,,,,,,
7878086,228,PullRequestReviewComment,"Need to double check that this can never be null. For example, is `UpdatedAt` set when an pull request is created but hasn't been edited yet? /cc  what's the general pattern for `updated_at` in the API? I have a feeling it's not consistent everywhere.",,,,,,
8035486,228,PullRequestReviewComment,"These private members are not necessary. The code is a bit cleaner if we use auto properties. Also, please move the constructor to be consistent with our other code. :smile:",,,,,,
8035495,228,PullRequestReviewComment,See previous comment about auto properties.,,,,,,
8035509,228,PullRequestReviewComment,See previous previous comment about auto properties.,,,,,,
8042857,228,PullRequestReviewComment,"Sorry when you said: if `Body` should never be null, then let's make it a read only property and pass it into the constructor for this class. I assumed that you wanted a `readonly` field :smile: In fact you wanted an auto property with a private setter. I'll do the changes.",,,,,,
8185243,228,PullRequestReviewComment,I think the merge went bad. Strip out the invalid markup and ensure that all `*ClientTests.cs` files live under `\Clients\`,,,,,,
8185254,228,PullRequestReviewComment,We have tests for creating blobs/trees/commits now!Check out [this test] for an example,,,,,,
8185256,228,PullRequestReviewComment,This depends on #173 which is getting close to done,,,,,,
9983585,226,PullRequest,"I think we need to :boom: #203 (base was messed up).Issue #137 Searching `code` `issues` `repos` and `users`.I have implemented all the above with a basic search without any qualifiers added, however in this PR I have added all the qualifiers for searching repos. Below is a full list of what has been implemented for repo search.#### Repo Qualifiers -> - [x] - [x] - [x]  _FORKs_- [x]  _FORK_- [x] - [x] - [x] - [x] - [x] - [x] Unit Tests for all of above**Note to self**To do: Any qualifiers related to  code/users/issues search. may want this to be in separate PR's, will need to confirm then update this.",,,,,,
7688115,226,PullRequestReviewComment,how do you want me to add the qualifiers? I am not too certain the best way to go about doing this.Say you have 0 qualifiers in place - you can simply add the qualifier.Else if you have 1 qualifier there already we will need to append `+` to the next qualifier to be added?,,,,,,
7691998,226,PullRequestReviewComment,"How do we want to handle "">=500""?",,,,,,
7692411,226,PullRequestReviewComment,"So I just put this little spike together:You still have the whole ""is it empty?"" check but I think it reads a bit better overall...",,,,,,
7694441,226,PullRequestReviewComment,let github handle it? its what the ruby version does? I do agree we need to make this read a lot better.,,,,,,
7708979,226,PullRequestReviewComment,how about something like this? Would this be a better fit for what you want?The way I see it is - if a user wants a specific operator i.e. `Size` you must instantiate the class. That way we can force certain operators to be applied to our `query` variable.If `Size != null` get the `tostring()` and add it onto the params...,,,,,,
7708981,226,PullRequestReviewComment,We can stick the operators in here and if possible - reuse through the other searches?,,,,,,
7708983,226,PullRequestReviewComment,Use an actual object here rather than a string...,,,,,,
7716609,226,PullRequestReviewComment,Perhaps we should add our own `Range` class and have `Minimum` and `Maximum` be nullable integers. That would enable `>=500` by simply setting `Minimum` to 500 and `Maximum` null.,,,,,,
7716618,226,PullRequestReviewComment,Please follow the Framework Design Guidelines for the enumeration names. These should be:etc...,,,,,,
7716647,226,PullRequestReviewComment,"Note, the `Range` class could have some useful helper methods. For example, would be return `new Range(minimum: 100, maximum: 100);` Note that Range should probably be an immutable struct. would be `new Range(minimum: null, maximum: 100);` would be `new Range(minimum: 100, maximum: null);`(Or maybe they should be `GreaterThan` and `LessThan`. Whatever.",,,,,,
7745005,226,PullRequestReviewComment,is this better?,,,,,,
7745023,226,PullRequestReviewComment,Forks is a little bit complicated so I am taking this one step at a time...,,,,,,
7745047,226,PullRequestReviewComment,Also - do you want me to hide the properties? Do users really need to know that much detail. If you want me to use ctor's to instantiate the search then we should only show users what the need to see right?so line 77 above - should not be possible?,,,,,,
7878092,226,PullRequestReviewComment,I assume the search `term` should never be null or empty right? Perhaps add an `Ensure.ArgumentNotNullOrEmptyString` here.,,,,,,
7878093,226,PullRequestReviewComment,Make the setter private since we pass this in the constructor.,,,,,,
7878095,226,PullRequestReviewComment,"Instead of making this nullable, I'd rather we just default it to `Desc` in the constructor. Nullable enums are kind of annoying. :)",,,,,,
7878097,226,PullRequestReviewComment,Don't suppress this. Just pass `CultureInfo.InvariantCulture` into the `ToString` methods.,,,,,,
7878102,226,PullRequestReviewComment,The above four lines could be condensed into:But is there any reason why we're not just using the `ToParametersDictionary` method here?,,,,,,
7878104,226,PullRequestReviewComment,Probably should make this inherit the `RequestParameters` class so you get the `ToParametersDictionary` method for free.,,,,,,
7878105,226,PullRequestReviewComment,Should probably inherit from `RequestParameters` See comment here:,,,,,,
7878107,226,PullRequestReviewComment,Heh heh. These comments add nothing. I think we can read. :stuck_out_tongue:,,,,,,
7878109,226,PullRequestReviewComment,Probably clearer to name this `LessThanOrEqualTo`. That might get rid of the need to suppress this too.,,,,,,
7878111,226,PullRequestReviewComment,Ensure `term` is not null or empty.,,,,,,
7878114,226,PullRequestReviewComment,Get rid of this method and use the `ToParametersDictionary` method instead.,,,,,,
7878116,226,PullRequestReviewComment,Please don't suppress this one. For more details: The constructor should only have parameters that are required. The caller can set the properties of the object for all the optional fields.,,,,,,
7878118,226,PullRequestReviewComment,Don't suppress this. The default format for `ToString` did change once. Best to be explicit.,,,,,,
7878119,226,PullRequestReviewComment,"At this point, add a `using System.Diagnostics.CodeAnalysis;` to the top of this file and shorten the attribute declarations. It's just noisy otherwise.",,,,,,
7886710,226,PullRequestReviewComment,"I have had a look at this and been thinking about this... The base class simple gets all **public props** and adds them to the query string right? (That is what I am assuming from looking at that code).If so that would be incorrect behaviour for all 4 searches that we are trying to implement. We have lots of qualifier (public properties) that need to be appended to the property `Term`.All 4 classes will eventually look like `Octokit/Models/Request/SearchRepositoriesRequest.cs`This class contains all the qualifiers fully implemented however the other 3 searches [code, issues, users] contains only a few basic properties. I did that to get it off the ground, atm your suggestion would be better suited for those 3 classes (inherit from RequestParameters). Does that make sense? You seem to agree as you did not mention for me to get the `SearchRepositoriesRequest` class inherit from `RequestParameters`.For this implementation I will update as accordingly but it would have to change to be more like `SearchRepositoriesRequest`.",,,,,,
7886756,226,PullRequestReviewComment,For this implementation I will update as accordingly but it would have to change to be more like SearchRepositoriesRequestOr a better implementation of what I have done :smile:,,,,,,
7887007,226,PullRequestReviewComment,ok cool - so the only required parameter for this would be `Term`.How would I deal with  's comment about how he would like this method to be instantiated?  Should I add a whole bunch of overloads to this class?,,,,,,
8537106,226,PullRequestReviewComment,"EDIT: nevermind, I'd rather get this in and then tidy up the docs for the next release.",,,,,,
7668770,225,PullRequestReviewComment,W H I T E S P A C E,,,,,,
7668782,225,PullRequestReviewComment,W H I T E S P A C E,,,,,,
7668797,225,PullRequestReviewComment,W H I T E S P A C E,,,,,,
7668989,225,PullRequestReviewComment,This should be looking for something like `gists/1`,,,,,,
7669125,225,PullRequestReviewComment,Is this necessary?,,,,,,
7673504,225,PullRequestReviewComment,resharper did that on its own. i suspect if u update to latest resharper it would do the same for you.Want me to roll it back?,,,,,,
7673515,225,PullRequestReviewComment,And let's assert a little more than it's not null. :smile:,,,,,,
7673533,225,PullRequestReviewComment,um wow. how did i screw that up,,,,,,
7690828,225,PullRequestReviewComment,"Let's drop it, If it comes up with the latest R# we can revisit it then.",,,,,,
7690955,225,PullRequestReviewComment,a little less whitespace,,,,,,
7690966,225,PullRequestReviewComment,doot,,,,,,
7690975,225,PullRequestReviewComment,bamf,,,,,,
9950007,223,PullRequest,- Added in the new files that we skipped in the last few PRs- remove `TeamItem` as it no longer exists- updated the symbols for the Monotouch project (debug mode)- [x] can we use the same tricks with the build scripts to update these files?,,,,,,
9948523,221,PullRequest,"Hot on the heels of putting together a `StarredClient` for this project, i want to continue on with the starring part of the Activities API by adding an observable client for starring.## todo- [x] Implement the `IObservableStarredClient` interface- [x] Add tests for the client- [x] Survive code review",,,,,,
9937782,220,PullRequest,"This is a work in progress...See - [x] Code (Interface and implementation- [x] Include classes above in all relevant projects- [x] Unit Tests- [x] Reactive implementationI need some feedback on one of these interface methods and its implementation.Documentation says this is a `PUT` statement, so I will assume you want a `Task` as the return statement? (Similar to the `DELETE` statement)If so - the PUT statement would require an overload like the Delete statement?Let me know if this is fine I will add the method.Thanks",,,,,,
7640640,220,PullRequestReviewComment,Is this correct? Looking at the docs I think it is? As it is a PUT request.,,,,,,
7640687,220,PullRequestReviewComment,This guy right here looks incorrect. We should have: ApiConnection.Put(endpoint); (no overload currently available but I wanted to confirm that my thinking on this is ok?),,,,,,
7646785,220,PullRequestReviewComment,"The API call is a PUT without data, so I think having an overload like this:on `IConnection`/`Connection` is perfectly reasonable",,,,,,
7646847,220,PullRequestReviewComment,"I'm happy with leaving it as `Add` because the API refers to it as ""Add Collaborator""",,,,,,
7646866,220,PullRequestReviewComment,"This should be `#add-collaborator` here, not #get",,,,,,
7646877,220,PullRequestReviewComment,"This should be `#remove-collaborator` here, not `#get`",,,,,,
7646888,220,PullRequestReviewComment,Drop the `Client` suffix from here to be consistent with the other properties,,,,,,
7664259,220,PullRequestReviewComment,Something like `Creates or replaces the API resource at the specified URI.` here,,,,,,
9935193,219,PullRequest,"This should fix #218 but let's see how much :rage1: is involvedI want :boom: all the .csproj files we have floating around for the different platforms we're targeting.Previously, we were stuck with platform restrictions on the Microsoft.\* projects. But now we're totally :cool: with [the recent changes] we're now free to target non-Windows platforms :dancers: There's some headaches with using the Xamarin PCLs at this point, so I won't obsolete them just yet.- [x] introduce PCL (Profile78) and .NET4 builds for Octokit and Octokit.Reactive- [ ] get PCL builds running on Janky cc -ogre - [x] fix impacted tests- [x] investigate whether we can make ConcurrentDictionary redundant- [x] update the paths for the NuGet packages to use the right profiles- [x] get FAKE to support dependency targets in nuspec or drop System.Collections.Immutable usagesTest Scenarios:- [ ] install new package into .NET4 project, use code snippet to delete some repos from test account- [ ] install new package into .NET45 project, use code snippet to delete some repos from test account- [ ] update package into a .NET45 project, use code snippet to delete some repos from test account- [ ] update package into a Windows Store Application, use code snippet to delete some repos from test account",,,,,,
9906533,214,PullRequest,Because documentation is cool,,,,,,
9835952,212,PullRequest,Fixes #202 Here's how it looks at the three sizes that NuGet displays it (first 2 on nuget.org and the last one in the VS extension)128x128![octokit-128x128]48x48,,,,,,
9830305,211,PullRequest,This will allow us to specify a minimal FAKE patch version in the build.cmd.Whenever we have to upgrade FAKE (like today) we can modify this version and everybody gets the latest FAKE version.This will hopefully reduce the confusion with breaking build scripts and work at least until NuGet 1.8 fixes the nuget install./cc,,,,,,
9828734,210,PullRequest,which adds missing files to the projects and also removes duplicates.,,,,,,
9827253,209,PullRequest,final o/s item for org teamsfixes #134,,,,,,
7552624,209,PullRequestReviewComment,"No need for this newline. The closing brace wants to be closer to his friend, the last method. :smile:",,,,,,
7552638,209,PullRequestReviewComment,"Hmm, could this be the result of a bad search and replace? Shouldn't this URL be `orgs/{0}/teams`?",,,,,,
7552639,209,PullRequestReviewComment,"Hmm, this looks wrong. I think the old test was still valid.",,,,,,
7552641,209,PullRequestReviewComment,I think the way it was is still correct.,,,,,,
7554657,209,PullRequestReviewComment,"It was - I think I had a failing test with orgs/{0}/teams so I changed it to organizations/{0}/teams - I will revert to orgs/{0}/teams and test it all out again, if the build passes then sweet else I will let you know. Thanks for your review.",,,,,,
7555576,209,PullRequestReviewComment,Cannot believe I glossed over the Api :cry: that's real bad lol.,,,,,,
7640233,209,PullRequestReviewComment,Drop the regions,,,,,,
9824312,208,PullRequest,Some duplicate files as highlighted by the latest FAKE build,,,,,,
9821747,207,PullRequest,- [x] updated Releases integration test to use generated data- [x] updated build scripts to make them pass- [x] run tests locally using proper account,,,,,,
7548982,207,PullRequestReviewComment,I've consciously moved this here rather than do it in the `ctor` setup as it's only relevant to this test. Any objections?,,,,,,
7552671,207,PullRequestReviewComment,:thumbsup:,,,,,,
9820828,205,PullRequest,Closes #204,,,,,,
7545911,205,PullRequestReviewComment,We should have this as test scaffolding rather than depending on a specific repocc  -ogre,,,,,,
7545965,205,PullRequestReviewComment,Yes! That's how I've written all the tests I've added. The test creates and removes the state it needs.,,,,,,
7546015,205,PullRequestReviewComment,Sweet. I think I've got a PR here which updates this test to use generated data.I'll merge this one in and then get  to review my PR.,,,,,,
9819744,203,PullRequest,Not sure how to merge all of these into the pr #189 done something wrong here.By the way - I have 3 failing tests.Search RepoSearch CodeSearch IssuesNote sure why?#137,,,,,,
7649170,203,PullRequestReviewComment,"These tests are expecting a `GetAll` - that's why the tests fail...EDIT: actually, this one is correct. It's the others that are wrong, but you get the gist of it.",,,,,,
7649171,203,PullRequestReviewComment,These tests are expecting a `GetAll`...,,,,,,
7649177,203,PullRequestReviewComment,:boom: the whitespace,,,,,,
7649184,203,PullRequestReviewComment,These tests are expecting a `GetAll`...,,,,,,
7649273,203,PullRequestReviewComment,It's expecting a `GetAll`...,,,,,,
9794842,200,PullRequest,"Just a few examples fixing the issues of the type described below (part of issue #196)If there is documentation on an interface, copy those comments to the implementation. Example, copy comments from IFoo to corresponding members of Foo.I saw a dull task, and thought I'd see how easy it was to contribute :)",,,,,,
9790644,199,PullRequest,"Hi,issue #197 describes the trouble with the project files.Now useand get:Afterwards you can just run .\buildOf course we could add this to the build pipeline, but maybe it's better to have this explicit for the moment",,,,,,
9784962,198,PullRequest,"We had a big debate about this [here], but I realised this is what LibGit2Sharpcalls it. /cc",,,,,,
9767524,195,PullRequest,Replaces and closes #192see This will compare all csproj files in ./Octokit/ if they have (at least) all files from ./Octokit/Octokit.csproj,,,,,,
9767510,194,PullRequest,Ready for review.  Fixes #132- [x] Create TreeClient  - Implement Get  - Implement Create  - Create Interface- [x] Create Tree response model- [x] Test Tree Client  - Test Get  - Test Create  - Test Serialization- [x] Create ObservableTreeClient  - Create Interface  - Test ObservableTreeClient- [x] Reference in GitHubClient- [x] Add files to other projects  - .Net 4.5  - Mono  - MonoAndroid  - MonoTouch,,,,,,
9767329,193,PullRequest,- This completes the work in #191 - Also added more doc comments.,,,,,,
9755041,192,PullRequest,see This will compare all csproj files in ./Octokit/ if they have (at least) all files from ./Octokit/Octokit.csproj,,,,,,
9748512,191,PullRequest,Fixes #180,,,,,,
9739529,190,PullRequest,Rookie error: do not mutate collections you don't own.,,,,,,
7483430,190,PullRequestReviewComment,"Name isn't clear to me. Perhaps, `DoesNotChangePassedInDictionary`.",,,,,,
7483473,190,PullRequestReviewComment,:thumbsup:,,,,,,
9738242,189,PullRequest,"Just staring out to implement this feature, this is a work in progress.#137- [ ] Search Repo- [ ] Search Users- [ ] Search Code- [ ] Unit Tests- [ ] Search Issues",,,,,,
9734968,188,PullRequest,Fixes #129 ready for review.,,,,,,
7646195,188,PullRequestReviewComment,The test is also checking for empty strings - can this test name reflect that?,,,,,,
7646232,188,PullRequestReviewComment,I sometimes just name the method `EnsureArguments` to keep it short. :),,,,,,
7646275,188,PullRequestReviewComment,Or that,,,,,,
7646490,188,PullRequestReviewComment,"only returns a SHA, not the entire blob. This should be a different type (BlobReference?) to prevent confusion when users see missing fields.",,,,,,
7646504,188,PullRequestReviewComment,kill this whitespace,,,,,,
7646535,188,PullRequestReviewComment,throw a comment in here so we remember the reason for this change and don't delete it by accident,,,,,,
9726174,186,PullRequest,Fixed a few errors in the build etc. I need to do a better job of review. :),,,,,,
9718242,185,PullRequest,The `build.cmd` script prompts the user the quit or run the build again.This PR checks whether the build is running on MyGet Build Services and exits properly by checking the `BuildRunner` environment variable provided by MyGet.,,,,,,
9713769,184,PullRequest,See  and Please make sure you use FAKE 2.1.571-alpha or above.,,,,,,
9699772,181,PullRequest,Implemented Github Teams Api issue #134cc:// Must include tests for all 4 below...- [x] GetTeams- [x] CreateTeam- [x] UpdateTeam- [x] DeleteTeam,,,,,,
7469678,181,PullRequestReviewComment,"This url should be ""orgs/username/teams"". Also, instead of `username` try using `orgName` to be more descriptive.",,,,,,
7469693,181,PullRequestReviewComment,rename `client` to `connection` and `orgs` to `client` :smile:,,,,,,
7491448,181,PullRequestReviewComment,"I personally this this is wrong - from the api we only get back a little bit of info.We should have a class for this called BaseUser or something similar with only 4 props.""organization"": {""login"": ""github"",""id"": 1,""url"": """",""avatar_url"": """"}Let me know anyway...",,,,,,
7504624,181,PullRequestReviewComment,"Actually, I think this should be an `Organization`. Note that sometimes the API examples don't show all possible fields. For example, if you are an owner of the repository, you might get extra fields depending on the object being returned.",,,,,,
7506852,181,PullRequestReviewComment,Doc comment please.,,,,,,
7506863,181,PullRequestReviewComment,Doc comment please.,,,,,,
7506885,181,PullRequestReviewComment,"If you merge with latest, you'll see I added a doc comment to the `Member` property. You can use that as an example for this.",,,,,,
7506946,181,PullRequestReviewComment,I don't think this works for objects that are part of the body of the request. `ParameterAttribute` only works for query string parameter.I think we need to update our Json serializer to split `PascalCased` property names into names with underscores. That way we don't need any attribute here.,,,,,,
7521379,181,PullRequestReviewComment,"I agree - it seems as though this will crop up a few times, best to have some conventions in place to avoid this. Do you want that fix in this PR?",,,,,,
7521567,181,PullRequestReviewComment,Looks like it already does it... So I dont need to do anything more than remove that attribute.Which points to:,,,,,,
9694685,179,PullRequest,This includes updates to the `README.md` on how to create a release. :smile:,,,,,,
9693860,178,PullRequest,This finishes up #174,,,,,,
9690801,177,PullRequest,DO NOT MERGE!,,,,,,
9684842,176,PullRequest,DO NOT MERGE!,,,,,,
9681878,175,PullRequest,This is to test PR branch CI. DO NOT MERGE!,,,,,,
9678541,174,PullRequest,"This is an initial Pull Request for review of the Orgs Members API, fixes #133.TODO:- [ ] Create integration tests- [ ] Implement Observable Client- [x] Add Client to the Octokit-NetCore45 project- [x] Add tests for Client to the Octokit.Tests-NetCore45 project",,,,,,
7437195,174,PullRequestReviewComment,"Getting happy with the `Enter` key here, eh? Just one newline between methods is fine. :smile:",,,,,,
7437266,174,PullRequestReviewComment,Please also add this to the `Octokit.Tests-NetCore45.csproj` project.,,,,,,
7437345,174,PullRequestReviewComment,"If you're trying to have the summary be three paragraphs, you should use the `` tag (v=vs.110).aspx. New lines are ignored in XML.Example:",,,,,,
7437376,174,PullRequestReviewComment,Remove empty line please.,,,,,,
7437389,174,PullRequestReviewComment,See earlier comment on ``,,,,,,
7437402,174,PullRequestReviewComment,Remove newline.,,,,,,
7437460,174,PullRequestReviewComment,"So just my preference, but if I break up a line with a bunch of conditionals, I tend to go all or none. So I would put a newline just before the `&&` here. :smile:",,,,,,
7437497,174,PullRequestReviewComment,Please remove extra newline.,,,,,,
7437547,174,PullRequestReviewComment,Please add this to `Octokit-NetCore45.csproj`,,,,,,
7437554,174,PullRequestReviewComment,Please add this to `Octokit-NetCore45.csproj`,,,,,,
9670761,173,PullRequest,"Attempting to take a stab at #135.Basic functionality for Pull Requests is in place.  As of now, the only things missing from this are:- [x] Fetching commits within a pull request- [x] Merging pull requests- [x] Determining ""mergibility"" of a particular pull request- [x] Integration tests for the PullRequestsClient classOtherwise, to me this seems like a good starting point.  Don't hold back if I screwed up something! :thumbsup:",,,,,,
7435231,173,PullRequestReviewComment,hah! I guess that's a consequence of our current naming scheme. It's fiiiiine. I just had to comment as I LOL'd.,,,,,,
7435327,173,PullRequestReviewComment,"Ahaha, yeah I was wondering how you guys would react to that.  I got a good laugh out of that as well :)",,,,,,
7435443,173,PullRequestReviewComment,"Looks like you fat-fingered an ""N"" here. :stuck_out_tongue:",,,,,,
7435508,173,PullRequestReviewComment,Please get rid of the above three empty new lines.,,,,,,
7435548,173,PullRequestReviewComment,Our `ToParameterDictionary` automatically converts property names to lower case. You only need to use the `ParameterAttribute` if you need to deviate from our default conventions. So it's safe to remove these attributes here.,,,,,,
7435567,173,PullRequestReviewComment,Mind adding comments to these three properties?,,,,,,
7647875,173,PullRequestReviewComment,Merged doesn't return a response - you need to check the status code to see whether a pull request has been merged: indicates it has been merged indicates it has not been merged,,,,,,
7647904,173,PullRequestReviewComment,See [this code] for a similar example,,,,,,
7878128,173,PullRequestReviewComment,"Are all these parameters required? If so, we should ensure all of them are not null nor empty and make the properties read-only.If not, then we don't need to pass them in the constructor since the properties can be set.",,,,,,
8012141,173,PullRequestReviewComment,"Not sure what happened here, (merging master perhaps clobbering your changes?) but I've got a compiler error here:",,,,,,
8012149,173,PullRequestReviewComment,This has been renamed to `Team` in another PR. Be mindful when you merge master into this branch - your local change will probably persist.,,,,,,
8012237,173,PullRequestReviewComment,Should these be properties we send across the wire?,,,,,,
8012254,173,PullRequestReviewComment,"These files have now moved under `Clients` to make it consistent with the unit tests.Move `PullRequestClientTests` into this folder and delete any `*ClientTests` which are at the root.Yes, csproj files are terrible. Apologies.",,,,,,
8012295,173,PullRequestReviewComment,We have a working Trees implementation! And some tests which use it!Here's an example:,,,,,,
8012309,173,PullRequestReviewComment,Kill it with :fire:,,,,,,
8012312,173,PullRequestReviewComment,Using `GetAsync` here will cause NSubstitute to fail the test because it was expecting something like this:Ensure you've got the right overload and the right generic parameters.,,,,,,
8012329,173,PullRequestReviewComment,"Same with this test, I think it's expecting a different overload to the one you're using",,,,,,
8012343,173,PullRequestReviewComment,"Ah, good point.  I was actually poking around the other day and noticed that this was now in upstream's master, but was wondering what why I wasn't seeing it in my branch.  I suppose I just assumed this would make it into my branch if I fetched from upstream.",,,,,,
8012346,173,PullRequestReviewComment,Ooo nice! Upon writing that test I don't believe it was in there (or maybe I just hadn't merged upstream).  I'll work around that now :+1:,,,,,,
8035781,173,PullRequestReviewComment,Please use regular auto properties.And set them in the constructor. Octokit handles the proper casing.,,,,,,
9190607,173,PullRequestReviewComment,Shouldn't it be `Updates a pull request..``?,,,,,,
9190945,173,PullRequestReviewComment,"As the `PullRequestUpdate` already bears the issue number, couldn't we drop this parameter?",,,,,,
9191743,173,PullRequestReviewComment,"However, going down this road may require to update `MergePullRequest` so that it also bears a number.",,,,,,
9206421,173,PullRequestReviewComment,"yes, yes it should",,,,,,
9206819,173,PullRequestReviewComment,"One or the other. Given we use `ids` in many other places, and the `FooRequest` entity for parameters relating to the operation - rather than the entity itself - perhaps `Number` should be removed instead...",,,,,,
9207409,173,PullRequestReviewComment,perhaps `Number` should be removed instead...:+1:,,,,,,
9207476,173,PullRequestReviewComment,Maybe `Updates...` here as well?,,,,,,
9207818,173,PullRequestReviewComment,:thumbsup:,,,,,,
9666980,172,PullRequest,Patching up a few issues I came across with the documentation while working on the Pull Request Comments API.,,,,,,
9666612,171,PullRequest,"Because without that respect, the `page=N` parameter is dropped and operations that require paging will continue to fetch the first page until your API limits are exceeded...Open questions:- ~~Do you want an integration test for this scenario? (this was found during testing the milestones client) or could we just mock the response to see that we respect paging?~~ nevermind- ~~The implementation itself is rather naive (the existing tests pass) and I'm not overly attached to the code itself - should we test it more thoroughly while we're in here?~~ reviewed",,,,,,
7422872,171,PullRequestReviewComment,"Why not just use `Contains` here? Also, an Ordinal comparison should be fine. Is there a casing for `?`?",,,,,,
7422883,171,PullRequestReviewComment,"Better to have `Substring(1)` here, right?",,,,,,
7422887,171,PullRequestReviewComment,"Though I do realize, if you did have unescaped question marks elsewhere, this would be invalid anyways.",,,,,,
7422893,171,PullRequestReviewComment,Isn't there a `StringSplitOptions` or something you could use here?,,,,,,
7424793,171,PullRequestReviewComment,There most certainly is. Thanks for reminding me.,,,,,,
7424843,171,PullRequestReviewComment,Because I use the index further down.Will tidy up the Ordinal/OrdinalIgnoreCase.,,,,,,
7436691,171,PullRequestReviewComment,"Ah, I see. Yep.",,,,,,
7436744,171,PullRequestReviewComment,Sad that if the URI is not an absolutel URI you can't still grab `uri.Query`. What a shitty API.,,,,,,
7445913,171,PullRequestReviewComment,![],,,,,,
9666345,170,PullRequest,Fixes #112  Ready for review....have at it!,,,,,,
7448529,170,PullRequestReviewComment,This can be made `readonly`,,,,,,
7448703,170,PullRequestReviewComment,"Hmm, I think this ought to be an enum but I'm not sure of the range of types we have. I don't think this field is open ended. /cc . Any thoughts here?",,,,,,
7450534,170,PullRequestReviewComment,I admit....it was a cop out to make it a string.  It certainly makes sense to make it an enum if we know the values.,,,,,,
7464470,170,PullRequestReviewComment,It's a tradeoff. There is [a list] but it grows over time.,,,,,,
7464521,170,PullRequestReviewComment,Is there an api for getting the current list of events?  (Just thinking out loud here),,,,,,
7465150,170,PullRequestReviewComment,"Not at the moment, just in the docs.",,,,,,
7465203,170,PullRequestReviewComment,I say we just leave it a string for now then.,,,,,,
7468174,170,PullRequestReviewComment,:thumbsup:,,,,,,
9661314,167,PullRequest,Implementation includes:- [x] `Get` request method plus unit tests.- [x] Refactored `Tagger` to more generic `UserAction` - [x] Implement IObservableCOmmitsClient with tests- [x] Implement `Create` method on both clients with unit tests and integration tests_Is the refactoring ok? Or would you prefer multiple identical classes for each usage - `Tagger`|`Commiter`|`Author`)Resolves #128,,,,,,
7483572,167,PullRequestReviewComment,The brace below really misses the code above and wants to be closer to it. Maybe get rid of this gulf of a newline that stands between the two.,,,,,,
7483786,167,PullRequestReviewComment,"should be a `Uri`, right?",,,,,,
7483802,167,PullRequestReviewComment,Make `Url` a URI. I wonder if we should make Commit inherit `GitReference`. Hmm.,,,,,,
7483849,167,PullRequestReviewComment,I used the name from the response of the api...It represents the parents and tree objects,,,,,,
7483851,167,PullRequestReviewComment,Why this name change? `Tagger` doesn't seem correct either. We already have a `User` class. Maybe this should be `Identity`? -ogre or  any thoughts?,,,,,,
7483887,167,PullRequestReviewComment,The expanse is so vast! Please mind the gaps. :stuck_out_tongue:,,,,,,
7483911,167,PullRequestReviewComment,I had the same thought and was going to ask you about it.  I think a lot of objects can inherit from `GitReference`Understand re the `Uri` type now,,,,,,
7483963,167,PullRequestReviewComment,"Sorry, I meant the type should be `Uri` and not `string`",,,,,,
7483968,167,PullRequestReviewComment,Changed the name as the same definition is being used for a `Tagger` a `Committer` and an `Author`.  I'm not happy with the name either but it was the best I could come up with...,,,,,,
7484585,167,PullRequestReviewComment,"I'd prefer to keep these separate rather than have a centralized `Entity` (whatever it's name is)- it's only three properties that are common- what if these change in the future - then we'd have to split them- the class does help distinguish the role, even if it's the same data underneath",,,,,,
7485404,167,PullRequestReviewComment,"the class does help distinguish the role, even if it's the same data underneathWell the property name does that. By that logic, we shouldn't use `string` here but have a `NameString` class. :stuck_out_tongue: These are core git concepts. They're unlikely to change much right? And if they do, then they'd all change.I think the real question is, are these actually the same **type** of thing or not as far as Git is concerned? I kind of think they are.",,,,,,
9657596,166,PullRequest,"This should make it so code analysis build runs on the CI server.Previously, it was only set for Debug builds.",,,,,,
9652136,165,PullRequest,minor fixes to clean up code,,,,,,
9648405,164,PullRequest,see  I hope this will help to STFU all the FxCop warnings for the generated class.Sorry.,,,,,,
7406748,164,PullRequestReviewComment,I'm a little confused. How does putting this using on `Connection` fix things? Why only `Connection` and not any of the other classes?,,,,,,
9634192,163,PullRequest,"Resolves #162 I'm not sure if this is an upstream issue, but I've found that when we expect a Uri [here] we actually get a string - and then setting that value is just plain wrong.No changes to the API.cc -ogre for whether this should be a bandaid given the other serialization issues he's seen.- [x] fix the build",,,,,,
7405860,163,PullRequestReviewComment,This change will get lost when we upgrade SimpleJson. Please send a PR upstream.,,,,,,
7414641,163,PullRequestReviewComment,"if we get this fixed upstream then we won't need this code, which means the ReflectionUtils method is also unnecessary. Right?",,,,,,
7414822,163,PullRequestReviewComment,"If that PR gets merged in, we won't have to have this hack around. So I'm cool with leaving it as-is and helping get it fixed upstream.",,,,,,
7417180,163,PullRequestReviewComment,"Yeah, let's leave this as-is. Your unit test will catch it if we ever lose this change because upstream doesn't take it.",,,,,,
7417189,163,PullRequestReviewComment,Yeah. I'm fine with merging this now and removing it later when SimpleJson takes the change.,,,,,,
9632553,161,PullRequest,"Because i like :stars: and they're my favorite way of discovering all the stuff that i wish i had thought of myself but don't have to.Once i get over my pride, i realize how much psychic weight (:anchor:) has been lifted by leveraging so many smart peoples' work.Sidenote: thanks for putting together a great library :smile:. i found adding this piece to the library to be :cake:.Work left:- [x] Add tests for stars for authenticated user and passed user- [x] Accept sort parameters for the above- [x] Implement stargazers- [x] Check if user has a repo starred- [x] Star/Unstar a repo- [x] Tests for everyone :fist:",,,,,,
7531933,161,PullRequestReviewComment,"If the only thing we need from this is the status code, maybe we should make this return `Task`. That would give you exactly what you need without exposing more than we need to.",,,,,,
7532049,161,PullRequestReviewComment,Please add the `param` comments.Also change the argument name `repo` to `name` to be consistent with our other methods. Thanks!,,,,,,
7532107,161,PullRequestReviewComment,Please document the `user` param.,,,,,,
7532117,161,PullRequestReviewComment,Doc parameters please. :),,,,,,
7532156,161,PullRequestReviewComment,This method isn't defined on the `IStarredClient` interface. Is there a reason for that?,,,,,,
7532178,161,PullRequestReviewComment,This should probably also be on the `IStarredClient` interface.,,,,,,
7532186,161,PullRequestReviewComment,This should probably also be on the `IStarredClient` interface.,,,,,,
7532190,161,PullRequestReviewComment,This should probably also be on the `IStarredClient` interface.,,,,,,
7532200,161,PullRequestReviewComment,"This should probably also be on the `IStarredClient` interface. Also, please document the method.",,,,,,
7532254,161,PullRequestReviewComment,Please document this method and make sure it's also defined on the `IStarredClient` interface.,,,,,,
7532318,161,PullRequestReviewComment,We do this pattern above several times. Might be good to encapsulate it in a method.,,,,,,
7545907,161,PullRequestReviewComment,"i realized that 404s show up as `NotFound` exceptions, which means they would never even hit that block of code. It seems funny to me to write an `Ensure` type method like:Do we want to be that guarded about the status codes returned?",,,,,,
7545936,161,PullRequestReviewComment,Maybe it would be good to push this kind of thing out into an extension method so other clients can use it? Something that would look like: `statusCode.EnsureAcceptableStatus(acceptableStatusCodes);`,,,,,,
7547962,161,PullRequestReviewComment,"I should have mentioned this earlier. `Star` should be a property of `IActivitiesClient` not `IGitHubClient`. We're trying to follow the structure that we have in the API docs:  So `starring` is a ""sub-client"" of Activities.",,,,,,
7547964,161,PullRequestReviewComment,:thumbsup:,,,,,,
7547971,161,PullRequestReviewComment,"This new method `RunForStatus` seems overkill and unecessary. It essentially duplicates the code of `Run`Instead, why not just do this here:",,,,,,
7547976,161,PullRequestReviewComment,Nah. On second thought I think the code is fine as is. :smile:,,,,,,
7549504,161,PullRequestReviewComment,"Wow, that make _so_ much sense. i totally missed that.",,,,,,
7549527,161,PullRequestReviewComment,:smiley:,,,,,,
9625386,160,PullRequest,Addressing issue #126 - replaces pull request #145,,,,,,
7389623,160,PullRequestReviewComment,Doc comment please.,,,,,,
7389626,160,PullRequestReviewComment,Doc comment please.,,,,,,
9625156,159,PullRequest,"Set `ComVisible(false)` on the generated SolutionInfo.cs file to resolve some warnings.There's one outstanding issue which I've submitted a patch for:  Once that flows into an update to FAKE, everything will be back to normal.",,,,,,
9623041,158,PullRequest,Fixes #111.  Thank you guys for making it easy to get started with this project!  This is my first real open source pull request:)Please take a look at the response objects EventInfo and IssueEvent as I wasn't thrilled with them.  I ran into a json serialization issue so I pulled EventInfo out of IssueEvent.  I could of made everything an IssueEvent but then didn't like Issue always being null for one of the client methods.Please let me know if there is anything I can do to help.,,,,,,
7389629,158,PullRequestReviewComment,Please copy the doc comments from the `IIssuesEventsClient` interface over the implementations. Thanks!,,,,,,
7389632,158,PullRequestReviewComment,Doc comment please.,,,,,,
7389633,158,PullRequestReviewComment,Couldn't we replace `Actor` here with our existing `User` type and get rid of the Actor class?,,,,,,
7389634,158,PullRequestReviewComment,Doc comment please.,,,,,,
9620008,156,PullRequest,and use it as a NuGet  package.This reduces download size a lot since the compiler changes less frequently.But now we should ignore the FSharp.Compiler tool as well.,,,,,,
9618707,154,PullRequest,These warnings don't apply in our tests and just amount to a LOT of useless noise.,,,,,,
9615987,153,PullRequest,"Fix Issue #131. Git DB API: Implement the Tags API.  This is my maiden contribution so please let me know if there is anything I should have done differently.Please also take a look at `Ocktokit\Models\Response\Tag.cs`.  I have used a `DataMember` attribute to map the ""tag"" json response property to the `Name` property of my `Tag` class.  I was unable to work out how I could test if this attribute would work (other than reading the json serializer).  Apologies for that.  Please also let me know if there is anything else I can improve upon.Regards",,,,,,
7386869,153,PullRequestReviewComment,"Sorry to be very nitpicky, but this should be `SetsChildClients` since the `ctor` is singular. :smile:",,,,,,
7386870,153,PullRequestReviewComment,:heart: the formatting here!,,,,,,
7386874,153,PullRequestReviewComment,"Please indent the Justification. If it wasn't indented elsewhere, then it's probably wrong there. R# has been doing funny things lately.",,,,,,
7386875,153,PullRequestReviewComment,Revert this please as we discussed.,,,,,,
7386877,153,PullRequestReviewComment,Remove the attribute and name the class `GitTag` unless someone comes up with a better name. :smile: An alternative could be `TagReference`,,,,,,
7386882,153,PullRequestReviewComment,Revert this change as we discussed.,,,,,,
7386884,153,PullRequestReviewComment,Rename this property to `Tag`,,,,,,
7387156,153,PullRequestReviewComment,I haven't seen any of these types of tests currently in the project so this might need removing (or moving) however it was useful for me identify some errors with my class structure,,,,,,
7406872,153,PullRequestReviewComment,Maybe add it to where the other TagClient tests are.,,,,,,
7406891,153,PullRequestReviewComment,This line is very long. Can you concatenate strings so any given line isn't longer than 120 char?,,,,,,
7406924,153,PullRequestReviewComment,"Yeah, sorry.  Let myself down a little there... will correct it",,,,,,
7407034,153,PullRequestReviewComment,no biggie. It's just to make it easier to review on GitHub.com. :smile:,,,,,,
7407697,153,PullRequestReviewComment,"""no need for `this.` here.""",,,,,,
7407711,153,PullRequestReviewComment,No need for `this.` here or anywhere really. We only use `this.` when it's absolutely needed.,,,,,,
7407874,153,PullRequestReviewComment,"Ah shoot, this broke the unit tests. I should have been more careful in reviewing this. You can't use `Local` here. It should be UTC. Our build server is in a different time zone than you are. :)",,,,,,
7407901,153,PullRequestReviewComment,"If you do that, change the `14` to `13` to match your expected result.",,,,,,
9614111,152,PullRequest,Just an aesthetics change for the `README.md`,,,,,,
9604371,151,PullRequest,"I was fooled by the example (fixed in github/developer.github.com#345), and this unfools octokit.net.Since this changes a public type, is there anything special I need to do for backwards compatibility? I lean towards ""no"". Octokit.net is new, and the releases API is new and experimental. I don't think there's a big impact to this change.",,,,,,
9604225,150,PullRequest,"I had copied this code from GHfW where we had some timeout issues with the unit tests. That's not a problem with Octokit.By running our FullBuild, we still get test coverage with no need to duplicate xunit code here.",,,,,,
9597544,149,PullRequest,"Without this, uploading release assets fails with `Invalid Content-Type: """"`.",,,,,,
9595645,148,PullRequest,Fixes #110.  Replaces pull request 140.,,,,,,
7376384,148,PullRequestReviewComment,Don't forget to doc comment this field. :smile:,,,,,,
7376396,148,PullRequestReviewComment,I think this might need to be `Id` per our serialization rules.,,,,,,
7389609,148,PullRequestReviewComment,"For string arguments, I also like to check empty strings.",,,,,,
7389610,148,PullRequestReviewComment,Maybe pick at least one property to assert.,,,,,,
7389620,148,PullRequestReviewComment,Wrong client. :stuck_out_tongue_winking_eye:  I think you meant `new IssueCommentsClient(null);`.,,,,,,
7414435,148,PullRequestReviewComment,"A `Task` can only return a single result, it makes sense that the result of a task-based method would be a `Task`For an example of this, check out [the milestones client].",,,,,,
7414444,148,PullRequestReviewComment,See previous comment about `IObservable`,,,,,,
7415298,148,PullRequestReviewComment,I saw this in some of the other clients and had no idea what was going on.  So I went with what made most sense to me.  Def. makes sense now that you put it that way.,,,,,,
9595544,147,PullRequest,Using a token for authentication (`new Credentials(token)`) wasn't working for me. This change fixes that.,,,,,,
9583643,146,PullRequest,Resolves #143,,,,,,
9582403,145,PullRequest,"My first pull request - I'm sure there is something I haven't done quite right, but I'm hoping to get some feedback to make future ones better.  I pulled in a couple of other changes so that I could run unit tests and add the Milestones client, but those were already separate pull requests.Also - I didn't see a pattern for testing observable versions of the clients.  Is there a good example of this somewhere or is it necessary?",,,,,,
9576829,144,PullRequest,This PR- Fixes the Xamarin build- Adds the #defines from the .NET 4.5 project to Xamarin- Removes some errant Rx references that ended up in Octokit.csproj,,,,,,
9568284,142,PullRequest,"Hi,as discussed in #116 I created a FAKE build script  for octokit.net.This works as follows:- build.cmd will download FAKE from Nuget and start the build.fsx- Nuget packages are restored- Current build version is detected from the [ReleaseNotes.md] file  - see  for details- Clean target: Cleans all the old stuff- AssemblyVersion target: Sets the build version for the SolutionInfo.cs file- Build target: Compile the sln via MSBuild- UnitTest target: Run xUnit- IntegrationTest target: Run xUnit if we find the github user in the environment variables or as build params. Otherwise we print a note.- Nuget targets: Create the packages and fill them with version info, readme and releasenotes  - The Octokit package has no dependencies  - In the Reactive package we determine the version of Rx-Main and set the Octokit dependency to the current version",,,,,,
7360334,142,PullRequestReviewComment,"we made a conscious decision to commit our packages to Git. If we want to change that, we should discuss that as part of a separate issue.",,,,,,
7360369,142,PullRequestReviewComment,Do we need to be making these changes at the same time? Can we deal with these in a separate PR?,,,,,,
7360370,142,PullRequestReviewComment,That's your nuget output folder. I think that's ok to ignore.,,,,,,
7360401,142,PullRequestReviewComment,I moved these from the SolutionInfo.cs over to the specific AssemblyInfo.cs,,,,,,
7360429,142,PullRequestReviewComment,"Ah yes, proceed :metal:",,,,,,
7360458,142,PullRequestReviewComment,"it's a new line below, not deleting `packaging/`",,,,,,
7360479,142,PullRequestReviewComment,You'll need to revert this change too. :smile:,,,,,,
7360930,142,PullRequestReviewComment,"Note to myself: Don't touch the last line of a file. Add the stuff in the middle, that's easier for the diff tool.",,,,,,
7360986,142,PullRequestReviewComment,LOL.,,,,,,
7381503,142,PullRequestReviewComment,"How does this know to build the `Release` configuration? By default, isn't it the `Debug`?",,,,,,
7381567,142,PullRequestReviewComment,"Ah, so after I ran `git clean -xdf` the build failed. But it's because my VS is on a `Debug` configuration. When I changed VS to use a release config, it ran the tests.",,,,,,
7387758,142,PullRequestReviewComment,Note: Always use a sane editor like Vim or Emacs.,,,,,,
9568158,141,PullRequest,We only added it to the Debug configs in #117.,,,,,,
9565588,140,PullRequest,This is a place holder for a resolution to Issue #91.  Taking baby steps on this one.  Please comment as I go.,,,,,,
7343256,140,PullRequestReviewComment,Maybe `Returns the  for the specified comment.`?,,,,,,
7345160,140,PullRequestReviewComment,"""...for the comments of a specified comment"" still sounds weird. This URL identifies an individual comment, not more than one.",,,,,,
9552672,139,PullRequest,"So we had some compatibility shims inside Octokit for moving to .NET 4.5.And then we moved to .NET 4.5 and forgot to delete them! Oops.![]This fixes that. I'm seeing some unrelated tests fail on my machine. Can you repro?**Octokit.Tests.Exceptions.ApiExceptionTests+TheConstructor.CanPopulateObjectFromSerializedData**System.Runtime.Serialization.SerializationException : Type 'Octokit.ApiException' in Assembly 'Octokit, Version=0.1.1.0, Culture=neutral, PublicKeyToken=null' is not marked as serializable.**Octokit.Tests.Http.RateLimitTests+TheConstructor.CanPopulateObjectFromSerializedData**System.Runtime.Serialization.SerializationException : Type 'Octokit.RateLimit' in Assembly 'Octokit, Version=0.1.1.0, Culture=neutral, PublicKeyToken=null' is not marked as serializable.**Octokit.Tests.Exceptions.ApiValidationExceptionTests+TheConstructor.CanPopulateObjectFromSerializedData**System.Runtime.Serialization.SerializationException : Type 'Octokit.ApiValidationException' in Assembly 'Octokit, Version=0.1.1.0, Culture=neutral, PublicKeyToken=null' is not marked as serializable.**Octokit.Tests.Exceptions.RateLimitExceededExceptionTests+TheConstructor.CanPopulateObjectFromSerializedData**System.Runtime.Serialization.SerializationException : Type 'Octokit.RateLimitExceededException' in Assembly 'Octokit, Version=0.1.1.0, Culture=neutral, PublicKeyToken=null' is not marked as serializable.**Octokit.Tests.Reactive.ObservableRepositoriesClientTests+TheGetMethod.IsALukeWarmObservable**System.ArgumentNullException : Value cannot be null.Parameter name: uriResult StackTrace:  at Octokit.Ensure.ArgumentNotNull(Object value, String name) in c:\Users\brendanforster\Documents\GitHub\octokit.net\Octokit\Helpers\Ensure.cs:line 19   at Octokit.ApiExtensions.GetAsync[T](IConnection connection, Uri uri) in c:\Users\brendanforster\Documents\GitHub\octokit.net\Octokit\Helpers\ApiExtensions.cs:line 46   at Octokit.Tests.Reactive.ObservableRepositoriesClientTests.TheGetMethod.d__4.MoveNext() in c:\Users\brendanforster\Documents\GitHub\octokit.net\Octokit.Tests\Reactive\ObservableRepositoriesClientTests.cs:line 29",,,,,,
9552594,138,PullRequest,Using optional parameters in 5baaa17 seems cool since it's internal only.,,,,,,
7360216,138,PullRequestReviewComment,"I'm not sure the `parameters` is needed. The `nextPageUrl` is returned as part of the previous page's response in the `Link` header. I would assume it would be a fully formed URL for retrieving the next page of results. See the [pagination docs] for the GitHub API for more details. Were you finding that this was not the case?The `accepts` parameter, on the other hand, makes total sense!",,,,,,
7362516,138,PullRequestReviewComment,"Let me take a closer look at this - I'm pretty sure we need `parameters` for the initial call but you're probably right that it's redundant for successive calls. Assuming that's the case, how does this look?",,,,,,
7362683,138,PullRequestReviewComment,"Actually, don't we already apply the parameters to the URL before we call this? If we do that, we never need to worry about it here.",,,,,,
7363297,138,PullRequestReviewComment,"This is our only chance to apply parameters - without passing them in here, they're not respected. I don't suppose you or your colleagues know of a public repo with more than a page worth of Milestones for testing purposes? At least for the first page, this does correctly apply parameters.",,,,,,
7363641,138,PullRequestReviewComment,"This is our only chance to apply parameters - without passing them in here, they're not respected.Ah right. Why'd you remove the `accepts` parameter? That seems like it should be necessary if we need to pass something other than the default. Or do we not need to do that here?  know of a public repo with more than a page worth of Milestones for testing purposes?I don't offhand. I suppose we could create one. We could have the integration test create one. By default, it's 30 a page.",,,,,,
7382974,138,PullRequestReviewComment,"Ah right. Why'd you remove the `accepts` parameter? That seems like it should be necessary if we need to pass something other than the default. Or do we not need to do that here? doesn't pass `accepts`, so I'm not either. I believe it's still correctly wired up in `GetAndFlattenAllPages` though.",,,,,,
9551959,127,PullRequest,Was looking at #126 and noticed that `IAssigneesClient` had been copied into Reactive but was never finished.,,,,,,
7333246,127,PullRequestReviewComment,"Thanks for doing this! So the pattern we're using is to have a flat observable stream of elements. With tasks, we can't do that because they can only return one thing.See  for an example of how we flatten this.",,,,,,
7333252,127,PullRequestReviewComment,See my previous comment. This should return `IObservable`,,,,,,
7333296,127,PullRequestReviewComment,"Blah, thought I'd checked on that in a different client but I appear to have been looking at the wrong thing. Will fix.",,,,,,
9550485,125,PullRequest,A pull for Issue #115,,,,,,
7332071,125,PullRequestReviewComment,My whitespace OCD is acting up a bit - can we tidy up the `:this` code here so it's consistent?,,,,,,
7332124,125,PullRequestReviewComment,"_So close!_I like this style (the first one is right, the others aren't)",,,,,,
9550239,124,PullRequest,Last part of #113 - [x] found some more superfluous async/await- [x] abide by the Toub and use ConfigureAwait where we _need_ to use await- [x] :lipstick: some code because diff limitscc,,,,,,
9549729,123,PullRequest,The package depends on Rx-Main.,,,,,,
9548950,121,PullRequest,"Yo I heard you like .csproj files## Ok for real what is this aboutThis PR adds support for Xamarin platforms and for Mono. To do this, we had to do some tweaking to the output directory layout - now project files are always named `TheNameOfTheProject-NugetTargetPlatformName.csproj` (i.e. `Octokit-MonoAndroid.csproj`), and the build output directories are now organized by target platform (i.e. it's not `bin\release`, it's `bin\release\NuGetTargetPlatformName`). ## TODO:- [x] Make sure building NuGet packages still work- [x] Update documentation- [x] Fix the test projects that somehow got messed up",,,,,,
7330792,121,PullRequestReviewComment,What is this GUID? You just reusing them like they're going out of style?,,,,,,
7330832,121,PullRequestReviewComment,The GUID here is the ProjectGuid from the csproj file - the change here should just be a rename,,,,,,
7330861,121,PullRequestReviewComment,"Ah, I see. For a sec I thought you were adding new projects with the same GUId. Nevermind. :)",,,,,,
7331094,121,PullRequestReviewComment,"No, I make a new GUID for projects by copying an existing one, editing them by hand and adding random changes, because it's easier than creating a new project from scratch since every IDE is super opinionated about directory structure :-/",,,,,,
9548331,117,PullRequest,Some work on #113- make the core projects .NET45- drop Microsoft.Bcl.*- strip out some unnecessary async/await- fixed up some differences between Task,,,,,,
9546925,109,PullRequest,Fixes #108.,,,,,,
9544962,105,PullRequest,We'll make this better later. I promise.,,,,,,
9515154,104,PullRequest,I got kind of excited about  so I implemented the API in Octokit so we're ready to go.,,,,,,
7327293,104,PullRequestReviewComment,"Yo dawg, I heard you like xml docs",,,,,,
7327376,104,PullRequestReviewComment,I was just about to merge. ;) I'll fix this.,,,,,,
7327393,104,PullRequestReviewComment,Documentation?,,,,,,
9509867,103,PullRequest,Cleaning up the code to use the dictionary lookup.,,,,,,
9509535,102,PullRequest,"Since Enterprise base URLs end with /api/v3 we need to make sure the endpoints are relative and not absolute. Also need to fix up the base address to end with ""/"".",,,,,,
9496450,101,PullRequest,"We're still digging into why we're seeing this, but it doesn't hurt to have an implementation.",,,,,,
9460281,100,PullRequest,"Rather than create a default user agent, we'll build the user agent forthe user of the library. We only require that the user provide usproduct information.fixes #61",,,,,,
7265959,100,PullRequestReviewComment,D O C U M E N T A T I O N :green_heart:,,,,,,
7266033,100,PullRequestReviewComment,"""But I don't think we care all that much""lol /nope",,,,,,
9438878,99,PullRequest,"This PR does several things.1. Rather than manually creating dictionaries for each type API that takes a set of request parameters, I created a base class `RequestParameter` with a generic `ToParametersDictionary` method that uses reflection and a set of conventions to create a dictionary (for use in building a query string) from an object.2. Added a `ParameterAttribute` to provide control in cases where we want to differ from the conventions.3. Changed the behavior so we always send every parameter that has a default value.",,,,,,
7239735,99,PullRequestReviewComment,Whitespace OCD,,,,,,
7239778,99,PullRequestReviewComment,I do like how much this tidies up the overall code :sparkles:,,,,,,
9427828,98,PullRequest,fixes #61,,,,,,
9427655,97,PullRequest,Closes #94,,,,,,
9419627,95,PullRequest,"These are some older commits from before I fell sick, so I thought I'd get these in before starting more work.",,,,,,
9319117,93,PullRequest,gzip is awesome and we should be using it wherever possible,,,,,,
7155236,93,PullRequestReviewComment,"The documentation is conflicting and this _probably_ isn't a problem anymore but there's a property on the handler called [SupportsAutomaticDecompression]. The docs says that if that's false and one tries to assign to AutomaticDecompression it'll throw an exception. I _think_ this dates back to the time where HttpClient couldn't use compression on Windows Phone but they included a managed compression algorithm now so that shouldn't be the case anymore.Anway, ranting. It's more or less an ideological question for you to ponder :) Maybe we want the exception?",,,,,,
7160383,93,PullRequestReviewComment,So should we do this instead?We want to make Octokit a cross-platform library eventually so this seems to make sense to play it safe.,,,,,,
7174591,93,PullRequestReviewComment,:thumbsup:,,,,,,
9266789,92,PullRequest,"Ok, this is ready for review.I'm getting a tiny bit of API fatigue so I'm going to step away from the Issues sub-apis for a bit.",,,,,,
7174251,92,PullRequestReviewComment,Hwh√¶t,,,,,,
7174301,92,PullRequestReviewComment,Doh!,,,,,,
9229455,90,PullRequest,Also consolidated assembly metadata into a single linked class. Fixes #84,,,,,,
9224482,88,PullRequest,Added a RateLimit class to encapsulate pulling rate limit informationfrom the headers. This is now exposed by `ApiInfo` as well as the. That way these two classes are not grabbingthe same information in different ways which we were doing before.,,,,,,
9198400,86,PullRequest,"This implements exception handling for the various 403 and 401 cases based offon the Octokit.rb implementation I didn't implement a custom exception for all the HTTP status codes that Octokit.rb does, but I set the stage for doing it in the future.",,,,,,
7054910,86,PullRequestReviewComment,"Is it worth testing some HTML here, like this?",,,,,,
7068370,86,PullRequestReviewComment,Sure. :),,,,,,
9124619,82,PullRequest,Rather than return `IObservable` and abstract away paging.,,,,,,
6991895,82,PullRequestReviewComment,"-ogre So I basically had to duplicate the `endpoint` here. The reason is we don't have a `Task` based method exposed that gets one page  of repositories. I'm not sure we _should_ have such a thing exposed.Some ideas to make this better:1. Expose each endpoint url as a property of the `IRepositoriesClient` interface.2. Expose a `GetPage` method, but make it internal and exposed to `Octokit.Internal`.3. Expose `GetPage` method as protected and make this class inherit `RepositoriesClient`.4. Just not worry about it. Some duplication is fine.5. ???",,,,,,
7006406,82,PullRequestReviewComment,"I'll buy you the finest beer if you can make this test pass. Basically, if someone uses `Take` on the observable, we want to stop the ""expansion"" once the `Take` is fulfilled.",,,,,,
7007480,82,PullRequestReviewComment,I like the idea of putting the URI somewhere common.,,,,,,
7013331,82,PullRequestReviewComment,"So in some cases, it has to be a parameterized url so it can't be a `Uri`, but either has to be a `UriTemplate` if we expose it, or a method to get the `Uri`.I thought of another way to do this that doesn't expose anything new to the API and gives us time to think of another approach. I'll put the code to get the `Uri` for each endpoint in a shared and linked `.cs` file. That way they're compiled into both projects, but I don't have to deal with how to expose them in the API yet.Seems legit?",,,,,,
7013403,82,PullRequestReviewComment,"What about an `ApiUrls` static class that has methods like `.User()` and `.Repository(owner, name)` and such?",,,,,,
7019229,82,PullRequestReviewComment,-ogre I'll do that.,,,,,,
7019368,82,PullRequestReviewComment,"Nevermind, I got it working.",,,,,,
7019374,82,PullRequestReviewComment,NO BEER 4 U!,,,,,,
9119449,81,PullRequest,Make accepts come before contentType everywhere. Also remove unnecessaryoverloads of IConnection.,,,,,,
9116087,80,PullRequest,And better passing of accepts header,,,,,,
9111421,79,PullRequest,"This is a small one, as I wanted to get it in before  gets his changes in, so he has to marge and not me. :smiling_imp:",,,,,,
9108414,77,PullRequest,We were calling the wrong overload of Send.,,,,,,
9078912,76,PullRequest,"and `Upload` felt like weird members for `ApiConnection`, with its focus on responses of `T`. But as we cover more API surface, we're going to have many more methods in an `ApiClient` that don't have responses of `T`. This PR drops it and makes `ApiConnection` a more general wrapper on `IConnection`, but with the convenience of handing body to `T` and making the right calls for HTML content, for example.I also:- Renamed `ApiConnection.Create` to `Post` to better map to the HTTP verb- Renamed `ApiConnection.GetOrCreate` to `Put` to better map to the HTTP verb- Renamed `ApiConnection.Update` to `Patch` to better map to the HTTP verb- Moved the Release API-specific accept header into `ReleasesClient`.",,,,,,
9076033,75,PullRequest,"I was going to do this one big chunk, but since I'm going to be doing some refactoring at the same time, it makes more sense to do this in smaller chunks. I'll wait to turn on doc generation until the end so the build doesn't break.",,,,,,
9039862,74,PullRequest,"If a 3rd party client needs to provide a specific HttpContent, we should allow that in the adapter. Our clients probably shouldn't do this as it would break encapsulation.",,,,,,
9010904,72,PullRequest,This is the same as HttpClient.,,,,,,
9010483,71,PullRequest,^^^ Title says it all.,,,,,,
6905029,71,PullRequestReviewComment,The HttpClient default is false right? Are we cool making this the default?,,,,,,
6905079,71,PullRequestReviewComment,"Actually, I think it's `true`. Let me double check.",,,,,,
6905091,71,PullRequestReviewComment,It defaults to `true`. I checked the code.,,,,,,
6905092,71,PullRequestReviewComment,"Okay, definitely cool is that's the case, and maybe cool even if it's not.",,,,,,
8975923,70,PullRequest,Implements the endpoint for creating an application authorization token.,,,,,,
6890657,70,PullRequestReviewComment,Missing XML doc,,,,,,
6890804,70,PullRequestReviewComment,"It feels strange naming this `AuthorizationUpdate` now that it is used for both `GetOrCreate` and `Update`. That said, I don't have an idea for a better name. We might to run into this in other places, as well. Actually, [looking at the API], these need to be different. `AuthroizationUpdate` should have `add_scopes` and `remove_scopes`, but a `NewAuthorization` would not.",,,,,,
6890905,70,PullRequestReviewComment,"Man, I need to think about this 2FA handling for a bit. It feels funny for this to be here; I would have expected it to somehow be a separate concern handled somewhere else, though I'll admit I'm not sure how that would work. Do we potentially need to do this other places? What API endpoints will issue a 2FA challenge?",,,,,,
6891153,70,PullRequestReviewComment,"This is the only API endpoint that does the 2FA challenge. We didn't want arbitrary requests sending SMS messages.Note that the consumer could handle 2FA on their own pretty much in the same we we do here. However it's a bit tricky to do right so I thought this would be a nice convenience method. This way, the user just needs to provide a callback to show whatever UI they need to show in order to collect the 2FA token.",,,,,,
6891264,70,PullRequestReviewComment,"Ah, right. I'll create a `NewAuthorization` and update `AuthorizationUpdate`. One thing I don't like is the asymmetry of those names. Should it be `AuthorizationCreation` instead of `NewAuthorization`. Or perhaps `AuthorizationNew` which is a little weird. :)",,,,,,
6891307,70,PullRequestReviewComment,"This is the only API endpoint that does the 2FA challenge.That makes me feel a little better. This way, the user just needs to provide a callback to show whatever UI they need to show in order to collect the 2FA token.Let's document how this works in the XML doc.",,,,,,
6891358,70,PullRequestReviewComment,should probably be on the next line,,,,,,
6891430,70,PullRequestReviewComment,MIssing XML doc,,,,,,
6891458,70,PullRequestReviewComment,I feel like we should start putting a link to the GitHub API this wraps in the remarks of all our methods.,,,,,,
6891472,70,PullRequestReviewComment,Typo: `defines`,,,,,,
6891494,70,PullRequestReviewComment,"We should start being consistent about when to period and when not to period. Generally on params, since they tend to be fragments, I don't period.",,,,,,
6891520,70,PullRequestReviewComment,Check what?,,,,,,
6891549,70,PullRequestReviewComment,"I think it's worth explaining the 2FA part of this overload, either here or in a remarks section.",,,,,,
6891575,70,PullRequestReviewComment,Missing XML doc for ``,,,,,,
6891580,70,PullRequestReviewComment,Missing XML doc for ``,,,,,,
6891627,70,PullRequestReviewComment,"Think about the nouns in English. It's an ""authorization update"" and a ""new authorization"".",,,,,,
6891771,70,PullRequestReviewComment,"You could also say it's an ""updated authorization"" and a ""new authorization"".",,,,,,
6891789,70,PullRequestReviewComment,"Maybe ""Thrown when two-factor authentication is enabled and the specified two-factor code is missing or invalid.""? I assume if they call this overload and two-factor auth isn't enabled it's just a no-op? I know that would never really happen, of course.",,,,,,
6891852,70,PullRequestReviewComment,"You can, but I don't think that typically how you'd say it. I personally don't care about the symmetry here, as all it really buys you is Intellisense cribbing. That said, I don't care enough to fight for this, so if you like those better, go for it.",,,,,,
6891884,70,PullRequestReviewComment,Missing XML doc on ``,,,,,,
6891896,70,PullRequestReviewComment,The dangling check again.,,,,,,
6891908,70,PullRequestReviewComment,MIssing XML doc in ``,,,,,,
6891912,70,PullRequestReviewComment,The dangling check again.,,,,,,
6891931,70,PullRequestReviewComment,Let's put some XML doc here.,,,,,,
6891968,70,PullRequestReviewComment,"Some info here about the 2FA flow, or in ``, probably copy and pasted from all the other places. Have I mentioned how much I hate the lack of reuse in XML doc?",,,,,,
6892137,70,PullRequestReviewComment,"Umm, yeah. That'd be awesome.",,,,,,
6892142,70,PullRequestReviewComment,"Is it worth having a test that goes through the callback twice, simulating the user putting in a bad code? Is that me being weird too-serious tester guy?",,,,,,
6892160,70,PullRequestReviewComment,Typo: `defines`,,,,,,
6892164,70,PullRequestReviewComment,Remove the period,,,,,,
6892173,70,PullRequestReviewComment,"This should have an `` section, right?",,,,,,
6892197,70,PullRequestReviewComment,Should we just put the client secret in the update object?,,,,,,
6892209,70,PullRequestReviewComment,Moar XML doc,,,,,,
6892292,70,PullRequestReviewComment,extra white space?,,,,,,
6892341,70,PullRequestReviewComment,"I kinda feel like ApiConnection should match up to the actual HTTP verbs: `Put` instead of `GetOrCreate`, `Post` instead of `Create`. Make it clear what's happening at the abstraction layer above. Thoughts?",,,,,,
6899891,70,PullRequestReviewComment,"Yeah, I can make that change.",,,,,,
6900295,70,PullRequestReviewComment,"Fucking great catch! I have a test for that in GHfW against the Octokit.Reactive code, but no test for this against the `Task` based code. And sure enough, there's a bug. :)",,,,,,
6900369,70,PullRequestReviewComment,"Actually, are we sure we want to automatically re-prompt for a bad code? Or should we allow the caller to catch that and decide for themselves?",,,,,,
6901172,70,PullRequestReviewComment,"Ok, I looked at the GHfW code, and we throw when the user enters an invalid code. I think this is the right behavior. This makes it easy for the caller to decide to show the UI again or not.",,,,,,
6901493,70,PullRequestReviewComment,:cool:,,,,,,
8973164,69,PullRequest,"This PR:- deletes repositories created during integration test runs- adds an .exe to the solution (in the Meta folder so it doesn't distract) to forcefully clean up anything on the configured test accountI'm going to make that .exe a little smarter, but that'll be in a separate PR.",,,,,,
8964557,68,PullRequest,This adds a method to delete a repo. This is also the first step in having the integration tests clean up after themselves.,,,,,,
8963455,67,PullRequest,This adds a method to create a repo in an organization.,,,,,,
8962373,66,PullRequest,The old implementation would actually retrieve the entire HTML pagewhere the README is located. We want to simply make the same requestwith a different ACCEPT header so we can retrieve the portion of theREADME html that we'd actually want to display.,,,,,,
8938395,65,PullRequest,This makes it so GHfW doesn't have to reference Octokit.Internal.,,,,,,
8938193,64,PullRequest,"Y'know, 'cause 999999999999 won't fit in an `Int32`.",,,,,,
8937516,63,PullRequest,The storage mechanism for credentials is very likely to be an async datastore. So might as well play it safe and make it awaitable.,,,,,,
8935986,62,PullRequest,"**Only we can prevent namespace proliferation!**This PR:- reduce us to two namespaces: `Octokit` for everything ""public"", and `Octokit.Internal` for everything ""not public"". It also sets our R# settings to make folders not be namespaces containers where appropriate.",,,,,,
8925025,60,PullRequest,Just what the PR title says.,,,,,,
8924731,59,PullRequest,"This deletes a test I can't re-create via the API, because pushed date is never null. , you mentioned you added this test because of a problem deserializing null? If so, we now have other tests that do this, so I think we're good to delete this test. Once this test is gone, I can add running integration tests to CI.",,,,,,
8903249,58,PullRequest,"This adds a method to the repositories client to create a new repository, for now just for the current user. I'll add one for organizations next.**Note**: This also introduces a significant change to our serialization: null values are now omitted from serialized objects. I expect this will be fine, but keep an eye out for trouble and let me know if you see any.## To Do- [ ] add unit tests for serializer changes- [ ] add corresponding member to reactive client",,,,,,
6830342,58,PullRequestReviewComment,I ported the `Ensure` class over here. :),,,,,,
6830358,58,PullRequestReviewComment,"I like defensive programming. But out of curiosity, is this even possible?",,,,,,
6830392,58,PullRequestReviewComment,"Yeah, this was copy and paste directly from PocoSerializerStrategy, and I changed as little as possible. But I can totally change that.Are we going to try Fody or Code Contracts or something?",,,,,,
6830412,58,PullRequestReviewComment,"I assume they put it there for a reason, but I would not have thought it possible.",,,,,,
6830418,58,PullRequestReviewComment,Are there unit tests of this change in behavior?,,,,,,
6830428,58,PullRequestReviewComment,I would like to use Fody. I just haven't gotten around to it.,,,,,,
6830446,58,PullRequestReviewComment,No. I'll look at adding some.,,,,,,
8900936,57,PullRequest,Sometimes we need to be able to make raw requests. Thismakes that easier.,,,,,,
8872889,55,PullRequest,"Decided to group these two endpoints in a ""Miscellaneous"" client because that's what we do on .com and it'll probably make it easier for people to find these. I only implemented the two that we need today for GHfW.",,,,,,
8846524,54,PullRequest,Just some cleanup work.,,,,,,
8794040,49,PullRequest,There's a different headache with the main GitHub project (because submodules are awesome) but I think this is more important. -ogre did we want to setup NuGet specs for these projects at some stage?,,,,,,
8786914,47,PullRequest,"I implemented enough of the releases API so that I can (hopefully) make releasing git-tfs a one-liner. Here's what's done:- List releases for a repository- Create a release- Upload a release assetThis leaves these things not done:- Get a single release- Edit a release- Delete a release- List assets for a release- Get a single release asset- Edit a release asset- Delete a release assetThe implementation is mostly not hacky, and it has tests. The hackiest bit is getting the 'Accept' header right. Also, I hung everything off of RepositoriesClient. I'm going to move it to a new ReleasesClient.Feel free to nitpick everything. This is the first serious .net code I've written in a while.",,,,,,
6732996,47,PullRequestReviewComment,"Is there a better way to do this? This works, but feels weird. I tried using `""application/vnd.github.v3+json;charset=utf-8, application/vnd.github.manifold-preview""` as the Accept header for all requests, but that didn't seem to work. I should look at how octokit.rb does it. Or , do you have a suggestion?",,,,,,
6741379,47,PullRequestReviewComment,"Hmm, that seems like specific info to have up in your pipeline. FWIW, Octokit.rb follows a [simple philosophy] of providing positional arguments for required information and an options hash for passing arbitrary info to the server:We even allow some headers to be passed as first class options (as `:accept` in this case instead of `:headers => {:accept => ''}`). This allows us to use the same method to get a pull request back as JSON, `.diff`, or `.patch` from a single method.I know this doesn't translate 1-to-1 in static languages, but as a consumer of APIs I appreciate it when my libraries remove the tedium of calling HTTP while exposing its raw power when I need it. Then I'm not left waiting on a library for every API update enhancement.Just my $.02.  may have more applicable feedback.",,,,,,
6743715,47,PullRequestReviewComment,"I'll look into this. This is the first time we've run into this situation so we just didn't create a way to easily override it just yet.For the most part, we don't want callers to have to think about what `accept` to pass so we want to bake in the right defaults.",,,,,,
6743985,47,PullRequestReviewComment,"I should have mentioned that we do [pass the preview media type] when required, but we allow it to be overridden from user input:",,,,,,
6744016,47,PullRequestReviewComment,Thanks! Are there many cases where people would want to pass in a different media type?,,,,,,
8746788,46,PullRequest,This better maps the approach we use in GHfW.,,,,,,
6725970,46,PullRequestReviewComment,"I'm not sure about the different ways we use a 202 in the API off-hand, but generally speaking 202 (Accepted) isn't always appropriate for retry. It doesn't look like we're actually using this anywhere yet, so let's just make sure we're only throwing this in the context of a 202 that actually means retry, and change this code doc to better explain when it will be thrown (i.e., when a 202 means retry in the context of a given API end-point).",,,,,,
6727486,46,PullRequestReviewComment,"Should this be nullable for API exceptions, like timeout, that won't have a status code?",,,,,,
6727545,46,PullRequestReviewComment,"So we do this on every 202 in GHfW seen here:  any reason for that? Maybe in Octokit, we don't automatically retry and let the caller do it, but I'd like to get more background on this first.",,,,,,
6727688,46,PullRequestReviewComment,see  and  for all teh backgrounds.In the GitHub API 202 means that they've queued up a resque job and that the results will be available in a bit. It's also the reason I wrote [RetryWithBackoffStrategy ].,,,,,,
6727814,46,PullRequestReviewComment,: We use 202 in this way _always_ for the GitHub API? Is it safe to treat all 202s this way?,,,,,,
6727900,46,PullRequestReviewComment,"401 is an interesting thing for us. Because we're always going against a known set of end-points, we can probably handle 401 more appropriately ourselves than surfacing it to the client; a 401 means we don't know who you are (either because it's a first challenge, or the API couldn't establish identity after the challenge's response). Not saying we shouldn't have this exception and throw it when it applies, but we should think about maybe having something more specific when it makes sense (like, if you try to do something on /user/xxx, and you didn't supply a credential, maybe a `CredentialRequired` is the best exception, or if 2FA failed, maybe a `TwoFactorRequired` exception makes more sense; those are both 401 cases). I'm just thinking aloud here, so maybe just ignore me, but generally speaking, I wonder if we can handle most of the 401s more specifically than just throwing a 401 to the caller.",,,,,,
6728035,46,PullRequestReviewComment,"Should we just be throwing an API exception here generally for any `4xx` or `5xx` status code that we don't special-case? For instance, why handle `Forbidden` specifically, since we're just throwing `ApiException`; we could just have a block after the special cases that throws `ApiException` with the status code and description for any error code > 399.",,,,,,
6728226,46,PullRequestReviewComment,ping . ^^^ Any thoughts on the above question?,,,,,,
6728258,46,PullRequestReviewComment,Agreed. I was going to address that once I start re-implementing GHfW's handling of this using Octokit. But that's generally the approach I'm thinking. Perhaps those exceptions derive from this or we might simply add a property to this. I haven't really thought that through yet.,,,,,,
6728314,46,PullRequestReviewComment,"Good question! I was doing what we're doing in GHfW but after searching the code, it doesn't make sense. :) I thought we might be keying off the exception message but we're not.",,,,,,
6728398,46,PullRequestReviewComment,"For some reason, that rubs me the wrong way. If the server times out, we'll get a `HttpStatusCode.RequestTimeout`. If the task is cancelled, I think we probably shouldn't wrap that in an `ApiException` because it really wasn't an exception with the API. I think that implies the user cancelled the action (which we really don't allow just yet).Again, I was just mimicing the existing code but I think this is a case where that's a bad idea. I'll fix it.",,,,,,
6728497,46,PullRequestReviewComment,"I feel ya. There's also the third case of the client timing out, or will it also end up a task cancellation same as if a user cancelled the task explicitly? I wouldn't want to have to catch `TaskCanceledException` as a way to know if the client timed out waiting for the server. There also another exception that isn't going to have a status code: the server cannot be reach (bad URL, for example).",,,,,,
6728675,46,PullRequestReviewComment,"We use 202 in a number of contexts. In addition to the Stats API mentioned above, we also return a 202 when a repo is forked and you definitely don't want to auto-retry there. I think we'll also be using 202 to signal a Release Asset retry when we get a chance to implement it. See .",,,,,,
8679340,44,PullRequest,We weren't setting this before.Also did a tiny bit of cleanup.,,,,,,
8676802,43,PullRequest,This only implements the retrieval of email addresses because that's all GHfW needs for now. :),,,,,,
8675933,42,PullRequest,This only implements the retrieval of email addresses because that's all GHfW needs for now. :),,,,,,
8673706,41,PullRequest,"After finally getting VS 2012 on the CI VMs, CI was still failing because it's trying to run RT tests that don't exists. I don't fully understand what we're doing with the RT assemblies in the solution, but I'm pretty sure we don't need this. , can you explain what we're doing here to handle RT?",,,,,,
8667826,40,PullRequest,"It's possible for a repository to have a null value for the `pushed_at` field. For example, if it's been createdonline and never pushed to via git.This fixes that and adds an integration test.NOTE TO -ogre: This new integration test retrieves a private repository, which I think is important to have. But it's going to fail for everybody but us even if they set the environment variables for running integration test. I think that's probably ok for now. If folks complain, we can add one more environment var. Something like `SKIP_GITHUBBER_ONLY_TESTS`",,,,,,
8610702,39,PullRequest,"Both organization and user are instances of an ""account"" and havemost of their data the same. Making them share a common base class(rather than having Org : User as we did in GHfW) makes using thema lot easier.",,,,,,
8574358,38,PullRequest,-ogre you'll probably want to review this after the fact. :smile:,,,,,,
8573958,37,PullRequest,"Added a unit test project for the OctokitRT tests using the same approach we use for the OctokitRT.csproj. This mean when we add a unit test to one project, we have to remember to add it to another.This makes sure we're actually testing changes against OctokitRT.",,,,,,
8565837,36,PullRequest,Updated all of our NuGet packages,,,,,,
8564648,35,PullRequest,"I thought I did this earlier, but must have made a mistake.",,,,,,
8564182,34,PullRequest,I used a tool to generate these models and apparently it didn't handle `bool` properties correctly.,,,,,,
8545176,33,PullRequest,One less dependency. One less ugly ass syntax to learn.,,,,,,
8543753,32,PullRequest,"We use this in GHfW, but it probably only applies to us.",,,,,,
8543152,31,PullRequest,These extension methods are ported straight over from the GitHub for Windows code. These are pretty essential for doing SSH related stuff.,,,,,,
8534968,30,PullRequest,Octokit and Octokit.Reactive now target .NET 4.0! I left the unit test projects targeting .NET 4.5 I figured there's no harm in that.,,,,,,
8373793,29,PullRequest,"This PR moves the test account username and password out of source code and reads it from the environment. If the environment variable aren't set when you run `./build`, they integration tests will be skipped and warning displayed. (This keeps it easy for contributors to run the unit tests and run `./build` without having to set up a test account.)## To Do- [x] update the README with how to set up the integration tests- [x] add an xUnit.net conditional attr that skips the tests when the environment isn't set up",,,,,,
6408196,29,PullRequestReviewComment,We have a `ConditionalAttribute` we wrote for GHfW that's like this. Seems like it comes up a lot and might be useful to put in some common test library down the road. Nothing to do for now though.,,,,,,
6408740,29,PullRequestReviewComment,Do any of our tests hit private repos or require configuring a user that must be a member of a specific org? I could see that being a problem down the road.,,,,,,
6410784,29,PullRequestReviewComment,"I don't know, but I'll create as much as possible through the tests for that, and will avoid it.",,,,,,
8368711,28,PullRequest,My first clone and a test was failing. The repo in a test has moved to a new org.,,,,,,
7309670,27,PullRequest,Some of our API endpoints support query string parameters for GET requests. These refactorings set the stage for this.,,,,,,
5853878,26,PullRequest,This is a PR to add support for the notification APIs## TODO- [ ] Map the rest of the notification APIs- [ ] Write some tests,,,,,,
5853867,25,PullRequest,"Like it says on the tin, it's often tricky to debug API exceptions without the response body. Let's supply it in the Data dictionary of the exception## TODO:- [ ] Hit Merge Button",,,,,,
6478632,25,PullRequestReviewComment,/khanify comma,,,,,,
6480567,25,PullRequestReviewComment,Always be Comma'ing,,,,,,
6494250,25,PullRequestReviewComment,Eww trailing commas to nowhere. Ewwww..,,,,,,
6500181,25,PullRequestReviewComment,"Commas do not grow on trees, y'all...",,,,,,
5853850,24,PullRequest,The GitHub API now requires a User Agent or else it will 403 you for everything. Let's reflect that in the client library (and make it possible to supply one!)## TODO:- [ ] Hit Merge Button,,,,,,
4342839,24,PullRequestReviewComment,"Use `Ensure.ArgumentNotNullOrEmptyString(userAgent, ""userAgent"");`",,,,,,
4342847,24,PullRequestReviewComment,This block is not needed if you use `Ensure.ArgumentNotNullOrEmptyString` above.,,,,,,
4342865,24,PullRequestReviewComment,"Also, if the user agent is incorrectly formatted, `HttpClient` will fail the request. Might be interesting to try and validate that here. But you don't need to for this PR.",,,,,,
4343057,24,PullRequestReviewComment,"Well, so I don't want just an ""Ensure"", I want to explain _why_ you need it",,,,,,
4343064,24,PullRequestReviewComment,"Oh wait, this is in Connection, there it's fine",,,,,,
3896184,22,PullRequest,Rename.,,,,,,
3880118,21,PullRequest,"An Rx wrapper to Octopi for those who are into that sort of thing.I still need to add tests and all that, but thought I'd post this so you can see how it's progressing.",,,,,,
3879877,20,PullRequest,These are clients. URIs refer to the actual endpoints.,,,,,,
3876794,19,PullRequest,"We now have everything we need for GHfW implemented (except the participation graph but that's not an official endpoint and is only for GHfW and needs to stay in GHfW).Next steps:1. Implement a separate Octopi.Reactive wrapper library. This one will depend on Octopi.2. Rename ""_Endpoint"" to ""_Client"".Regarding that last one. I think it's confusing that we call URIs endpoints but our classes are also endpoints (such as `RepositoriesEndpoint`. I think the URIs should be represent endpoints and we should rename the other classes *Client. For example, `RepositoriesClient`.The goal is a consumer can do everything easily via an instance of `GitHubClient` or they can grab the specific client they need.",,,,,,
3858325,18,PullRequest,Let's get serious about driving the design from our actual applicationrequirements. I bet we'll eventually add those things back in. But let'sdo it when we need it.-ogre: this is in response to your code review comments earlier. :thumbsup:,,,,,,
3858243,17,PullRequest,"This removes the generic Middleware stuff in favor of just using DI etc. Some of the classes we use I kept internal because there's probably no use in replacing them. I have to keep in mind, this is a library not a framework.Having said that, the `Connection' class is at the heart of things and by injecting different things into that you can probably override anything.Some things to review:- [ ] Name of JsonHttpPipeline class (I couldn't think of a better name).- [ ] Name of the `ApiInfoParser`. Should I name it differently?",,,,,,
3854140,16,PullRequest,Renaming this library to Octopi per popular request.,,,,,,
3848145,15,PullRequest,"Implemented an approach to paging I want to experiment with based on the HATEOAS approach. Rather than constructing paging links, we look at the LINK headers in the response for the next page of items.I know some feel this might be overkill or trying to be too pure. That's why I'm calling this an _experiment_. I've never tried this approach. :smile:However, there is some evidence to support this approach.1. This [bug in GHfW] is an example of showing that we've had bugs with constructing URLs before.2. This is the approach the Mac Chaps use (according to ).3. I believe this is the approach recommended by  and others on the API team.I'm going to guess we'll eventually have scenarios that need us to try and construct a page URL. But for now, we actually don't in GHfW.So for the time being I'd like to let the needs of GHfW dictate our implementation. As we open up this API to others, we can change that.So if we're in agreement with this approach and after I get feedback on the specifics, here's what I'll be doing next.1. Rename the library to Octopi per team consensus.2. Implement all the features we use in GHfW (and pretty much only those).3. Change GHfW to use Octopi (I really want a real app to drive the design of this library).4. Implement the rest of the API so this can be a general purpose GitHub API library.I may need to build an API explorer so I have a ""real app"" that drives the design of the parts of the API that GHfW isn't using yet. :)",,,,,,
3831758,14,PullRequest,Instead of try/catch we can use this new helper method I wrote.,,,,,,
3710470,13,PullRequest,This ought to make -ogre. This one's for you buddy.I forgot to create the PR.,,,,,,
3651026,12,PullRequest,"Added an interface for retrieving credentials rather than supplying themto GitHub client once. This fits the GitHubClient model in GHfW better.Also, we want credentials to be immutable. The credential source canchange, but credentials should be relatively atomic.",,,,,,
3631023,11,PullRequest,I think this'll be a more maintainable approach for us to maintain the WinRT version.,,,,,,
3630422,10,PullRequest,"_Making a PR for discussion purpose_Right now Nocto is designed with features more appropriate to a general purpose HTTP library. After talking to  about this, we both agreed that's probably not appropriate to this library. I'm going to do a series of refactorings to make this more specific to a GitHub API client.",,,,,,
3627555,9,PullRequest,This reverts commit 8291b21f117141c83131070dd4f9615aa061e343 and makes sure the NoctoRT builds on the build server.,,,,,,
3623681,7,PullRequest,Small patch and a project file to compile a WinRT binary.,,,,,,
3615765,6,PullRequest,"Since this is going to be a general library for others to use, I want to tighten up the CodeAnalysis. Made several fixes related to it. The set of excluded rules for this library is minimal.",,,,,,
3613890,5,PullRequest,Added an endpoint to grab a single repository. Also some code cleanup.,,,,,,
3613341,4,PullRequest,Fixed a bug in SimpleJson with DateTimeOffset handling. The integration tests now pass. PR submitted to the upstream project.,,,,,,
3612528,3,PullRequest,The subject tells it all. I'll merge this immediately. no review needed.,,,,,,
3611240,2,PullRequest,These were copied from GHfW but stripped of any sensitive information.,,,,,,
2597405,2,PullRequestReviewComment,"You can remove the `-e whatever` flags. Those are used by GHfW to keep those files around to speed up subsequent CI builds, but I don't think you have those files in Nocto?",,,,,,
2597536,2,PullRequestReviewComment,Probably want to remove this right?,,,,,,
3610730,1,PullRequest,We plan to release this code under the MIT license so might as well get the right things in place early.,,,,,,
2596854,1,PullRequestReviewComment,Fill in the blanks?,,,,,,
2596866,1,PullRequestReviewComment,An extra 't' in targeting.,,,,,,
2596897,1,PullRequestReviewComment,Capitalize Contribute,,,,,,
2597660,1,PullRequestReviewComment,TROLOLOLOL DOH!,,,,,,
